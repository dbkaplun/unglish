/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(34);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _Unglish = __webpack_require__(172);

	var _Unglish2 = _interopRequireDefault(_Unglish);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	__webpack_require__(366);

	var GLOBAL_NAME = 'unglish';

	global[GLOBAL_NAME] = _reactDom2.default.render(_react2.default.createElement(_Unglish2.default, { onParsed: function onParsed() {
	    console.log('Parsed ' + global[GLOBAL_NAME].state.text.length + ' chars. Access parsed with \'' + GLOBAL_NAME + '.state.parsed\' and text with \'' + GLOBAL_NAME + '.state.text\'.');
	  } }), document.getElementById('unglish'));
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(2);

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var ReactChildren = __webpack_require__(4);
	var ReactComponent = __webpack_require__(16);
	var ReactPureComponent = __webpack_require__(19);
	var ReactClass = __webpack_require__(20);
	var ReactDOMFactories = __webpack_require__(25);
	var ReactElement = __webpack_require__(8);
	var ReactPropTypes = __webpack_require__(31);
	var ReactVersion = __webpack_require__(32);

	var onlyChild = __webpack_require__(33);
	var warning = __webpack_require__(10);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (({}).NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(26);
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var __spread = _assign;

	if (({}).NODE_ENV !== 'production') {
	  var warned = false;
	  __spread = function __spread() {
	    ({}).NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function createMixin(mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};

	module.exports = React;

/***/ },
/* 3 */
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */

	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc'); // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(5);
	var ReactElement = __webpack_require__(8);

	var emptyFunction = __webpack_require__(11);
	var traverseAllChildren = __webpack_require__(13);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var fiveArgumentPooler = function fiveArgumentPooler(a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function standardReleaser(instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;

/***/ },
/* 6 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule reactProdInvariant
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	function invariant(condition, format, a, b, c, d, e, f) {
	  if (({}).NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _assign = __webpack_require__(3);

	var ReactCurrentOwner = __webpack_require__(9);

	var warning = __webpack_require__(10);
	var canDefineProperty = __webpack_require__(12);
	var hasOwnProperty = Object.prototype.hasOwnProperty;

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown, specialPropRefWarningShown;

	function hasValidRef(config) {
	  if (({}).NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  if (({}).NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function warnAboutAccessingKey() {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	      ({}).NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}

	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function warnAboutAccessingRef() {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	      ({}).NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function ReactElement(type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (({}).NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	    var shadowChildren = Array.isArray(props.children) ? props.children.slice(0) : props.children;

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      Object.defineProperty(element, '_shadowChildren', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: shadowChildren
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._shadowChildren = shadowChildren;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (({}).NODE_ENV !== 'production') {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;

	module.exports = ReactElement;

/***/ },
/* 9 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */

	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(11);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (({}).NODE_ENV !== 'production') {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };

	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }

	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }

	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }

	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}

	module.exports = warning;

/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */

	'use strict';

	var canDefineProperty = false;
	if (({}).NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function get() {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(6);

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactElement = __webpack_require__(8);

	var getIteratorFn = __webpack_require__(14);
	var invariant = __webpack_require__(7);
	var KeyEscapeUtils = __webpack_require__(15);
	var warning = __webpack_require__(10);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && (typeof component === 'undefined' ? 'undefined' : _typeof(component)) === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children === 'undefined' ? 'undefined' : _typeof(children);

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (({}).NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          ({}).NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (({}).NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;

/***/ },
/* 14 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ },
/* 15 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule KeyEscapeUtils
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(6);

	var ReactNoopUpdateQueue = __webpack_require__(17);

	var canDefineProperty = __webpack_require__(12);
	var emptyObject = __webpack_require__(18);
	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !((typeof partialState === 'undefined' ? 'undefined' : _typeof(partialState)) === 'object' || typeof partialState === 'function' || partialState == null) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (({}).NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function defineDeprecationWarning(methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function get() {
	          ({}).NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */

	'use strict';

	var warning = __webpack_require__(10);

	function warnNoop(publicInstance, callerName) {
	  if (({}).NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    ({}).NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted(publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function enqueueCallback(publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function enqueueSetState(publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	module.exports = ReactNoopUpdateQueue;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (({}).NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPureComponent
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var ReactComponent = __webpack_require__(16);
	var ReactNoopUpdateQueue = __webpack_require__(17);

	var emptyObject = __webpack_require__(18);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;

	module.exports = ReactPureComponent;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var ReactComponent = __webpack_require__(16);
	var ReactElement = __webpack_require__(8);
	var ReactPropTypeLocations = __webpack_require__(21);
	var ReactPropTypeLocationNames = __webpack_require__(23);
	var ReactNoopUpdateQueue = __webpack_require__(17);

	var emptyObject = __webpack_require__(18);
	var invariant = __webpack_require__(7);
	var keyMirror = __webpack_require__(22);
	var keyOf = __webpack_require__(24);
	var warning = __webpack_require__(10);

	var MIXINS_KEY = keyOf({ mixins: null });

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});

	var injectedMixins = [];

	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function displayName(Constructor, _displayName) {
	    Constructor.displayName = _displayName;
	  },
	  mixins: function mixins(Constructor, _mixins) {
	    if (_mixins) {
	      for (var i = 0; i < _mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, _mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
	    if (({}).NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, _childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
	  },
	  contextTypes: function contextTypes(Constructor, _contextTypes) {
	    if (({}).NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, _contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = _getDefaultProps;
	    }
	  },
	  propTypes: function propTypes(Constructor, _propTypes) {
	    if (({}).NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, _propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
	  },
	  statics: function statics(Constructor, _statics) {
	    mixStaticSpecIntoComponent(Constructor, _statics);
	  },
	  autobind: function autobind() {} };

	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	      ({}).NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}

	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (({}).NODE_ENV !== 'production') {
	      var typeofSpec = typeof spec === 'undefined' ? 'undefined' : _typeof(spec);
	      var isMixinValid = typeofSpec === 'object' && spec !== null;

	      ({}).NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }

	    return;
	  }

	  !(typeof spec !== 'function') ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (({}).NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

	    var isInherited = name in Constructor;
	    !!isInherited ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && (typeof one === 'undefined' ? 'undefined' : _typeof(one)) === 'object' && (typeof two === 'undefined' ? 'undefined' : _typeof(two)) === 'object') ? ({}).NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (({}).NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        ({}).NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        ({}).NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function replaceState(newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted() {
	    return this.updater.isMounted(this);
	  }
	};

	var ReactClassComponent = function ReactClassComponent() {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function createClass(spec) {
	    var Constructor = function Constructor(props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (({}).NODE_ENV !== 'production') {
	        ({}).NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (({}).NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !((typeof initialState === 'undefined' ? 'undefined' : _typeof(initialState)) === 'object' && !Array.isArray(initialState)) ? ({}).NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (({}).NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ? ({}).NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

	    if (({}).NODE_ENV !== 'production') {
	      ({}).NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      ({}).NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function injectMixin(mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(22);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(7);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (({}).NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;

/***/ },
/* 24 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */

	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};

	module.exports = keyOf;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 */

	'use strict';

	var ReactElement = __webpack_require__(8);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (({}).NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(26);
	  createDOMFactory = ReactElementValidator.createFactory;
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),

	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};

	module.exports = ReactDOMFactories;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactComponentTreeHook = __webpack_require__(27);
	var ReactElement = __webpack_require__(8);
	var ReactPropTypeLocations = __webpack_require__(21);

	var checkReactTypeSpec = __webpack_require__(28);

	var canDefineProperty = __webpack_require__(12);
	var getIteratorFn = __webpack_require__(14);
	var warning = __webpack_require__(10);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();

	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }

	  ({}).NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, ReactPropTypeLocations.prop, name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    ({}).NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}

	var ReactElementValidator = {

	  createElement: function createElement(type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    if (!validType) {
	      ({}).NODE_ENV !== 'production' ? warning(false, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;
	    }

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function createFactory(type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if (({}).NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function get() {
	            ({}).NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }

	    return validatedFactory;
	  },

	  cloneElement: function cloneElement(element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }

	};

	module.exports = ReactElementValidator;

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentTreeHook
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(6);

	var ReactCurrentOwner = __webpack_require__(9);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty)
	  // Strip regex characters so we can use it for regex
	  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  // Remove hasOwnProperty from the template to make it generic
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}

	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

	var itemMap;
	var rootIDSet;

	var itemByKey;
	var rootByKey;

	if (canUseCollections) {
	  itemMap = new Map();
	  rootIDSet = new Set();
	} else {
	  itemByKey = {};
	  rootByKey = {};
	}

	var unmountedIDs = [];

	// Use non-numeric keys to prevent V8 performance issues:
	// https://github.com/facebook/react/pull/7232
	function getKeyFromID(id) {
	  return '.' + id;
	}
	function getIDFromKey(key) {
	  return parseInt(key.substr(1), 10);
	}

	function get(id) {
	  if (canUseCollections) {
	    return itemMap.get(id);
	  } else {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  }
	}

	function remove(id) {
	  if (canUseCollections) {
	    itemMap['delete'](id);
	  } else {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  }
	}

	function create(id, element, parentID) {
	  var item = {
	    element: element,
	    parentID: parentID,
	    text: null,
	    childIDs: [],
	    isMounted: false,
	    updateCount: 0
	  };

	  if (canUseCollections) {
	    itemMap.set(id, item);
	  } else {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  }
	}

	function addRoot(id) {
	  if (canUseCollections) {
	    rootIDSet.add(id);
	  } else {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  }
	}

	function removeRoot(id) {
	  if (canUseCollections) {
	    rootIDSet['delete'](id);
	  } else {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  }
	}

	function getRegisteredIDs() {
	  if (canUseCollections) {
	    return Array.from(itemMap.keys());
	  } else {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  }
	}

	function getRootIDs() {
	  if (canUseCollections) {
	    return Array.from(rootIDSet.keys());
	  } else {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  }
	}

	function purgeDeep(id) {
	  var item = get(id);
	  if (item) {
	    var childIDs = item.childIDs;

	    remove(id);
	    childIDs.forEach(purgeDeep);
	  }
	}

	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}

	function _getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}

	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	  ({}).NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}

	var ReactComponentTreeHook = {
	  onSetChildren: function onSetChildren(id, nextChildIDs) {
	    var item = get(id);
	    item.childIDs = nextChildIDs;

	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = get(nextChildID);
	      !nextChild ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || _typeof(nextChild.element) !== 'object' || nextChild.element == null) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent ID is missing.
	      }
	      !(nextChild.parentID === id) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function onBeforeMountComponent(id, element, parentID) {
	    create(id, element, parentID);
	  },
	  onBeforeUpdateComponent: function onBeforeUpdateComponent(id, element) {
	    var item = get(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function onMountComponent(id) {
	    var item = get(id);
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function onUpdateComponent(id) {
	    var item = get(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function onUnmountComponent(id) {
	    var item = get(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function purgeUnmountedComponents() {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function isMounted(id) {
	    var item = get(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function getCurrentStackAddendum(topElement) {
	    var info = '';
	    if (topElement) {
	      var type = topElement.type;
	      var name = typeof type === 'function' ? type.displayName || type.name : type;
	      var owner = topElement._owner;
	      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
	    }

	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function getStackAddendumByID(id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function getChildIDs(id) {
	    var item = get(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function getDisplayName(id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return _getDisplayName(element);
	  },
	  getElement: function getElement(id) {
	    var item = get(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function getOwnerID(id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function getParentID(id) {
	    var item = get(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function getSource(id) {
	    var item = get(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function getText(id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function getUpdateCount(id) {
	    var item = get(id);
	    return item ? item.updateCount : 0;
	  },

	  getRegisteredIDs: getRegisteredIDs,

	  getRootIDs: getRootIDs
	};

	module.exports = ReactComponentTreeHook;

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule checkReactTypeSpec
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(6);

	var ReactPropTypeLocationNames = __webpack_require__(23);
	var ReactPropTypesSecret = __webpack_require__(30);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && ({}) && ({}).NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(27);
	}

	var loggedTypeFailures = {};

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? ({}).NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      ({}).NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error === 'undefined' ? 'undefined' : _typeof(error)) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var componentStackInfo = '';

	        if (({}).NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(27);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }

	        ({}).NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}

	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(29)))

/***/ },
/* 29 */
/***/ function(module, exports) {

	'use strict';

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout() {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	})();
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch (e) {
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch (e) {
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e) {
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e) {
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while (len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () {
	    return '/';
	};
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function () {
	    return 0;
	};

/***/ },
/* 30 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypesSecret
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var ReactElement = __webpack_require__(8);
	var ReactPropTypeLocationNames = __webpack_require__(23);
	var ReactPropTypesSecret = __webpack_require__(30);

	var emptyFunction = __webpack_require__(11);
	var getIteratorFn = __webpack_require__(14);
	var warning = __webpack_require__(10);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/

	/**
	 * We use an Error-like object for backward compatibility as people may call
	 * PropTypes directly and inspect their output. However we don't use real
	 * Errors anymore. We don't inspect their stack anyway, and creating them
	 * is prohibitively expensive if they are created too often, such as what
	 * happens in oneOfType() for any type before the one that matched.
	 */
	function PropTypeError(message) {
	  this.message = message;
	  this.stack = '';
	}
	// Make `instanceof Error` still work for returned errors.
	PropTypeError.prototype = Error.prototype;

	function createChainableTypeChecker(validate) {
	  if (({}).NODE_ENV !== 'production') {
	    var manualPropTypeCallCache = {};
	  }
	  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (({}).NODE_ENV !== 'production') {
	      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
	        var cacheKey = componentName + ':' + propName;
	        if (!manualPropTypeCallCache[cacheKey]) {
	          ({}).NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in the next major version. You may be ' + 'seeing this warning due to a third-party PropTypes library. ' + 'See https://fb.me/react-warning-dont-call-proptypes for details.', propFullName, componentName) : void 0;
	          manualPropTypeCallCache[cacheKey] = true;
	        }
	      }
	    }
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new PropTypeError('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName, secret) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!ReactElement.isValidElement(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    ({}).NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    ({}).NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }

	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }

	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }

	  return false;
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;

/***/ },
/* 32 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */

	'use strict';

	module.exports = '15.3.2';

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactElement = __webpack_require__(8);

	var invariant = __webpack_require__(7);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}

	module.exports = onlyChild;

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(35);

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDefaultInjection = __webpack_require__(39);
	var ReactMount = __webpack_require__(162);
	var ReactReconciler = __webpack_require__(59);
	var ReactUpdates = __webpack_require__(56);
	var ReactVersion = __webpack_require__(32);

	var findDOMNode = __webpack_require__(167);
	var getHostComponentFromComposite = __webpack_require__(168);
	var renderSubtreeIntoContainer = __webpack_require__(169);
	var warning = __webpack_require__(10);

	ReactDefaultInjection.inject();

	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function getNodeFromInstance(inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}

	if (({}).NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(49);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    var testFunc = function testFn() {};
	    ({}).NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    ({}).NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        ({}).NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}

	if (({}).NODE_ENV !== 'production') {
	  var ReactInstrumentation = __webpack_require__(62);
	  var ReactDOMUnknownPropertyHook = __webpack_require__(170);
	  var ReactDOMNullInputValuePropHook = __webpack_require__(171);

	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	}

	module.exports = ReactDOM;

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentTree
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var DOMProperty = __webpack_require__(37);
	var ReactDOMComponentFlags = __webpack_require__(38);

	var invariant = __webpack_require__(7);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;

	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}

	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}

	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}

	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }

	  return closest;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  if (inst._hostNode) {
	    return inst._hostNode;
	  }

	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ? ({}).NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }

	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }

	  return inst._hostNode;
	}

	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};

	module.exports = ReactDOMComponentTree;

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function injectDOMPropertyConfig(domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

	      if (({}).NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (({}).NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: ({}).NODE_ENV !== 'production' ? {} : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function isCustomAttribute(attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;

/***/ },
/* 38 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentFlags
	 */

	'use strict';

	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};

	module.exports = ReactDOMComponentFlags;

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(40);
	var ChangeEventPlugin = __webpack_require__(55);
	var DefaultEventPluginOrder = __webpack_require__(73);
	var EnterLeaveEventPlugin = __webpack_require__(74);
	var HTMLDOMPropertyConfig = __webpack_require__(79);
	var ReactComponentBrowserEnvironment = __webpack_require__(80);
	var ReactDOMComponent = __webpack_require__(94);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDOMEmptyComponent = __webpack_require__(133);
	var ReactDOMTreeTraversal = __webpack_require__(134);
	var ReactDOMTextComponent = __webpack_require__(135);
	var ReactDefaultBatchingStrategy = __webpack_require__(136);
	var ReactEventListener = __webpack_require__(137);
	var ReactInjection = __webpack_require__(140);
	var ReactReconcileTransaction = __webpack_require__(141);
	var SVGDOMPropertyConfig = __webpack_require__(149);
	var SelectEventPlugin = __webpack_require__(150);
	var SimpleEventPlugin = __webpack_require__(151);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}

	module.exports = {
	  inject: inject
	};

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var EventConstants = __webpack_require__(41);
	var EventPropagators = __webpack_require__(42);
	var ExecutionEnvironment = __webpack_require__(49);
	var FallbackCompositionState = __webpack_require__(50);
	var SyntheticCompositionEvent = __webpack_require__(52);
	var SyntheticInputEvent = __webpack_require__(54);

	var keyOf = __webpack_require__(24);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return (typeof opera === 'undefined' ? 'undefined' : _typeof(opera)) === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if ((typeof detail === 'undefined' ? 'undefined' : _typeof(detail)) === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(22);

	var PropagationPhases = keyMirror({ bubbled: null, captured: null });

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(41);
	var EventPluginHub = __webpack_require__(43);
	var EventPluginUtils = __webpack_require__(45);

	var accumulateInto = __webpack_require__(47);
	var forEachAccumulated = __webpack_require__(48);
	var warning = __webpack_require__(10);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, upwards, event) {
	  if (({}).NODE_ENV !== 'production') {
	    ({}).NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(6);

	var EventPluginRegistry = __webpack_require__(44);
	var EventPluginUtils = __webpack_require__(45);
	var ReactErrorUtils = __webpack_require__(46);

	var accumulateInto = __webpack_require__(47);
	var forEachAccumulated = __webpack_require__(48);
	var invariant = __webpack_require__(7);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
	  return executeDispatchesAndRelease(e, false);
	};

	var getDictionaryKey = function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function putListener(inst, registrationName, listener) {
	    !(typeof listener === 'function') ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener === 'undefined' ? 'undefined' : _typeof(listener)) : _prodInvariant('94', registrationName, typeof listener === 'undefined' ? 'undefined' : _typeof(listener)) : void 0;

	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },

	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function getListener(inst, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function deleteListener(inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function deleteAllListeners(inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }

	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }

	      delete listenerBank[registrationName][key];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function enqueueEvents(events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function processEventQueue(simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? ({}).NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function __purge() {
	    listenerBank = {};
	  },

	  __getListenerBank: function __getListenerBank() {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? ({}).NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? ({}).NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;

	  if (({}).NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames: ({}).NODE_ENV !== 'production' ? {} : null,

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function injectEventPluginOrder(InjectedEventPluginOrder) {
	    !!EventPluginOrder ? ({}).NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? ({}).NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function getPluginModuleForEvent(event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function _resetEventPlugins() {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }

	    if (({}).NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var EventConstants = __webpack_require__(41);
	var ReactErrorUtils = __webpack_require__(46);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function injectComponentTree(Injected) {
	    ComponentTree = Injected;
	    if (({}).NODE_ENV !== 'production') {
	      ({}).NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function injectTreeTraversal(Injected) {
	    TreeTraversal = Injected;
	    if (({}).NODE_ENV !== 'production') {
	      ({}).NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}

	var validateEventDispatches;
	if (({}).NODE_ENV !== 'production') {
	  validateEventDispatches = function validateEventDispatches(event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    ({}).NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (({}).NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (({}).NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (({}).NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getInstanceFromNode: function getInstanceFromNode(node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function getNodeFromInstance(node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function isAncestor(a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function getLowestCommonAncestor(a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function getParentInstance(inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function traverseTwoPhase(target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function rethrowCaughtError() {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (({}).NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;

/***/ },
/* 48 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 * 
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */

	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	module.exports = forEachAccumulated;

/***/ },
/* 49 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var PooledClass = __webpack_require__(5);

	var getTextContentAccessor = __webpack_require__(51);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	_assign(FallbackCompositionState.prototype, {
	  destructor: function destructor() {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function getText() {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function getData() {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var PooledClass = __webpack_require__(5);

	var emptyFunction = __webpack_require__(11);
	var warning = __webpack_require__(10);

	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function timeStamp(event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (({}).NODE_ENV !== 'production') {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (({}).NODE_ENV !== 'production') {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {

	  preventDefault: function preventDefault() {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else if (typeof event.returnValue !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function stopPropagation() {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }

	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function persist() {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function destructor() {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (({}).NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (({}).NODE_ENV !== 'production') {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	if (({}).NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function construct(target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function apply(constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function set(target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              ({}).NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var E = function E() {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	    ({}).NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(41);
	var EventPluginHub = __webpack_require__(43);
	var EventPropagators = __webpack_require__(42);
	var ExecutionEnvironment = __webpack_require__(49);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);
	var SyntheticEvent = __webpack_require__(53);

	var getEventTarget = __webpack_require__(70);
	var isEventSupported = __webpack_require__(71);
	var isTextInputElement = __webpack_require__(72);
	var keyOf = __webpack_require__(24);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
	}

	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function get() {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function set(val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}

	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;

	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }

	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}

	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return targetInst;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var CallbackQueue = __webpack_require__(57);
	var PooledClass = __webpack_require__(5);
	var ReactFeatureFlags = __webpack_require__(58);
	var ReactReconciler = __webpack_require__(59);
	var Transaction = __webpack_require__(69);

	var invariant = __webpack_require__(7);

	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}

	var NESTED_UPDATES = {
	  initialize: function initialize() {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function close() {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function initialize() {
	    this.callbackQueue.reset();
	  },
	  close: function close() {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}

	_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function destructor() {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function perform(method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.props === component._renderedComponent._currentElement) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

	    if (markerName) {
	      console.timeEnd(markerName);
	    }

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function flushBatchedUpdates() {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function injectReconcileTransaction(ReconcileTransaction) {
	    !ReconcileTransaction ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function injectBatchingStrategy(_batchingStrategy) {
	    !_batchingStrategy ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var PooledClass = __webpack_require__(5);

	var invariant = __webpack_require__(7);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	_assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  checkpoint: function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  },

	  rollback: function rollback(len) {
	    if (this._callbacks) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function destructor() {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;

/***/ },
/* 58 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactFeatureFlags
	 * 
	 */

	'use strict';

	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};

	module.exports = ReactFeatureFlags;

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(60);
	var ReactInstrumentation = __webpack_require__(62);

	var warning = __webpack_require__(10);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function mountComponent(internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
	  ) {
	    if (({}).NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (({}).NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },

	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function getHostNode(internalInstance) {
	    return internalInstance.getHostNode();
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function unmountComponent(internalInstance, safely) {
	    if (({}).NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (({}).NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function receiveComponent(internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    if (({}).NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }

	    if (({}).NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function performUpdateIfNecessary(internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      ({}).NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (({}).NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (({}).NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }

	};

	module.exports = ReactReconciler;

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(61);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;

	  return (
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement.ref !== prevElement.ref ||
	    // If owner changes but we have an unchanged function ref, don't update refs
	    typeof nextElement.ref === 'string' && nextElement._owner !== prevElement._owner
	  );
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function isValidOwner(object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function addComponentAsRefTo(component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function removeComponentAsRefFrom(component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstrumentation
	 */

	'use strict';

	var debugTool = null;

	if (({}).NODE_ENV !== 'production') {
	  var ReactDebugTool = __webpack_require__(63);
	  debugTool = ReactDebugTool;
	}

	module.exports = { debugTool: debugTool };

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDebugTool
	 */

	'use strict';

	var ReactInvalidSetStateWarningHook = __webpack_require__(64);
	var ReactHostOperationHistoryHook = __webpack_require__(65);
	var ReactComponentTreeHook = __webpack_require__(27);
	var ReactChildrenMutationWarningHook = __webpack_require__(66);
	var ExecutionEnvironment = __webpack_require__(49);

	var performanceNow = __webpack_require__(67);
	var warning = __webpack_require__(10);

	var hooks = [];
	var didHookThrowForEvent = {};

	function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
	  try {
	    fn.call(context, arg1, arg2, arg3, arg4, arg5);
	  } catch (e) {
	    ({}).NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
	    didHookThrowForEvent[event] = true;
	  }
	}

	function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
	  for (var i = 0; i < hooks.length; i++) {
	    var hook = hooks[i];
	    var fn = hook[event];
	    if (fn) {
	      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
	    }
	  }
	}

	var _isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = null;
	var currentFlushStartTime = null;
	var currentTimerDebugID = null;
	var currentTimerStartTime = null;
	var currentTimerNestedFlushDuration = null;
	var currentTimerType = null;

	var lifeCycleTimerHasWarned = false;

	function clearHistory() {
	  ReactComponentTreeHook.purgeUnmountedComponents();
	  ReactHostOperationHistoryHook.clearHistory();
	}

	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeHook.getOwnerID(id);
	    var parentID = ReactComponentTreeHook.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeHook.getDisplayName(id),
	      text: ReactComponentTreeHook.getText(id),
	      updateCount: ReactComponentTreeHook.getUpdateCount(id),
	      childIDs: ReactComponentTreeHook.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || ReactComponentTreeHook.getOwnerID(parentID),
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}

	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements || [];
	  var previousOperations = ReactHostOperationHistoryHook.getHistory();

	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = null;
	    currentFlushMeasurements = null;
	    clearHistory();
	    return;
	  }

	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }

	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}

	function checkDebugID(debugID) {
	  var allowRoot = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

	  if (allowRoot && debugID === 0) {
	    return;
	  }
	  if (!debugID) {
	    ({}).NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
	  }
	}

	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType && !lifeCycleTimerHasWarned) {
	    ({}).NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
	    ({}).NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  if (_isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop();

	  var startTime = _lifeCycleTimerStack$.startTime;
	  var nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime;
	  var debugID = _lifeCycleTimerStack$.debugID;
	  var timerType = _lifeCycleTimerStack$.timerType;

	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	var ReactDebugTool = {
	  addHook: function addHook(hook) {
	    hooks.push(hook);
	  },
	  removeHook: function removeHook(hook) {
	    for (var i = 0; i < hooks.length; i++) {
	      if (hooks[i] === hook) {
	        hooks.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function isProfiling() {
	    return _isProfiling;
	  },
	  beginProfiling: function beginProfiling() {
	    if (_isProfiling) {
	      return;
	    }

	    _isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
	  },
	  endProfiling: function endProfiling() {
	    if (!_isProfiling) {
	      return;
	    }

	    _isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
	  },
	  getFlushHistory: function getFlushHistory() {
	    return flushHistory;
	  },
	  onBeginFlush: function onBeginFlush() {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function onEndFlush() {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginProcessingChildContext: function onBeginProcessingChildContext() {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function onEndProcessingChildContext() {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function onHostOperation(debugID, type, payload) {
	    checkDebugID(debugID);
	    emitEvent('onHostOperation', debugID, type, payload);
	  },
	  onSetState: function onSetState() {
	    emitEvent('onSetState');
	  },
	  onSetChildren: function onSetChildren(debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onBeforeMountComponent: function onBeforeMountComponent(debugID, element, parentDebugID) {
	    checkDebugID(debugID);
	    checkDebugID(parentDebugID, true);
	    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
	  },
	  onMountComponent: function onMountComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	  },
	  onUpdateComponent: function onUpdateComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onBeforeUnmountComponent: function onBeforeUnmountComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUnmountComponent', debugID);
	  },
	  onUnmountComponent: function onUnmountComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function onTestEvent() {
	    emitEvent('onTestEvent');
	  }
	};

	// TODO remove these when RN/www gets updated
	ReactDebugTool.addDevtool = ReactDebugTool.addHook;
	ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

	ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
	ReactDebugTool.addHook(ReactComponentTreeHook);
	ReactDebugTool.addHook(ReactChildrenMutationWarningHook);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}

	module.exports = ReactDebugTool;

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInvalidSetStateWarningHook
	 */

	'use strict';

	var warning = __webpack_require__(10);

	if (({}).NODE_ENV !== 'production') {
	  var processingChildContext = false;

	  var warnInvalidSetState = function warnInvalidSetState() {
	    ({}).NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}

	var ReactInvalidSetStateWarningHook = {
	  onBeginProcessingChildContext: function onBeginProcessingChildContext() {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function onEndProcessingChildContext() {
	    processingChildContext = false;
	  },
	  onSetState: function onSetState() {
	    warnInvalidSetState();
	  }
	};

	module.exports = ReactInvalidSetStateWarningHook;

/***/ },
/* 65 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostOperationHistoryHook
	 */

	'use strict';

	var history = [];

	var ReactHostOperationHistoryHook = {
	  onHostOperation: function onHostOperation(debugID, type, payload) {
	    history.push({
	      instanceID: debugID,
	      type: type,
	      payload: payload
	    });
	  },
	  clearHistory: function clearHistory() {
	    if (ReactHostOperationHistoryHook._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }

	    history = [];
	  },
	  getHistory: function getHistory() {
	    return history;
	  }
	};

	module.exports = ReactHostOperationHistoryHook;

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildrenMutationWarningHook
	 */

	'use strict';

	var ReactComponentTreeHook = __webpack_require__(27);

	var warning = __webpack_require__(10);

	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element._shadowChildren === undefined) {
	    return;
	  }
	  if (element._shadowChildren === element.props.children) {
	    return;
	  }
	  var isMutated = false;
	  if (Array.isArray(element._shadowChildren)) {
	    if (element._shadowChildren.length === element.props.children.length) {
	      for (var i = 0; i < element._shadowChildren.length; i++) {
	        if (element._shadowChildren[i] !== element.props.children[i]) {
	          isMutated = true;
	        }
	      }
	    } else {
	      isMutated = true;
	    }
	  }
	  if (!Array.isArray(element._shadowChildren) || isMutated) {
	    ({}).NODE_ENV !== 'production' ? warning(false, 'Component\'s children should not be mutated.%s', ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	}

	var ReactChildrenMutationWarningHook = {
	  onMountComponent: function onMountComponent(debugID) {
	    handleElement(debugID, ReactComponentTreeHook.getElement(debugID));
	  },
	  onUpdateComponent: function onUpdateComponent(debugID) {
	    handleElement(debugID, ReactComponentTreeHook.getElement(debugID));
	  }
	};

	module.exports = ReactChildrenMutationWarningHook;

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var performance = __webpack_require__(68);

	var performanceNow;

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}

	module.exports = performanceNow;

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}

	module.exports = performance || {};

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function reinitializeTransaction() {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function isInTransaction() {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function perform(method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function initializeAll(startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function closeAll(startIndex) {
	    !this.isInTransaction() ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;

/***/ },
/* 70 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */

	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ },
/* 72 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 * 
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */

	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	module.exports = isTextInputElement;

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(24);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

	module.exports = DefaultEventPluginOrder;

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(41);
	var EventPropagators = __webpack_require__(42);
	var ReactDOMComponentTree = __webpack_require__(36);
	var SyntheticMouseEvent = __webpack_require__(75);

	var keyOf = __webpack_require__(24);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(76);
	var ViewportMetrics = __webpack_require__(77);

	var getEventModifierState = __webpack_require__(78);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function button(event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function relatedTarget(event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function pageX(event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function pageY(event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	var getEventTarget = __webpack_require__(70);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function view(event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function detail(event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ },
/* 77 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function refreshScrollValues(scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ },
/* 78 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(37);

	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    // specifies target context for links with `preload` type
	    as: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    playsInline: HAS_BOOLEAN_VALUE,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,

	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(81);
	var ReactDOMIDOperations = __webpack_require__(93);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(82);
	var Danger = __webpack_require__(88);
	var ReactMultiChildUpdateTypes = __webpack_require__(92);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactInstrumentation = __webpack_require__(62);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(85);
	var setInnerHTML = __webpack_require__(84);
	var setTextContent = __webpack_require__(86);

	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});

	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}

	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}

	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}

	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}

	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}

	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }

	  if (({}).NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
	  }
	}

	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (({}).NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function dangerouslyReplaceNodeWithMarkup(oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
	      }
	    }
	  };
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

	  replaceDelimitedText: replaceDelimitedText,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function processUpdates(parentNode, updates) {
	    if (({}).NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }

	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (({}).NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (({}).NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(parentNode, update.content);
	          if (({}).NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(parentNode, update.content);
	          if (({}).NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          removeChild(parentNode, update.fromNode);
	          if (({}).NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
	          }
	          break;
	      }
	    }
	  }

	};

	module.exports = DOMChildrenOperations;

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMLazyTree
	 */

	'use strict';

	var DOMNamespaces = __webpack_require__(83);
	var setInnerHTML = __webpack_require__(84);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(85);
	var setTextContent = __webpack_require__(86);

	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}

	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});

	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}

	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}

	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}

	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}

	function toString() {
	  return this.node.nodeName;
	}

	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}

	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;

	module.exports = DOMLazyTree;

/***/ },
/* 83 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMNamespaces
	 */

	'use strict';

	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};

	module.exports = DOMNamespaces;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);
	var DOMNamespaces = __webpack_require__(83);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(85);

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function setInnerHTML(node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}

	module.exports = setInnerHTML;

/***/ },
/* 85 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createMicrosoftUnsafeLocalFunction
	 */

	/* globals MSApp */

	'use strict';

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */

	var createMicrosoftUnsafeLocalFunction = function createMicrosoftUnsafeLocalFunction(func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);
	var escapeTextContentForBrowser = __webpack_require__(87);
	var setInnerHTML = __webpack_require__(84);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function setTextContent(node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function setTextContent(node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ },
/* 87 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */

	var matchHtmlRegExp = /["'&<>]/;

	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */

	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);

	  if (!match) {
	    return str;
	  }

	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;

	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }

	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }

	    lastIndex = index + 1;
	    html += escape;
	  }

	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html


	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}

	module.exports = escapeTextContentForBrowser;

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var DOMLazyTree = __webpack_require__(82);
	var ExecutionEnvironment = __webpack_require__(49);

	var createNodesFromMarkup = __webpack_require__(89);
	var emptyFunction = __webpack_require__(11);
	var invariant = __webpack_require__(7);

	var Danger = {

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function dangerouslyReplaceNodeWithMarkup(oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? ({}).NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ? ({}).NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ? ({}).NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }

	};

	module.exports = Danger;

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	var ExecutionEnvironment = __webpack_require__(49);

	var createArrayFromMixed = __webpack_require__(90);
	var getMarkupWrap = __webpack_require__(91);
	var invariant = __webpack_require__(7);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? ({}).NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? ({}).NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var invariant = __webpack_require__(7);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' || typeof obj === 'function')) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

	  !(typeof length === 'number') ? ({}).NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

	  !(length === 0 || length - 1 in obj) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

	  !(typeof obj.callee !== 'function') ? ({}).NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/*eslint-disable fb-www/unsafe-html */

	var ExecutionEnvironment = __webpack_require__(49);

	var invariant = __webpack_require__(7);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(22);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(81);
	var ReactDOMComponentTree = __webpack_require__(36);

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function dangerouslyProcessChildrenUpdates(parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};

	module.exports = ReactDOMIDOperations;

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var AutoFocusUtils = __webpack_require__(95);
	var CSSPropertyOperations = __webpack_require__(97);
	var DOMLazyTree = __webpack_require__(82);
	var DOMNamespaces = __webpack_require__(83);
	var DOMProperty = __webpack_require__(37);
	var DOMPropertyOperations = __webpack_require__(105);
	var EventConstants = __webpack_require__(41);
	var EventPluginHub = __webpack_require__(43);
	var EventPluginRegistry = __webpack_require__(44);
	var ReactBrowserEventEmitter = __webpack_require__(107);
	var ReactDOMButton = __webpack_require__(110);
	var ReactDOMComponentFlags = __webpack_require__(38);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDOMInput = __webpack_require__(112);
	var ReactDOMOption = __webpack_require__(114);
	var ReactDOMSelect = __webpack_require__(115);
	var ReactDOMTextarea = __webpack_require__(116);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactMultiChild = __webpack_require__(117);
	var ReactServerRenderingTransaction = __webpack_require__(129);

	var emptyFunction = __webpack_require__(11);
	var escapeTextContentForBrowser = __webpack_require__(87);
	var invariant = __webpack_require__(7);
	var isEventSupported = __webpack_require__(71);
	var keyOf = __webpack_require__(24);
	var shallowEqual = __webpack_require__(124);
	var validateDOMNesting = __webpack_require__(132);
	var warning = __webpack_require__(10);

	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};

	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	function friendlyStringify(obj) {
	  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	  ({}).NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? ({}).NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(_typeof(props.dangerouslySetInnerHTML) === 'object' && HTML in props.dangerouslySetInnerHTML) ? ({}).NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (({}).NODE_ENV !== 'production') {
	    ({}).NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    ({}).NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    ({}).NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || _typeof(props.style) === 'object') ? ({}).NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}

	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (({}).NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    ({}).NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}

	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}

	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}

	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}

	var setAndValidateContentChildDev = emptyFunction;
	if (({}).NODE_ENV !== 'production') {
	  setAndValidateContentChildDev = function setAndValidateContentChildDev(content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;

	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }

	    validateDOMNesting(null, String(content), this, this._ancestorInfo);
	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ? ({}).NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
	      break;
	  }
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	var globalIdCounter = 1;

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (({}).NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    setAndValidateContentChildDev.call(this, null);
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getHostProps(this, props, hostParent);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }

	    assertValidProps(this, props);

	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;

	    if (({}).NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, null, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function _createOpenTagMarkupAndPutListeners(transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (({}).NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function _createContentMarkup(transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[_typeof(props.children)] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (({}).NODE_ENV !== 'production') {
	          setAndValidateContentChildDev.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function _createInitialChildren(transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[_typeof(props.children)] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        if (({}).NODE_ENV !== 'production') {
	          setAndValidateContentChildDev.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function receiveComponent(nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function updateComponent(transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getHostProps(this, lastProps);
	        nextProps = ReactDOMButton.getHostProps(this, nextProps);
	        break;
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function _updateDOMProperties(lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (({}).NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function _updateDOMChildren(lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[_typeof(lastProps.children)] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[_typeof(nextProps.children)] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (({}).NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (({}).NODE_ENV !== 'production') {
	          setAndValidateContentChildDev.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (({}).NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (({}).NODE_ENV !== 'production') {
	        setAndValidateContentChildDev.call(this, null);
	      }

	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  getHostNode: function getHostNode() {
	    return getNode(this);
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function unmountComponent(safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? ({}).NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }

	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;

	    if (({}).NODE_ENV !== 'production') {
	      setAndValidateContentChildDev.call(this, null);
	    }
	  },

	  getPublicInstance: function getPublicInstance() {
	    return getNode(this);
	  }

	};

	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(36);

	var focusNode = __webpack_require__(96);

	var AutoFocusUtils = {
	  focusDOMComponent: function focusDOMComponent() {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ },
/* 96 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */

	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 */

	'use strict';

	var CSSProperty = __webpack_require__(98);
	var ExecutionEnvironment = __webpack_require__(49);
	var ReactInstrumentation = __webpack_require__(62);

	var camelizeStyleName = __webpack_require__(99);
	var dangerousStyleValue = __webpack_require__(101);
	var hyphenateStyleName = __webpack_require__(102);
	var memoizeStringOnly = __webpack_require__(104);
	var warning = __webpack_require__(10);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (({}).NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;

	  var warnHyphenatedStyleName = function warnHyphenatedStyleName(name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    ({}).NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };

	  var warnBadVendoredStyleName = function warnBadVendoredStyleName(name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    ({}).NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };

	  var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    ({}).NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };

	  var warnStyleValueIsNaN = function warnStyleValueIsNaN(name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    ({}).NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };

	  var checkRenderMessage = function checkRenderMessage(owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function warnValidStyle(name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function createMarkupForStyles(styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (({}).NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function setValueForStyles(node, styles, component) {
	    if (({}).NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
	    }

	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (({}).NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	module.exports = CSSPropertyOperations;

/***/ },
/* 98 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */

	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(100);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 100 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */

	'use strict';

	var CSSProperty = __webpack_require__(98);
	var warning = __webpack_require__(10);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    if (({}).NODE_ENV !== 'production') {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          ({}).NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(103);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 103 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 104 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 */

	'use strict';

	var DOMProperty = __webpack_require__(37);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactInstrumentation = __webpack_require__(62);

	var quoteAttributeValueForBrowser = __webpack_require__(106);
	var warning = __webpack_require__(10);

	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  ({}).NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function createMarkupForID(id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function setAttributeForID(node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  createMarkupForRoot: function createMarkupForRoot() {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },

	  setAttributeForRoot: function setAttributeForRoot(node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function createMarkupForProperty(name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function createMarkupForCustomAttribute(name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function setValueForProperty(node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }

	    if (({}).NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  setValueForAttribute: function setValueForAttribute(node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }

	    if (({}).NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function deleteValueForAttribute(node, name) {
	    node.removeAttribute(name);
	    if (({}).NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function deleteValueForProperty(node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }

	    if (({}).NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  }

	};

	module.exports = DOMPropertyOperations;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(87);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var EventConstants = __webpack_require__(41);
	var EventPluginRegistry = __webpack_require__(44);
	var ReactEventEmitterMixin = __webpack_require__(108);
	var ViewportMetrics = __webpack_require__(77);

	var getVendorPrefixedEventName = __webpack_require__(109);
	var isEventSupported = __webpack_require__(71);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function injectReactEventListener(ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function setEnabled(enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function isEnabled() {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function listenTo(registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Protect against document.createEvent() returning null
	   * Some popup blocker extensions appear to do this:
	   * https://github.com/facebook/react/issues/6887
	   */
	  supportsEventPageXY: function supportsEventPageXY() {
	    if (!document.createEvent) {
	      return false;
	    }
	    var ev = document.createEvent('MouseEvent');
	    return ev != null && 'pageX' in ev;
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function ensureScrollValueMonitoring() {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }

	});

	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(43);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getVendorPrefixedEventName
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return '';
	}

	module.exports = getVendorPrefixedEventName;

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var DisabledInputUtils = __webpack_require__(111);

	/**
	 * Implements a <button> host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getHostProps: DisabledInputUtils.getHostProps
	};

	module.exports = ReactDOMButton;

/***/ },
/* 111 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DisabledInputUtils
	 */

	'use strict';

	var disableableMouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,

	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};

	/**
	 * Implements a host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var DisabledInputUtils = {
	  getHostProps: function getHostProps(inst, props) {
	    if (!props.disabled) {
	      return props;
	    }

	    // Copy the props, except the mouse listeners
	    var hostProps = {};
	    for (var key in props) {
	      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
	        hostProps[key] = props[key];
	      }
	    }

	    return hostProps;
	  }
	};

	module.exports = DisabledInputUtils;

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var DisabledInputUtils = __webpack_require__(111);
	var DOMPropertyOperations = __webpack_require__(105);
	var LinkedValueUtils = __webpack_require__(113);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function getHostProps(inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, DisabledInputUtils.getHostProps(inst, props), {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function mountWrapper(inst, props) {
	    if (({}).NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

	      var owner = inst._currentElement._owner;

	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        ({}).NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        ({}).NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        ({}).NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        ({}).NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };

	    if (({}).NODE_ENV !== 'production') {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },

	  updateWrapper: function updateWrapper(inst) {
	    var props = inst._currentElement.props;

	    if (({}).NODE_ENV !== 'production') {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;

	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        ({}).NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        ({}).NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {

	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        node.defaultValue = '' + props.defaultValue;
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },

	  postMountWrapper: function postMountWrapper(inst) {
	    var props = inst._currentElement.props;

	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.

	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }

	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactPropTypes = __webpack_require__(31);
	var ReactPropTypeLocations = __webpack_require__(21);
	var ReactPropTypesSecret = __webpack_require__(30);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}

	var propTypes = {
	  value: function value(props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function checked(props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function checkPropTypes(tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	        ({}).NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function getValue(inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function getChecked(inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function executeOnChange(inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var ReactChildren = __webpack_require__(4);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDOMSelect = __webpack_require__(115);

	var warning = __webpack_require__(10);
	var didWarnInvalidOptionChildren = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  ReactChildren.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	      ({}).NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function mountWrapper(inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (({}).NODE_ENV !== 'production') {
	      ({}).NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }

	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;

	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }

	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }

	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  postMountWrapper: function postMountWrapper(inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },

	  getHostProps: function getHostProps(inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }

	    var content = flattenChildren(props.children);

	    if (content) {
	      hostProps.children = content;
	    }

	    return hostProps;
	  }

	};

	module.exports = ReactDOMOption;

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var DisabledInputUtils = __webpack_require__(111);
	var LinkedValueUtils = __webpack_require__(113);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);

	var warning = __webpack_require__(10);

	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    ({}).NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	      ({}).NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	      ({}).NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function getHostProps(inst, props) {
	    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function mountWrapper(inst, props) {
	    if (({}).NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };

	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      ({}).NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },

	  getSelectValueContext: function getSelectValueContext(inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },

	  postUpdateWrapper: function postUpdateWrapper(inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var DisabledInputUtils = __webpack_require__(111);
	var LinkedValueUtils = __webpack_require__(113);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function getHostProps(inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? ({}).NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function mountWrapper(inst, props) {
	    if (({}).NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        ({}).NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        ({}).NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }

	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;

	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (({}).NODE_ENV !== 'production') {
	          ({}).NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ? ({}).NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }

	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }

	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function updateWrapper(inst) {
	    var props = inst._currentElement.props;

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },

	  postMountWrapper: function postMountWrapper(inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
	    node.value = node.textContent; // Detach value from defaultValue
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactComponentEnvironment = __webpack_require__(118);
	var ReactInstanceMap = __webpack_require__(119);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactMultiChildUpdateTypes = __webpack_require__(92);

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactReconciler = __webpack_require__(59);
	var ReactChildReconciler = __webpack_require__(120);

	var emptyFunction = __webpack_require__(11);
	var flattenChildren = __webpack_require__(128);
	var invariant = __webpack_require__(7);

	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}

	var setChildrenForInstrumentation = emptyFunction;
	if (({}).NODE_ENV !== 'production') {
	  var getDebugID = function getDebugID(inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function setChildrenForInstrumentation(children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function _reconcilerInstantiateChildren(nestedChildren, transaction, context) {
	      if (({}).NODE_ENV !== 'production') {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function _reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (({}).NODE_ENV !== 'production') {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function mountChildren(nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;

	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (({}).NODE_ENV !== 'production') {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }

	      if (({}).NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }

	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function updateTextContent(nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? ({}).NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function updateMarkup(nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? ({}).NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function updateChildren(nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },

	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function _updateChildren(nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;

	      if (({}).NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function unmountChildren(safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function moveChild(child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function createChild(child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function removeChild(child, node) {
	      return makeRemove(child, node);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function _mountChildAtIndex(child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function _unmountChild(child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }

	  }

	};

	module.exports = ReactMultiChild;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function injectEnvironment(environment) {
	      !!injected ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;

/***/ },
/* 119 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function remove(key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function get(key) {
	    return key._reactInternalInstance;
	  },

	  has: function has(key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function set(key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(59);

	var instantiateReactComponent = __webpack_require__(121);
	var KeyEscapeUtils = __webpack_require__(15);
	var shouldUpdateReactComponent = __webpack_require__(125);
	var traverseAllChildren = __webpack_require__(13);
	var warning = __webpack_require__(10);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && ({}) && ({}).NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(27);
	}

	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (({}).NODE_ENV !== 'production') {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = __webpack_require__(27);
	    }
	    if (!keyUnique) {
	      ({}).NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function instantiateChildren(nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};

	    if (({}).NODE_ENV !== 'production') {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
	  ) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function unmountChildren(renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(29)))

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var ReactCompositeComponent = __webpack_require__(122);
	var ReactEmptyComponent = __webpack_require__(126);
	var ReactHostComponent = __webpack_require__(127);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function ReactCompositeComponentWrapper(element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	var nextDebugID = 1;

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;

	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : _typeof(element.type), getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : _typeof(element.type), getDeclarationErrorAddendum(element._owner)) : void 0;

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);

	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node === 'undefined' ? 'undefined' : _typeof(node)) : _prodInvariant('131', typeof node === 'undefined' ? 'undefined' : _typeof(node)) : void 0;
	  }

	  if (({}).NODE_ENV !== 'production') {
	    ({}).NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (({}).NODE_ENV !== 'production') {
	    instance._debugID = shouldHaveDebugID ? nextDebugID++ : 0;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (({}).NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var ReactComponentEnvironment = __webpack_require__(118);
	var ReactCurrentOwner = __webpack_require__(9);
	var ReactElement = __webpack_require__(8);
	var ReactErrorUtils = __webpack_require__(46);
	var ReactInstanceMap = __webpack_require__(119);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactNodeTypes = __webpack_require__(123);
	var ReactPropTypeLocations = __webpack_require__(21);
	var ReactReconciler = __webpack_require__(59);

	var checkReactTypeSpec = __webpack_require__(28);
	var emptyObject = __webpack_require__(18);
	var invariant = __webpack_require__(7);
	var shallowEqual = __webpack_require__(124);
	var shouldUpdateReactComponent = __webpack_require__(125);
	var warning = __webpack_require__(10);

	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};

	function warnIfInvalidElement(Component, element) {
	  if (({}).NODE_ENV !== 'production') {
	    ({}).NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    ({}).NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}

	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}

	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}

	// Separated into a function to contain deoptimizations caused by try/finally.
	function measureLifeCyclePerf(fn, debugID, timerType) {
	  if (debugID === 0) {
	    // Top-level wrappers (see ReactMount) and empty components (see
	    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
	    // Both are implementation details that should go away in the future.
	    return fn();
	  }

	  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
	  try {
	    return fn();
	  } finally {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
	  }
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function construct(element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;

	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;

	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;

	    if (({}).NODE_ENV !== 'production') {
	      this._warnedAboutRefsInRender = false;
	    }
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;

	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    var updateQueue = transaction.getUpdateQueue();

	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;

	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? ({}).NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }

	    if (({}).NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        ({}).NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }

	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';

	      ({}).NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (({}).NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      ({}).NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      ({}).NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      ({}).NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      ({}).NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      ({}).NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      ({}).NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      ({}).NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !((typeof initialState === 'undefined' ? 'undefined' : _typeof(initialState)) === 'object' && !Array.isArray(initialState)) ? ({}).NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }

	    if (inst.componentDidMount) {
	      if (({}).NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(function () {
	            return inst.componentDidMount();
	          }, _this._debugID, 'componentDidMount');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }

	    return markup;
	  },

	  _constructComponent: function _constructComponent(doConstruct, publicProps, publicContext, updateQueue) {
	    if (({}).NODE_ENV !== 'production') {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },

	  _constructComponentWithoutOwner: function _constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;

	    if (doConstruct) {
	      if (({}).NODE_ENV !== 'production') {
	        return measureLifeCyclePerf(function () {
	          return new Component(publicProps, publicContext, updateQueue);
	        }, this._debugID, 'ctor');
	      } else {
	        return new Component(publicProps, publicContext, updateQueue);
	      }
	    }

	    // This can still be an instance in case of factory components
	    // but we'll count this as time spent rendering as the more common case.
	    if (({}).NODE_ENV !== 'production') {
	      return measureLifeCyclePerf(function () {
	        return Component(publicProps, publicContext, updateQueue);
	      }, this._debugID, 'render');
	    } else {
	      return Component(publicProps, publicContext, updateQueue);
	    }
	  },

	  performInitialMountWithErrorHandling: function performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();

	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);

	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },

	  performInitialMount: function performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;

	    var debugID = 0;
	    if (({}).NODE_ENV !== 'production') {
	      debugID = this._debugID;
	    }

	    if (inst.componentWillMount) {
	      if (({}).NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillMount();
	        }, debugID, 'componentWillMount');
	      } else {
	        inst.componentWillMount();
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;

	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

	    if (({}).NODE_ENV !== 'production') {
	      if (debugID !== 0) {
	        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	      }
	    }

	    return markup;
	  },

	  getHostNode: function getHostNode() {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function unmountComponent(safely) {
	    if (!this._renderedComponent) {
	      return;
	    }

	    var inst = this._instance;

	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;

	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        if (({}).NODE_ENV !== 'production') {
	          measureLifeCyclePerf(function () {
	            return inst.componentWillUnmount();
	          }, this._debugID, 'componentWillUnmount');
	        } else {
	          inst.componentWillUnmount();
	        }
	      }
	    }

	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function _maskContext(context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function _processContext(context) {
	    var maskedContext = this._maskContext(context);
	    if (({}).NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function _processChildContext(currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext;

	    if (inst.getChildContext) {
	      if (({}).NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	        try {
	          childContext = inst.getChildContext();
	        } finally {
	          ReactInstrumentation.debugTool.onEndProcessingChildContext();
	        }
	      } else {
	        childContext = inst.getChildContext();
	      }
	    }

	    if (childContext) {
	      !(_typeof(Component.childContextTypes) === 'object') ? ({}).NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (({}).NODE_ENV !== 'production') {
	        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? ({}).NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function _checkContextTypes(typeSpecs, values, location) {
	    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	  },

	  receiveComponent: function receiveComponent(nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function performUpdateIfNecessary(transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function updateComponent(transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

	    var willReceive = false;
	    var nextContext;

	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }

	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;

	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }

	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (({}).NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillReceiveProps(nextProps, nextContext);
	        }, this._debugID, 'componentWillReceiveProps');
	      } else {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;

	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (({}).NODE_ENV !== 'production') {
	          shouldUpdate = measureLifeCyclePerf(function () {
	            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	          }, this._debugID, 'shouldComponentUpdate');
	        } else {
	          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }

	    if (({}).NODE_ENV !== 'production') {
	      ({}).NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }

	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function _processPendingState(props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function _performComponentUpdate(nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var _this2 = this;

	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      if (({}).NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillUpdate(nextProps, nextState, nextContext);
	        }, this._debugID, 'componentWillUpdate');
	      } else {
	        inst.componentWillUpdate(nextProps, nextState, nextContext);
	      }
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      if (({}).NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function _updateRenderedComponent(transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();

	    var debugID = 0;
	    if (({}).NODE_ENV !== 'production') {
	      debugID = this._debugID;
	    }

	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);

	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;

	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

	      if (({}).NODE_ENV !== 'production') {
	        if (debugID !== 0) {
	          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	        }
	      }

	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },

	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function _replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function _renderValidatedComponentWithoutOwnerOrContext() {
	    var inst = this._instance;
	    var renderedComponent;

	    if (({}).NODE_ENV !== 'production') {
	      renderedComponent = measureLifeCyclePerf(function () {
	        return inst.render();
	      }, this._debugID, 'render');
	    } else {
	      renderedComponent = inst.render();
	    }

	    if (({}).NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedComponent === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function _renderValidatedComponent() {
	    var renderedComponent;
	    if (({}).NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? ({}).NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function attachRef(ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (({}).NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      ({}).NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function detachRef(ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function getName() {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function getPublicInstance() {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNodeTypes
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactElement = __webpack_require__(8);

	var invariant = __webpack_require__(7);

	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,

	  getType: function getType(node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (ReactElement.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};

	module.exports = ReactNodeTypes;

/***/ },
/* 124 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if ((typeof objA === 'undefined' ? 'undefined' : _typeof(objA)) !== 'object' || objA === null || (typeof objB === 'undefined' ? 'undefined' : _typeof(objB)) !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ },
/* 125 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement === 'undefined' ? 'undefined' : _typeof(prevElement);
	  var nextType = typeof nextElement === 'undefined' ? 'undefined' : _typeof(nextElement);
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}

	module.exports = shouldUpdateReactComponent;

/***/ },
/* 126 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var emptyComponentFactory;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function injectEmptyComponentFactory(factory) {
	    emptyComponentFactory = factory;
	  }
	};

	var ReactEmptyComponent = {
	  create: function create(instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var invariant = __webpack_require__(7);

	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around host tags.
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function injectGenericComponentClass(componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function injectTextComponentClass(componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function injectComponentClasses(componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};

	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? ({}).NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};

	module.exports = ReactHostComponent;

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 * 
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var KeyEscapeUtils = __webpack_require__(15);
	var traverseAllChildren = __webpack_require__(13);
	var warning = __webpack_require__(10);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && ({}) && ({}).NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(27);
	}

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && (typeof traverseContext === 'undefined' ? 'undefined' : _typeof(traverseContext)) === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (({}).NODE_ENV !== 'production') {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = __webpack_require__(27);
	      }
	      if (!keyUnique) {
	        ({}).NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};

	  if (({}).NODE_ENV !== 'production') {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(29)))

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var PooledClass = __webpack_require__(5);
	var Transaction = __webpack_require__(69);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactServerUpdateQueue = __webpack_require__(130);

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];

	if (({}).NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	var noopCallbackQueue = {
	  enqueue: function enqueue() {}
	};

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function getReactMountReady() {
	    return noopCallbackQueue;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function getUpdateQueue() {
	    return this.updateQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function destructor() {},

	  checkpoint: function checkpoint() {},

	  rollback: function rollback() {}
	};

	_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerUpdateQueue
	 * 
	 */

	'use strict';

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	var ReactUpdateQueue = __webpack_require__(131);
	var Transaction = __webpack_require__(69);
	var warning = __webpack_require__(10);

	function warnNoop(publicInstance, callerName) {
	  if (({}).NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    ({}).NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */

	var ReactServerUpdateQueue = function () {
	  /* :: transaction: Transaction; */

	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);

	    this.transaction = transaction;
	  }

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */

	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */

	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */

	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */

	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */

	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };

	  return ReactServerUpdateQueue;
	}();

	module.exports = ReactServerUpdateQueue;

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _prodInvariant = __webpack_require__(6);

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactInstanceMap = __webpack_require__(119);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactUpdates = __webpack_require__(56);

	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function formatUnexpectedArgument(arg) {
	  var type = typeof arg === 'undefined' ? 'undefined' : _typeof(arg);
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (({}).NODE_ENV !== 'production') {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      ({}).NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }

	  if (({}).NODE_ENV !== 'production') {
	    ({}).NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted(publicInstance) {
	    if (({}).NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        ({}).NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function enqueueCallback(publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function enqueueCallbackInternal(internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function enqueueSetState(publicInstance, partialState) {
	    if (({}).NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetState();
	      ({}).NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }

	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function enqueueElementInternal(internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },

	  validateCallback: function validateCallback(callback, callerName) {
	    !(!callback || typeof callback === 'function') ? ({}).NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }

	};

	module.exports = ReactUpdateQueue;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var emptyFunction = __webpack_require__(11);
	var warning = __webpack_require__(10);

	var validateDOMNesting = emptyFunction;

	if (({}).NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function updatedAncestorInfo(oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function isTagValidWithParent(tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function findInvalidAncestorForTag(tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function findOwnerStack(instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function validateDOMNesting(childTag, childText, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    if (childText != null) {
	      ({}).NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      var tagDisplayName = childTag;
	      var whitespaceInfo = '';
	      if (childTag === '#text') {
	        if (/\S/.test(childText)) {
	          tagDisplayName = 'Text nodes';
	        } else {
	          tagDisplayName = 'Whitespace text nodes';
	          whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
	        }
	      } else {
	        tagDisplayName = '<' + childTag + '>';
	      }

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        ({}).NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
	      } else {
	        ({}).NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMEmptyComponent
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var DOMLazyTree = __webpack_require__(82);
	var ReactDOMComponentTree = __webpack_require__(36);

	var ReactDOMEmptyComponent = function ReactDOMEmptyComponent(instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function receiveComponent() {},
	  getHostNode: function getHostNode() {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function unmountComponent() {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTreeTraversal
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var invariant = __webpack_require__(7);

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}

	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

	  return inst._hostParent;
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], false, arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], true, arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], true, argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], false, argTo);
	  }
	}

	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(3);

	var DOMChildrenOperations = __webpack_require__(81);
	var DOMLazyTree = __webpack_require__(82);
	var ReactDOMComponentTree = __webpack_require__(36);

	var escapeTextContentForBrowser = __webpack_require__(87);
	var invariant = __webpack_require__(7);
	var validateDOMNesting = __webpack_require__(132);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function ReactDOMTextComponent(text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;

	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};

	_assign(ReactDOMTextComponent.prototype, {

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
	    if (({}).NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(null, this._stringText, this, parentInfo);
	      }
	    }

	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function receiveComponent(nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },

	  getHostNode: function getHostNode() {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },

	  unmountComponent: function unmountComponent() {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }

	});

	module.exports = ReactDOMTextComponent;

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var ReactUpdates = __webpack_require__(56);
	var Transaction = __webpack_require__(69);

	var emptyFunction = __webpack_require__(11);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function close() {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function batchedUpdates(callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var EventListener = __webpack_require__(138);
	var ExecutionEnvironment = __webpack_require__(49);
	var PooledClass = __webpack_require__(5);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);

	var getEventTarget = __webpack_require__(70);
	var getUnboundedScrollPosition = __webpack_require__(139);

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function destructor() {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function setHandleTopLevel(handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function setEnabled(enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function isEnabled() {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function monitorScrollValue(refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function dispatchEvent(topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(11);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (({}).NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function registerDefault() {}
	};

	module.exports = EventListener;

/***/ },
/* 139 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */

	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(37);
	var EventPluginHub = __webpack_require__(43);
	var EventPluginUtils = __webpack_require__(45);
	var ReactComponentEnvironment = __webpack_require__(118);
	var ReactClass = __webpack_require__(20);
	var ReactEmptyComponent = __webpack_require__(126);
	var ReactBrowserEventEmitter = __webpack_require__(107);
	var ReactHostComponent = __webpack_require__(127);
	var ReactUpdates = __webpack_require__(56);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(3);

	var CallbackQueue = __webpack_require__(57);
	var PooledClass = __webpack_require__(5);
	var ReactBrowserEventEmitter = __webpack_require__(107);
	var ReactInputSelection = __webpack_require__(142);
	var ReactInstrumentation = __webpack_require__(62);
	var Transaction = __webpack_require__(69);
	var ReactUpdateQueue = __webpack_require__(131);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function initialize() {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function close(previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function initialize() {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function close() {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	if (({}).NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function getReactMountReady() {
	    return this.reactMountReady;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function getUpdateQueue() {
	    return ReactUpdateQueue;
	  },

	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function checkpoint() {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },

	  rollback: function rollback(checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function destructor() {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(143);

	var containsNode = __webpack_require__(145);
	var focusNode = __webpack_require__(96);
	var getActiveElement = __webpack_require__(148);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function hasSelectionCapabilities(elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function getSelectionInformation() {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function restoreSelection(priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function getSelection(input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function setSelection(input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);

	var getNodeForCharacterOffset = __webpack_require__(144);
	var getTextContentAccessor = __webpack_require__(51);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ },
/* 144 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */

	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	var isTextNode = __webpack_require__(146);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(147);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ },
/* 147 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ },
/* 148 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */

	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;

/***/ },
/* 149 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	'use strict';

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};

	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});

	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(41);
	var EventPropagators = __webpack_require__(42);
	var ExecutionEnvironment = __webpack_require__(49);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactInputSelection = __webpack_require__(142);
	var SyntheticEvent = __webpack_require__(53);

	var getActiveElement = __webpack_require__(148);
	var isTextInputElement = __webpack_require__(72);
	var keyOf = __webpack_require__(24);
	var shallowEqual = __webpack_require__(124);

	var topLevelTypes = EventConstants.topLevelTypes;

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};

	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function didPutListener(inst, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var EventConstants = __webpack_require__(41);
	var EventListener = __webpack_require__(138);
	var EventPropagators = __webpack_require__(42);
	var ReactDOMComponentTree = __webpack_require__(36);
	var SyntheticAnimationEvent = __webpack_require__(152);
	var SyntheticClipboardEvent = __webpack_require__(153);
	var SyntheticEvent = __webpack_require__(53);
	var SyntheticFocusEvent = __webpack_require__(154);
	var SyntheticKeyboardEvent = __webpack_require__(155);
	var SyntheticMouseEvent = __webpack_require__(75);
	var SyntheticDragEvent = __webpack_require__(158);
	var SyntheticTouchEvent = __webpack_require__(159);
	var SyntheticTransitionEvent = __webpack_require__(160);
	var SyntheticUIEvent = __webpack_require__(76);
	var SyntheticWheelEvent = __webpack_require__(161);

	var emptyFunction = __webpack_require__(11);
	var getEventCharCode = __webpack_require__(156);
	var invariant = __webpack_require__(7);
	var keyOf = __webpack_require__(24);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  animationEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationEnd: true }),
	      captured: keyOf({ onAnimationEndCapture: true })
	    }
	  },
	  animationIteration: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationIteration: true }),
	      captured: keyOf({ onAnimationIterationCapture: true })
	    }
	  },
	  animationStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationStart: true }),
	      captured: keyOf({ onAnimationStartCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  invalid: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInvalid: true }),
	      captured: keyOf({ onInvalidCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  transitionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTransitionEnd: true }),
	      captured: keyOf({ onTransitionEndCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topAnimationEnd: eventTypes.animationEnd,
	  topAnimationIteration: eventTypes.animationIteration,
	  topAnimationStart: eventTypes.animationStart,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topInvalid: eventTypes.invalid,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topTransitionEnd: eventTypes.transitionEnd,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};

	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topInvalid:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topAnimationEnd:
	      case topLevelTypes.topAnimationIteration:
	      case topLevelTypes.topAnimationStart:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case topLevelTypes.topTransitionEnd:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? ({}).NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function didPutListener(inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function willDeleteListener(inst, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticAnimationEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

	module.exports = SyntheticAnimationEvent;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function clipboardData(event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(76);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(76);

	var getEventCharCode = __webpack_require__(156);
	var getEventKey = __webpack_require__(157);
	var getEventModifierState = __webpack_require__(78);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function charCode(event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function keyCode(event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function which(event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 156 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */

	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(156);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(75);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(76);

	var getEventModifierState = __webpack_require__(78);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTransitionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

	module.exports = SyntheticTransitionEvent;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(75);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function deltaX(event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function deltaY(event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var DOMLazyTree = __webpack_require__(82);
	var DOMProperty = __webpack_require__(37);
	var ReactBrowserEventEmitter = __webpack_require__(107);
	var ReactCurrentOwner = __webpack_require__(9);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDOMContainerInfo = __webpack_require__(163);
	var ReactDOMFeatureFlags = __webpack_require__(164);
	var ReactElement = __webpack_require__(8);
	var ReactFeatureFlags = __webpack_require__(58);
	var ReactInstanceMap = __webpack_require__(119);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactMarkupChecksum = __webpack_require__(165);
	var ReactReconciler = __webpack_require__(59);
	var ReactUpdateQueue = __webpack_require__(131);
	var ReactUpdates = __webpack_require__(56);

	var emptyObject = __webpack_require__(18);
	var instantiateReactComponent = __webpack_require__(121);
	var invariant = __webpack_require__(7);
	var setInnerHTML = __webpack_require__(84);
	var shouldUpdateReactComponent = __webpack_require__(125);
	var warning = __webpack_require__(10);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var instancesByReactRootID = {};

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }

	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );

	  if (markerName) {
	    console.timeEnd(markerName);
	  }

	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (({}).NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (({}).NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}

	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}

	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}

	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}

	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}

	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function TopLevelWrapper() {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (({}).NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function scrollMonitor(container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function _updateRootComponent(prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    return prevComponent;
	  },

	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function _renderNewRootComponent(nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    ({}).NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ? ({}).NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function renderSubtreeIntoContainer(parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function _renderSubtreeIntoContainer(parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !ReactElement.isValidElement(nextElement) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

	    ({}).NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

	    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (({}).NODE_ENV !== 'production') {
	      ({}).NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            ({}).NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function render(nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function unmountComponentAtNode(container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    ({}).NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

	    if (({}).NODE_ENV !== 'production') {
	      ({}).NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

	      if (({}).NODE_ENV !== 'production') {
	        ({}).NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },

	  _mountImageIntoNode: function _mountImageIntoNode(markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (({}).NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

	        if (({}).NODE_ENV !== 'production') {
	          ({}).NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ? ({}).NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }

	    if (({}).NODE_ENV !== 'production') {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
	      }
	    }
	  }
	};

	module.exports = ReactMount;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMContainerInfo
	 */

	'use strict';

	var validateDOMNesting = __webpack_require__(132);

	var DOC_NODE_TYPE = 9;

	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (({}).NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}

	module.exports = ReactDOMContainerInfo;

/***/ },
/* 164 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: true
	};

	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(166);

	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function addChecksumToMarkup(markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function canReuseMarkup(markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ },
/* 166 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 * 
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(6);

	var ReactCurrentOwner = __webpack_require__(9);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactInstanceMap = __webpack_require__(119);

	var getHostComponentFromComposite = __webpack_require__(168);
	var invariant = __webpack_require__(7);
	var warning = __webpack_require__(10);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (({}).NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      ({}).NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }

	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }

	  if (typeof componentOrElement.render === 'function') {
	     true ? ({}).NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ? ({}).NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}

	module.exports = findDOMNode;

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getHostComponentFromComposite
	 */

	'use strict';

	var ReactNodeTypes = __webpack_require__(123);

	function getHostComponentFromComposite(inst) {
	  var type;

	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }

	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}

	module.exports = getHostComponentFromComposite;

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/

	'use strict';

	var ReactMount = __webpack_require__(162);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMUnknownPropertyHook
	 */

	'use strict';

	var DOMProperty = __webpack_require__(37);
	var EventPluginRegistry = __webpack_require__(44);
	var ReactComponentTreeHook = __webpack_require__(27);

	var warning = __webpack_require__(10);

	if (({}).NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,

	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};

	  var validateProperty = function validateProperty(tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

	    if (standardName != null) {
	      ({}).NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	      ({}).NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      // We were unable to guess which prop the user intended.
	      // It is likely that the user was just blindly spreading/forwarding props
	      // Components should be careful to only render valid props/attributes.
	      // Warning will be invoked in warnUnknownProperties to allow grouping.
	      return false;
	    }
	  };
	}

	var warnUnknownProperties = function warnUnknownProperties(debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }

	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');

	  if (unknownProps.length === 1) {
	    ({}).NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	    ({}).NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	};

	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}

	var ReactDOMUnknownPropertyHook = {
	  onBeforeMountComponent: function onBeforeMountComponent(debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
	    handleElement(debugID, element);
	  }
	};

	module.exports = ReactDOMUnknownPropertyHook;

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMNullInputValuePropHook
	 */

	'use strict';

	var ReactComponentTreeHook = __webpack_require__(27);

	var warning = __webpack_require__(10);

	var didWarnValueNull = false;

	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
	    return;
	  }
	  if (element.props != null && element.props.value === null && !didWarnValueNull) {
	    ({}).NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

	    didWarnValueNull = true;
	  }
	}

	var ReactDOMNullInputValuePropHook = {
	  onBeforeMountComponent: function onBeforeMountComponent(debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
	    handleElement(debugID, element);
	  }
	};

	module.exports = ReactDOMNullInputValuePropHook;

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactGraphVis = __webpack_require__(173);

	var _reactGraphVis2 = _interopRequireDefault(_reactGraphVis);

	var _reactLocalstorage = __webpack_require__(352);

	var _reactLocalstorage2 = _interopRequireDefault(_reactLocalstorage);

	var _quill = __webpack_require__(354);

	var _quill2 = _interopRequireDefault(_quill);

	var _lodash = __webpack_require__(359);

	var _lodash2 = _interopRequireDefault(_lodash);

	var _coreNLP = __webpack_require__(361);

	var _coreNLP2 = _interopRequireDefault(_coreNLP);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	__webpack_require__(362);


	// https://www.ling.upenn.edu/courses/Fall_2003/ling001/penn_treebank_pos.html
	var QUILL_POS_FORMATS = {
	  NN: { color: 'blue' }, // "interest", "role", "beauty", "book", "part", "evolution", "understanding", "appreciation", "form", "Men", "answer", "biologist", "anatomist", "future", "humankind", "proof", "woman", "sense", "comparison", "fatty", "fallback", "task", "reading", "idea", "baser", "appearance", "sex", "heritage", "author", "bingeing", "starvation", "life", "intake", "winter", "time", "food", "supply", "notion", "shroud", "person", "body", "psychology", "revelation", "question", "shape", "success", "world"
	  NNS: { color: 'blue' }, // "newspapers", "women", "curves", "media", "forces", "notions", "men", "undulations", "bodies", "children", "bums", "boobs", "pins", "genes", "terms", "changes", "lives", "couples", "species", "Humans", "matters", "people", "questions", "explanations", "disorders", "answers", "Episodes", "features", "animals", "relics", "observations", "readers", "clothes", "demands"
	  NNP: { color: 'blue', bold: true }, // "Curvology", "David", "Bainbridge", "Mr", "Eating"
	  CD: { color: 'blue' }, // "one"

	  VB: { color: 'gold' }, // "gestate", "bear", "nourish", "ensure", "plump", "be", "have", "want", "reduce", "seem", "protect", "mean", "balance", "answer"
	  VBZ: { color: 'gold' }, // "is", "focuses", "suggests", "carries", "explains", "makes", "provides", "urges", "argues", "writes", "raises", "comes", "does"
	  VBG: { color: 'gold' }, // "constructing", "growing", "reproducing", "eating", "conflicting", "asking"
	  VBN: { color: 'gold' }, // "discussed", "played", "overcome", "existed", "desired", "erased"
	  VBD: { color: 'gold' }, // "was", "were"
	  VBP: { color: 'gold' }, // "take", "flaunt", "differ", "salivate", "are", "begin", "have", "do", "become"
	  MD: { color: 'gold', italic: true }, // "will", "can", "could"

	  PRP: { color: 'gray', bold: true }, // "They", "He", "it", "they", "them", "he", "us"
	  PRP$: { color: 'gray', bold: true }, // "their", "his", "our"

	  JJ: { color: 'green' }, // "Tabloid", "prurient", "other", "cultural", "female", "new", "necessary", "simple", "British", "reproductive", "veterinary", "curvy", "straight", "enviable", "well-nourished", "good", "child-feeding", "such", "evolutionary", "single", "arduous", "many", "uncomfortable", "uneasy", "few", "long", "enough", "queasy", "interesting", "speculative", "normal", "pre-agricultural", "unpredictable", "facile", "ultimate", "ancient", "modern", "unnatural", "worth"
	  JJR: { color: 'green' }, // "more"
	  RB: { color: 'green' }, // "often", "simply", "so", "much", "as", "not", "just", "highly", "still", "especially", "passively", "even", "quite"
	  RP: { color: 'green' }, // "over", "up"

	  WP: { color: 'orange' }, // "who", "what"
	  WRB: { color: 'orange' }, // "Why", "when"
	  WDT: { color: 'orange' }, // "that"

	  DT: { color: 'gray' }, // "a", "The", "the", "those", "this", "both", "these", "each", "That", "some", "Some", "no"
	  IN: { color: 'gray' }, // "in", "of", "by", "on", "than", "that", "while", "throughout", "for", "with", "as", "For", "because", "about", "though", "if"
	  CC: { color: 'gray' }, // "and", "But", "but"
	  TO: { color: 'gray' }, // "to"
	  POS: { color: 'gray' }, // "’s"
	  '``': { color: 'gray' }, // "“"
	  "''": { color: 'gray' }, // "”"
	  ':': { color: 'gray' }, // "—", ":", ";"
	  ',': { color: 'gray' }, // ","
	  '.': { color: 'gray' } };

	function ensureValidPromise(getPromise) {
	  var promise = getPromise();
	  return Promise.resolve(promise).then(function (val) {
	    return promise === getPromise() ? val : ensureValidPromise(getPromise);
	  });
	}

	var Unglish = _react2.default.createClass({
	  displayName: 'Unglish',

	  mixins: [_reactLocalstorage2.default],
	  getInitialState: function getInitialState() {
	    return _lodash2.default.merge({
	      text: this.props.initialText,
	      coreNLPOpts: {
	        url: '' + (location.protocol !== 'http:' ? location.protocol + '//cors-anywhere.herokuapp.com/' : '') + _coreNLP2.default.DEFAULT_OPTS.url
	      }
	    }, (0, _lodash2.default)([].concat(_toConsumableArray(new URLSearchParams(location.search.slice(1))))).fromPairs().mapValues(JSON.parse).value());
	  },
	  componentDidMount: function componentDidMount() {
	    process.nextTick(this.initQuill);
	  },
	  initQuill: function initQuill() {
	    this.quill = new _quill2.default(this.refs.quill, {
	      placeholder: "Enter some text...",
	      theme: 'bubble',
	      modules: {
	        toolbar: false,
	        keyboard: {
	          // disable formatting
	          bindings: _lodash2.default.mapValues(_quill2.default.imports['modules/keyboard'].DEFAULTS.bindings, _lodash2.default.constant({
	            handler: function handler() {}
	          }))
	        }
	      }
	    });
	    this.quill.on('text-change', this.onQuillTextChange);
	    this.quill.on('selection-change', this.onQuillSelectionChange);

	    var text = this.state.text;

	    if (typeof text === 'string') this.quill.setText(text, 'initQuill');
	  },
	  onQuillTextChange: function onQuillTextChange(newDelta, oldDelta, source) {
	    if (source === 'api') return;
	    var text = this.quill.getText();

	    this.setState({
	      text: text,
	      parsePromise: (0, _coreNLP2.default)(text, this.state.coreNLPOpts).then(this.onParsed).catch(console.error)
	    });
	    _lodash2.default.invoke(this, 'props.onTextChange', text);
	  },
	  onParsed: function onParsed(parsed) {
	    this.quill.removeFormat(0, Infinity);
	    var ops = [];
	    var unformattedPOSs = {};
	    var i = 0;
	    parsed.sentences.forEach(function (_ref) {
	      var tokens = _ref.tokens;

	      tokens.forEach(function (token) {
	        var pos = token.pos;
	        var characterOffsetBegin = token.characterOffsetBegin;
	        var characterOffsetEnd = token.characterOffsetEnd;

	        if (pos in QUILL_POS_FORMATS) {
	          if (i < characterOffsetBegin) ops.push({ retain: characterOffsetBegin - i });
	          ops.push({ retain: characterOffsetEnd - characterOffsetBegin, attributes: QUILL_POS_FORMATS[pos] });
	          i = characterOffsetEnd;
	        } else if (pos) {
	          (unformattedPOSs[pos] = unformattedPOSs[pos] || []).push(token);
	        }
	      });
	    });
	    this.quill.updateContents({ ops: ops });
	    _lodash2.default.forEach(unformattedPOSs, function (tokens, pos) {
	      console.error('Unformatted \'' + pos + '\' for ' + (0, _lodash2.default)(tokens).map('originalText').uniq().map(JSON.stringify).join(", "));
	    });

	    this.setSelectedSentence().catch(console.error);

	    this.setState({ parsed: parsed });
	    _lodash2.default.invoke(this, 'props.onParsed', parsed);
	  },
	  onQuillSelectionChange: function onQuillSelectionChange(selection, oldSelection, source) {
	    this.setState({ selection: selection });
	    _lodash2.default.invoke(this, 'props.onSelectionChange', selection);
	    this.setSelectedSentence().catch(console.error);
	  },
	  setSelectedSentence: function setSelectedSentence() {
	    var _this = this;

	    return ensureValidPromise(function () {
	      return _this.state.parsePromise;
	    }).then(function () {
	      var selection = _this.quill.getSelection();
	      if (selection) _this.setState({
	        beginSentence: _this.getSentence(selection.index),
	        endSentence: _this.getSentence(selection.index + selection.length)
	      });
	    });
	  },
	  getSentence: function getSentence(characterOffset) {
	    var sentences = _lodash2.default.get(this.state, 'parsed.sentences', []);
	    var i = _lodash2.default.clamp((0, _lodash2.default)(sentences).map(function (_ref2) {
	      var _ref2$tokens = _slicedToArray(_ref2.tokens, 1);

	      var characterOffsetBegin = _ref2$tokens[0].characterOffsetBegin;
	      return characterOffsetBegin;
	    }).sortedIndex(characterOffset), sentences.length - 1);
	    var sentence = sentences[i];
	    if (!sentence) return;
	    if (_lodash2.default.first(sentence.tokens).characterOffsetBegin > characterOffset) i--;
	    if (_lodash2.default.last(sentence.tokens).characterOffsetEnd <= characterOffset) i = -1;
	    return _lodash2.default.nth(sentences, i);
	  },
	  getSentenceBegin: function getSentenceBegin(sentence) {
	    return _lodash2.default.get(sentence, ['tokens', 0, 'characterOffsetBegin']);
	  },
	  getSentenceEnd: function getSentenceEnd(sentence) {
	    var tokens = (sentence || {}).tokens || [];
	    return _lodash2.default.get(tokens, [-1 + tokens.length, 'characterOffsetEnd']);
	  },
	  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
	    if (this.quill) {
	      var begin = this.getSentenceBegin(this.state.beginSentence);
	      var end = this.getSentenceEnd(this.state.endSentence);
	      if (typeof begin === 'number' && typeof end === 'number') {
	        this.quill.formatText(begin, end - begin, { background: 'white' });
	      }

	      begin = this.getSentenceBegin(nextState.beginSentence);
	      end = this.getSentenceEnd(nextState.endSentence);
	      if (typeof begin === 'number' && typeof end === 'number') {
	        this.quill.formatText(begin, end - begin, { background: 'yellow' });
	      }
	    }
	  },
	  render: function render() {
	    // FIXME: show all selected sentences, not just beginSentence
	    var deps = _lodash2.default.get(this.state, 'beginSentence.enhancedPlusPlusDependencies', []);
	    var graphRef = _lodash2.default.get(this.refs, 'graph', {});
	    return _react2.default.createElement(
	      'div',
	      { className: 'unglish' },
	      _react2.default.createElement('div', { ref: 'quill', className: 'unglish-quill' }),
	      _react2.default.createElement(
	        'div',
	        { ref: 'graph', className: 'unglish-graph' },
	        _react2.default.createElement(_reactGraphVis2.default, { graph: {
	            nodes: deps.reduce(function (nodes, _ref3) {
	              var dependent = _ref3.dependent;
	              var dependentGloss = _ref3.dependentGloss;
	              var governor = _ref3.governor;
	              var governorGloss = _ref3.governorGloss;

	              nodes[dependent] = { id: dependent, label: dependentGloss };
	              nodes[governor] = { id: governor, label: governorGloss };
	              return nodes;
	            }, []),
	            edges: deps.reduce(function (edges, _ref4, i) {
	              var dependent = _ref4.dependent;
	              var governor = _ref4.governor;
	              var dep = _ref4.dep;

	              if (i !== dependent) edges.push({ from: dependent, to: i, label: dep });
	              if (i !== governor) edges.push({ from: i, to: governor, label: dep });
	              return edges;
	            }, [])
	          } })
	      )
	    );
	  }
	});

	exports.default = Unglish;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(29)))

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var vis = __webpack_require__(174);
	var uuid = __webpack_require__(350);

	var Graph = function (_Component) {
	  _inherits(Graph, _Component);

	  function Graph(props) {
	    _classCallCheck(this, Graph);

	    var _this = _possibleConstructorReturn(this, (Graph.__proto__ || Object.getPrototypeOf(Graph)).call(this, props));

	    var identifier = _this.props.identifier;

	    _this.updateGraph = _this.updateGraph.bind(_this);
	    _this.state = {
	      hierarchicalLayout: true,
	      identifier: identifier ? identifier : uuid.v4()
	    };
	    return _this;
	  }

	  _createClass(Graph, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.updateGraph();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.updateGraph();
	    }
	  }, {
	    key: 'changeMode',
	    value: function changeMode(event) {
	      this.setState({ hierarchicalLayout: !this.state.hierarchicalLayout });
	      this.updateGraph();
	    }
	  }, {
	    key: 'updateGraph',
	    value: function updateGraph() {
	      var container = document.getElementById(this.state.identifier);
	      var options = {
	        stabilize: false,
	        smoothCurves: false,
	        edges: {
	          color: '#000000',
	          width: 0.5,
	          arrowScaleFactor: 0.5,
	          style: 'arrow'
	        }
	      };

	      if (this.state.hierarchicalLayout) {
	        options.hierarchicalLayout = {
	          enabled: true,
	          direction: 'UD',
	          levelSeparation: 100,
	          nodeSpacing: 1
	        };
	      } else {
	        options.hierarchicalLayout = {
	          enabled: false
	        };
	      }

	      new vis.Network(container, this.props.graph, options);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _state = this.state;
	      var identifier = _state.identifier;
	      var style = _state.style;

	      return _react2.default.createElement('div', { onDoubleClick: this.changeMode.bind(this), id: identifier, style: style }, identifier);
	    }
	  }]);

	  return Graph;
	}(_react.Component);

	Graph.defaultProps = {
	  graph: {},
	  style: { width: '640px', height: '480px' }
	};

	exports.default = Graph;

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// utils
	exports.util = __webpack_require__(175);
	exports.DOMutil = __webpack_require__(284);

	// data
	exports.DataSet = __webpack_require__(285);
	exports.DataView = __webpack_require__(287);
	exports.Queue = __webpack_require__(286);

	// Graph3d
	exports.Graph3d = __webpack_require__(288);
	exports.graph3d = {
	  Camera: __webpack_require__(292),
	  Filter: __webpack_require__(293),
	  Point2d: __webpack_require__(291),
	  Point3d: __webpack_require__(290),
	  Slider: __webpack_require__(294),
	  StepNumber: __webpack_require__(295)
	};

	// Timeline
	exports.Timeline = __webpack_require__(296);
	exports.Graph2d = __webpack_require__(320);
	exports.timeline = {
	  DateUtil: __webpack_require__(302),
	  DataStep: __webpack_require__(323),
	  Range: __webpack_require__(299),
	  stack: __webpack_require__(307),
	  TimeStep: __webpack_require__(305),

	  components: {
	    items: {
	      Item: __webpack_require__(309),
	      BackgroundItem: __webpack_require__(313),
	      BoxItem: __webpack_require__(311),
	      PointItem: __webpack_require__(312),
	      RangeItem: __webpack_require__(308)
	    },

	    Component: __webpack_require__(301),
	    CurrentTime: __webpack_require__(319),
	    CustomTime: __webpack_require__(317),
	    DataAxis: __webpack_require__(322),
	    GraphGroup: __webpack_require__(324),
	    Group: __webpack_require__(306),
	    BackgroundGroup: __webpack_require__(310),
	    ItemSet: __webpack_require__(304),
	    Legend: __webpack_require__(328),
	    LineGraph: __webpack_require__(321),
	    TimeAxis: __webpack_require__(314)
	  }
	};

	// Network
	exports.Network = __webpack_require__(329);
	exports.network = {
	  Edge: __webpack_require__(335),
	  Groups: __webpack_require__(332),
	  Images: __webpack_require__(333),
	  Node: __webpack_require__(334),
	  Popup: __webpack_require__(336),
	  dotparser: __webpack_require__(330),
	  gephiParser: __webpack_require__(331)
	};

	// Deprecated since v3.0.0
	exports.Graph = function () {
	  throw new Error('Graph is renamed to Network. Please create a graph as new vis.Network(...)');
	};

	// bundled external libraries
	exports.moment = __webpack_require__(176);
	exports.hammer = __webpack_require__(297);

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	// utility functions

	// first check if moment.js is already loaded in the browser window, if so,
	// use this instance. Else, load via commonjs.
	var moment = __webpack_require__(176);

	/**
	 * Test whether given object is a number
	 * @param {*} object
	 * @return {Boolean} isNumber
	 */
	exports.isNumber = function (object) {
	  return object instanceof Number || typeof object == 'number';
	};

	/**
	 * this function gives you a range between 0 and 1 based on the min and max values in the set, the total sum of all values and the current value.
	 *
	 * @param min
	 * @param max
	 * @param total
	 * @param value
	 * @returns {number}
	 */
	exports.giveRange = function (min, max, total, value) {
	  if (max == min) {
	    return 0.5;
	  } else {
	    var scale = 1 / (max - min);
	    return Math.max(0, (value - min) * scale);
	  }
	};

	/**
	 * Test whether given object is a string
	 * @param {*} object
	 * @return {Boolean} isString
	 */
	exports.isString = function (object) {
	  return object instanceof String || typeof object == 'string';
	};

	/**
	 * Test whether given object is a Date, or a String containing a Date
	 * @param {Date | String} object
	 * @return {Boolean} isDate
	 */
	exports.isDate = function (object) {
	  if (object instanceof Date) {
	    return true;
	  } else if (exports.isString(object)) {
	    // test whether this string contains a date
	    var match = ASPDateRegex.exec(object);
	    if (match) {
	      return true;
	    } else if (!isNaN(Date.parse(object))) {
	      return true;
	    }
	  }

	  return false;
	};

	/**
	 * Test whether given object is an instance of google.visualization.DataTable
	 * @param {*} object
	 * @return {Boolean} isDataTable
	 */
	exports.isDataTable = function (object) {
	  return typeof google !== 'undefined' && google.visualization && google.visualization.DataTable && object instanceof google.visualization.DataTable;
	};

	/**
	 * Create a semi UUID
	 * source: http://stackoverflow.com/a/105074/1262753
	 * @return {String} uuid
	 */
	exports.randomUUID = function () {
	  var S4 = function S4() {
	    return Math.floor(Math.random() * 0x10000 /* 65536 */
	    ).toString(16);
	  };

	  return S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4();
	};

	/**
	 * Extend object a with the properties of object b or a series of objects
	 * Only properties with defined values are copied
	 * @param {Object} a
	 * @param {... Object} b
	 * @return {Object} a
	 */
	exports.extend = function (a, b) {
	  for (var i = 1, len = arguments.length; i < len; i++) {
	    var other = arguments[i];
	    for (var prop in other) {
	      if (other.hasOwnProperty(prop)) {
	        a[prop] = other[prop];
	      }
	    }
	  }

	  return a;
	};

	/**
	 * Extend object a with selected properties of object b or a series of objects
	 * Only properties with defined values are copied
	 * @param {Array.<String>} props
	 * @param {Object} a
	 * @param {... Object} b
	 * @return {Object} a
	 */
	exports.selectiveExtend = function (props, a, b) {
	  if (!Array.isArray(props)) {
	    throw new Error('Array with property names expected as first argument');
	  }

	  for (var i = 2; i < arguments.length; i++) {
	    var other = arguments[i];

	    for (var p = 0; p < props.length; p++) {
	      var prop = props[p];
	      if (other.hasOwnProperty(prop)) {
	        a[prop] = other[prop];
	      }
	    }
	  }
	  return a;
	};

	/**
	 * Extend object a with selected properties of object b or a series of objects
	 * Only properties with defined values are copied
	 * @param {Array.<String>} props
	 * @param {Object} a
	 * @param {... Object} b
	 * @return {Object} a
	 */
	exports.selectiveDeepExtend = function (props, a, b) {
	  // TODO: add support for Arrays to deepExtend
	  if (Array.isArray(b)) {
	    throw new TypeError('Arrays are not supported by deepExtend');
	  }
	  for (var i = 2; i < arguments.length; i++) {
	    var other = arguments[i];
	    for (var p = 0; p < props.length; p++) {
	      var prop = props[p];
	      if (other.hasOwnProperty(prop)) {
	        if (b[prop] && b[prop].constructor === Object) {
	          if (a[prop] === undefined) {
	            a[prop] = {};
	          }
	          if (a[prop].constructor === Object) {
	            exports.deepExtend(a[prop], b[prop]);
	          } else {
	            a[prop] = b[prop];
	          }
	        } else if (Array.isArray(b[prop])) {
	          throw new TypeError('Arrays are not supported by deepExtend');
	        } else {
	          a[prop] = b[prop];
	        }
	      }
	    }
	  }
	  return a;
	};

	/**
	 * Extend object a with selected properties of object b or a series of objects
	 * Only properties with defined values are copied
	 * @param {Array.<String>} props
	 * @param {Object} a
	 * @param {... Object} b
	 * @return {Object} a
	 */
	exports.selectiveNotDeepExtend = function (props, a, b) {
	  // TODO: add support for Arrays to deepExtend
	  if (Array.isArray(b)) {
	    throw new TypeError('Arrays are not supported by deepExtend');
	  }
	  for (var prop in b) {
	    if (b.hasOwnProperty(prop)) {
	      if (props.indexOf(prop) == -1) {
	        if (b[prop] && b[prop].constructor === Object) {
	          if (a[prop] === undefined) {
	            a[prop] = {};
	          }
	          if (a[prop].constructor === Object) {
	            exports.deepExtend(a[prop], b[prop]);
	          } else {
	            a[prop] = b[prop];
	          }
	        } else if (Array.isArray(b[prop])) {
	          throw new TypeError('Arrays are not supported by deepExtend');
	        } else {
	          a[prop] = b[prop];
	        }
	      }
	    }
	  }
	  return a;
	};

	/**
	 * Deep extend an object a with the properties of object b
	 * @param {Object} a
	 * @param {Object} b
	 * @returns {Object}
	 */
	exports.deepExtend = function (a, b) {
	  // TODO: add support for Arrays to deepExtend
	  if (Array.isArray(b)) {
	    throw new TypeError('Arrays are not supported by deepExtend');
	  }

	  for (var prop in b) {
	    if (b.hasOwnProperty(prop)) {
	      if (b[prop] && b[prop].constructor === Object) {
	        if (a[prop] === undefined) {
	          a[prop] = {};
	        }
	        if (a[prop].constructor === Object) {
	          exports.deepExtend(a[prop], b[prop]);
	        } else {
	          a[prop] = b[prop];
	        }
	      } else if (Array.isArray(b[prop])) {
	        throw new TypeError('Arrays are not supported by deepExtend');
	      } else {
	        a[prop] = b[prop];
	      }
	    }
	  }
	  return a;
	};

	/**
	 * Test whether all elements in two arrays are equal.
	 * @param {Array} a
	 * @param {Array} b
	 * @return {boolean} Returns true if both arrays have the same length and same
	 *                   elements.
	 */
	exports.equalArray = function (a, b) {
	  if (a.length != b.length) return false;

	  for (var i = 0, len = a.length; i < len; i++) {
	    if (a[i] != b[i]) return false;
	  }

	  return true;
	};

	/**
	 * Convert an object to another type
	 * @param {Boolean | Number | String | Date | Moment | Null | undefined} object
	 * @param {String | undefined} type   Name of the type. Available types:
	 *                                    'Boolean', 'Number', 'String',
	 *                                    'Date', 'Moment', ISODate', 'ASPDate'.
	 * @return {*} object
	 * @throws Error
	 */
	exports.convert = function (object, type) {
	  var match;

	  if (object === undefined) {
	    return undefined;
	  }
	  if (object === null) {
	    return null;
	  }

	  if (!type) {
	    return object;
	  }
	  if (!(typeof type === 'string') && !(type instanceof String)) {
	    throw new Error('Type must be a string');
	  }

	  //noinspection FallthroughInSwitchStatementJS
	  switch (type) {
	    case 'boolean':
	    case 'Boolean':
	      return Boolean(object);

	    case 'number':
	    case 'Number':
	      return Number(object.valueOf());

	    case 'string':
	    case 'String':
	      return String(object);

	    case 'Date':
	      if (exports.isNumber(object)) {
	        return new Date(object);
	      }
	      if (object instanceof Date) {
	        return new Date(object.valueOf());
	      } else if (moment.isMoment(object)) {
	        return new Date(object.valueOf());
	      }
	      if (exports.isString(object)) {
	        match = ASPDateRegex.exec(object);
	        if (match) {
	          // object is an ASP date
	          return new Date(Number(match[1])); // parse number
	        } else {
	          return moment(object).toDate(); // parse string
	        }
	      } else {
	        throw new Error('Cannot convert object of type ' + exports.getType(object) + ' to type Date');
	      }

	    case 'Moment':
	      if (exports.isNumber(object)) {
	        return moment(object);
	      }
	      if (object instanceof Date) {
	        return moment(object.valueOf());
	      } else if (moment.isMoment(object)) {
	        return moment(object);
	      }
	      if (exports.isString(object)) {
	        match = ASPDateRegex.exec(object);
	        if (match) {
	          // object is an ASP date
	          return moment(Number(match[1])); // parse number
	        } else {
	          return moment(object); // parse string
	        }
	      } else {
	        throw new Error('Cannot convert object of type ' + exports.getType(object) + ' to type Date');
	      }

	    case 'ISODate':
	      if (exports.isNumber(object)) {
	        return new Date(object);
	      } else if (object instanceof Date) {
	        return object.toISOString();
	      } else if (moment.isMoment(object)) {
	        return object.toDate().toISOString();
	      } else if (exports.isString(object)) {
	        match = ASPDateRegex.exec(object);
	        if (match) {
	          // object is an ASP date
	          return new Date(Number(match[1])).toISOString(); // parse number
	        } else {
	          return new Date(object).toISOString(); // parse string
	        }
	      } else {
	        throw new Error('Cannot convert object of type ' + exports.getType(object) + ' to type ISODate');
	      }

	    case 'ASPDate':
	      if (exports.isNumber(object)) {
	        return '/Date(' + object + ')/';
	      } else if (object instanceof Date) {
	        return '/Date(' + object.valueOf() + ')/';
	      } else if (exports.isString(object)) {
	        match = ASPDateRegex.exec(object);
	        var value;
	        if (match) {
	          // object is an ASP date
	          value = new Date(Number(match[1])).valueOf(); // parse number
	        } else {
	          value = new Date(object).valueOf(); // parse string
	        }
	        return '/Date(' + value + ')/';
	      } else {
	        throw new Error('Cannot convert object of type ' + exports.getType(object) + ' to type ASPDate');
	      }

	    default:
	      throw new Error('Unknown type "' + type + '"');
	  }
	};

	// parse ASP.Net Date pattern,
	// for example '/Date(1198908717056)/' or '/Date(1198908717056-0700)/'
	// code from http://momentjs.com/
	var ASPDateRegex = /^\/?Date\((\-?\d+)/i;

	/**
	 * Get the type of an object, for example exports.getType([]) returns 'Array'
	 * @param {*} object
	 * @return {String} type
	 */
	exports.getType = function (object) {
	  var type = typeof object === 'undefined' ? 'undefined' : _typeof(object);

	  if (type == 'object') {
	    if (object == null) {
	      return 'null';
	    }
	    if (object instanceof Boolean) {
	      return 'Boolean';
	    }
	    if (object instanceof Number) {
	      return 'Number';
	    }
	    if (object instanceof String) {
	      return 'String';
	    }
	    if (Array.isArray(object)) {
	      return 'Array';
	    }
	    if (object instanceof Date) {
	      return 'Date';
	    }
	    return 'Object';
	  } else if (type == 'number') {
	    return 'Number';
	  } else if (type == 'boolean') {
	    return 'Boolean';
	  } else if (type == 'string') {
	    return 'String';
	  }

	  return type;
	};

	/**
	 * Retrieve the absolute left value of a DOM element
	 * @param {Element} elem        A dom element, for example a div
	 * @return {number} left        The absolute left position of this element
	 *                              in the browser page.
	 */
	exports.getAbsoluteLeft = function (elem) {
	  return elem.getBoundingClientRect().left + window.pageXOffset;
	};

	/**
	 * Retrieve the absolute top value of a DOM element
	 * @param {Element} elem        A dom element, for example a div
	 * @return {number} top        The absolute top position of this element
	 *                              in the browser page.
	 */
	exports.getAbsoluteTop = function (elem) {
	  return elem.getBoundingClientRect().top + window.pageYOffset;
	};

	/**
	 * add a className to the given elements style
	 * @param {Element} elem
	 * @param {String} className
	 */
	exports.addClassName = function (elem, className) {
	  var classes = elem.className.split(' ');
	  if (classes.indexOf(className) == -1) {
	    classes.push(className); // add the class to the array
	    elem.className = classes.join(' ');
	  }
	};

	/**
	 * add a className to the given elements style
	 * @param {Element} elem
	 * @param {String} className
	 */
	exports.removeClassName = function (elem, className) {
	  var classes = elem.className.split(' ');
	  var index = classes.indexOf(className);
	  if (index != -1) {
	    classes.splice(index, 1); // remove the class from the array
	    elem.className = classes.join(' ');
	  }
	};

	/**
	 * For each method for both arrays and objects.
	 * In case of an array, the built-in Array.forEach() is applied.
	 * In case of an Object, the method loops over all properties of the object.
	 * @param {Object | Array} object   An Object or Array
	 * @param {function} callback       Callback method, called for each item in
	 *                                  the object or array with three parameters:
	 *                                  callback(value, index, object)
	 */
	exports.forEach = function (object, callback) {
	  var i, len;
	  if (Array.isArray(object)) {
	    // array
	    for (i = 0, len = object.length; i < len; i++) {
	      callback(object[i], i, object);
	    }
	  } else {
	    // object
	    for (i in object) {
	      if (object.hasOwnProperty(i)) {
	        callback(object[i], i, object);
	      }
	    }
	  }
	};

	/**
	 * Convert an object into an array: all objects properties are put into the
	 * array. The resulting array is unordered.
	 * @param {Object} object
	 * @param {Array} array
	 */
	exports.toArray = function (object) {
	  var array = [];

	  for (var prop in object) {
	    if (object.hasOwnProperty(prop)) array.push(object[prop]);
	  }

	  return array;
	};

	/**
	 * Update a property in an object
	 * @param {Object} object
	 * @param {String} key
	 * @param {*} value
	 * @return {Boolean} changed
	 */
	exports.updateProperty = function (object, key, value) {
	  if (object[key] !== value) {
	    object[key] = value;
	    return true;
	  } else {
	    return false;
	  }
	};

	/**
	 * Add and event listener. Works for all browsers
	 * @param {Element}     element    An html element
	 * @param {string}      action     The action, for example "click",
	 *                                 without the prefix "on"
	 * @param {function}    listener   The callback function to be executed
	 * @param {boolean}     [useCapture]
	 */
	exports.addEventListener = function (element, action, listener, useCapture) {
	  if (element.addEventListener) {
	    if (useCapture === undefined) useCapture = false;

	    if (action === "mousewheel" && navigator.userAgent.indexOf("Firefox") >= 0) {
	      action = "DOMMouseScroll"; // For Firefox
	    }

	    element.addEventListener(action, listener, useCapture);
	  } else {
	    element.attachEvent("on" + action, listener); // IE browsers
	  }
	};

	/**
	 * Remove an event listener from an element
	 * @param {Element}     element         An html dom element
	 * @param {string}      action          The name of the event, for example "mousedown"
	 * @param {function}    listener        The listener function
	 * @param {boolean}     [useCapture]
	 */
	exports.removeEventListener = function (element, action, listener, useCapture) {
	  if (element.removeEventListener) {
	    // non-IE browsers
	    if (useCapture === undefined) useCapture = false;

	    if (action === "mousewheel" && navigator.userAgent.indexOf("Firefox") >= 0) {
	      action = "DOMMouseScroll"; // For Firefox
	    }

	    element.removeEventListener(action, listener, useCapture);
	  } else {
	    // IE browsers
	    element.detachEvent("on" + action, listener);
	  }
	};

	/**
	 * Cancels the event if it is cancelable, without stopping further propagation of the event.
	 */
	exports.preventDefault = function (event) {
	  if (!event) event = window.event;

	  if (event.preventDefault) {
	    event.preventDefault(); // non-IE browsers
	  } else {
	    event.returnValue = false; // IE browsers
	  }
	};

	/**
	 * Get HTML element which is the target of the event
	 * @param {Event} event
	 * @return {Element} target element
	 */
	exports.getTarget = function (event) {
	  // code from http://www.quirksmode.org/js/events_properties.html
	  if (!event) {
	    event = window.event;
	  }

	  var target;

	  if (event.target) {
	    target = event.target;
	  } else if (event.srcElement) {
	    target = event.srcElement;
	  }

	  if (target.nodeType != undefined && target.nodeType == 3) {
	    // defeat Safari bug
	    target = target.parentNode;
	  }

	  return target;
	};

	/**
	 * Check if given element contains given parent somewhere in the DOM tree
	 * @param {Element} element
	 * @param {Element} parent
	 */
	exports.hasParent = function (element, parent) {
	  var e = element;

	  while (e) {
	    if (e === parent) {
	      return true;
	    }
	    e = e.parentNode;
	  }

	  return false;
	};

	exports.option = {};

	/**
	 * Convert a value into a boolean
	 * @param {Boolean | function | undefined} value
	 * @param {Boolean} [defaultValue]
	 * @returns {Boolean} bool
	 */
	exports.option.asBoolean = function (value, defaultValue) {
	  if (typeof value == 'function') {
	    value = value();
	  }

	  if (value != null) {
	    return value != false;
	  }

	  return defaultValue || null;
	};

	/**
	 * Convert a value into a number
	 * @param {Boolean | function | undefined} value
	 * @param {Number} [defaultValue]
	 * @returns {Number} number
	 */
	exports.option.asNumber = function (value, defaultValue) {
	  if (typeof value == 'function') {
	    value = value();
	  }

	  if (value != null) {
	    return Number(value) || defaultValue || null;
	  }

	  return defaultValue || null;
	};

	/**
	 * Convert a value into a string
	 * @param {String | function | undefined} value
	 * @param {String} [defaultValue]
	 * @returns {String} str
	 */
	exports.option.asString = function (value, defaultValue) {
	  if (typeof value == 'function') {
	    value = value();
	  }

	  if (value != null) {
	    return String(value);
	  }

	  return defaultValue || null;
	};

	/**
	 * Convert a size or location into a string with pixels or a percentage
	 * @param {String | Number | function | undefined} value
	 * @param {String} [defaultValue]
	 * @returns {String} size
	 */
	exports.option.asSize = function (value, defaultValue) {
	  if (typeof value == 'function') {
	    value = value();
	  }

	  if (exports.isString(value)) {
	    return value;
	  } else if (exports.isNumber(value)) {
	    return value + 'px';
	  } else {
	    return defaultValue || null;
	  }
	};

	/**
	 * Convert a value into a DOM element
	 * @param {HTMLElement | function | undefined} value
	 * @param {HTMLElement} [defaultValue]
	 * @returns {HTMLElement | null} dom
	 */
	exports.option.asElement = function (value, defaultValue) {
	  if (typeof value == 'function') {
	    value = value();
	  }

	  return value || defaultValue || null;
	};

	/**
	 * http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb
	 *
	 * @param {String} hex
	 * @returns {{r: *, g: *, b: *}} | 255 range
	 */
	exports.hexToRGB = function (hex) {
	  // Expand shorthand form (e.g. "03F") to full form (e.g. "0033FF")
	  var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
	  hex = hex.replace(shorthandRegex, function (m, r, g, b) {
	    return r + r + g + g + b + b;
	  });
	  var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
	  return result ? {
	    r: parseInt(result[1], 16),
	    g: parseInt(result[2], 16),
	    b: parseInt(result[3], 16)
	  } : null;
	};

	/**
	 * This function takes color in hex format or rgb() or rgba() format and overrides the opacity. Returns rgba() string.
	 * @param color
	 * @param opacity
	 * @returns {*}
	 */
	exports.overrideOpacity = function (color, opacity) {
	  if (color.indexOf("rgb") != -1) {
	    var rgb = color.substr(color.indexOf("(") + 1).replace(")", "").split(",");
	    return "rgba(" + rgb[0] + "," + rgb[1] + "," + rgb[2] + "," + opacity + ")";
	  } else {
	    var rgb = exports.hexToRGB(color);
	    if (rgb == null) {
	      return color;
	    } else {
	      return "rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + "," + opacity + ")";
	    }
	  }
	};

	/**
	 *
	 * @param red     0 -- 255
	 * @param green   0 -- 255
	 * @param blue    0 -- 255
	 * @returns {string}
	 * @constructor
	 */
	exports.RGBToHex = function (red, green, blue) {
	  return "#" + ((1 << 24) + (red << 16) + (green << 8) + blue).toString(16).slice(1);
	};

	/**
	 * Parse a color property into an object with border, background, and
	 * highlight colors
	 * @param {Object | String} color
	 * @return {Object} colorObject
	 */
	exports.parseColor = function (color) {
	  var c;
	  if (exports.isString(color)) {
	    if (exports.isValidRGB(color)) {
	      var rgb = color.substr(4).substr(0, color.length - 5).split(',');
	      color = exports.RGBToHex(rgb[0], rgb[1], rgb[2]);
	    }
	    if (exports.isValidHex(color)) {
	      var hsv = exports.hexToHSV(color);
	      var lighterColorHSV = { h: hsv.h, s: hsv.s * 0.45, v: Math.min(1, hsv.v * 1.05) };
	      var darkerColorHSV = { h: hsv.h, s: Math.min(1, hsv.v * 1.25), v: hsv.v * 0.6 };
	      var darkerColorHex = exports.HSVToHex(darkerColorHSV.h, darkerColorHSV.h, darkerColorHSV.v);
	      var lighterColorHex = exports.HSVToHex(lighterColorHSV.h, lighterColorHSV.s, lighterColorHSV.v);

	      c = {
	        background: color,
	        border: darkerColorHex,
	        highlight: {
	          background: lighterColorHex,
	          border: darkerColorHex
	        },
	        hover: {
	          background: lighterColorHex,
	          border: darkerColorHex
	        }
	      };
	    } else {
	      c = {
	        background: color,
	        border: color,
	        highlight: {
	          background: color,
	          border: color
	        },
	        hover: {
	          background: color,
	          border: color
	        }
	      };
	    }
	  } else {
	    c = {};
	    c.background = color.background || 'white';
	    c.border = color.border || c.background;

	    if (exports.isString(color.highlight)) {
	      c.highlight = {
	        border: color.highlight,
	        background: color.highlight
	      };
	    } else {
	      c.highlight = {};
	      c.highlight.background = color.highlight && color.highlight.background || c.background;
	      c.highlight.border = color.highlight && color.highlight.border || c.border;
	    }

	    if (exports.isString(color.hover)) {
	      c.hover = {
	        border: color.hover,
	        background: color.hover
	      };
	    } else {
	      c.hover = {};
	      c.hover.background = color.hover && color.hover.background || c.background;
	      c.hover.border = color.hover && color.hover.border || c.border;
	    }
	  }

	  return c;
	};

	/**
	 * http://www.javascripter.net/faq/rgb2hsv.htm
	 *
	 * @param red
	 * @param green
	 * @param blue
	 * @returns {*}
	 * @constructor
	 */
	exports.RGBToHSV = function (red, green, blue) {
	  red = red / 255;green = green / 255;blue = blue / 255;
	  var minRGB = Math.min(red, Math.min(green, blue));
	  var maxRGB = Math.max(red, Math.max(green, blue));

	  // Black-gray-white
	  if (minRGB == maxRGB) {
	    return { h: 0, s: 0, v: minRGB };
	  }

	  // Colors other than black-gray-white:
	  var d = red == minRGB ? green - blue : blue == minRGB ? red - green : blue - red;
	  var h = red == minRGB ? 3 : blue == minRGB ? 1 : 5;
	  var hue = 60 * (h - d / (maxRGB - minRGB)) / 360;
	  var saturation = (maxRGB - minRGB) / maxRGB;
	  var value = maxRGB;
	  return { h: hue, s: saturation, v: value };
	};

	var cssUtil = {
	  // split a string with css styles into an object with key/values
	  split: function split(cssText) {
	    var styles = {};

	    cssText.split(';').forEach(function (style) {
	      if (style.trim() != '') {
	        var parts = style.split(':');
	        var key = parts[0].trim();
	        var value = parts[1].trim();
	        styles[key] = value;
	      }
	    });

	    return styles;
	  },

	  // build a css text string from an object with key/values
	  join: function join(styles) {
	    return Object.keys(styles).map(function (key) {
	      return key + ': ' + styles[key];
	    }).join('; ');
	  }
	};

	/**
	 * Append a string with css styles to an element
	 * @param {Element} element
	 * @param {String} cssText
	 */
	exports.addCssText = function (element, cssText) {
	  var currentStyles = cssUtil.split(element.style.cssText);
	  var newStyles = cssUtil.split(cssText);
	  var styles = exports.extend(currentStyles, newStyles);

	  element.style.cssText = cssUtil.join(styles);
	};

	/**
	 * Remove a string with css styles from an element
	 * @param {Element} element
	 * @param {String} cssText
	 */
	exports.removeCssText = function (element, cssText) {
	  var styles = cssUtil.split(element.style.cssText);
	  var removeStyles = cssUtil.split(cssText);

	  for (var key in removeStyles) {
	    if (removeStyles.hasOwnProperty(key)) {
	      delete styles[key];
	    }
	  }

	  element.style.cssText = cssUtil.join(styles);
	};

	/**
	 * https://gist.github.com/mjijackson/5311256
	 * @param h
	 * @param s
	 * @param v
	 * @returns {{r: number, g: number, b: number}}
	 * @constructor
	 */
	exports.HSVToRGB = function (h, s, v) {
	  var r, g, b;

	  var i = Math.floor(h * 6);
	  var f = h * 6 - i;
	  var p = v * (1 - s);
	  var q = v * (1 - f * s);
	  var t = v * (1 - (1 - f) * s);

	  switch (i % 6) {
	    case 0:
	      r = v, g = t, b = p;break;
	    case 1:
	      r = q, g = v, b = p;break;
	    case 2:
	      r = p, g = v, b = t;break;
	    case 3:
	      r = p, g = q, b = v;break;
	    case 4:
	      r = t, g = p, b = v;break;
	    case 5:
	      r = v, g = p, b = q;break;
	  }

	  return { r: Math.floor(r * 255), g: Math.floor(g * 255), b: Math.floor(b * 255) };
	};

	exports.HSVToHex = function (h, s, v) {
	  var rgb = exports.HSVToRGB(h, s, v);
	  return exports.RGBToHex(rgb.r, rgb.g, rgb.b);
	};

	exports.hexToHSV = function (hex) {
	  var rgb = exports.hexToRGB(hex);
	  return exports.RGBToHSV(rgb.r, rgb.g, rgb.b);
	};

	exports.isValidHex = function (hex) {
	  var isOk = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex);
	  return isOk;
	};

	exports.isValidRGB = function (rgb) {
	  rgb = rgb.replace(" ", "");
	  var isOk = /rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)/i.test(rgb);
	  return isOk;
	};

	/**
	 * This recursively redirects the prototype of JSON objects to the referenceObject
	 * This is used for default options.
	 *
	 * @param referenceObject
	 * @returns {*}
	 */
	exports.selectiveBridgeObject = function (fields, referenceObject) {
	  if ((typeof referenceObject === 'undefined' ? 'undefined' : _typeof(referenceObject)) == "object") {
	    var objectTo = Object.create(referenceObject);
	    for (var i = 0; i < fields.length; i++) {
	      if (referenceObject.hasOwnProperty(fields[i])) {
	        if (_typeof(referenceObject[fields[i]]) == "object") {
	          objectTo[fields[i]] = exports.bridgeObject(referenceObject[fields[i]]);
	        }
	      }
	    }
	    return objectTo;
	  } else {
	    return null;
	  }
	};

	/**
	 * This recursively redirects the prototype of JSON objects to the referenceObject
	 * This is used for default options.
	 *
	 * @param referenceObject
	 * @returns {*}
	 */
	exports.bridgeObject = function (referenceObject) {
	  if ((typeof referenceObject === 'undefined' ? 'undefined' : _typeof(referenceObject)) == "object") {
	    var objectTo = Object.create(referenceObject);
	    for (var i in referenceObject) {
	      if (referenceObject.hasOwnProperty(i)) {
	        if (_typeof(referenceObject[i]) == "object") {
	          objectTo[i] = exports.bridgeObject(referenceObject[i]);
	        }
	      }
	    }
	    return objectTo;
	  } else {
	    return null;
	  }
	};

	/**
	 * this is used to set the options of subobjects in the options object. A requirement of these subobjects
	 * is that they have an 'enabled' element which is optional for the user but mandatory for the program.
	 *
	 * @param [object] mergeTarget | this is either this.options or the options used for the groups.
	 * @param [object] options     | options
	 * @param [String] option      | this is the option key in the options argument
	 * @private
	 */
	exports.mergeOptions = function (mergeTarget, options, option) {
	  if (options[option] !== undefined) {
	    if (typeof options[option] == 'boolean') {
	      mergeTarget[option].enabled = options[option];
	    } else {
	      mergeTarget[option].enabled = true;
	      for (var prop in options[option]) {
	        if (options[option].hasOwnProperty(prop)) {
	          mergeTarget[option][prop] = options[option][prop];
	        }
	      }
	    }
	  }
	};

	/**
	 * This function does a binary search for a visible item in a sorted list. If we find a visible item, the code that uses
	 * this function will then iterate in both directions over this sorted list to find all visible items.
	 *
	 * @param {Item[]} orderedItems       | Items ordered by start
	 * @param {function} searchFunction   | -1 is lower, 0 is found, 1 is higher
	 * @param {String} field
	 * @param {String} field2
	 * @returns {number}
	 * @private
	 */
	exports.binarySearchCustom = function (orderedItems, searchFunction, field, field2) {
	  var maxIterations = 10000;
	  var iteration = 0;
	  var low = 0;
	  var high = orderedItems.length - 1;

	  while (low <= high && iteration < maxIterations) {
	    var middle = Math.floor((low + high) / 2);

	    var item = orderedItems[middle];
	    var value = field2 === undefined ? item[field] : item[field][field2];

	    var searchResult = searchFunction(value);
	    if (searchResult == 0) {
	      // jihaa, found a visible item!
	      return middle;
	    } else if (searchResult == -1) {
	      // it is too small --> increase low
	      low = middle + 1;
	    } else {
	      // it is too big --> decrease high
	      high = middle - 1;
	    }

	    iteration++;
	  }

	  return -1;
	};

	/**
	 * This function does a binary search for a specific value in a sorted array. If it does not exist but is in between of
	 * two values, we return either the one before or the one after, depending on user input
	 * If it is found, we return the index, else -1.
	 *
	 * @param {Array} orderedItems
	 * @param {{start: number, end: number}} target
	 * @param {String} field
	 * @param {String} sidePreference   'before' or 'after'
	 * @returns {number}
	 * @private
	 */
	exports.binarySearchValue = function (orderedItems, target, field, sidePreference) {
	  var maxIterations = 10000;
	  var iteration = 0;
	  var low = 0;
	  var high = orderedItems.length - 1;
	  var prevValue, value, nextValue, middle;

	  while (low <= high && iteration < maxIterations) {
	    // get a new guess
	    middle = Math.floor(0.5 * (high + low));
	    prevValue = orderedItems[Math.max(0, middle - 1)][field];
	    value = orderedItems[middle][field];
	    nextValue = orderedItems[Math.min(orderedItems.length - 1, middle + 1)][field];

	    if (value == target) {
	      // we found the target
	      return middle;
	    } else if (prevValue < target && value > target) {
	      // target is in between of the previous and the current
	      return sidePreference == 'before' ? Math.max(0, middle - 1) : middle;
	    } else if (value < target && nextValue > target) {
	      // target is in between of the current and the next
	      return sidePreference == 'before' ? middle : Math.min(orderedItems.length - 1, middle + 1);
	    } else {
	      // didnt find the target, we need to change our boundaries.
	      if (value < target) {
	        // it is too small --> increase low
	        low = middle + 1;
	      } else {
	        // it is too big --> decrease high
	        high = middle - 1;
	      }
	    }
	    iteration++;
	  }

	  // didnt find anything. Return -1.
	  return -1;
	};

	/**
	 * Quadratic ease-in-out
	 * http://gizma.com/easing/
	 * @param {number} t        Current time
	 * @param {number} start    Start value
	 * @param {number} end      End value
	 * @param {number} duration Duration
	 * @returns {number} Value corresponding with current time
	 */
	exports.easeInOutQuad = function (t, start, end, duration) {
	  var change = end - start;
	  t /= duration / 2;
	  if (t < 1) return change / 2 * t * t + start;
	  t--;
	  return -change / 2 * (t * (t - 2) - 1) + start;
	};

	/*
	 * Easing Functions - inspired from http://gizma.com/easing/
	 * only considering the t value for the range [0, 1] => [0, 1]
	 * https://gist.github.com/gre/1650294
	 */
	exports.easingFunctions = {
	  // no easing, no acceleration
	  linear: function linear(t) {
	    return t;
	  },
	  // accelerating from zero velocity
	  easeInQuad: function easeInQuad(t) {
	    return t * t;
	  },
	  // decelerating to zero velocity
	  easeOutQuad: function easeOutQuad(t) {
	    return t * (2 - t);
	  },
	  // acceleration until halfway, then deceleration
	  easeInOutQuad: function easeInOutQuad(t) {
	    return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
	  },
	  // accelerating from zero velocity
	  easeInCubic: function easeInCubic(t) {
	    return t * t * t;
	  },
	  // decelerating to zero velocity
	  easeOutCubic: function easeOutCubic(t) {
	    return --t * t * t + 1;
	  },
	  // acceleration until halfway, then deceleration
	  easeInOutCubic: function easeInOutCubic(t) {
	    return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;
	  },
	  // accelerating from zero velocity
	  easeInQuart: function easeInQuart(t) {
	    return t * t * t * t;
	  },
	  // decelerating to zero velocity
	  easeOutQuart: function easeOutQuart(t) {
	    return 1 - --t * t * t * t;
	  },
	  // acceleration until halfway, then deceleration
	  easeInOutQuart: function easeInOutQuart(t) {
	    return t < .5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;
	  },
	  // accelerating from zero velocity
	  easeInQuint: function easeInQuint(t) {
	    return t * t * t * t * t;
	  },
	  // decelerating to zero velocity
	  easeOutQuint: function easeOutQuint(t) {
	    return 1 + --t * t * t * t * t;
	  },
	  // acceleration until halfway, then deceleration
	  easeInOutQuint: function easeInOutQuint(t) {
	    return t < .5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;
	  }
	};

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// first check if moment.js is already loaded in the browser window, if so,
	// use this instance. Else, load via commonjs.
	module.exports = typeof window !== 'undefined' && window['moment'] || __webpack_require__(177);

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};//! moment.js
	//! version : 2.15.1
	//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
	//! license : MIT
	//! momentjs.com
	;(function(global,factory){( false?'undefined':_typeof(exports))==='object'&&typeof module!=='undefined'?module.exports=factory(): true?!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):global.moment=factory();})(undefined,function(){'use strict';var hookCallback;function utils_hooks__hooks(){return hookCallback.apply(null,arguments);}// This is done to register the method called with moment()
	// without creating circular dependencies.
	function setHookCallback(callback){hookCallback=callback;}function isArray(input){return input instanceof Array||Object.prototype.toString.call(input)==='[object Array]';}function isObject(input){// IE8 will treat undefined and null as object if it wasn't for
	// input != null
	return input!=null&&Object.prototype.toString.call(input)==='[object Object]';}function isObjectEmpty(obj){var k;for(k in obj){// even if its not own property I'd still call it non-empty
	return false;}return true;}function isDate(input){return input instanceof Date||Object.prototype.toString.call(input)==='[object Date]';}function map(arr,fn){var res=[],i;for(i=0;i<arr.length;++i){res.push(fn(arr[i],i));}return res;}function hasOwnProp(a,b){return Object.prototype.hasOwnProperty.call(a,b);}function extend(a,b){for(var i in b){if(hasOwnProp(b,i)){a[i]=b[i];}}if(hasOwnProp(b,'toString')){a.toString=b.toString;}if(hasOwnProp(b,'valueOf')){a.valueOf=b.valueOf;}return a;}function create_utc__createUTC(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,true).utc();}function defaultParsingFlags(){// We need to deep clone this object.
	return{empty:false,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:false,invalidMonth:null,invalidFormat:false,userInvalidated:false,iso:false,parsedDateParts:[],meridiem:null};}function getParsingFlags(m){if(m._pf==null){m._pf=defaultParsingFlags();}return m._pf;}var some;if(Array.prototype.some){some=Array.prototype.some;}else{some=function some(fun){var t=Object(this);var len=t.length>>>0;for(var i=0;i<len;i++){if(i in t&&fun.call(this,t[i],i,t)){return true;}}return false;};}function valid__isValid(m){if(m._isValid==null){var flags=getParsingFlags(m);var parsedParts=some.call(flags.parsedDateParts,function(i){return i!=null;});var isNowValid=!isNaN(m._d.getTime())&&flags.overflow<0&&!flags.empty&&!flags.invalidMonth&&!flags.invalidWeekday&&!flags.nullInput&&!flags.invalidFormat&&!flags.userInvalidated&&(!flags.meridiem||flags.meridiem&&parsedParts);if(m._strict){isNowValid=isNowValid&&flags.charsLeftOver===0&&flags.unusedTokens.length===0&&flags.bigHour===undefined;}if(Object.isFrozen==null||!Object.isFrozen(m)){m._isValid=isNowValid;}else{return isNowValid;}}return m._isValid;}function valid__createInvalid(flags){var m=create_utc__createUTC(NaN);if(flags!=null){extend(getParsingFlags(m),flags);}else{getParsingFlags(m).userInvalidated=true;}return m;}function isUndefined(input){return input===void 0;}// Plugins that add properties should also add the key here (null value),
	// so we can properly clone ourselves.
	var momentProperties=utils_hooks__hooks.momentProperties=[];function copyConfig(to,from){var i,prop,val;if(!isUndefined(from._isAMomentObject)){to._isAMomentObject=from._isAMomentObject;}if(!isUndefined(from._i)){to._i=from._i;}if(!isUndefined(from._f)){to._f=from._f;}if(!isUndefined(from._l)){to._l=from._l;}if(!isUndefined(from._strict)){to._strict=from._strict;}if(!isUndefined(from._tzm)){to._tzm=from._tzm;}if(!isUndefined(from._isUTC)){to._isUTC=from._isUTC;}if(!isUndefined(from._offset)){to._offset=from._offset;}if(!isUndefined(from._pf)){to._pf=getParsingFlags(from);}if(!isUndefined(from._locale)){to._locale=from._locale;}if(momentProperties.length>0){for(i in momentProperties){prop=momentProperties[i];val=from[prop];if(!isUndefined(val)){to[prop]=val;}}}return to;}var updateInProgress=false;// Moment prototype object
	function Moment(config){copyConfig(this,config);this._d=new Date(config._d!=null?config._d.getTime():NaN);// Prevent infinite loop in case updateOffset creates new moment
	// objects.
	if(updateInProgress===false){updateInProgress=true;utils_hooks__hooks.updateOffset(this);updateInProgress=false;}}function isMoment(obj){return obj instanceof Moment||obj!=null&&obj._isAMomentObject!=null;}function absFloor(number){if(number<0){// -0 -> 0
	return Math.ceil(number)||0;}else{return Math.floor(number);}}function toInt(argumentForCoercion){var coercedNumber=+argumentForCoercion,value=0;if(coercedNumber!==0&&isFinite(coercedNumber)){value=absFloor(coercedNumber);}return value;}// compare two arrays, return the number of differences
	function compareArrays(array1,array2,dontConvert){var len=Math.min(array1.length,array2.length),lengthDiff=Math.abs(array1.length-array2.length),diffs=0,i;for(i=0;i<len;i++){if(dontConvert&&array1[i]!==array2[i]||!dontConvert&&toInt(array1[i])!==toInt(array2[i])){diffs++;}}return diffs+lengthDiff;}function warn(msg){if(utils_hooks__hooks.suppressDeprecationWarnings===false&&typeof console!=='undefined'&&console.warn){console.warn('Deprecation warning: '+msg);}}function deprecate(msg,fn){var firstTime=true;return extend(function(){if(utils_hooks__hooks.deprecationHandler!=null){utils_hooks__hooks.deprecationHandler(null,msg);}if(firstTime){var args=[];var arg;for(var i=0;i<arguments.length;i++){arg='';if(_typeof(arguments[i])==='object'){arg+='\n['+i+'] ';for(var key in arguments[0]){arg+=key+': '+arguments[0][key]+', ';}arg=arg.slice(0,-2);// Remove trailing comma and space
	}else{arg=arguments[i];}args.push(arg);}warn(msg+'\nArguments: '+Array.prototype.slice.call(args).join('')+'\n'+new Error().stack);firstTime=false;}return fn.apply(this,arguments);},fn);}var deprecations={};function deprecateSimple(name,msg){if(utils_hooks__hooks.deprecationHandler!=null){utils_hooks__hooks.deprecationHandler(name,msg);}if(!deprecations[name]){warn(msg);deprecations[name]=true;}}utils_hooks__hooks.suppressDeprecationWarnings=false;utils_hooks__hooks.deprecationHandler=null;function isFunction(input){return input instanceof Function||Object.prototype.toString.call(input)==='[object Function]';}function locale_set__set(config){var prop,i;for(i in config){prop=config[i];if(isFunction(prop)){this[i]=prop;}else{this['_'+i]=prop;}}this._config=config;// Lenient ordinal parsing accepts just a number in addition to
	// number + (possibly) stuff coming from _ordinalParseLenient.
	this._ordinalParseLenient=new RegExp(this._ordinalParse.source+'|'+/\d{1,2}/.source);}function mergeConfigs(parentConfig,childConfig){var res=extend({},parentConfig),prop;for(prop in childConfig){if(hasOwnProp(childConfig,prop)){if(isObject(parentConfig[prop])&&isObject(childConfig[prop])){res[prop]={};extend(res[prop],parentConfig[prop]);extend(res[prop],childConfig[prop]);}else if(childConfig[prop]!=null){res[prop]=childConfig[prop];}else{delete res[prop];}}}for(prop in parentConfig){if(hasOwnProp(parentConfig,prop)&&!hasOwnProp(childConfig,prop)&&isObject(parentConfig[prop])){// make sure changes to properties don't modify parent config
	res[prop]=extend({},res[prop]);}}return res;}function Locale(config){if(config!=null){this.set(config);}}var keys;if(Object.keys){keys=Object.keys;}else{keys=function keys(obj){var i,res=[];for(i in obj){if(hasOwnProp(obj,i)){res.push(i);}}return res;};}var defaultCalendar={sameDay:'[Today at] LT',nextDay:'[Tomorrow at] LT',nextWeek:'dddd [at] LT',lastDay:'[Yesterday at] LT',lastWeek:'[Last] dddd [at] LT',sameElse:'L'};function locale_calendar__calendar(key,mom,now){var output=this._calendar[key]||this._calendar['sameElse'];return isFunction(output)?output.call(mom,now):output;}var defaultLongDateFormat={LTS:'h:mm:ss A',LT:'h:mm A',L:'MM/DD/YYYY',LL:'MMMM D, YYYY',LLL:'MMMM D, YYYY h:mm A',LLLL:'dddd, MMMM D, YYYY h:mm A'};function longDateFormat(key){var format=this._longDateFormat[key],formatUpper=this._longDateFormat[key.toUpperCase()];if(format||!formatUpper){return format;}this._longDateFormat[key]=formatUpper.replace(/MMMM|MM|DD|dddd/g,function(val){return val.slice(1);});return this._longDateFormat[key];}var defaultInvalidDate='Invalid date';function invalidDate(){return this._invalidDate;}var defaultOrdinal='%d';var defaultOrdinalParse=/\d{1,2}/;function ordinal(number){return this._ordinal.replace('%d',number);}var defaultRelativeTime={future:'in %s',past:'%s ago',s:'a few seconds',m:'a minute',mm:'%d minutes',h:'an hour',hh:'%d hours',d:'a day',dd:'%d days',M:'a month',MM:'%d months',y:'a year',yy:'%d years'};function relative__relativeTime(number,withoutSuffix,string,isFuture){var output=this._relativeTime[string];return isFunction(output)?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number);}function pastFuture(diff,output){var format=this._relativeTime[diff>0?'future':'past'];return isFunction(format)?format(output):format.replace(/%s/i,output);}var aliases={};function addUnitAlias(unit,shorthand){var lowerCase=unit.toLowerCase();aliases[lowerCase]=aliases[lowerCase+'s']=aliases[shorthand]=unit;}function normalizeUnits(units){return typeof units==='string'?aliases[units]||aliases[units.toLowerCase()]:undefined;}function normalizeObjectUnits(inputObject){var normalizedInput={},normalizedProp,prop;for(prop in inputObject){if(hasOwnProp(inputObject,prop)){normalizedProp=normalizeUnits(prop);if(normalizedProp){normalizedInput[normalizedProp]=inputObject[prop];}}}return normalizedInput;}var priorities={};function addUnitPriority(unit,priority){priorities[unit]=priority;}function getPrioritizedUnits(unitsObj){var units=[];for(var u in unitsObj){units.push({unit:u,priority:priorities[u]});}units.sort(function(a,b){return a.priority-b.priority;});return units;}function makeGetSet(unit,keepTime){return function(value){if(value!=null){get_set__set(this,unit,value);utils_hooks__hooks.updateOffset(this,keepTime);return this;}else{return get_set__get(this,unit);}};}function get_set__get(mom,unit){return mom.isValid()?mom._d['get'+(mom._isUTC?'UTC':'')+unit]():NaN;}function get_set__set(mom,unit,value){if(mom.isValid()){mom._d['set'+(mom._isUTC?'UTC':'')+unit](value);}}// MOMENTS
	function stringGet(units){units=normalizeUnits(units);if(isFunction(this[units])){return this[units]();}return this;}function stringSet(units,value){if((typeof units==='undefined'?'undefined':_typeof(units))==='object'){units=normalizeObjectUnits(units);var prioritized=getPrioritizedUnits(units);for(var i=0;i<prioritized.length;i++){this[prioritized[i].unit](units[prioritized[i].unit]);}}else{units=normalizeUnits(units);if(isFunction(this[units])){return this[units](value);}}return this;}function zeroFill(number,targetLength,forceSign){var absNumber=''+Math.abs(number),zerosToFill=targetLength-absNumber.length,sign=number>=0;return(sign?forceSign?'+':'':'-')+Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1)+absNumber;}var formattingTokens=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;var localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;var formatFunctions={};var formatTokenFunctions={};// token:    'M'
	// padded:   ['MM', 2]
	// ordinal:  'Mo'
	// callback: function () { this.month() + 1 }
	function addFormatToken(token,padded,ordinal,callback){var func=callback;if(typeof callback==='string'){func=function func(){return this[callback]();};}if(token){formatTokenFunctions[token]=func;}if(padded){formatTokenFunctions[padded[0]]=function(){return zeroFill(func.apply(this,arguments),padded[1],padded[2]);};}if(ordinal){formatTokenFunctions[ordinal]=function(){return this.localeData().ordinal(func.apply(this,arguments),token);};}}function removeFormattingTokens(input){if(input.match(/\[[\s\S]/)){return input.replace(/^\[|\]$/g,'');}return input.replace(/\\/g,'');}function makeFormatFunction(format){var array=format.match(formattingTokens),i,length;for(i=0,length=array.length;i<length;i++){if(formatTokenFunctions[array[i]]){array[i]=formatTokenFunctions[array[i]];}else{array[i]=removeFormattingTokens(array[i]);}}return function(mom){var output='',i;for(i=0;i<length;i++){output+=array[i]instanceof Function?array[i].call(mom,format):array[i];}return output;};}// format date using native date object
	function formatMoment(m,format){if(!m.isValid()){return m.localeData().invalidDate();}format=expandFormat(format,m.localeData());formatFunctions[format]=formatFunctions[format]||makeFormatFunction(format);return formatFunctions[format](m);}function expandFormat(format,locale){var i=5;function replaceLongDateFormatTokens(input){return locale.longDateFormat(input)||input;}localFormattingTokens.lastIndex=0;while(i>=0&&localFormattingTokens.test(format)){format=format.replace(localFormattingTokens,replaceLongDateFormatTokens);localFormattingTokens.lastIndex=0;i-=1;}return format;}var match1=/\d/;//       0 - 9
	var match2=/\d\d/;//      00 - 99
	var match3=/\d{3}/;//     000 - 999
	var match4=/\d{4}/;//    0000 - 9999
	var match6=/[+-]?\d{6}/;// -999999 - 999999
	var match1to2=/\d\d?/;//       0 - 99
	var match3to4=/\d\d\d\d?/;//     999 - 9999
	var match5to6=/\d\d\d\d\d\d?/;//   99999 - 999999
	var match1to3=/\d{1,3}/;//       0 - 999
	var match1to4=/\d{1,4}/;//       0 - 9999
	var match1to6=/[+-]?\d{1,6}/;// -999999 - 999999
	var matchUnsigned=/\d+/;//       0 - inf
	var matchSigned=/[+-]?\d+/;//    -inf - inf
	var matchOffset=/Z|[+-]\d\d:?\d\d/gi;// +00:00 -00:00 +0000 -0000 or Z
	var matchShortOffset=/Z|[+-]\d\d(?::?\d\d)?/gi;// +00 -00 +00:00 -00:00 +0000 -0000 or Z
	var matchTimestamp=/[+-]?\d+(\.\d{1,3})?/;// 123456789 123456789.123
	// any word (or two) characters or numbers including two/three word month in arabic.
	// includes scottish gaelic two word and hyphenated months
	var matchWord=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;var regexes={};function addRegexToken(token,regex,strictRegex){regexes[token]=isFunction(regex)?regex:function(isStrict,localeData){return isStrict&&strictRegex?strictRegex:regex;};}function getParseRegexForToken(token,config){if(!hasOwnProp(regexes,token)){return new RegExp(unescapeFormat(token));}return regexes[token](config._strict,config._locale);}// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	function unescapeFormat(s){return regexEscape(s.replace('\\','').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){return p1||p2||p3||p4;}));}function regexEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}var tokens={};function addParseToken(token,callback){var i,func=callback;if(typeof token==='string'){token=[token];}if(typeof callback==='number'){func=function func(input,array){array[callback]=toInt(input);};}for(i=0;i<token.length;i++){tokens[token[i]]=func;}}function addWeekParseToken(token,callback){addParseToken(token,function(input,array,config,token){config._w=config._w||{};callback(input,config._w,config,token);});}function addTimeToArrayFromToken(token,input,config){if(input!=null&&hasOwnProp(tokens,token)){tokens[token](input,config._a,config,token);}}var YEAR=0;var MONTH=1;var DATE=2;var HOUR=3;var MINUTE=4;var SECOND=5;var MILLISECOND=6;var WEEK=7;var WEEKDAY=8;var indexOf;if(Array.prototype.indexOf){indexOf=Array.prototype.indexOf;}else{indexOf=function indexOf(o){// I know
	var i;for(i=0;i<this.length;++i){if(this[i]===o){return i;}}return-1;};}function daysInMonth(year,month){return new Date(Date.UTC(year,month+1,0)).getUTCDate();}// FORMATTING
	addFormatToken('M',['MM',2],'Mo',function(){return this.month()+1;});addFormatToken('MMM',0,0,function(format){return this.localeData().monthsShort(this,format);});addFormatToken('MMMM',0,0,function(format){return this.localeData().months(this,format);});// ALIASES
	addUnitAlias('month','M');// PRIORITY
	addUnitPriority('month',8);// PARSING
	addRegexToken('M',match1to2);addRegexToken('MM',match1to2,match2);addRegexToken('MMM',function(isStrict,locale){return locale.monthsShortRegex(isStrict);});addRegexToken('MMMM',function(isStrict,locale){return locale.monthsRegex(isStrict);});addParseToken(['M','MM'],function(input,array){array[MONTH]=toInt(input)-1;});addParseToken(['MMM','MMMM'],function(input,array,config,token){var month=config._locale.monthsParse(input,token,config._strict);// if we didn't find a month name, mark the date as invalid.
	if(month!=null){array[MONTH]=month;}else{getParsingFlags(config).invalidMonth=input;}});// LOCALES
	var MONTHS_IN_FORMAT=/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/;var defaultLocaleMonths='January_February_March_April_May_June_July_August_September_October_November_December'.split('_');function localeMonths(m,format){if(!m){return this._months;}return isArray(this._months)?this._months[m.month()]:this._months[(this._months.isFormat||MONTHS_IN_FORMAT).test(format)?'format':'standalone'][m.month()];}var defaultLocaleMonthsShort='Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');function localeMonthsShort(m,format){if(!m){return this._monthsShort;}return isArray(this._monthsShort)?this._monthsShort[m.month()]:this._monthsShort[MONTHS_IN_FORMAT.test(format)?'format':'standalone'][m.month()];}function units_month__handleStrictParse(monthName,format,strict){var i,ii,mom,llc=monthName.toLocaleLowerCase();if(!this._monthsParse){// this is not used
	this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];for(i=0;i<12;++i){mom=create_utc__createUTC([2000,i]);this._shortMonthsParse[i]=this.monthsShort(mom,'').toLocaleLowerCase();this._longMonthsParse[i]=this.months(mom,'').toLocaleLowerCase();}}if(strict){if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}}else{if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}}}function localeMonthsParse(monthName,format,strict){var i,mom,regex;if(this._monthsParseExact){return units_month__handleStrictParse.call(this,monthName,format,strict);}if(!this._monthsParse){this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];}// TODO: add sorting
	// Sorting makes sure if one month (or abbr) is a prefix of another
	// see sorting in computeMonthsParse
	for(i=0;i<12;i++){// make the regex if we don't have it already
	mom=create_utc__createUTC([2000,i]);if(strict&&!this._longMonthsParse[i]){this._longMonthsParse[i]=new RegExp('^'+this.months(mom,'').replace('.','')+'$','i');this._shortMonthsParse[i]=new RegExp('^'+this.monthsShort(mom,'').replace('.','')+'$','i');}if(!strict&&!this._monthsParse[i]){regex='^'+this.months(mom,'')+'|^'+this.monthsShort(mom,'');this._monthsParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
	if(strict&&format==='MMMM'&&this._longMonthsParse[i].test(monthName)){return i;}else if(strict&&format==='MMM'&&this._shortMonthsParse[i].test(monthName)){return i;}else if(!strict&&this._monthsParse[i].test(monthName)){return i;}}}// MOMENTS
	function setMonth(mom,value){var dayOfMonth;if(!mom.isValid()){// No op
	return mom;}if(typeof value==='string'){if(/^\d+$/.test(value)){value=toInt(value);}else{value=mom.localeData().monthsParse(value);// TODO: Another silent failure?
	if(typeof value!=='number'){return mom;}}}dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value));mom._d['set'+(mom._isUTC?'UTC':'')+'Month'](value,dayOfMonth);return mom;}function getSetMonth(value){if(value!=null){setMonth(this,value);utils_hooks__hooks.updateOffset(this,true);return this;}else{return get_set__get(this,'Month');}}function getDaysInMonth(){return daysInMonth(this.year(),this.month());}var defaultMonthsShortRegex=matchWord;function monthsShortRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsShortStrictRegex;}else{return this._monthsShortRegex;}}else{if(!hasOwnProp(this,'_monthsShortRegex')){this._monthsShortRegex=defaultMonthsShortRegex;}return this._monthsShortStrictRegex&&isStrict?this._monthsShortStrictRegex:this._monthsShortRegex;}}var defaultMonthsRegex=matchWord;function monthsRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsStrictRegex;}else{return this._monthsRegex;}}else{if(!hasOwnProp(this,'_monthsRegex')){this._monthsRegex=defaultMonthsRegex;}return this._monthsStrictRegex&&isStrict?this._monthsStrictRegex:this._monthsRegex;}}function computeMonthsParse(){function cmpLenRev(a,b){return b.length-a.length;}var shortPieces=[],longPieces=[],mixedPieces=[],i,mom;for(i=0;i<12;i++){// make the regex if we don't have it already
	mom=create_utc__createUTC([2000,i]);shortPieces.push(this.monthsShort(mom,''));longPieces.push(this.months(mom,''));mixedPieces.push(this.months(mom,''));mixedPieces.push(this.monthsShort(mom,''));}// Sorting makes sure if one month (or abbr) is a prefix of another it
	// will match the longer piece.
	shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<12;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);}for(i=0;i<24;i++){mixedPieces[i]=regexEscape(mixedPieces[i]);}this._monthsRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._monthsShortRegex=this._monthsRegex;this._monthsStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._monthsShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');}// FORMATTING
	addFormatToken('Y',0,0,function(){var y=this.year();return y<=9999?''+y:'+'+y;});addFormatToken(0,['YY',2],0,function(){return this.year()%100;});addFormatToken(0,['YYYY',4],0,'year');addFormatToken(0,['YYYYY',5],0,'year');addFormatToken(0,['YYYYYY',6,true],0,'year');// ALIASES
	addUnitAlias('year','y');// PRIORITIES
	addUnitPriority('year',1);// PARSING
	addRegexToken('Y',matchSigned);addRegexToken('YY',match1to2,match2);addRegexToken('YYYY',match1to4,match4);addRegexToken('YYYYY',match1to6,match6);addRegexToken('YYYYYY',match1to6,match6);addParseToken(['YYYYY','YYYYYY'],YEAR);addParseToken('YYYY',function(input,array){array[YEAR]=input.length===2?utils_hooks__hooks.parseTwoDigitYear(input):toInt(input);});addParseToken('YY',function(input,array){array[YEAR]=utils_hooks__hooks.parseTwoDigitYear(input);});addParseToken('Y',function(input,array){array[YEAR]=parseInt(input,10);});// HELPERS
	function daysInYear(year){return isLeapYear(year)?366:365;}function isLeapYear(year){return year%4===0&&year%100!==0||year%400===0;}// HOOKS
	utils_hooks__hooks.parseTwoDigitYear=function(input){return toInt(input)+(toInt(input)>68?1900:2000);};// MOMENTS
	var getSetYear=makeGetSet('FullYear',true);function getIsLeapYear(){return isLeapYear(this.year());}function createDate(y,m,d,h,M,s,ms){//can't just apply() to create a date:
	//http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
	var date=new Date(y,m,d,h,M,s,ms);//the date constructor remaps years 0-99 to 1900-1999
	if(y<100&&y>=0&&isFinite(date.getFullYear())){date.setFullYear(y);}return date;}function createUTCDate(y){var date=new Date(Date.UTC.apply(null,arguments));//the Date.UTC function remaps years 0-99 to 1900-1999
	if(y<100&&y>=0&&isFinite(date.getUTCFullYear())){date.setUTCFullYear(y);}return date;}// start-of-first-week - start-of-year
	function firstWeekOffset(year,dow,doy){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)
	fwd=7+dow-doy,// first-week day local weekday -- which local weekday is fwd
	fwdlw=(7+createUTCDate(year,0,fwd).getUTCDay()-dow)%7;return-fwdlw+fwd-1;}//http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	function dayOfYearFromWeeks(year,week,weekday,dow,doy){var localWeekday=(7+weekday-dow)%7,weekOffset=firstWeekOffset(year,dow,doy),dayOfYear=1+7*(week-1)+localWeekday+weekOffset,resYear,resDayOfYear;if(dayOfYear<=0){resYear=year-1;resDayOfYear=daysInYear(resYear)+dayOfYear;}else if(dayOfYear>daysInYear(year)){resYear=year+1;resDayOfYear=dayOfYear-daysInYear(year);}else{resYear=year;resDayOfYear=dayOfYear;}return{year:resYear,dayOfYear:resDayOfYear};}function weekOfYear(mom,dow,doy){var weekOffset=firstWeekOffset(mom.year(),dow,doy),week=Math.floor((mom.dayOfYear()-weekOffset-1)/7)+1,resWeek,resYear;if(week<1){resYear=mom.year()-1;resWeek=week+weeksInYear(resYear,dow,doy);}else if(week>weeksInYear(mom.year(),dow,doy)){resWeek=week-weeksInYear(mom.year(),dow,doy);resYear=mom.year()+1;}else{resYear=mom.year();resWeek=week;}return{week:resWeek,year:resYear};}function weeksInYear(year,dow,doy){var weekOffset=firstWeekOffset(year,dow,doy),weekOffsetNext=firstWeekOffset(year+1,dow,doy);return(daysInYear(year)-weekOffset+weekOffsetNext)/7;}// FORMATTING
	addFormatToken('w',['ww',2],'wo','week');addFormatToken('W',['WW',2],'Wo','isoWeek');// ALIASES
	addUnitAlias('week','w');addUnitAlias('isoWeek','W');// PRIORITIES
	addUnitPriority('week',5);addUnitPriority('isoWeek',5);// PARSING
	addRegexToken('w',match1to2);addRegexToken('ww',match1to2,match2);addRegexToken('W',match1to2);addRegexToken('WW',match1to2,match2);addWeekParseToken(['w','ww','W','WW'],function(input,week,config,token){week[token.substr(0,1)]=toInt(input);});// HELPERS
	// LOCALES
	function localeWeek(mom){return weekOfYear(mom,this._week.dow,this._week.doy).week;}var defaultLocaleWeek={dow:0,// Sunday is the first day of the week.
	doy:6// The week that contains Jan 1st is the first week of the year.
	};function localeFirstDayOfWeek(){return this._week.dow;}function localeFirstDayOfYear(){return this._week.doy;}// MOMENTS
	function getSetWeek(input){var week=this.localeData().week(this);return input==null?week:this.add((input-week)*7,'d');}function getSetISOWeek(input){var week=weekOfYear(this,1,4).week;return input==null?week:this.add((input-week)*7,'d');}// FORMATTING
	addFormatToken('d',0,'do','day');addFormatToken('dd',0,0,function(format){return this.localeData().weekdaysMin(this,format);});addFormatToken('ddd',0,0,function(format){return this.localeData().weekdaysShort(this,format);});addFormatToken('dddd',0,0,function(format){return this.localeData().weekdays(this,format);});addFormatToken('e',0,0,'weekday');addFormatToken('E',0,0,'isoWeekday');// ALIASES
	addUnitAlias('day','d');addUnitAlias('weekday','e');addUnitAlias('isoWeekday','E');// PRIORITY
	addUnitPriority('day',11);addUnitPriority('weekday',11);addUnitPriority('isoWeekday',11);// PARSING
	addRegexToken('d',match1to2);addRegexToken('e',match1to2);addRegexToken('E',match1to2);addRegexToken('dd',function(isStrict,locale){return locale.weekdaysMinRegex(isStrict);});addRegexToken('ddd',function(isStrict,locale){return locale.weekdaysShortRegex(isStrict);});addRegexToken('dddd',function(isStrict,locale){return locale.weekdaysRegex(isStrict);});addWeekParseToken(['dd','ddd','dddd'],function(input,week,config,token){var weekday=config._locale.weekdaysParse(input,token,config._strict);// if we didn't get a weekday name, mark the date as invalid
	if(weekday!=null){week.d=weekday;}else{getParsingFlags(config).invalidWeekday=input;}});addWeekParseToken(['d','e','E'],function(input,week,config,token){week[token]=toInt(input);});// HELPERS
	function parseWeekday(input,locale){if(typeof input!=='string'){return input;}if(!isNaN(input)){return parseInt(input,10);}input=locale.weekdaysParse(input);if(typeof input==='number'){return input;}return null;}function parseIsoWeekday(input,locale){if(typeof input==='string'){return locale.weekdaysParse(input)%7||7;}return isNaN(input)?null:input;}// LOCALES
	var defaultLocaleWeekdays='Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');function localeWeekdays(m,format){if(!m){return this._weekdays;}return isArray(this._weekdays)?this._weekdays[m.day()]:this._weekdays[this._weekdays.isFormat.test(format)?'format':'standalone'][m.day()];}var defaultLocaleWeekdaysShort='Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');function localeWeekdaysShort(m){return m?this._weekdaysShort[m.day()]:this._weekdaysShort;}var defaultLocaleWeekdaysMin='Su_Mo_Tu_We_Th_Fr_Sa'.split('_');function localeWeekdaysMin(m){return m?this._weekdaysMin[m.day()]:this._weekdaysMin;}function day_of_week__handleStrictParse(weekdayName,format,strict){var i,ii,mom,llc=weekdayName.toLocaleLowerCase();if(!this._weekdaysParse){this._weekdaysParse=[];this._shortWeekdaysParse=[];this._minWeekdaysParse=[];for(i=0;i<7;++i){mom=create_utc__createUTC([2000,1]).day(i);this._minWeekdaysParse[i]=this.weekdaysMin(mom,'').toLocaleLowerCase();this._shortWeekdaysParse[i]=this.weekdaysShort(mom,'').toLocaleLowerCase();this._weekdaysParse[i]=this.weekdays(mom,'').toLocaleLowerCase();}}if(strict){if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}}else{if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}}}function localeWeekdaysParse(weekdayName,format,strict){var i,mom,regex;if(this._weekdaysParseExact){return day_of_week__handleStrictParse.call(this,weekdayName,format,strict);}if(!this._weekdaysParse){this._weekdaysParse=[];this._minWeekdaysParse=[];this._shortWeekdaysParse=[];this._fullWeekdaysParse=[];}for(i=0;i<7;i++){// make the regex if we don't have it already
	mom=create_utc__createUTC([2000,1]).day(i);if(strict&&!this._fullWeekdaysParse[i]){this._fullWeekdaysParse[i]=new RegExp('^'+this.weekdays(mom,'').replace('.','\.?')+'$','i');this._shortWeekdaysParse[i]=new RegExp('^'+this.weekdaysShort(mom,'').replace('.','\.?')+'$','i');this._minWeekdaysParse[i]=new RegExp('^'+this.weekdaysMin(mom,'').replace('.','\.?')+'$','i');}if(!this._weekdaysParse[i]){regex='^'+this.weekdays(mom,'')+'|^'+this.weekdaysShort(mom,'')+'|^'+this.weekdaysMin(mom,'');this._weekdaysParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
	if(strict&&format==='dddd'&&this._fullWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='ddd'&&this._shortWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='dd'&&this._minWeekdaysParse[i].test(weekdayName)){return i;}else if(!strict&&this._weekdaysParse[i].test(weekdayName)){return i;}}}// MOMENTS
	function getSetDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var day=this._isUTC?this._d.getUTCDay():this._d.getDay();if(input!=null){input=parseWeekday(input,this.localeData());return this.add(input-day,'d');}else{return day;}}function getSetLocaleDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var weekday=(this.day()+7-this.localeData()._week.dow)%7;return input==null?weekday:this.add(input-weekday,'d');}function getSetISODayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}// behaves the same as moment#day except
	// as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	// as a setter, sunday should belong to the previous week.
	if(input!=null){var weekday=parseIsoWeekday(input,this.localeData());return this.day(this.day()%7?weekday:weekday-7);}else{return this.day()||7;}}var defaultWeekdaysRegex=matchWord;function weekdaysRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysStrictRegex;}else{return this._weekdaysRegex;}}else{if(!hasOwnProp(this,'_weekdaysRegex')){this._weekdaysRegex=defaultWeekdaysRegex;}return this._weekdaysStrictRegex&&isStrict?this._weekdaysStrictRegex:this._weekdaysRegex;}}var defaultWeekdaysShortRegex=matchWord;function weekdaysShortRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysShortStrictRegex;}else{return this._weekdaysShortRegex;}}else{if(!hasOwnProp(this,'_weekdaysShortRegex')){this._weekdaysShortRegex=defaultWeekdaysShortRegex;}return this._weekdaysShortStrictRegex&&isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex;}}var defaultWeekdaysMinRegex=matchWord;function weekdaysMinRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysMinStrictRegex;}else{return this._weekdaysMinRegex;}}else{if(!hasOwnProp(this,'_weekdaysMinRegex')){this._weekdaysMinRegex=defaultWeekdaysMinRegex;}return this._weekdaysMinStrictRegex&&isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex;}}function computeWeekdaysParse(){function cmpLenRev(a,b){return b.length-a.length;}var minPieces=[],shortPieces=[],longPieces=[],mixedPieces=[],i,mom,minp,shortp,longp;for(i=0;i<7;i++){// make the regex if we don't have it already
	mom=create_utc__createUTC([2000,1]).day(i);minp=this.weekdaysMin(mom,'');shortp=this.weekdaysShort(mom,'');longp=this.weekdays(mom,'');minPieces.push(minp);shortPieces.push(shortp);longPieces.push(longp);mixedPieces.push(minp);mixedPieces.push(shortp);mixedPieces.push(longp);}// Sorting makes sure if one weekday (or abbr) is a prefix of another it
	// will match the longer piece.
	minPieces.sort(cmpLenRev);shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<7;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);mixedPieces[i]=regexEscape(mixedPieces[i]);}this._weekdaysRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._weekdaysShortRegex=this._weekdaysRegex;this._weekdaysMinRegex=this._weekdaysRegex;this._weekdaysStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._weekdaysShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');this._weekdaysMinStrictRegex=new RegExp('^('+minPieces.join('|')+')','i');}// FORMATTING
	function hFormat(){return this.hours()%12||12;}function kFormat(){return this.hours()||24;}addFormatToken('H',['HH',2],0,'hour');addFormatToken('h',['hh',2],0,hFormat);addFormatToken('k',['kk',2],0,kFormat);addFormatToken('hmm',0,0,function(){return''+hFormat.apply(this)+zeroFill(this.minutes(),2);});addFormatToken('hmmss',0,0,function(){return''+hFormat.apply(this)+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});addFormatToken('Hmm',0,0,function(){return''+this.hours()+zeroFill(this.minutes(),2);});addFormatToken('Hmmss',0,0,function(){return''+this.hours()+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});function meridiem(token,lowercase){addFormatToken(token,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),lowercase);});}meridiem('a',true);meridiem('A',false);// ALIASES
	addUnitAlias('hour','h');// PRIORITY
	addUnitPriority('hour',13);// PARSING
	function matchMeridiem(isStrict,locale){return locale._meridiemParse;}addRegexToken('a',matchMeridiem);addRegexToken('A',matchMeridiem);addRegexToken('H',match1to2);addRegexToken('h',match1to2);addRegexToken('HH',match1to2,match2);addRegexToken('hh',match1to2,match2);addRegexToken('hmm',match3to4);addRegexToken('hmmss',match5to6);addRegexToken('Hmm',match3to4);addRegexToken('Hmmss',match5to6);addParseToken(['H','HH'],HOUR);addParseToken(['a','A'],function(input,array,config){config._isPm=config._locale.isPM(input);config._meridiem=input;});addParseToken(['h','hh'],function(input,array,config){array[HOUR]=toInt(input);getParsingFlags(config).bigHour=true;});addParseToken('hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));getParsingFlags(config).bigHour=true;});addParseToken('hmmss',function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));getParsingFlags(config).bigHour=true;});addParseToken('Hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));});addParseToken('Hmmss',function(input,array,config){var pos1=input.length-4;var pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));});// LOCALES
	function localeIsPM(input){// IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	// Using charAt should be more compatible.
	return(input+'').toLowerCase().charAt(0)==='p';}var defaultLocaleMeridiemParse=/[ap]\.?m?\.?/i;function localeMeridiem(hours,minutes,isLower){if(hours>11){return isLower?'pm':'PM';}else{return isLower?'am':'AM';}}// MOMENTS
	// Setting the hour should keep the time, because the user explicitly
	// specified which hour he wants. So trying to maintain the same hour (in
	// a new timezone) makes sense. Adding/subtracting hours does not follow
	// this rule.
	var getSetHour=makeGetSet('Hours',true);var baseConfig={calendar:defaultCalendar,longDateFormat:defaultLongDateFormat,invalidDate:defaultInvalidDate,ordinal:defaultOrdinal,ordinalParse:defaultOrdinalParse,relativeTime:defaultRelativeTime,months:defaultLocaleMonths,monthsShort:defaultLocaleMonthsShort,week:defaultLocaleWeek,weekdays:defaultLocaleWeekdays,weekdaysMin:defaultLocaleWeekdaysMin,weekdaysShort:defaultLocaleWeekdaysShort,meridiemParse:defaultLocaleMeridiemParse};// internal storage for locale config files
	var locales={};var globalLocale;function normalizeLocale(key){return key?key.toLowerCase().replace('_','-'):key;}// pick the locale from the array
	// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	function chooseLocale(names){var i=0,j,next,locale,split;while(i<names.length){split=normalizeLocale(names[i]).split('-');j=split.length;next=normalizeLocale(names[i+1]);next=next?next.split('-'):null;while(j>0){locale=loadLocale(split.slice(0,j).join('-'));if(locale){return locale;}if(next&&next.length>=j&&compareArrays(split,next,true)>=j-1){//the next array item is better than a shallower substring of this one
	break;}j--;}i++;}return null;}function loadLocale(name){var oldLocale=null;// TODO: Find a better way to register and load all the locales in Node
	if(!locales[name]&&typeof module!=='undefined'&&module&&module.exports){try{oldLocale=globalLocale._abbr;__webpack_require__(179)("./"+name);// because defineLocale currently also sets the global locale, we
	// want to undo that for lazy loaded locales
	locale_locales__getSetGlobalLocale(oldLocale);}catch(e){}}return locales[name];}// This function will load locale and then set the global locale.  If
	// no arguments are passed in, it will simply return the current global
	// locale key.
	function locale_locales__getSetGlobalLocale(key,values){var data;if(key){if(isUndefined(values)){data=locale_locales__getLocale(key);}else{data=defineLocale(key,values);}if(data){// moment.duration._locale = moment._locale = data;
	globalLocale=data;}}return globalLocale._abbr;}function defineLocale(name,config){if(config!==null){var parentConfig=baseConfig;config.abbr=name;if(locales[name]!=null){deprecateSimple('defineLocaleOverride','use moment.updateLocale(localeName, config) to change '+'an existing locale. moment.defineLocale(localeName, '+'config) should only be used for creating a new locale '+'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');parentConfig=locales[name]._config;}else if(config.parentLocale!=null){if(locales[config.parentLocale]!=null){parentConfig=locales[config.parentLocale]._config;}else{// treat as if there is no base config
	deprecateSimple('parentLocaleUndefined','specified parentLocale is not defined yet. See http://momentjs.com/guides/#/warnings/parent-locale/');}}locales[name]=new Locale(mergeConfigs(parentConfig,config));// backwards compat for now: also set the locale
	locale_locales__getSetGlobalLocale(name);return locales[name];}else{// useful for testing
	delete locales[name];return null;}}function updateLocale(name,config){if(config!=null){var locale,parentConfig=baseConfig;// MERGE
	if(locales[name]!=null){parentConfig=locales[name]._config;}config=mergeConfigs(parentConfig,config);locale=new Locale(config);locale.parentLocale=locales[name];locales[name]=locale;// backwards compat for now: also set the locale
	locale_locales__getSetGlobalLocale(name);}else{// pass null for config to unupdate, useful for tests
	if(locales[name]!=null){if(locales[name].parentLocale!=null){locales[name]=locales[name].parentLocale;}else if(locales[name]!=null){delete locales[name];}}}return locales[name];}// returns locale data
	function locale_locales__getLocale(key){var locale;if(key&&key._locale&&key._locale._abbr){key=key._locale._abbr;}if(!key){return globalLocale;}if(!isArray(key)){//short-circuit everything else
	locale=loadLocale(key);if(locale){return locale;}key=[key];}return chooseLocale(key);}function locale_locales__listLocales(){return keys(locales);}function checkOverflow(m){var overflow;var a=m._a;if(a&&getParsingFlags(m).overflow===-2){overflow=a[MONTH]<0||a[MONTH]>11?MONTH:a[DATE]<1||a[DATE]>daysInMonth(a[YEAR],a[MONTH])?DATE:a[HOUR]<0||a[HOUR]>24||a[HOUR]===24&&(a[MINUTE]!==0||a[SECOND]!==0||a[MILLISECOND]!==0)?HOUR:a[MINUTE]<0||a[MINUTE]>59?MINUTE:a[SECOND]<0||a[SECOND]>59?SECOND:a[MILLISECOND]<0||a[MILLISECOND]>999?MILLISECOND:-1;if(getParsingFlags(m)._overflowDayOfYear&&(overflow<YEAR||overflow>DATE)){overflow=DATE;}if(getParsingFlags(m)._overflowWeeks&&overflow===-1){overflow=WEEK;}if(getParsingFlags(m)._overflowWeekday&&overflow===-1){overflow=WEEKDAY;}getParsingFlags(m).overflow=overflow;}return m;}// iso 8601 regex
	// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	var extendedIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/;var basicIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/;var tzRegex=/Z|[+-]\d\d(?::?\d\d)?/;var isoDates=[['YYYYYY-MM-DD',/[+-]\d{6}-\d\d-\d\d/],['YYYY-MM-DD',/\d{4}-\d\d-\d\d/],['GGGG-[W]WW-E',/\d{4}-W\d\d-\d/],['GGGG-[W]WW',/\d{4}-W\d\d/,false],['YYYY-DDD',/\d{4}-\d{3}/],['YYYY-MM',/\d{4}-\d\d/,false],['YYYYYYMMDD',/[+-]\d{10}/],['YYYYMMDD',/\d{8}/],// YYYYMM is NOT allowed by the standard
	['GGGG[W]WWE',/\d{4}W\d{3}/],['GGGG[W]WW',/\d{4}W\d{2}/,false],['YYYYDDD',/\d{7}/]];// iso time formats and regexes
	var isoTimes=[['HH:mm:ss.SSSS',/\d\d:\d\d:\d\d\.\d+/],['HH:mm:ss,SSSS',/\d\d:\d\d:\d\d,\d+/],['HH:mm:ss',/\d\d:\d\d:\d\d/],['HH:mm',/\d\d:\d\d/],['HHmmss.SSSS',/\d\d\d\d\d\d\.\d+/],['HHmmss,SSSS',/\d\d\d\d\d\d,\d+/],['HHmmss',/\d\d\d\d\d\d/],['HHmm',/\d\d\d\d/],['HH',/\d\d/]];var aspNetJsonRegex=/^\/?Date\((\-?\d+)/i;// date from iso format
	function configFromISO(config){var i,l,string=config._i,match=extendedIsoRegex.exec(string)||basicIsoRegex.exec(string),allowTime,dateFormat,timeFormat,tzFormat;if(match){getParsingFlags(config).iso=true;for(i=0,l=isoDates.length;i<l;i++){if(isoDates[i][1].exec(match[1])){dateFormat=isoDates[i][0];allowTime=isoDates[i][2]!==false;break;}}if(dateFormat==null){config._isValid=false;return;}if(match[3]){for(i=0,l=isoTimes.length;i<l;i++){if(isoTimes[i][1].exec(match[3])){// match[2] should be 'T' or space
	timeFormat=(match[2]||' ')+isoTimes[i][0];break;}}if(timeFormat==null){config._isValid=false;return;}}if(!allowTime&&timeFormat!=null){config._isValid=false;return;}if(match[4]){if(tzRegex.exec(match[4])){tzFormat='Z';}else{config._isValid=false;return;}}config._f=dateFormat+(timeFormat||'')+(tzFormat||'');configFromStringAndFormat(config);}else{config._isValid=false;}}// date from iso format or fallback
	function configFromString(config){var matched=aspNetJsonRegex.exec(config._i);if(matched!==null){config._d=new Date(+matched[1]);return;}configFromISO(config);if(config._isValid===false){delete config._isValid;utils_hooks__hooks.createFromInputFallback(config);}}utils_hooks__hooks.createFromInputFallback=deprecate('value provided is not in a recognized ISO format. moment construction falls back to js Date(), '+'which is not reliable across all browsers and versions. Non ISO date formats are '+'discouraged and will be removed in an upcoming major release. Please refer to '+'http://momentjs.com/guides/#/warnings/js-date/ for more info.',function(config){config._d=new Date(config._i+(config._useUTC?' UTC':''));});// Pick the first defined of two or three arguments.
	function defaults(a,b,c){if(a!=null){return a;}if(b!=null){return b;}return c;}function currentDateArray(config){// hooks is actually the exported moment object
	var nowValue=new Date(utils_hooks__hooks.now());if(config._useUTC){return[nowValue.getUTCFullYear(),nowValue.getUTCMonth(),nowValue.getUTCDate()];}return[nowValue.getFullYear(),nowValue.getMonth(),nowValue.getDate()];}// convert an array to a date.
	// the array should mirror the parameters below
	// note: all values past the year are optional and will default to the lowest possible value.
	// [year, month, day , hour, minute, second, millisecond]
	function configFromArray(config){var i,date,input=[],currentDate,yearToUse;if(config._d){return;}currentDate=currentDateArray(config);//compute day of the year from weeks and weekdays
	if(config._w&&config._a[DATE]==null&&config._a[MONTH]==null){dayOfYearFromWeekInfo(config);}//if the day of the year is set, figure out what it is
	if(config._dayOfYear){yearToUse=defaults(config._a[YEAR],currentDate[YEAR]);if(config._dayOfYear>daysInYear(yearToUse)){getParsingFlags(config)._overflowDayOfYear=true;}date=createUTCDate(yearToUse,0,config._dayOfYear);config._a[MONTH]=date.getUTCMonth();config._a[DATE]=date.getUTCDate();}// Default to current date.
	// * if no year, month, day of month are given, default to today
	// * if day of month is given, default month and year
	// * if month is given, default only year
	// * if year is given, don't default anything
	for(i=0;i<3&&config._a[i]==null;++i){config._a[i]=input[i]=currentDate[i];}// Zero out whatever was not defaulted, including time
	for(;i<7;i++){config._a[i]=input[i]=config._a[i]==null?i===2?1:0:config._a[i];}// Check for 24:00:00.000
	if(config._a[HOUR]===24&&config._a[MINUTE]===0&&config._a[SECOND]===0&&config._a[MILLISECOND]===0){config._nextDay=true;config._a[HOUR]=0;}config._d=(config._useUTC?createUTCDate:createDate).apply(null,input);// Apply timezone offset from input. The actual utcOffset can be changed
	// with parseZone.
	if(config._tzm!=null){config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);}if(config._nextDay){config._a[HOUR]=24;}}function dayOfYearFromWeekInfo(config){var w,weekYear,week,weekday,dow,doy,temp,weekdayOverflow;w=config._w;if(w.GG!=null||w.W!=null||w.E!=null){dow=1;doy=4;// TODO: We need to take the current isoWeekYear, but that depends on
	// how we interpret now (local, utc, fixed offset). So create
	// a now version of current config (take local/utc/offset flags, and
	// create now).
	weekYear=defaults(w.GG,config._a[YEAR],weekOfYear(local__createLocal(),1,4).year);week=defaults(w.W,1);weekday=defaults(w.E,1);if(weekday<1||weekday>7){weekdayOverflow=true;}}else{dow=config._locale._week.dow;doy=config._locale._week.doy;weekYear=defaults(w.gg,config._a[YEAR],weekOfYear(local__createLocal(),dow,doy).year);week=defaults(w.w,1);if(w.d!=null){// weekday -- low day numbers are considered next week
	weekday=w.d;if(weekday<0||weekday>6){weekdayOverflow=true;}}else if(w.e!=null){// local weekday -- counting starts from begining of week
	weekday=w.e+dow;if(w.e<0||w.e>6){weekdayOverflow=true;}}else{// default to begining of week
	weekday=dow;}}if(week<1||week>weeksInYear(weekYear,dow,doy)){getParsingFlags(config)._overflowWeeks=true;}else if(weekdayOverflow!=null){getParsingFlags(config)._overflowWeekday=true;}else{temp=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy);config._a[YEAR]=temp.year;config._dayOfYear=temp.dayOfYear;}}// constant that refers to the ISO standard
	utils_hooks__hooks.ISO_8601=function(){};// date from string and format string
	function configFromStringAndFormat(config){// TODO: Move this to another part of the creation flow to prevent circular deps
	if(config._f===utils_hooks__hooks.ISO_8601){configFromISO(config);return;}config._a=[];getParsingFlags(config).empty=true;// This array is used to make a Date, either with `new Date` or `Date.UTC`
	var string=''+config._i,i,parsedInput,tokens,token,skipped,stringLength=string.length,totalParsedInputLength=0;tokens=expandFormat(config._f,config._locale).match(formattingTokens)||[];for(i=0;i<tokens.length;i++){token=tokens[i];parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0];// console.log('token', token, 'parsedInput', parsedInput,
	//         'regex', getParseRegexForToken(token, config));
	if(parsedInput){skipped=string.substr(0,string.indexOf(parsedInput));if(skipped.length>0){getParsingFlags(config).unusedInput.push(skipped);}string=string.slice(string.indexOf(parsedInput)+parsedInput.length);totalParsedInputLength+=parsedInput.length;}// don't parse if it's not a known token
	if(formatTokenFunctions[token]){if(parsedInput){getParsingFlags(config).empty=false;}else{getParsingFlags(config).unusedTokens.push(token);}addTimeToArrayFromToken(token,parsedInput,config);}else if(config._strict&&!parsedInput){getParsingFlags(config).unusedTokens.push(token);}}// add remaining unparsed input length to the string
	getParsingFlags(config).charsLeftOver=stringLength-totalParsedInputLength;if(string.length>0){getParsingFlags(config).unusedInput.push(string);}// clear _12h flag if hour is <= 12
	if(config._a[HOUR]<=12&&getParsingFlags(config).bigHour===true&&config._a[HOUR]>0){getParsingFlags(config).bigHour=undefined;}getParsingFlags(config).parsedDateParts=config._a.slice(0);getParsingFlags(config).meridiem=config._meridiem;// handle meridiem
	config._a[HOUR]=meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem);configFromArray(config);checkOverflow(config);}function meridiemFixWrap(locale,hour,meridiem){var isPm;if(meridiem==null){// nothing to do
	return hour;}if(locale.meridiemHour!=null){return locale.meridiemHour(hour,meridiem);}else if(locale.isPM!=null){// Fallback
	isPm=locale.isPM(meridiem);if(isPm&&hour<12){hour+=12;}if(!isPm&&hour===12){hour=0;}return hour;}else{// this is not supposed to happen
	return hour;}}// date from string and array of format strings
	function configFromStringAndArray(config){var tempConfig,bestMoment,scoreToBeat,i,currentScore;if(config._f.length===0){getParsingFlags(config).invalidFormat=true;config._d=new Date(NaN);return;}for(i=0;i<config._f.length;i++){currentScore=0;tempConfig=copyConfig({},config);if(config._useUTC!=null){tempConfig._useUTC=config._useUTC;}tempConfig._f=config._f[i];configFromStringAndFormat(tempConfig);if(!valid__isValid(tempConfig)){continue;}// if there is any input that was not parsed add a penalty for that format
	currentScore+=getParsingFlags(tempConfig).charsLeftOver;//or tokens
	currentScore+=getParsingFlags(tempConfig).unusedTokens.length*10;getParsingFlags(tempConfig).score=currentScore;if(scoreToBeat==null||currentScore<scoreToBeat){scoreToBeat=currentScore;bestMoment=tempConfig;}}extend(config,bestMoment||tempConfig);}function configFromObject(config){if(config._d){return;}var i=normalizeObjectUnits(config._i);config._a=map([i.year,i.month,i.day||i.date,i.hour,i.minute,i.second,i.millisecond],function(obj){return obj&&parseInt(obj,10);});configFromArray(config);}function createFromConfig(config){var res=new Moment(checkOverflow(prepareConfig(config)));if(res._nextDay){// Adding is smart enough around DST
	res.add(1,'d');res._nextDay=undefined;}return res;}function prepareConfig(config){var input=config._i,format=config._f;config._locale=config._locale||locale_locales__getLocale(config._l);if(input===null||format===undefined&&input===''){return valid__createInvalid({nullInput:true});}if(typeof input==='string'){config._i=input=config._locale.preparse(input);}if(isMoment(input)){return new Moment(checkOverflow(input));}else if(isArray(format)){configFromStringAndArray(config);}else if(isDate(input)){config._d=input;}else if(format){configFromStringAndFormat(config);}else{configFromInput(config);}if(!valid__isValid(config)){config._d=null;}return config;}function configFromInput(config){var input=config._i;if(input===undefined){config._d=new Date(utils_hooks__hooks.now());}else if(isDate(input)){config._d=new Date(input.valueOf());}else if(typeof input==='string'){configFromString(config);}else if(isArray(input)){config._a=map(input.slice(0),function(obj){return parseInt(obj,10);});configFromArray(config);}else if((typeof input==='undefined'?'undefined':_typeof(input))==='object'){configFromObject(config);}else if(typeof input==='number'){// from milliseconds
	config._d=new Date(input);}else{utils_hooks__hooks.createFromInputFallback(config);}}function createLocalOrUTC(input,format,locale,strict,isUTC){var c={};if(typeof locale==='boolean'){strict=locale;locale=undefined;}if(isObject(input)&&isObjectEmpty(input)||isArray(input)&&input.length===0){input=undefined;}// object construction must be done this way.
	// https://github.com/moment/moment/issues/1423
	c._isAMomentObject=true;c._useUTC=c._isUTC=isUTC;c._l=locale;c._i=input;c._f=format;c._strict=strict;return createFromConfig(c);}function local__createLocal(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,false);}var prototypeMin=deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=local__createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other<this?this:other;}else{return valid__createInvalid();}});var prototypeMax=deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=local__createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other>this?this:other;}else{return valid__createInvalid();}});// Pick a moment m from moments so that m[fn](other) is true for all
	// other. This relies on the function fn to be transitive.
	//
	// moments should either be an array of moment objects or an array, whose
	// first element is an array of moment objects.
	function pickBy(fn,moments){var res,i;if(moments.length===1&&isArray(moments[0])){moments=moments[0];}if(!moments.length){return local__createLocal();}res=moments[0];for(i=1;i<moments.length;++i){if(!moments[i].isValid()||moments[i][fn](res)){res=moments[i];}}return res;}// TODO: Use [].sort instead?
	function min(){var args=[].slice.call(arguments,0);return pickBy('isBefore',args);}function max(){var args=[].slice.call(arguments,0);return pickBy('isAfter',args);}var now=function now(){return Date.now?Date.now():+new Date();};function Duration(duration){var normalizedInput=normalizeObjectUnits(duration),years=normalizedInput.year||0,quarters=normalizedInput.quarter||0,months=normalizedInput.month||0,weeks=normalizedInput.week||0,days=normalizedInput.day||0,hours=normalizedInput.hour||0,minutes=normalizedInput.minute||0,seconds=normalizedInput.second||0,milliseconds=normalizedInput.millisecond||0;// representation for dateAddRemove
	this._milliseconds=+milliseconds+seconds*1e3+// 1000
	minutes*6e4+// 1000 * 60
	hours*1000*60*60;//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
	// Because of dateAddRemove treats 24 hours as different from a
	// day when working around DST, we need to store them separately
	this._days=+days+weeks*7;// It is impossible translate months into days without knowing
	// which months you are are talking about, so we have to store
	// it separately.
	this._months=+months+quarters*3+years*12;this._data={};this._locale=locale_locales__getLocale();this._bubble();}function isDuration(obj){return obj instanceof Duration;}function absRound(number){if(number<0){return Math.round(-1*number)*-1;}else{return Math.round(number);}}// FORMATTING
	function offset(token,separator){addFormatToken(token,0,0,function(){var offset=this.utcOffset();var sign='+';if(offset<0){offset=-offset;sign='-';}return sign+zeroFill(~~(offset/60),2)+separator+zeroFill(~~offset%60,2);});}offset('Z',':');offset('ZZ','');// PARSING
	addRegexToken('Z',matchShortOffset);addRegexToken('ZZ',matchShortOffset);addParseToken(['Z','ZZ'],function(input,array,config){config._useUTC=true;config._tzm=offsetFromString(matchShortOffset,input);});// HELPERS
	// timezone chunker
	// '+10:00' > ['10',  '00']
	// '-1530'  > ['-15', '30']
	var chunkOffset=/([\+\-]|\d\d)/gi;function offsetFromString(matcher,string){var matches=(string||'').match(matcher)||[];var chunk=matches[matches.length-1]||[];var parts=(chunk+'').match(chunkOffset)||['-',0,0];var minutes=+(parts[1]*60)+toInt(parts[2]);return parts[0]==='+'?minutes:-minutes;}// Return a moment from input, that is local/utc/zone equivalent to model.
	function cloneWithOffset(input,model){var res,diff;if(model._isUTC){res=model.clone();diff=(isMoment(input)||isDate(input)?input.valueOf():local__createLocal(input).valueOf())-res.valueOf();// Use low-level api, because this fn is low-level api.
	res._d.setTime(res._d.valueOf()+diff);utils_hooks__hooks.updateOffset(res,false);return res;}else{return local__createLocal(input).local();}}function getDateOffset(m){// On Firefox.24 Date#getTimezoneOffset returns a floating point.
	// https://github.com/moment/moment/pull/1871
	return-Math.round(m._d.getTimezoneOffset()/15)*15;}// HOOKS
	// This function will be called whenever a moment is mutated.
	// It is intended to keep the offset in sync with the timezone.
	utils_hooks__hooks.updateOffset=function(){};// MOMENTS
	// keepLocalTime = true means only change the timezone, without
	// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	// +0200, so we adjust the time as needed, to be valid.
	//
	// Keeping the time actually adds/subtracts (one hour)
	// from the actual represented time. That is why we call updateOffset
	// a second time. In case it wants us to change the offset again
	// _changeInProgress == true case, then we have to adjust, because
	// there is no such time in the given timezone.
	function getSetOffset(input,keepLocalTime){var offset=this._offset||0,localAdjust;if(!this.isValid()){return input!=null?this:NaN;}if(input!=null){if(typeof input==='string'){input=offsetFromString(matchShortOffset,input);}else if(Math.abs(input)<16){input=input*60;}if(!this._isUTC&&keepLocalTime){localAdjust=getDateOffset(this);}this._offset=input;this._isUTC=true;if(localAdjust!=null){this.add(localAdjust,'m');}if(offset!==input){if(!keepLocalTime||this._changeInProgress){add_subtract__addSubtract(this,create__createDuration(input-offset,'m'),1,false);}else if(!this._changeInProgress){this._changeInProgress=true;utils_hooks__hooks.updateOffset(this,true);this._changeInProgress=null;}}return this;}else{return this._isUTC?offset:getDateOffset(this);}}function getSetZone(input,keepLocalTime){if(input!=null){if(typeof input!=='string'){input=-input;}this.utcOffset(input,keepLocalTime);return this;}else{return-this.utcOffset();}}function setOffsetToUTC(keepLocalTime){return this.utcOffset(0,keepLocalTime);}function setOffsetToLocal(keepLocalTime){if(this._isUTC){this.utcOffset(0,keepLocalTime);this._isUTC=false;if(keepLocalTime){this.subtract(getDateOffset(this),'m');}}return this;}function setOffsetToParsedOffset(){if(this._tzm){this.utcOffset(this._tzm);}else if(typeof this._i==='string'){var tZone=offsetFromString(matchOffset,this._i);if(tZone===0){this.utcOffset(0,true);}else{this.utcOffset(offsetFromString(matchOffset,this._i));}}return this;}function hasAlignedHourOffset(input){if(!this.isValid()){return false;}input=input?local__createLocal(input).utcOffset():0;return(this.utcOffset()-input)%60===0;}function isDaylightSavingTime(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset();}function isDaylightSavingTimeShifted(){if(!isUndefined(this._isDSTShifted)){return this._isDSTShifted;}var c={};copyConfig(c,this);c=prepareConfig(c);if(c._a){var other=c._isUTC?create_utc__createUTC(c._a):local__createLocal(c._a);this._isDSTShifted=this.isValid()&&compareArrays(c._a,other.toArray())>0;}else{this._isDSTShifted=false;}return this._isDSTShifted;}function isLocal(){return this.isValid()?!this._isUTC:false;}function isUtcOffset(){return this.isValid()?this._isUTC:false;}function isUtc(){return this.isValid()?this._isUTC&&this._offset===0:false;}// ASP.NET json date format regex
	var aspNetRegex=/^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	// and further modified to allow for strings containing both week and day
	var isoRegex=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;function create__createDuration(input,key){var duration=input,// matching against regexp is expensive, do it on demand
	match=null,sign,ret,diffRes;if(isDuration(input)){duration={ms:input._milliseconds,d:input._days,M:input._months};}else if(typeof input==='number'){duration={};if(key){duration[key]=input;}else{duration.milliseconds=input;}}else if(!!(match=aspNetRegex.exec(input))){sign=match[1]==='-'?-1:1;duration={y:0,d:toInt(match[DATE])*sign,h:toInt(match[HOUR])*sign,m:toInt(match[MINUTE])*sign,s:toInt(match[SECOND])*sign,ms:toInt(absRound(match[MILLISECOND]*1000))*sign// the millisecond decimal point is included in the match
	};}else if(!!(match=isoRegex.exec(input))){sign=match[1]==='-'?-1:1;duration={y:parseIso(match[2],sign),M:parseIso(match[3],sign),w:parseIso(match[4],sign),d:parseIso(match[5],sign),h:parseIso(match[6],sign),m:parseIso(match[7],sign),s:parseIso(match[8],sign)};}else if(duration==null){// checks for null or undefined
	duration={};}else if((typeof duration==='undefined'?'undefined':_typeof(duration))==='object'&&('from'in duration||'to'in duration)){diffRes=momentsDifference(local__createLocal(duration.from),local__createLocal(duration.to));duration={};duration.ms=diffRes.milliseconds;duration.M=diffRes.months;}ret=new Duration(duration);if(isDuration(input)&&hasOwnProp(input,'_locale')){ret._locale=input._locale;}return ret;}create__createDuration.fn=Duration.prototype;function parseIso(inp,sign){// We'd normally use ~~inp for this, but unfortunately it also
	// converts floats to ints.
	// inp may be undefined, so careful calling replace on it.
	var res=inp&&parseFloat(inp.replace(',','.'));// apply sign while we're at it
	return(isNaN(res)?0:res)*sign;}function positiveMomentsDifference(base,other){var res={milliseconds:0,months:0};res.months=other.month()-base.month()+(other.year()-base.year())*12;if(base.clone().add(res.months,'M').isAfter(other)){--res.months;}res.milliseconds=+other-+base.clone().add(res.months,'M');return res;}function momentsDifference(base,other){var res;if(!(base.isValid()&&other.isValid())){return{milliseconds:0,months:0};}other=cloneWithOffset(other,base);if(base.isBefore(other)){res=positiveMomentsDifference(base,other);}else{res=positiveMomentsDifference(other,base);res.milliseconds=-res.milliseconds;res.months=-res.months;}return res;}// TODO: remove 'name' arg after deprecation is removed
	function createAdder(direction,name){return function(val,period){var dur,tmp;//invert the arguments, but complain about it
	if(period!==null&&!isNaN(+period)){deprecateSimple(name,'moment().'+name+'(period, number) is deprecated. Please use moment().'+name+'(number, period). '+'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');tmp=val;val=period;period=tmp;}val=typeof val==='string'?+val:val;dur=create__createDuration(val,period);add_subtract__addSubtract(this,dur,direction);return this;};}function add_subtract__addSubtract(mom,duration,isAdding,updateOffset){var milliseconds=duration._milliseconds,days=absRound(duration._days),months=absRound(duration._months);if(!mom.isValid()){// No op
	return;}updateOffset=updateOffset==null?true:updateOffset;if(milliseconds){mom._d.setTime(mom._d.valueOf()+milliseconds*isAdding);}if(days){get_set__set(mom,'Date',get_set__get(mom,'Date')+days*isAdding);}if(months){setMonth(mom,get_set__get(mom,'Month')+months*isAdding);}if(updateOffset){utils_hooks__hooks.updateOffset(mom,days||months);}}var add_subtract__add=createAdder(1,'add');var add_subtract__subtract=createAdder(-1,'subtract');function getCalendarFormat(myMoment,now){var diff=myMoment.diff(now,'days',true);return diff<-6?'sameElse':diff<-1?'lastWeek':diff<0?'lastDay':diff<1?'sameDay':diff<2?'nextDay':diff<7?'nextWeek':'sameElse';}function moment_calendar__calendar(time,formats){// We want to compare the start of today, vs this.
	// Getting start-of-today depends on whether we're local/utc/offset or not.
	var now=time||local__createLocal(),sod=cloneWithOffset(now,this).startOf('day'),format=utils_hooks__hooks.calendarFormat(this,sod)||'sameElse';var output=formats&&(isFunction(formats[format])?formats[format].call(this,now):formats[format]);return this.format(output||this.localeData().calendar(format,this,local__createLocal(now)));}function clone(){return new Moment(this);}function isAfter(input,units){var localInput=isMoment(input)?input:local__createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(!isUndefined(units)?units:'millisecond');if(units==='millisecond'){return this.valueOf()>localInput.valueOf();}else{return localInput.valueOf()<this.clone().startOf(units).valueOf();}}function isBefore(input,units){var localInput=isMoment(input)?input:local__createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(!isUndefined(units)?units:'millisecond');if(units==='millisecond'){return this.valueOf()<localInput.valueOf();}else{return this.clone().endOf(units).valueOf()<localInput.valueOf();}}function isBetween(from,to,units,inclusivity){inclusivity=inclusivity||'()';return(inclusivity[0]==='('?this.isAfter(from,units):!this.isBefore(from,units))&&(inclusivity[1]===')'?this.isBefore(to,units):!this.isAfter(to,units));}function isSame(input,units){var localInput=isMoment(input)?input:local__createLocal(input),inputMs;if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units||'millisecond');if(units==='millisecond'){return this.valueOf()===localInput.valueOf();}else{inputMs=localInput.valueOf();return this.clone().startOf(units).valueOf()<=inputMs&&inputMs<=this.clone().endOf(units).valueOf();}}function isSameOrAfter(input,units){return this.isSame(input,units)||this.isAfter(input,units);}function isSameOrBefore(input,units){return this.isSame(input,units)||this.isBefore(input,units);}function diff(input,units,asFloat){var that,zoneDelta,delta,output;if(!this.isValid()){return NaN;}that=cloneWithOffset(input,this);if(!that.isValid()){return NaN;}zoneDelta=(that.utcOffset()-this.utcOffset())*6e4;units=normalizeUnits(units);if(units==='year'||units==='month'||units==='quarter'){output=monthDiff(this,that);if(units==='quarter'){output=output/3;}else if(units==='year'){output=output/12;}}else{delta=this-that;output=units==='second'?delta/1e3:// 1000
	units==='minute'?delta/6e4:// 1000 * 60
	units==='hour'?delta/36e5:// 1000 * 60 * 60
	units==='day'?(delta-zoneDelta)/864e5:// 1000 * 60 * 60 * 24, negate dst
	units==='week'?(delta-zoneDelta)/6048e5:// 1000 * 60 * 60 * 24 * 7, negate dst
	delta;}return asFloat?output:absFloor(output);}function monthDiff(a,b){// difference in months
	var wholeMonthDiff=(b.year()-a.year())*12+(b.month()-a.month()),// b is in (anchor - 1 month, anchor + 1 month)
	anchor=a.clone().add(wholeMonthDiff,'months'),anchor2,adjust;if(b-anchor<0){anchor2=a.clone().add(wholeMonthDiff-1,'months');// linear across the month
	adjust=(b-anchor)/(anchor-anchor2);}else{anchor2=a.clone().add(wholeMonthDiff+1,'months');// linear across the month
	adjust=(b-anchor)/(anchor2-anchor);}//check for negative zero, return zero if negative zero
	return-(wholeMonthDiff+adjust)||0;}utils_hooks__hooks.defaultFormat='YYYY-MM-DDTHH:mm:ssZ';utils_hooks__hooks.defaultFormatUtc='YYYY-MM-DDTHH:mm:ss[Z]';function toString(){return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');}function moment_format__toISOString(){var m=this.clone().utc();if(0<m.year()&&m.year()<=9999){if(isFunction(Date.prototype.toISOString)){// native implementation is ~50x faster, use it when we can
	return this.toDate().toISOString();}else{return formatMoment(m,'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');}}else{return formatMoment(m,'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');}}function format(inputString){if(!inputString){inputString=this.isUtc()?utils_hooks__hooks.defaultFormatUtc:utils_hooks__hooks.defaultFormat;}var output=formatMoment(this,inputString);return this.localeData().postformat(output);}function from(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||local__createLocal(time).isValid())){return create__createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function fromNow(withoutSuffix){return this.from(local__createLocal(),withoutSuffix);}function to(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||local__createLocal(time).isValid())){return create__createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function toNow(withoutSuffix){return this.to(local__createLocal(),withoutSuffix);}// If passed a locale key, it will set the locale for this
	// instance.  Otherwise, it will return the locale configuration
	// variables for this instance.
	function locale(key){var newLocaleData;if(key===undefined){return this._locale._abbr;}else{newLocaleData=locale_locales__getLocale(key);if(newLocaleData!=null){this._locale=newLocaleData;}return this;}}var lang=deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',function(key){if(key===undefined){return this.localeData();}else{return this.locale(key);}});function localeData(){return this._locale;}function startOf(units){units=normalizeUnits(units);// the following switch intentionally omits break keywords
	// to utilize falling through the cases.
	switch(units){case'year':this.month(0);/* falls through */case'quarter':case'month':this.date(1);/* falls through */case'week':case'isoWeek':case'day':case'date':this.hours(0);/* falls through */case'hour':this.minutes(0);/* falls through */case'minute':this.seconds(0);/* falls through */case'second':this.milliseconds(0);}// weeks are a special case
	if(units==='week'){this.weekday(0);}if(units==='isoWeek'){this.isoWeekday(1);}// quarters are also special
	if(units==='quarter'){this.month(Math.floor(this.month()/3)*3);}return this;}function endOf(units){units=normalizeUnits(units);if(units===undefined||units==='millisecond'){return this;}// 'date' is an alias for 'day', so it should be considered as such.
	if(units==='date'){units='day';}return this.startOf(units).add(1,units==='isoWeek'?'week':units).subtract(1,'ms');}function to_type__valueOf(){return this._d.valueOf()-(this._offset||0)*60000;}function unix(){return Math.floor(this.valueOf()/1000);}function toDate(){return new Date(this.valueOf());}function toArray(){var m=this;return[m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()];}function toObject(){var m=this;return{years:m.year(),months:m.month(),date:m.date(),hours:m.hours(),minutes:m.minutes(),seconds:m.seconds(),milliseconds:m.milliseconds()};}function toJSON(){// new Date(NaN).toJSON() === null
	return this.isValid()?this.toISOString():null;}function moment_valid__isValid(){return valid__isValid(this);}function parsingFlags(){return extend({},getParsingFlags(this));}function invalidAt(){return getParsingFlags(this).overflow;}function creationData(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict};}// FORMATTING
	addFormatToken(0,['gg',2],0,function(){return this.weekYear()%100;});addFormatToken(0,['GG',2],0,function(){return this.isoWeekYear()%100;});function addWeekYearFormatToken(token,getter){addFormatToken(0,[token,token.length],0,getter);}addWeekYearFormatToken('gggg','weekYear');addWeekYearFormatToken('ggggg','weekYear');addWeekYearFormatToken('GGGG','isoWeekYear');addWeekYearFormatToken('GGGGG','isoWeekYear');// ALIASES
	addUnitAlias('weekYear','gg');addUnitAlias('isoWeekYear','GG');// PRIORITY
	addUnitPriority('weekYear',1);addUnitPriority('isoWeekYear',1);// PARSING
	addRegexToken('G',matchSigned);addRegexToken('g',matchSigned);addRegexToken('GG',match1to2,match2);addRegexToken('gg',match1to2,match2);addRegexToken('GGGG',match1to4,match4);addRegexToken('gggg',match1to4,match4);addRegexToken('GGGGG',match1to6,match6);addRegexToken('ggggg',match1to6,match6);addWeekParseToken(['gggg','ggggg','GGGG','GGGGG'],function(input,week,config,token){week[token.substr(0,2)]=toInt(input);});addWeekParseToken(['gg','GG'],function(input,week,config,token){week[token]=utils_hooks__hooks.parseTwoDigitYear(input);});// MOMENTS
	function getSetWeekYear(input){return getSetWeekYearHelper.call(this,input,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy);}function getSetISOWeekYear(input){return getSetWeekYearHelper.call(this,input,this.isoWeek(),this.isoWeekday(),1,4);}function getISOWeeksInYear(){return weeksInYear(this.year(),1,4);}function getWeeksInYear(){var weekInfo=this.localeData()._week;return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy);}function getSetWeekYearHelper(input,week,weekday,dow,doy){var weeksTarget;if(input==null){return weekOfYear(this,dow,doy).year;}else{weeksTarget=weeksInYear(input,dow,doy);if(week>weeksTarget){week=weeksTarget;}return setWeekAll.call(this,input,week,weekday,dow,doy);}}function setWeekAll(weekYear,week,weekday,dow,doy){var dayOfYearData=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),date=createUTCDate(dayOfYearData.year,0,dayOfYearData.dayOfYear);this.year(date.getUTCFullYear());this.month(date.getUTCMonth());this.date(date.getUTCDate());return this;}// FORMATTING
	addFormatToken('Q',0,'Qo','quarter');// ALIASES
	addUnitAlias('quarter','Q');// PRIORITY
	addUnitPriority('quarter',7);// PARSING
	addRegexToken('Q',match1);addParseToken('Q',function(input,array){array[MONTH]=(toInt(input)-1)*3;});// MOMENTS
	function getSetQuarter(input){return input==null?Math.ceil((this.month()+1)/3):this.month((input-1)*3+this.month()%3);}// FORMATTING
	addFormatToken('D',['DD',2],'Do','date');// ALIASES
	addUnitAlias('date','D');// PRIOROITY
	addUnitPriority('date',9);// PARSING
	addRegexToken('D',match1to2);addRegexToken('DD',match1to2,match2);addRegexToken('Do',function(isStrict,locale){return isStrict?locale._ordinalParse:locale._ordinalParseLenient;});addParseToken(['D','DD'],DATE);addParseToken('Do',function(input,array){array[DATE]=toInt(input.match(match1to2)[0],10);});// MOMENTS
	var getSetDayOfMonth=makeGetSet('Date',true);// FORMATTING
	addFormatToken('DDD',['DDDD',3],'DDDo','dayOfYear');// ALIASES
	addUnitAlias('dayOfYear','DDD');// PRIORITY
	addUnitPriority('dayOfYear',4);// PARSING
	addRegexToken('DDD',match1to3);addRegexToken('DDDD',match3);addParseToken(['DDD','DDDD'],function(input,array,config){config._dayOfYear=toInt(input);});// HELPERS
	// MOMENTS
	function getSetDayOfYear(input){var dayOfYear=Math.round((this.clone().startOf('day')-this.clone().startOf('year'))/864e5)+1;return input==null?dayOfYear:this.add(input-dayOfYear,'d');}// FORMATTING
	addFormatToken('m',['mm',2],0,'minute');// ALIASES
	addUnitAlias('minute','m');// PRIORITY
	addUnitPriority('minute',14);// PARSING
	addRegexToken('m',match1to2);addRegexToken('mm',match1to2,match2);addParseToken(['m','mm'],MINUTE);// MOMENTS
	var getSetMinute=makeGetSet('Minutes',false);// FORMATTING
	addFormatToken('s',['ss',2],0,'second');// ALIASES
	addUnitAlias('second','s');// PRIORITY
	addUnitPriority('second',15);// PARSING
	addRegexToken('s',match1to2);addRegexToken('ss',match1to2,match2);addParseToken(['s','ss'],SECOND);// MOMENTS
	var getSetSecond=makeGetSet('Seconds',false);// FORMATTING
	addFormatToken('S',0,0,function(){return~~(this.millisecond()/100);});addFormatToken(0,['SS',2],0,function(){return~~(this.millisecond()/10);});addFormatToken(0,['SSS',3],0,'millisecond');addFormatToken(0,['SSSS',4],0,function(){return this.millisecond()*10;});addFormatToken(0,['SSSSS',5],0,function(){return this.millisecond()*100;});addFormatToken(0,['SSSSSS',6],0,function(){return this.millisecond()*1000;});addFormatToken(0,['SSSSSSS',7],0,function(){return this.millisecond()*10000;});addFormatToken(0,['SSSSSSSS',8],0,function(){return this.millisecond()*100000;});addFormatToken(0,['SSSSSSSSS',9],0,function(){return this.millisecond()*1000000;});// ALIASES
	addUnitAlias('millisecond','ms');// PRIORITY
	addUnitPriority('millisecond',16);// PARSING
	addRegexToken('S',match1to3,match1);addRegexToken('SS',match1to3,match2);addRegexToken('SSS',match1to3,match3);var token;for(token='SSSS';token.length<=9;token+='S'){addRegexToken(token,matchUnsigned);}function parseMs(input,array){array[MILLISECOND]=toInt(('0.'+input)*1000);}for(token='S';token.length<=9;token+='S'){addParseToken(token,parseMs);}// MOMENTS
	var getSetMillisecond=makeGetSet('Milliseconds',false);// FORMATTING
	addFormatToken('z',0,0,'zoneAbbr');addFormatToken('zz',0,0,'zoneName');// MOMENTS
	function getZoneAbbr(){return this._isUTC?'UTC':'';}function getZoneName(){return this._isUTC?'Coordinated Universal Time':'';}var momentPrototype__proto=Moment.prototype;momentPrototype__proto.add=add_subtract__add;momentPrototype__proto.calendar=moment_calendar__calendar;momentPrototype__proto.clone=clone;momentPrototype__proto.diff=diff;momentPrototype__proto.endOf=endOf;momentPrototype__proto.format=format;momentPrototype__proto.from=from;momentPrototype__proto.fromNow=fromNow;momentPrototype__proto.to=to;momentPrototype__proto.toNow=toNow;momentPrototype__proto.get=stringGet;momentPrototype__proto.invalidAt=invalidAt;momentPrototype__proto.isAfter=isAfter;momentPrototype__proto.isBefore=isBefore;momentPrototype__proto.isBetween=isBetween;momentPrototype__proto.isSame=isSame;momentPrototype__proto.isSameOrAfter=isSameOrAfter;momentPrototype__proto.isSameOrBefore=isSameOrBefore;momentPrototype__proto.isValid=moment_valid__isValid;momentPrototype__proto.lang=lang;momentPrototype__proto.locale=locale;momentPrototype__proto.localeData=localeData;momentPrototype__proto.max=prototypeMax;momentPrototype__proto.min=prototypeMin;momentPrototype__proto.parsingFlags=parsingFlags;momentPrototype__proto.set=stringSet;momentPrototype__proto.startOf=startOf;momentPrototype__proto.subtract=add_subtract__subtract;momentPrototype__proto.toArray=toArray;momentPrototype__proto.toObject=toObject;momentPrototype__proto.toDate=toDate;momentPrototype__proto.toISOString=moment_format__toISOString;momentPrototype__proto.toJSON=toJSON;momentPrototype__proto.toString=toString;momentPrototype__proto.unix=unix;momentPrototype__proto.valueOf=to_type__valueOf;momentPrototype__proto.creationData=creationData;// Year
	momentPrototype__proto.year=getSetYear;momentPrototype__proto.isLeapYear=getIsLeapYear;// Week Year
	momentPrototype__proto.weekYear=getSetWeekYear;momentPrototype__proto.isoWeekYear=getSetISOWeekYear;// Quarter
	momentPrototype__proto.quarter=momentPrototype__proto.quarters=getSetQuarter;// Month
	momentPrototype__proto.month=getSetMonth;momentPrototype__proto.daysInMonth=getDaysInMonth;// Week
	momentPrototype__proto.week=momentPrototype__proto.weeks=getSetWeek;momentPrototype__proto.isoWeek=momentPrototype__proto.isoWeeks=getSetISOWeek;momentPrototype__proto.weeksInYear=getWeeksInYear;momentPrototype__proto.isoWeeksInYear=getISOWeeksInYear;// Day
	momentPrototype__proto.date=getSetDayOfMonth;momentPrototype__proto.day=momentPrototype__proto.days=getSetDayOfWeek;momentPrototype__proto.weekday=getSetLocaleDayOfWeek;momentPrototype__proto.isoWeekday=getSetISODayOfWeek;momentPrototype__proto.dayOfYear=getSetDayOfYear;// Hour
	momentPrototype__proto.hour=momentPrototype__proto.hours=getSetHour;// Minute
	momentPrototype__proto.minute=momentPrototype__proto.minutes=getSetMinute;// Second
	momentPrototype__proto.second=momentPrototype__proto.seconds=getSetSecond;// Millisecond
	momentPrototype__proto.millisecond=momentPrototype__proto.milliseconds=getSetMillisecond;// Offset
	momentPrototype__proto.utcOffset=getSetOffset;momentPrototype__proto.utc=setOffsetToUTC;momentPrototype__proto.local=setOffsetToLocal;momentPrototype__proto.parseZone=setOffsetToParsedOffset;momentPrototype__proto.hasAlignedHourOffset=hasAlignedHourOffset;momentPrototype__proto.isDST=isDaylightSavingTime;momentPrototype__proto.isLocal=isLocal;momentPrototype__proto.isUtcOffset=isUtcOffset;momentPrototype__proto.isUtc=isUtc;momentPrototype__proto.isUTC=isUtc;// Timezone
	momentPrototype__proto.zoneAbbr=getZoneAbbr;momentPrototype__proto.zoneName=getZoneName;// Deprecations
	momentPrototype__proto.dates=deprecate('dates accessor is deprecated. Use date instead.',getSetDayOfMonth);momentPrototype__proto.months=deprecate('months accessor is deprecated. Use month instead',getSetMonth);momentPrototype__proto.years=deprecate('years accessor is deprecated. Use year instead',getSetYear);momentPrototype__proto.zone=deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',getSetZone);momentPrototype__proto.isDSTShifted=deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',isDaylightSavingTimeShifted);var momentPrototype=momentPrototype__proto;function moment__createUnix(input){return local__createLocal(input*1000);}function moment__createInZone(){return local__createLocal.apply(null,arguments).parseZone();}function preParsePostFormat(string){return string;}var prototype__proto=Locale.prototype;prototype__proto.calendar=locale_calendar__calendar;prototype__proto.longDateFormat=longDateFormat;prototype__proto.invalidDate=invalidDate;prototype__proto.ordinal=ordinal;prototype__proto.preparse=preParsePostFormat;prototype__proto.postformat=preParsePostFormat;prototype__proto.relativeTime=relative__relativeTime;prototype__proto.pastFuture=pastFuture;prototype__proto.set=locale_set__set;// Month
	prototype__proto.months=localeMonths;prototype__proto.monthsShort=localeMonthsShort;prototype__proto.monthsParse=localeMonthsParse;prototype__proto.monthsRegex=monthsRegex;prototype__proto.monthsShortRegex=monthsShortRegex;// Week
	prototype__proto.week=localeWeek;prototype__proto.firstDayOfYear=localeFirstDayOfYear;prototype__proto.firstDayOfWeek=localeFirstDayOfWeek;// Day of Week
	prototype__proto.weekdays=localeWeekdays;prototype__proto.weekdaysMin=localeWeekdaysMin;prototype__proto.weekdaysShort=localeWeekdaysShort;prototype__proto.weekdaysParse=localeWeekdaysParse;prototype__proto.weekdaysRegex=weekdaysRegex;prototype__proto.weekdaysShortRegex=weekdaysShortRegex;prototype__proto.weekdaysMinRegex=weekdaysMinRegex;// Hours
	prototype__proto.isPM=localeIsPM;prototype__proto.meridiem=localeMeridiem;function lists__get(format,index,field,setter){var locale=locale_locales__getLocale();var utc=create_utc__createUTC().set(setter,index);return locale[field](utc,format);}function listMonthsImpl(format,index,field){if(typeof format==='number'){index=format;format=undefined;}format=format||'';if(index!=null){return lists__get(format,index,field,'month');}var i;var out=[];for(i=0;i<12;i++){out[i]=lists__get(format,i,field,'month');}return out;}// ()
	// (5)
	// (fmt, 5)
	// (fmt)
	// (true)
	// (true, 5)
	// (true, fmt, 5)
	// (true, fmt)
	function listWeekdaysImpl(localeSorted,format,index,field){if(typeof localeSorted==='boolean'){if(typeof format==='number'){index=format;format=undefined;}format=format||'';}else{format=localeSorted;index=format;localeSorted=false;if(typeof format==='number'){index=format;format=undefined;}format=format||'';}var locale=locale_locales__getLocale(),shift=localeSorted?locale._week.dow:0;if(index!=null){return lists__get(format,(index+shift)%7,field,'day');}var i;var out=[];for(i=0;i<7;i++){out[i]=lists__get(format,(i+shift)%7,field,'day');}return out;}function lists__listMonths(format,index){return listMonthsImpl(format,index,'months');}function lists__listMonthsShort(format,index){return listMonthsImpl(format,index,'monthsShort');}function lists__listWeekdays(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdays');}function lists__listWeekdaysShort(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysShort');}function lists__listWeekdaysMin(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysMin');}locale_locales__getSetGlobalLocale('en',{ordinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function ordinal(number){var b=number%10,output=toInt(number%100/10)===1?'th':b===1?'st':b===2?'nd':b===3?'rd':'th';return number+output;}});// Side effect imports
	utils_hooks__hooks.lang=deprecate('moment.lang is deprecated. Use moment.locale instead.',locale_locales__getSetGlobalLocale);utils_hooks__hooks.langData=deprecate('moment.langData is deprecated. Use moment.localeData instead.',locale_locales__getLocale);var mathAbs=Math.abs;function duration_abs__abs(){var data=this._data;this._milliseconds=mathAbs(this._milliseconds);this._days=mathAbs(this._days);this._months=mathAbs(this._months);data.milliseconds=mathAbs(data.milliseconds);data.seconds=mathAbs(data.seconds);data.minutes=mathAbs(data.minutes);data.hours=mathAbs(data.hours);data.months=mathAbs(data.months);data.years=mathAbs(data.years);return this;}function duration_add_subtract__addSubtract(duration,input,value,direction){var other=create__createDuration(input,value);duration._milliseconds+=direction*other._milliseconds;duration._days+=direction*other._days;duration._months+=direction*other._months;return duration._bubble();}// supports only 2.0-style add(1, 's') or add(duration)
	function duration_add_subtract__add(input,value){return duration_add_subtract__addSubtract(this,input,value,1);}// supports only 2.0-style subtract(1, 's') or subtract(duration)
	function duration_add_subtract__subtract(input,value){return duration_add_subtract__addSubtract(this,input,value,-1);}function absCeil(number){if(number<0){return Math.floor(number);}else{return Math.ceil(number);}}function bubble(){var milliseconds=this._milliseconds;var days=this._days;var months=this._months;var data=this._data;var seconds,minutes,hours,years,monthsFromDays;// if we have a mix of positive and negative values, bubble down first
	// check: https://github.com/moment/moment/issues/2166
	if(!(milliseconds>=0&&days>=0&&months>=0||milliseconds<=0&&days<=0&&months<=0)){milliseconds+=absCeil(monthsToDays(months)+days)*864e5;days=0;months=0;}// The following code bubbles up values, see the tests for
	// examples of what that means.
	data.milliseconds=milliseconds%1000;seconds=absFloor(milliseconds/1000);data.seconds=seconds%60;minutes=absFloor(seconds/60);data.minutes=minutes%60;hours=absFloor(minutes/60);data.hours=hours%24;days+=absFloor(hours/24);// convert days to months
	monthsFromDays=absFloor(daysToMonths(days));months+=monthsFromDays;days-=absCeil(monthsToDays(monthsFromDays));// 12 months -> 1 year
	years=absFloor(months/12);months%=12;data.days=days;data.months=months;data.years=years;return this;}function daysToMonths(days){// 400 years have 146097 days (taking into account leap year rules)
	// 400 years have 12 months === 4800
	return days*4800/146097;}function monthsToDays(months){// the reverse of daysToMonths
	return months*146097/4800;}function as(units){var days;var months;var milliseconds=this._milliseconds;units=normalizeUnits(units);if(units==='month'||units==='year'){days=this._days+milliseconds/864e5;months=this._months+daysToMonths(days);return units==='month'?months:months/12;}else{// handle milliseconds separately because of floating point math errors (issue #1867)
	days=this._days+Math.round(monthsToDays(this._months));switch(units){case'week':return days/7+milliseconds/6048e5;case'day':return days+milliseconds/864e5;case'hour':return days*24+milliseconds/36e5;case'minute':return days*1440+milliseconds/6e4;case'second':return days*86400+milliseconds/1000;// Math.floor prevents floating point math errors here
	case'millisecond':return Math.floor(days*864e5)+milliseconds;default:throw new Error('Unknown unit '+units);}}}// TODO: Use this.as('ms')?
	function duration_as__valueOf(){return this._milliseconds+this._days*864e5+this._months%12*2592e6+toInt(this._months/12)*31536e6;}function makeAs(alias){return function(){return this.as(alias);};}var asMilliseconds=makeAs('ms');var asSeconds=makeAs('s');var asMinutes=makeAs('m');var asHours=makeAs('h');var asDays=makeAs('d');var asWeeks=makeAs('w');var asMonths=makeAs('M');var asYears=makeAs('y');function duration_get__get(units){units=normalizeUnits(units);return this[units+'s']();}function makeGetter(name){return function(){return this._data[name];};}var milliseconds=makeGetter('milliseconds');var seconds=makeGetter('seconds');var minutes=makeGetter('minutes');var hours=makeGetter('hours');var days=makeGetter('days');var months=makeGetter('months');var years=makeGetter('years');function weeks(){return absFloor(this.days()/7);}var round=Math.round;var thresholds={s:45,// seconds to minute
	m:45,// minutes to hour
	h:22,// hours to day
	d:26,// days to month
	M:11// months to year
	};// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){return locale.relativeTime(number||1,!!withoutSuffix,string,isFuture);}function duration_humanize__relativeTime(posNegDuration,withoutSuffix,locale){var duration=create__createDuration(posNegDuration).abs();var seconds=round(duration.as('s'));var minutes=round(duration.as('m'));var hours=round(duration.as('h'));var days=round(duration.as('d'));var months=round(duration.as('M'));var years=round(duration.as('y'));var a=seconds<thresholds.s&&['s',seconds]||minutes<=1&&['m']||minutes<thresholds.m&&['mm',minutes]||hours<=1&&['h']||hours<thresholds.h&&['hh',hours]||days<=1&&['d']||days<thresholds.d&&['dd',days]||months<=1&&['M']||months<thresholds.M&&['MM',months]||years<=1&&['y']||['yy',years];a[2]=withoutSuffix;a[3]=+posNegDuration>0;a[4]=locale;return substituteTimeAgo.apply(null,a);}// This function allows you to set the rounding function for relative time strings
	function duration_humanize__getSetRelativeTimeRounding(roundingFunction){if(roundingFunction===undefined){return round;}if(typeof roundingFunction==='function'){round=roundingFunction;return true;}return false;}// This function allows you to set a threshold for relative time strings
	function duration_humanize__getSetRelativeTimeThreshold(threshold,limit){if(thresholds[threshold]===undefined){return false;}if(limit===undefined){return thresholds[threshold];}thresholds[threshold]=limit;return true;}function humanize(withSuffix){var locale=this.localeData();var output=duration_humanize__relativeTime(this,!withSuffix,locale);if(withSuffix){output=locale.pastFuture(+this,output);}return locale.postformat(output);}var iso_string__abs=Math.abs;function iso_string__toISOString(){// for ISO strings we do not use the normal bubbling rules:
	//  * milliseconds bubble up until they become hours
	//  * days do not bubble at all
	//  * months bubble up until they become years
	// This is because there is no context-free conversion between hours and days
	// (think of clock changes)
	// and also not between days and months (28-31 days per month)
	var seconds=iso_string__abs(this._milliseconds)/1000;var days=iso_string__abs(this._days);var months=iso_string__abs(this._months);var minutes,hours,years;// 3600 seconds -> 60 minutes -> 1 hour
	minutes=absFloor(seconds/60);hours=absFloor(minutes/60);seconds%=60;minutes%=60;// 12 months -> 1 year
	years=absFloor(months/12);months%=12;// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	var Y=years;var M=months;var D=days;var h=hours;var m=minutes;var s=seconds;var total=this.asSeconds();if(!total){// this is the same as C#'s (Noda) and python (isodate)...
	// but not other JS (goog.date)
	return'P0D';}return(total<0?'-':'')+'P'+(Y?Y+'Y':'')+(M?M+'M':'')+(D?D+'D':'')+(h||m||s?'T':'')+(h?h+'H':'')+(m?m+'M':'')+(s?s+'S':'');}var duration_prototype__proto=Duration.prototype;duration_prototype__proto.abs=duration_abs__abs;duration_prototype__proto.add=duration_add_subtract__add;duration_prototype__proto.subtract=duration_add_subtract__subtract;duration_prototype__proto.as=as;duration_prototype__proto.asMilliseconds=asMilliseconds;duration_prototype__proto.asSeconds=asSeconds;duration_prototype__proto.asMinutes=asMinutes;duration_prototype__proto.asHours=asHours;duration_prototype__proto.asDays=asDays;duration_prototype__proto.asWeeks=asWeeks;duration_prototype__proto.asMonths=asMonths;duration_prototype__proto.asYears=asYears;duration_prototype__proto.valueOf=duration_as__valueOf;duration_prototype__proto._bubble=bubble;duration_prototype__proto.get=duration_get__get;duration_prototype__proto.milliseconds=milliseconds;duration_prototype__proto.seconds=seconds;duration_prototype__proto.minutes=minutes;duration_prototype__proto.hours=hours;duration_prototype__proto.days=days;duration_prototype__proto.weeks=weeks;duration_prototype__proto.months=months;duration_prototype__proto.years=years;duration_prototype__proto.humanize=humanize;duration_prototype__proto.toISOString=iso_string__toISOString;duration_prototype__proto.toString=iso_string__toISOString;duration_prototype__proto.toJSON=iso_string__toISOString;duration_prototype__proto.locale=locale;duration_prototype__proto.localeData=localeData;// Deprecations
	duration_prototype__proto.toIsoString=deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',iso_string__toISOString);duration_prototype__proto.lang=lang;// Side effect imports
	// FORMATTING
	addFormatToken('X',0,0,'unix');addFormatToken('x',0,0,'valueOf');// PARSING
	addRegexToken('x',matchSigned);addRegexToken('X',matchTimestamp);addParseToken('X',function(input,array,config){config._d=new Date(parseFloat(input,10)*1000);});addParseToken('x',function(input,array,config){config._d=new Date(toInt(input));});// Side effect imports
	utils_hooks__hooks.version='2.15.1';setHookCallback(local__createLocal);utils_hooks__hooks.fn=momentPrototype;utils_hooks__hooks.min=min;utils_hooks__hooks.max=max;utils_hooks__hooks.now=now;utils_hooks__hooks.utc=create_utc__createUTC;utils_hooks__hooks.unix=moment__createUnix;utils_hooks__hooks.months=lists__listMonths;utils_hooks__hooks.isDate=isDate;utils_hooks__hooks.locale=locale_locales__getSetGlobalLocale;utils_hooks__hooks.invalid=valid__createInvalid;utils_hooks__hooks.duration=create__createDuration;utils_hooks__hooks.isMoment=isMoment;utils_hooks__hooks.weekdays=lists__listWeekdays;utils_hooks__hooks.parseZone=moment__createInZone;utils_hooks__hooks.localeData=locale_locales__getLocale;utils_hooks__hooks.isDuration=isDuration;utils_hooks__hooks.monthsShort=lists__listMonthsShort;utils_hooks__hooks.weekdaysMin=lists__listWeekdaysMin;utils_hooks__hooks.defineLocale=defineLocale;utils_hooks__hooks.updateLocale=updateLocale;utils_hooks__hooks.locales=locale_locales__listLocales;utils_hooks__hooks.weekdaysShort=lists__listWeekdaysShort;utils_hooks__hooks.normalizeUnits=normalizeUnits;utils_hooks__hooks.relativeTimeRounding=duration_humanize__getSetRelativeTimeRounding;utils_hooks__hooks.relativeTimeThreshold=duration_humanize__getSetRelativeTimeThreshold;utils_hooks__hooks.calendarFormat=getCalendarFormat;utils_hooks__hooks.prototype=momentPrototype;var _moment=utils_hooks__hooks;return _moment;});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(178)(module)))

/***/ },
/* 178 */
/***/ function(module, exports) {

	"use strict";

	module.exports = function (module) {
		if (!module.webpackPolyfill) {
			module.deprecate = function () {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	};

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./af": 180,
		"./af.js": 180,
		"./ar": 181,
		"./ar-ly": 182,
		"./ar-ly.js": 182,
		"./ar-ma": 183,
		"./ar-ma.js": 183,
		"./ar-sa": 184,
		"./ar-sa.js": 184,
		"./ar-tn": 185,
		"./ar-tn.js": 185,
		"./ar.js": 181,
		"./az": 186,
		"./az.js": 186,
		"./be": 187,
		"./be.js": 187,
		"./bg": 188,
		"./bg.js": 188,
		"./bn": 189,
		"./bn.js": 189,
		"./bo": 190,
		"./bo.js": 190,
		"./br": 191,
		"./br.js": 191,
		"./bs": 192,
		"./bs.js": 192,
		"./ca": 193,
		"./ca.js": 193,
		"./cs": 194,
		"./cs.js": 194,
		"./cv": 195,
		"./cv.js": 195,
		"./cy": 196,
		"./cy.js": 196,
		"./da": 197,
		"./da.js": 197,
		"./de": 198,
		"./de-at": 199,
		"./de-at.js": 199,
		"./de.js": 198,
		"./dv": 200,
		"./dv.js": 200,
		"./el": 201,
		"./el.js": 201,
		"./en-au": 202,
		"./en-au.js": 202,
		"./en-ca": 203,
		"./en-ca.js": 203,
		"./en-gb": 204,
		"./en-gb.js": 204,
		"./en-ie": 205,
		"./en-ie.js": 205,
		"./en-nz": 206,
		"./en-nz.js": 206,
		"./eo": 207,
		"./eo.js": 207,
		"./es": 208,
		"./es-do": 209,
		"./es-do.js": 209,
		"./es.js": 208,
		"./et": 210,
		"./et.js": 210,
		"./eu": 211,
		"./eu.js": 211,
		"./fa": 212,
		"./fa.js": 212,
		"./fi": 213,
		"./fi.js": 213,
		"./fo": 214,
		"./fo.js": 214,
		"./fr": 215,
		"./fr-ca": 216,
		"./fr-ca.js": 216,
		"./fr-ch": 217,
		"./fr-ch.js": 217,
		"./fr.js": 215,
		"./fy": 218,
		"./fy.js": 218,
		"./gd": 219,
		"./gd.js": 219,
		"./gl": 220,
		"./gl.js": 220,
		"./he": 221,
		"./he.js": 221,
		"./hi": 222,
		"./hi.js": 222,
		"./hr": 223,
		"./hr.js": 223,
		"./hu": 224,
		"./hu.js": 224,
		"./hy-am": 225,
		"./hy-am.js": 225,
		"./id": 226,
		"./id.js": 226,
		"./is": 227,
		"./is.js": 227,
		"./it": 228,
		"./it.js": 228,
		"./ja": 229,
		"./ja.js": 229,
		"./jv": 230,
		"./jv.js": 230,
		"./ka": 231,
		"./ka.js": 231,
		"./kk": 232,
		"./kk.js": 232,
		"./km": 233,
		"./km.js": 233,
		"./ko": 234,
		"./ko.js": 234,
		"./ky": 235,
		"./ky.js": 235,
		"./lb": 236,
		"./lb.js": 236,
		"./lo": 237,
		"./lo.js": 237,
		"./lt": 238,
		"./lt.js": 238,
		"./lv": 239,
		"./lv.js": 239,
		"./me": 240,
		"./me.js": 240,
		"./mi": 241,
		"./mi.js": 241,
		"./mk": 242,
		"./mk.js": 242,
		"./ml": 243,
		"./ml.js": 243,
		"./mr": 244,
		"./mr.js": 244,
		"./ms": 245,
		"./ms-my": 246,
		"./ms-my.js": 246,
		"./ms.js": 245,
		"./my": 247,
		"./my.js": 247,
		"./nb": 248,
		"./nb.js": 248,
		"./ne": 249,
		"./ne.js": 249,
		"./nl": 250,
		"./nl.js": 250,
		"./nn": 251,
		"./nn.js": 251,
		"./pa-in": 252,
		"./pa-in.js": 252,
		"./pl": 253,
		"./pl.js": 253,
		"./pt": 254,
		"./pt-br": 255,
		"./pt-br.js": 255,
		"./pt.js": 254,
		"./ro": 256,
		"./ro.js": 256,
		"./ru": 257,
		"./ru.js": 257,
		"./se": 258,
		"./se.js": 258,
		"./si": 259,
		"./si.js": 259,
		"./sk": 260,
		"./sk.js": 260,
		"./sl": 261,
		"./sl.js": 261,
		"./sq": 262,
		"./sq.js": 262,
		"./sr": 263,
		"./sr-cyrl": 264,
		"./sr-cyrl.js": 264,
		"./sr.js": 263,
		"./ss": 265,
		"./ss.js": 265,
		"./sv": 266,
		"./sv.js": 266,
		"./sw": 267,
		"./sw.js": 267,
		"./ta": 268,
		"./ta.js": 268,
		"./te": 269,
		"./te.js": 269,
		"./th": 270,
		"./th.js": 270,
		"./tl-ph": 271,
		"./tl-ph.js": 271,
		"./tlh": 272,
		"./tlh.js": 272,
		"./tr": 273,
		"./tr.js": 273,
		"./tzl": 274,
		"./tzl.js": 274,
		"./tzm": 275,
		"./tzm-latn": 276,
		"./tzm-latn.js": 276,
		"./tzm.js": 275,
		"./uk": 277,
		"./uk.js": 277,
		"./uz": 278,
		"./uz.js": 278,
		"./vi": 279,
		"./vi.js": 279,
		"./x-pseudo": 280,
		"./x-pseudo.js": 280,
		"./zh-cn": 281,
		"./zh-cn.js": 281,
		"./zh-hk": 282,
		"./zh-hk.js": 282,
		"./zh-tw": 283,
		"./zh-tw.js": 283
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 179;


/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Afrikaans [af]
	//! author : Werner Mollentze : https://github.com/wernerm

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var af = moment.defineLocale('af', {
	        months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
	        weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
	        weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
	        weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
	        meridiemParse: /vm|nm/i,
	        isPM: function isPM(input) {
	            return (/^nm$/i.test(input)
	            );
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'vm' : 'VM';
	            } else {
	                return isLower ? 'nm' : 'NM';
	            }
	        },
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Vandag om] LT',
	            nextDay: '[Môre om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[Gister om] LT',
	            lastWeek: '[Laas] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'oor %s',
	            past: '%s gelede',
	            s: '\'n paar sekondes',
	            m: '\'n minuut',
	            mm: '%d minute',
	            h: '\'n uur',
	            hh: '%d ure',
	            d: '\'n dag',
	            dd: '%d dae',
	            M: '\'n maand',
	            MM: '%d maande',
	            y: '\'n jaar',
	            yy: '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal: function ordinal(number) {
	            return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
	        },
	        week: {
	            dow: 1, // Maandag is die eerste dag van die week.
	            doy: 4 // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
	        }
	    });

	    return af;
	});

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Arabic [ar]
	//! author : Abdel Said: https://github.com/abdelsaid
	//! author : Ahmed Elkhatib
	//! author : forabi https://github.com/forabi

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    },
	        numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    },
	        pluralForm = function pluralForm(n) {
	        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	    },
	        plurals = {
	        s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	        m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	        h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	        d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	        M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	        y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	    },
	        pluralize = function pluralize(u) {
	        return function (number, withoutSuffix, string, isFuture) {
	            var f = pluralForm(number),
	                str = plurals[u][pluralForm(number)];
	            if (f === 2) {
	                str = str[withoutSuffix ? 0 : 1];
	            }
	            return str.replace(/%d/i, number);
	        };
	    },
	        months = ['كانون الثاني يناير', 'شباط فبراير', 'آذار مارس', 'نيسان أبريل', 'أيار مايو', 'حزيران يونيو', 'تموز يوليو', 'آب أغسطس', 'أيلول سبتمبر', 'تشرين الأول أكتوبر', 'تشرين الثاني نوفمبر', 'كانون الأول ديسمبر'];

	    var ar = moment.defineLocale('ar', {
	        months: months,
	        monthsShort: months,
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'D/\u200FM/\u200FYYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM: function isPM(input) {
	            return 'م' === input;
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar: {
	            sameDay: '[اليوم عند الساعة] LT',
	            nextDay: '[غدًا عند الساعة] LT',
	            nextWeek: 'dddd [عند الساعة] LT',
	            lastDay: '[أمس عند الساعة] LT',
	            lastWeek: 'dddd [عند الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'بعد %s',
	            past: 'منذ %s',
	            s: pluralize('s'),
	            m: pluralize('m'),
	            mm: pluralize('m'),
	            h: pluralize('h'),
	            hh: pluralize('h'),
	            d: pluralize('d'),
	            dd: pluralize('d'),
	            M: pluralize('M'),
	            MM: pluralize('M'),
	            y: pluralize('y'),
	            yy: pluralize('y')
	        },
	        preparse: function preparse(string) {
	            return string.replace(/\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week: {
	            dow: 6, // Saturday is the first day of the week.
	            doy: 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar;
	});

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Arabic (Lybia) [ar-ly]
	//! author : Ali Hmer: https://github.com/kikoanis

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var symbolMap = {
	        '1': '1',
	        '2': '2',
	        '3': '3',
	        '4': '4',
	        '5': '5',
	        '6': '6',
	        '7': '7',
	        '8': '8',
	        '9': '9',
	        '0': '0'
	    },
	        pluralForm = function pluralForm(n) {
	        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	    },
	        plurals = {
	        s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	        m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	        h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	        d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	        M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	        y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	    },
	        pluralize = function pluralize(u) {
	        return function (number, withoutSuffix, string, isFuture) {
	            var f = pluralForm(number),
	                str = plurals[u][pluralForm(number)];
	            if (f === 2) {
	                str = str[withoutSuffix ? 0 : 1];
	            }
	            return str.replace(/%d/i, number);
	        };
	    },
	        months = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];

	    var ar_ly = moment.defineLocale('ar-ly', {
	        months: months,
	        monthsShort: months,
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'D/\u200FM/\u200FYYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM: function isPM(input) {
	            return 'م' === input;
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar: {
	            sameDay: '[اليوم عند الساعة] LT',
	            nextDay: '[غدًا عند الساعة] LT',
	            nextWeek: 'dddd [عند الساعة] LT',
	            lastDay: '[أمس عند الساعة] LT',
	            lastWeek: 'dddd [عند الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'بعد %s',
	            past: 'منذ %s',
	            s: pluralize('s'),
	            m: pluralize('m'),
	            mm: pluralize('m'),
	            h: pluralize('h'),
	            hh: pluralize('h'),
	            d: pluralize('d'),
	            dd: pluralize('d'),
	            M: pluralize('M'),
	            MM: pluralize('M'),
	            y: pluralize('y'),
	            yy: pluralize('y')
	        },
	        preparse: function preparse(string) {
	            return string.replace(/\u200f/g, '').replace(/،/g, ',');
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week: {
	            dow: 6, // Saturday is the first day of the week.
	            doy: 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar_ly;
	});

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Arabic (Morocco) [ar-ma]
	//! author : ElFadili Yassine : https://github.com/ElFadiliY
	//! author : Abdel Said : https://github.com/abdelsaid

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var ar_ma = moment.defineLocale('ar-ma', {
	        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'في %s',
	            past: 'منذ %s',
	            s: 'ثوان',
	            m: 'دقيقة',
	            mm: '%d دقائق',
	            h: 'ساعة',
	            hh: '%d ساعات',
	            d: 'يوم',
	            dd: '%d أيام',
	            M: 'شهر',
	            MM: '%d أشهر',
	            y: 'سنة',
	            yy: '%d سنوات'
	        },
	        week: {
	            dow: 6, // Saturday is the first day of the week.
	            doy: 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar_ma;
	});

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Arabic (Saudi Arabia) [ar-sa]
	//! author : Suhail Alkowaileet : https://github.com/xsoh

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    },
	        numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    };

	    var ar_sa = moment.defineLocale('ar-sa', {
	        months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM: function isPM(input) {
	            return 'م' === input;
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar: {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'في %s',
	            past: 'منذ %s',
	            s: 'ثوان',
	            m: 'دقيقة',
	            mm: '%d دقائق',
	            h: 'ساعة',
	            hh: '%d ساعات',
	            d: 'يوم',
	            dd: '%d أيام',
	            M: 'شهر',
	            MM: '%d أشهر',
	            y: 'سنة',
	            yy: '%d سنوات'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week: {
	            dow: 6, // Saturday is the first day of the week.
	            doy: 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar_sa;
	});

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale  :  Arabic (Tunisia) [ar-tn]
	//! author : Nader Toukabri : https://github.com/naderio

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var ar_tn = moment.defineLocale('ar-tn', {
	        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'في %s',
	            past: 'منذ %s',
	            s: 'ثوان',
	            m: 'دقيقة',
	            mm: '%d دقائق',
	            h: 'ساعة',
	            hh: '%d ساعات',
	            d: 'يوم',
	            dd: '%d أيام',
	            M: 'شهر',
	            MM: '%d أشهر',
	            y: 'سنة',
	            yy: '%d سنوات'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ar_tn;
	});

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Azerbaijani [az]
	//! author : topchiyev : https://github.com/topchiyev

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var suffixes = {
	        1: '-inci',
	        5: '-inci',
	        8: '-inci',
	        70: '-inci',
	        80: '-inci',
	        2: '-nci',
	        7: '-nci',
	        20: '-nci',
	        50: '-nci',
	        3: '-üncü',
	        4: '-üncü',
	        100: '-üncü',
	        6: '-ncı',
	        9: '-uncu',
	        10: '-uncu',
	        30: '-uncu',
	        60: '-ıncı',
	        90: '-ıncı'
	    };

	    var az = moment.defineLocale('az', {
	        months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
	        monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
	        weekdays: 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
	        weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
	        weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[bugün saat] LT',
	            nextDay: '[sabah saat] LT',
	            nextWeek: '[gələn həftə] dddd [saat] LT',
	            lastDay: '[dünən] LT',
	            lastWeek: '[keçən həftə] dddd [saat] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s sonra',
	            past: '%s əvvəl',
	            s: 'birneçə saniyyə',
	            m: 'bir dəqiqə',
	            mm: '%d dəqiqə',
	            h: 'bir saat',
	            hh: '%d saat',
	            d: 'bir gün',
	            dd: '%d gün',
	            M: 'bir ay',
	            MM: '%d ay',
	            y: 'bir il',
	            yy: '%d il'
	        },
	        meridiemParse: /gecə|səhər|gündüz|axşam/,
	        isPM: function isPM(input) {
	            return (/^(gündüz|axşam)$/.test(input)
	            );
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'gecə';
	            } else if (hour < 12) {
	                return 'səhər';
	            } else if (hour < 17) {
	                return 'gündüz';
	            } else {
	                return 'axşam';
	            }
	        },
	        ordinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
	        ordinal: function ordinal(number) {
	            if (number === 0) {
	                // special case for zero
	                return number + '-ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return az;
	});

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Belarusian [be]
	//! author : Dmitry Demidov : https://github.com/demidov91
	//! author: Praleska: http://praleska.pro/
	//! Author : Menelion Elensúle : https://github.com/Oire

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
	            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
	            'dd': 'дзень_дні_дзён',
	            'MM': 'месяц_месяцы_месяцаў',
	            'yy': 'год_гады_гадоў'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвіліна' : 'хвіліну';
	        } else if (key === 'h') {
	            return withoutSuffix ? 'гадзіна' : 'гадзіну';
	        } else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }

	    var be = moment.defineLocale('be', {
	        months: {
	            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
	            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
	        },
	        monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
	        weekdays: {
	            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
	            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
	            isFormat: /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
	        },
	        weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY г.',
	            LLL: 'D MMMM YYYY г., HH:mm',
	            LLLL: 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar: {
	            sameDay: '[Сёння ў] LT',
	            nextDay: '[Заўтра ў] LT',
	            lastDay: '[Учора ў] LT',
	            nextWeek: function nextWeek() {
	                return '[У] dddd [ў] LT';
	            },
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[У мінулую] dddd [ў] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[У мінулы] dddd [ў] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'праз %s',
	            past: '%s таму',
	            s: 'некалькі секунд',
	            m: relativeTimeWithPlural,
	            mm: relativeTimeWithPlural,
	            h: relativeTimeWithPlural,
	            hh: relativeTimeWithPlural,
	            d: 'дзень',
	            dd: relativeTimeWithPlural,
	            M: 'месяц',
	            MM: relativeTimeWithPlural,
	            y: 'год',
	            yy: relativeTimeWithPlural
	        },
	        meridiemParse: /ночы|раніцы|дня|вечара/,
	        isPM: function isPM(input) {
	            return (/^(дня|вечара)$/.test(input)
	            );
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночы';
	            } else if (hour < 12) {
	                return 'раніцы';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечара';
	            }
	        },
	        ordinalParse: /\d{1,2}-(і|ы|га)/,
	        ordinal: function ordinal(number, period) {
	            switch (period) {
	                case 'M':
	                case 'd':
	                case 'DDD':
	                case 'w':
	                case 'W':
	                    return (number % 10 === 2 || number % 10 === 3) && number % 100 !== 12 && number % 100 !== 13 ? number + '-і' : number + '-ы';
	                case 'D':
	                    return number + '-га';
	                default:
	                    return number;
	            }
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return be;
	});

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Bulgarian [bg]
	//! author : Krasen Borisov : https://github.com/kraz

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var bg = moment.defineLocale('bg', {
	        months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
	        weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
	        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'D.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY H:mm',
	            LLLL: 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[Днес в] LT',
	            nextDay: '[Утре в] LT',
	            nextWeek: 'dddd [в] LT',
	            lastDay: '[Вчера в] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 6:
	                        return '[В изминалата] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[В изминалия] dddd [в] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'след %s',
	            past: 'преди %s',
	            s: 'няколко секунди',
	            m: 'минута',
	            mm: '%d минути',
	            h: 'час',
	            hh: '%d часа',
	            d: 'ден',
	            dd: '%d дни',
	            M: 'месец',
	            MM: '%d месеца',
	            y: 'година',
	            yy: '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal: function ordinal(number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bg;
	});

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Bengali [bn]
	//! author : Kaushik Gandhi : https://github.com/kaushikgandhi

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var symbolMap = {
	        '1': '১',
	        '2': '২',
	        '3': '৩',
	        '4': '৪',
	        '5': '৫',
	        '6': '৬',
	        '7': '৭',
	        '8': '৮',
	        '9': '৯',
	        '0': '০'
	    },
	        numberMap = {
	        '১': '1',
	        '২': '2',
	        '৩': '3',
	        '৪': '4',
	        '৫': '5',
	        '৬': '6',
	        '৭': '7',
	        '৮': '8',
	        '৯': '9',
	        '০': '0'
	    };

	    var bn = moment.defineLocale('bn', {
	        months: 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
	        monthsShort: 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
	        weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
	        weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
	        weekdaysMin: 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
	        longDateFormat: {
	            LT: 'A h:mm সময়',
	            LTS: 'A h:mm:ss সময়',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, A h:mm সময়',
	            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়'
	        },
	        calendar: {
	            sameDay: '[আজ] LT',
	            nextDay: '[আগামীকাল] LT',
	            nextWeek: 'dddd, LT',
	            lastDay: '[গতকাল] LT',
	            lastWeek: '[গত] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s পরে',
	            past: '%s আগে',
	            s: 'কয়েক সেকেন্ড',
	            m: 'এক মিনিট',
	            mm: '%d মিনিট',
	            h: 'এক ঘন্টা',
	            hh: '%d ঘন্টা',
	            d: 'এক দিন',
	            dd: '%d দিন',
	            M: 'এক মাস',
	            MM: '%d মাস',
	            y: 'এক বছর',
	            yy: '%d বছর'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'রাত' && hour >= 4 || meridiem === 'দুপুর' && hour < 5 || meridiem === 'বিকাল') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'রাত';
	            } else if (hour < 10) {
	                return 'সকাল';
	            } else if (hour < 17) {
	                return 'দুপুর';
	            } else if (hour < 20) {
	                return 'বিকাল';
	            } else {
	                return 'রাত';
	            }
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bn;
	});

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Tibetan [bo]
	//! author : Thupten N. Chakrishar : https://github.com/vajradog

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var symbolMap = {
	        '1': '༡',
	        '2': '༢',
	        '3': '༣',
	        '4': '༤',
	        '5': '༥',
	        '6': '༦',
	        '7': '༧',
	        '8': '༨',
	        '9': '༩',
	        '0': '༠'
	    },
	        numberMap = {
	        '༡': '1',
	        '༢': '2',
	        '༣': '3',
	        '༤': '4',
	        '༥': '5',
	        '༦': '6',
	        '༧': '7',
	        '༨': '8',
	        '༩': '9',
	        '༠': '0'
	    };

	    var bo = moment.defineLocale('bo', {
	        months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        monthsShort: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        weekdays: 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
	        weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        weekdaysMin: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        longDateFormat: {
	            LT: 'A h:mm',
	            LTS: 'A h:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, A h:mm',
	            LLLL: 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar: {
	            sameDay: '[དི་རིང] LT',
	            nextDay: '[སང་ཉིན] LT',
	            nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',
	            lastDay: '[ཁ་སང] LT',
	            lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s ལ་',
	            past: '%s སྔན་ལ',
	            s: 'ལམ་སང',
	            m: 'སྐར་མ་གཅིག',
	            mm: '%d སྐར་མ',
	            h: 'ཆུ་ཚོད་གཅིག',
	            hh: '%d ཆུ་ཚོད',
	            d: 'ཉིན་གཅིག',
	            dd: '%d ཉིན་',
	            M: 'ཟླ་བ་གཅིག',
	            MM: '%d ཟླ་བ',
	            y: 'ལོ་གཅིག',
	            yy: '%d ལོ'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'མཚན་མོ' && hour >= 4 || meridiem === 'ཉིན་གུང' && hour < 5 || meridiem === 'དགོང་དག') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'མཚན་མོ';
	            } else if (hour < 10) {
	                return 'ཞོགས་ཀས';
	            } else if (hour < 17) {
	                return 'ཉིན་གུང';
	            } else if (hour < 20) {
	                return 'དགོང་དག';
	            } else {
	                return 'མཚན་མོ';
	            }
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bo;
	});

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Breton [br]
	//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    function relativeTimeWithMutation(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'munutenn',
	            'MM': 'miz',
	            'dd': 'devezh'
	        };
	        return number + ' ' + mutation(format[key], number);
	    }
	    function specialMutationForYears(number) {
	        switch (lastNumber(number)) {
	            case 1:
	            case 3:
	            case 4:
	            case 5:
	            case 9:
	                return number + ' bloaz';
	            default:
	                return number + ' vloaz';
	        }
	    }
	    function lastNumber(number) {
	        if (number > 9) {
	            return lastNumber(number % 10);
	        }
	        return number;
	    }
	    function mutation(text, number) {
	        if (number === 2) {
	            return softMutation(text);
	        }
	        return text;
	    }
	    function softMutation(text) {
	        var mutationTable = {
	            'm': 'v',
	            'b': 'v',
	            'd': 'z'
	        };
	        if (mutationTable[text.charAt(0)] === undefined) {
	            return text;
	        }
	        return mutationTable[text.charAt(0)] + text.substring(1);
	    }

	    var br = moment.defineLocale('br', {
	        months: 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
	        monthsShort: 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
	        weekdays: 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
	        weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
	        weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'h[e]mm A',
	            LTS: 'h[e]mm:ss A',
	            L: 'DD/MM/YYYY',
	            LL: 'D [a viz] MMMM YYYY',
	            LLL: 'D [a viz] MMMM YYYY h[e]mm A',
	            LLLL: 'dddd, D [a viz] MMMM YYYY h[e]mm A'
	        },
	        calendar: {
	            sameDay: '[Hiziv da] LT',
	            nextDay: '[Warc\'hoazh da] LT',
	            nextWeek: 'dddd [da] LT',
	            lastDay: '[Dec\'h da] LT',
	            lastWeek: 'dddd [paset da] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'a-benn %s',
	            past: '%s \'zo',
	            s: 'un nebeud segondennoù',
	            m: 'ur vunutenn',
	            mm: relativeTimeWithMutation,
	            h: 'un eur',
	            hh: '%d eur',
	            d: 'un devezh',
	            dd: relativeTimeWithMutation,
	            M: 'ur miz',
	            MM: relativeTimeWithMutation,
	            y: 'ur bloaz',
	            yy: specialMutationForYears
	        },
	        ordinalParse: /\d{1,2}(añ|vet)/,
	        ordinal: function ordinal(number) {
	            var output = number === 1 ? 'añ' : 'vet';
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return br;
	});

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Bosnian [bs]
	//! author : Nedim Cholich : https://github.com/frontyard
	//! based on (hr) translation by Bojan Marković

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	            case 'm':
	                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	            case 'mm':
	                if (number === 1) {
	                    result += 'minuta';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'minute';
	                } else {
	                    result += 'minuta';
	                }
	                return result;
	            case 'h':
	                return withoutSuffix ? 'jedan sat' : 'jednog sata';
	            case 'hh':
	                if (number === 1) {
	                    result += 'sat';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'sata';
	                } else {
	                    result += 'sati';
	                }
	                return result;
	            case 'dd':
	                if (number === 1) {
	                    result += 'dan';
	                } else {
	                    result += 'dana';
	                }
	                return result;
	            case 'MM':
	                if (number === 1) {
	                    result += 'mjesec';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'mjeseca';
	                } else {
	                    result += 'mjeseci';
	                }
	                return result;
	            case 'yy':
	                if (number === 1) {
	                    result += 'godina';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'godine';
	                } else {
	                    result += 'godina';
	                }
	                return result;
	        }
	    }

	    var bs = moment.defineLocale('bs', {
	        months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',
	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedjelju] [u] LT';
	                    case 3:
	                        return '[u] [srijedu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay: '[jučer u] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                        return '[prošlu] dddd [u] LT';
	                    case 6:
	                        return '[prošle] [subote] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'za %s',
	            past: 'prije %s',
	            s: 'par sekundi',
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: 'dan',
	            dd: translate,
	            M: 'mjesec',
	            MM: translate,
	            y: 'godinu',
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bs;
	});

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Catalan [ca]
	//! author : Juan G. Hurtado : https://github.com/juanghurtado

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var ca = moment.defineLocale('ca', {
	        months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
	        monthsShort: 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
	        weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
	        weekdaysMin: 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY H:mm',
	            LLLL: 'dddd D MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: function sameDay() {
	                return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
	            },
	            nextDay: function nextDay() {
	                return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
	            },
	            nextWeek: function nextWeek() {
	                return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
	            },
	            lastDay: function lastDay() {
	                return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
	            },
	            lastWeek: function lastWeek() {
	                return '[el] dddd [passat a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'en %s',
	            past: 'fa %s',
	            s: 'uns segons',
	            m: 'un minut',
	            mm: '%d minuts',
	            h: 'una hora',
	            hh: '%d hores',
	            d: 'un dia',
	            dd: '%d dies',
	            M: 'un mes',
	            MM: '%d mesos',
	            y: 'un any',
	            yy: '%d anys'
	        },
	        ordinalParse: /\d{1,2}(r|n|t|è|a)/,
	        ordinal: function ordinal(number, period) {
	            var output = number === 1 ? 'r' : number === 2 ? 'n' : number === 3 ? 'r' : number === 4 ? 't' : 'è';
	            if (period === 'w' || period === 'W') {
	                output = 'a';
	            }
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ca;
	});

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Czech [cs]
	//! author : petrbela : https://github.com/petrbela

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
	        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
	    function plural(n) {
	        return n > 1 && n < 5 && ~~(n / 10) !== 1;
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':
	                // a few seconds / in a few seconds / a few seconds ago
	                return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';
	            case 'm':
	                // a minute / in a minute / a minute ago
	                return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';
	            case 'mm':
	                // 9 minutes / in 9 minutes / 9 minutes ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'minuty' : 'minut');
	                } else {
	                    return result + 'minutami';
	                }
	                break;
	            case 'h':
	                // an hour / in an hour / an hour ago
	                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
	            case 'hh':
	                // 9 hours / in 9 hours / 9 hours ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'hodiny' : 'hodin');
	                } else {
	                    return result + 'hodinami';
	                }
	                break;
	            case 'd':
	                // a day / in a day / a day ago
	                return withoutSuffix || isFuture ? 'den' : 'dnem';
	            case 'dd':
	                // 9 days / in 9 days / 9 days ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'dny' : 'dní');
	                } else {
	                    return result + 'dny';
	                }
	                break;
	            case 'M':
	                // a month / in a month / a month ago
	                return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';
	            case 'MM':
	                // 9 months / in 9 months / 9 months ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'měsíce' : 'měsíců');
	                } else {
	                    return result + 'měsíci';
	                }
	                break;
	            case 'y':
	                // a year / in a year / a year ago
	                return withoutSuffix || isFuture ? 'rok' : 'rokem';
	            case 'yy':
	                // 9 years / in 9 years / 9 years ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'roky' : 'let');
	                } else {
	                    return result + 'lety';
	                }
	                break;
	        }
	    }

	    var cs = moment.defineLocale('cs', {
	        months: months,
	        monthsShort: monthsShort,
	        monthsParse: function (months, monthsShort) {
	            var i,
	                _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        }(months, monthsShort),
	        shortMonthsParse: function (monthsShort) {
	            var i,
	                _shortMonthsParse = [];
	            for (i = 0; i < 12; i++) {
	                _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
	            }
	            return _shortMonthsParse;
	        }(monthsShort),
	        longMonthsParse: function (months) {
	            var i,
	                _longMonthsParse = [];
	            for (i = 0; i < 12; i++) {
	                _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
	            }
	            return _longMonthsParse;
	        }(months),
	        weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
	        weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),
	        weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd D. MMMM YYYY H:mm',
	            l: 'D. M. YYYY'
	        },
	        calendar: {
	            sameDay: '[dnes v] LT',
	            nextDay: '[zítra v] LT',
	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[v neděli v] LT';
	                    case 1:
	                    case 2:
	                        return '[v] dddd [v] LT';
	                    case 3:
	                        return '[ve středu v] LT';
	                    case 4:
	                        return '[ve čtvrtek v] LT';
	                    case 5:
	                        return '[v pátek v] LT';
	                    case 6:
	                        return '[v sobotu v] LT';
	                }
	            },
	            lastDay: '[včera v] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[minulou neděli v] LT';
	                    case 1:
	                    case 2:
	                        return '[minulé] dddd [v] LT';
	                    case 3:
	                        return '[minulou středu v] LT';
	                    case 4:
	                    case 5:
	                        return '[minulý] dddd [v] LT';
	                    case 6:
	                        return '[minulou sobotu v] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'za %s',
	            past: 'před %s',
	            s: translate,
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: translate,
	            dd: translate,
	            M: translate,
	            MM: translate,
	            y: translate,
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return cs;
	});

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Chuvash [cv]
	//! author : Anatoly Mironov : https://github.com/mirontoli

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var cv = moment.defineLocale('cv', {
	        months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
	        monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
	        weekdays: 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
	        weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
	        weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD-MM-YYYY',
	            LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
	            LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
	            LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
	        },
	        calendar: {
	            sameDay: '[Паян] LT [сехетре]',
	            nextDay: '[Ыран] LT [сехетре]',
	            lastDay: '[Ӗнер] LT [сехетре]',
	            nextWeek: '[Ҫитес] dddd LT [сехетре]',
	            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: function future(output) {
	                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
	                return output + affix;
	            },
	            past: '%s каялла',
	            s: 'пӗр-ик ҫеккунт',
	            m: 'пӗр минут',
	            mm: '%d минут',
	            h: 'пӗр сехет',
	            hh: '%d сехет',
	            d: 'пӗр кун',
	            dd: '%d кун',
	            M: 'пӗр уйӑх',
	            MM: '%d уйӑх',
	            y: 'пӗр ҫул',
	            yy: '%d ҫул'
	        },
	        ordinalParse: /\d{1,2}-мӗш/,
	        ordinal: '%d-мӗш',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return cv;
	});

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Welsh [cy]
	//! author : Robert Allen : https://github.com/robgallen
	//! author : https://github.com/ryangreaves

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var cy = moment.defineLocale('cy', {
	        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
	        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
	        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
	        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
	        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
	        weekdaysParseExact: true,
	        // time formats are the same as en-gb
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Heddiw am] LT',
	            nextDay: '[Yfory am] LT',
	            nextWeek: 'dddd [am] LT',
	            lastDay: '[Ddoe am] LT',
	            lastWeek: 'dddd [diwethaf am] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'mewn %s',
	            past: '%s yn ôl',
	            s: 'ychydig eiliadau',
	            m: 'munud',
	            mm: '%d munud',
	            h: 'awr',
	            hh: '%d awr',
	            d: 'diwrnod',
	            dd: '%d diwrnod',
	            M: 'mis',
	            MM: '%d mis',
	            y: 'blwyddyn',
	            yy: '%d flynedd'
	        },
	        ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
	        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
	        ordinal: function ordinal(number) {
	            var b = number,
	                output = '',
	                lookup = ['', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
	            'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
	            ];
	            if (b > 20) {
	                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
	                    output = 'fed'; // not 30ain, 70ain or 90ain
	                } else {
	                    output = 'ain';
	                }
	            } else if (b > 0) {
	                output = lookup[b];
	            }
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return cy;
	});

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Danish [da]
	//! author : Ulrik Nielsen : https://github.com/mrbase

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var da = moment.defineLocale('da', {
	        months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),
	        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY HH:mm',
	            LLLL: 'dddd [d.] D. MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[I dag kl.] LT',
	            nextDay: '[I morgen kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[I går kl.] LT',
	            lastWeek: '[sidste] dddd [kl] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'om %s',
	            past: '%s siden',
	            s: 'få sekunder',
	            m: 'et minut',
	            mm: '%d minutter',
	            h: 'en time',
	            hh: '%d timer',
	            d: 'en dag',
	            dd: '%d dage',
	            M: 'en måned',
	            MM: '%d måneder',
	            y: 'et år',
	            yy: '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return da;
	});

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : German [de]
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Mikolaj Dadela : https://github.com/mik01aj

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    var de = moment.defineLocale('de', {
	        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort: 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY HH:mm',
	            LLLL: 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime: {
	            future: 'in %s',
	            past: 'vor %s',
	            s: 'ein paar Sekunden',
	            m: processRelativeTime,
	            mm: '%d Minuten',
	            h: processRelativeTime,
	            hh: '%d Stunden',
	            d: processRelativeTime,
	            dd: processRelativeTime,
	            M: processRelativeTime,
	            MM: processRelativeTime,
	            y: processRelativeTime,
	            yy: processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return de;
	});

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : German (Austria) [de-at]
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Martin Groller : https://github.com/MadMG
	//! author : Mikolaj Dadela : https://github.com/mik01aj

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    var de_at = moment.defineLocale('de-at', {
	        months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort: 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY HH:mm',
	            LLLL: 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime: {
	            future: 'in %s',
	            past: 'vor %s',
	            s: 'ein paar Sekunden',
	            m: processRelativeTime,
	            mm: '%d Minuten',
	            h: processRelativeTime,
	            hh: '%d Stunden',
	            d: processRelativeTime,
	            dd: processRelativeTime,
	            M: processRelativeTime,
	            MM: processRelativeTime,
	            y: processRelativeTime,
	            yy: processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return de_at;
	});

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Maldivian [dv]
	//! author : Jawish Hameed : https://github.com/jawish

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var months = ['ޖެނުއަރީ', 'ފެބްރުއަރީ', 'މާރިޗު', 'އޭޕްރީލު', 'މޭ', 'ޖޫން', 'ޖުލައި', 'އޯގަސްޓު', 'ސެޕްޓެމްބަރު', 'އޮކްޓޯބަރު', 'ނޮވެމްބަރު', 'ޑިސެމްބަރު'],
	        weekdays = ['އާދިއްތަ', 'ހޯމަ', 'އަންގާރަ', 'ބުދަ', 'ބުރާސްފަތި', 'ހުކުރު', 'ހޮނިހިރު'];

	    var dv = moment.defineLocale('dv', {
	        months: months,
	        monthsShort: months,
	        weekdays: weekdays,
	        weekdaysShort: weekdays,
	        weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
	        longDateFormat: {

	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'D/M/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /މކ|މފ/,
	        isPM: function isPM(input) {
	            return 'މފ' === input;
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 12) {
	                return 'މކ';
	            } else {
	                return 'މފ';
	            }
	        },
	        calendar: {
	            sameDay: '[މިއަދު] LT',
	            nextDay: '[މާދަމާ] LT',
	            nextWeek: 'dddd LT',
	            lastDay: '[އިއްޔެ] LT',
	            lastWeek: '[ފާއިތުވި] dddd LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'ތެރޭގައި %s',
	            past: 'ކުރިން %s',
	            s: 'ސިކުންތުކޮޅެއް',
	            m: 'މިނިޓެއް',
	            mm: 'މިނިޓު %d',
	            h: 'ގަޑިއިރެއް',
	            hh: 'ގަޑިއިރު %d',
	            d: 'ދުވަހެއް',
	            dd: 'ދުވަސް %d',
	            M: 'މަހެއް',
	            MM: 'މަސް %d',
	            y: 'އަހަރެއް',
	            yy: 'އަހަރު %d'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/،/g, ',');
	        },
	        postformat: function postformat(string) {
	            return string.replace(/,/g, '،');
	        },
	        week: {
	            dow: 7, // Sunday is the first day of the week.
	            doy: 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return dv;
	});

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Greek [el]
	//! author : Aggelos Karalias : https://github.com/mehiel

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    function isFunction(input) {
	        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	    }

	    var el = moment.defineLocale('el', {
	        monthsNominativeEl: 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
	        monthsGenitiveEl: 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
	        months: function months(momentToFormat, format) {
	            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) {
	                // if there is a day number before 'MMMM'
	                return this._monthsGenitiveEl[momentToFormat.month()];
	            } else {
	                return this._monthsNominativeEl[momentToFormat.month()];
	            }
	        },
	        monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
	        weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
	        weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
	        weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'μμ' : 'ΜΜ';
	            } else {
	                return isLower ? 'πμ' : 'ΠΜ';
	            }
	        },
	        isPM: function isPM(input) {
	            return (input + '').toLowerCase()[0] === 'μ';
	        },
	        meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
	        longDateFormat: {
	            LT: 'h:mm A',
	            LTS: 'h:mm:ss A',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY h:mm A',
	            LLLL: 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendarEl: {
	            sameDay: '[Σήμερα {}] LT',
	            nextDay: '[Αύριο {}] LT',
	            nextWeek: 'dddd [{}] LT',
	            lastDay: '[Χθες {}] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 6:
	                        return '[το προηγούμενο] dddd [{}] LT';
	                    default:
	                        return '[την προηγούμενη] dddd [{}] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        calendar: function calendar(key, mom) {
	            var output = this._calendarEl[key],
	                hours = mom && mom.hours();
	            if (isFunction(output)) {
	                output = output.apply(mom);
	            }
	            return output.replace('{}', hours % 12 === 1 ? 'στη' : 'στις');
	        },
	        relativeTime: {
	            future: 'σε %s',
	            past: '%s πριν',
	            s: 'λίγα δευτερόλεπτα',
	            m: 'ένα λεπτό',
	            mm: '%d λεπτά',
	            h: 'μία ώρα',
	            hh: '%d ώρες',
	            d: 'μία μέρα',
	            dd: '%d μέρες',
	            M: 'ένας μήνας',
	            MM: '%d μήνες',
	            y: 'ένας χρόνος',
	            yy: '%d χρόνια'
	        },
	        ordinalParse: /\d{1,2}η/,
	        ordinal: '%dη',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4st is the first week of the year.
	        }
	    });

	    return el;
	});

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : English (Australia) [en-au]
	//! author : Jared Morse : https://github.com/jarcoal

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var en_au = moment.defineLocale('en-au', {
	        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'h:mm A',
	            LTS: 'h:mm:ss A',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY h:mm A',
	            LLLL: 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar: {
	            sameDay: '[Today at] LT',
	            nextDay: '[Tomorrow at] LT',
	            nextWeek: 'dddd [at] LT',
	            lastDay: '[Yesterday at] LT',
	            lastWeek: '[Last] dddd [at] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'in %s',
	            past: '%s ago',
	            s: 'a few seconds',
	            m: 'a minute',
	            mm: '%d minutes',
	            h: 'an hour',
	            hh: '%d hours',
	            d: 'a day',
	            dd: '%d days',
	            M: 'a month',
	            MM: '%d months',
	            y: 'a year',
	            yy: '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal: function ordinal(number) {
	            var b = number % 10,
	                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_au;
	});

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : English (Canada) [en-ca]
	//! author : Jonathan Abourbih : https://github.com/jonbca

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var en_ca = moment.defineLocale('en-ca', {
	        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'h:mm A',
	            LTS: 'h:mm:ss A',
	            L: 'YYYY-MM-DD',
	            LL: 'MMMM D, YYYY',
	            LLL: 'MMMM D, YYYY h:mm A',
	            LLLL: 'dddd, MMMM D, YYYY h:mm A'
	        },
	        calendar: {
	            sameDay: '[Today at] LT',
	            nextDay: '[Tomorrow at] LT',
	            nextWeek: 'dddd [at] LT',
	            lastDay: '[Yesterday at] LT',
	            lastWeek: '[Last] dddd [at] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'in %s',
	            past: '%s ago',
	            s: 'a few seconds',
	            m: 'a minute',
	            mm: '%d minutes',
	            h: 'an hour',
	            hh: '%d hours',
	            d: 'a day',
	            dd: '%d days',
	            M: 'a month',
	            MM: '%d months',
	            y: 'a year',
	            yy: '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal: function ordinal(number) {
	            var b = number % 10,
	                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
	            return number + output;
	        }
	    });

	    return en_ca;
	});

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : English (United Kingdom) [en-gb]
	//! author : Chris Gedrim : https://github.com/chrisgedrim

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var en_gb = moment.defineLocale('en-gb', {
	        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Today at] LT',
	            nextDay: '[Tomorrow at] LT',
	            nextWeek: 'dddd [at] LT',
	            lastDay: '[Yesterday at] LT',
	            lastWeek: '[Last] dddd [at] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'in %s',
	            past: '%s ago',
	            s: 'a few seconds',
	            m: 'a minute',
	            mm: '%d minutes',
	            h: 'an hour',
	            hh: '%d hours',
	            d: 'a day',
	            dd: '%d days',
	            M: 'a month',
	            MM: '%d months',
	            y: 'a year',
	            yy: '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal: function ordinal(number) {
	            var b = number % 10,
	                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_gb;
	});

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : English (Ireland) [en-ie]
	//! author : Chris Cartlidge : https://github.com/chriscartlidge

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var en_ie = moment.defineLocale('en-ie', {
	        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD-MM-YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Today at] LT',
	            nextDay: '[Tomorrow at] LT',
	            nextWeek: 'dddd [at] LT',
	            lastDay: '[Yesterday at] LT',
	            lastWeek: '[Last] dddd [at] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'in %s',
	            past: '%s ago',
	            s: 'a few seconds',
	            m: 'a minute',
	            mm: '%d minutes',
	            h: 'an hour',
	            hh: '%d hours',
	            d: 'a day',
	            dd: '%d days',
	            M: 'a month',
	            MM: '%d months',
	            y: 'a year',
	            yy: '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal: function ordinal(number) {
	            var b = number % 10,
	                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_ie;
	});

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : English (New Zealand) [en-nz]
	//! author : Luke McGregor : https://github.com/lukemcgregor

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var en_nz = moment.defineLocale('en-nz', {
	        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'h:mm A',
	            LTS: 'h:mm:ss A',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY h:mm A',
	            LLLL: 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar: {
	            sameDay: '[Today at] LT',
	            nextDay: '[Tomorrow at] LT',
	            nextWeek: 'dddd [at] LT',
	            lastDay: '[Yesterday at] LT',
	            lastWeek: '[Last] dddd [at] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'in %s',
	            past: '%s ago',
	            s: 'a few seconds',
	            m: 'a minute',
	            mm: '%d minutes',
	            h: 'an hour',
	            hh: '%d hours',
	            d: 'a day',
	            dd: '%d days',
	            M: 'a month',
	            MM: '%d months',
	            y: 'a year',
	            yy: '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal: function ordinal(number) {
	            var b = number % 10,
	                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_nz;
	});

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Esperanto [eo]
	//! author : Colin Dean : https://github.com/colindean
	//! komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.
	//!          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var eo = moment.defineLocale('eo', {
	        months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
	        weekdays: 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split('_'),
	        weekdaysShort: 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),
	        weekdaysMin: 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'YYYY-MM-DD',
	            LL: 'D[-an de] MMMM, YYYY',
	            LLL: 'D[-an de] MMMM, YYYY HH:mm',
	            LLLL: 'dddd, [la] D[-an de] MMMM, YYYY HH:mm'
	        },
	        meridiemParse: /[ap]\.t\.m/i,
	        isPM: function isPM(input) {
	            return input.charAt(0).toLowerCase() === 'p';
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'p.t.m.' : 'P.T.M.';
	            } else {
	                return isLower ? 'a.t.m.' : 'A.T.M.';
	            }
	        },
	        calendar: {
	            sameDay: '[Hodiaŭ je] LT',
	            nextDay: '[Morgaŭ je] LT',
	            nextWeek: 'dddd [je] LT',
	            lastDay: '[Hieraŭ je] LT',
	            lastWeek: '[pasinta] dddd [je] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'je %s',
	            past: 'antaŭ %s',
	            s: 'sekundoj',
	            m: 'minuto',
	            mm: '%d minutoj',
	            h: 'horo',
	            hh: '%d horoj',
	            d: 'tago', //ne 'diurno', ĉar estas uzita por proksimumo
	            dd: '%d tagoj',
	            M: 'monato',
	            MM: '%d monatoj',
	            y: 'jaro',
	            yy: '%d jaroj'
	        },
	        ordinalParse: /\d{1,2}a/,
	        ordinal: '%da',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return eo;
	});

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Spanish [es]
	//! author : Julio Napurí : https://github.com/julionc

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
	        _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

	    var es = moment.defineLocale('es', {
	        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	        monthsShort: function monthsShort(m, format) {
	            if (/-MMM-/.test(format)) {
	                return _monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        monthsParseExact: true,
	        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D [de] MMMM [de] YYYY',
	            LLL: 'D [de] MMMM [de] YYYY H:mm',
	            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'
	        },
	        calendar: {
	            sameDay: function sameDay() {
	                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            nextDay: function nextDay() {
	                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            nextWeek: function nextWeek() {
	                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            lastDay: function lastDay() {
	                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            lastWeek: function lastWeek() {
	                return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'en %s',
	            past: 'hace %s',
	            s: 'unos segundos',
	            m: 'un minuto',
	            mm: '%d minutos',
	            h: 'una hora',
	            hh: '%d horas',
	            d: 'un día',
	            dd: '%d días',
	            M: 'un mes',
	            MM: '%d meses',
	            y: 'un año',
	            yy: '%d años'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal: '%dº',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return es;
	});

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Spanish (Dominican Republic) [es-do]

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
	        _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

	    var es_do = moment.defineLocale('es-do', {
	        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	        monthsShort: function monthsShort(m, format) {
	            if (/-MMM-/.test(format)) {
	                return _monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        monthsParseExact: true,
	        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'h:mm A',
	            LTS: 'h:mm:ss A',
	            L: 'DD/MM/YYYY',
	            LL: 'D [de] MMMM [de] YYYY',
	            LLL: 'D [de] MMMM [de] YYYY h:mm A',
	            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'
	        },
	        calendar: {
	            sameDay: function sameDay() {
	                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            nextDay: function nextDay() {
	                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            nextWeek: function nextWeek() {
	                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            lastDay: function lastDay() {
	                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            lastWeek: function lastWeek() {
	                return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'en %s',
	            past: 'hace %s',
	            s: 'unos segundos',
	            m: 'un minuto',
	            mm: '%d minutos',
	            h: 'una hora',
	            hh: '%d horas',
	            d: 'un día',
	            dd: '%d días',
	            M: 'un mes',
	            MM: '%d meses',
	            y: 'un año',
	            yy: '%d años'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal: '%dº',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return es_do;
	});

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Estonian [et]
	//! author : Henry Kehlmann : https://github.com/madhenry
	//! improvements : Illimar Tambek : https://github.com/ragulka

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's': ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
	            'm': ['ühe minuti', 'üks minut'],
	            'mm': [number + ' minuti', number + ' minutit'],
	            'h': ['ühe tunni', 'tund aega', 'üks tund'],
	            'hh': [number + ' tunni', number + ' tundi'],
	            'd': ['ühe päeva', 'üks päev'],
	            'M': ['kuu aja', 'kuu aega', 'üks kuu'],
	            'MM': [number + ' kuu', number + ' kuud'],
	            'y': ['ühe aasta', 'aasta', 'üks aasta'],
	            'yy': [number + ' aasta', number + ' aastat']
	        };
	        if (withoutSuffix) {
	            return format[key][2] ? format[key][2] : format[key][1];
	        }
	        return isFuture ? format[key][0] : format[key][1];
	    }

	    var et = moment.defineLocale('et', {
	        months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
	        monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
	        weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
	        weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),
	        weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[Täna,] LT',
	            nextDay: '[Homme,] LT',
	            nextWeek: '[Järgmine] dddd LT',
	            lastDay: '[Eile,] LT',
	            lastWeek: '[Eelmine] dddd LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s pärast',
	            past: '%s tagasi',
	            s: processRelativeTime,
	            m: processRelativeTime,
	            mm: processRelativeTime,
	            h: processRelativeTime,
	            hh: processRelativeTime,
	            d: processRelativeTime,
	            dd: '%d päeva',
	            M: processRelativeTime,
	            MM: processRelativeTime,
	            y: processRelativeTime,
	            yy: processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return et;
	});

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Basque [eu]
	//! author : Eneko Illarramendi : https://github.com/eillarra

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var eu = moment.defineLocale('eu', {
	        months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
	        monthsShort: 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
	        weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),
	        weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'YYYY-MM-DD',
	            LL: 'YYYY[ko] MMMM[ren] D[a]',
	            LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',
	            LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
	            l: 'YYYY-M-D',
	            ll: 'YYYY[ko] MMM D[a]',
	            lll: 'YYYY[ko] MMM D[a] HH:mm',
	            llll: 'ddd, YYYY[ko] MMM D[a] HH:mm'
	        },
	        calendar: {
	            sameDay: '[gaur] LT[etan]',
	            nextDay: '[bihar] LT[etan]',
	            nextWeek: 'dddd LT[etan]',
	            lastDay: '[atzo] LT[etan]',
	            lastWeek: '[aurreko] dddd LT[etan]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s barru',
	            past: 'duela %s',
	            s: 'segundo batzuk',
	            m: 'minutu bat',
	            mm: '%d minutu',
	            h: 'ordu bat',
	            hh: '%d ordu',
	            d: 'egun bat',
	            dd: '%d egun',
	            M: 'hilabete bat',
	            MM: '%d hilabete',
	            y: 'urte bat',
	            yy: '%d urte'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return eu;
	});

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Persian [fa]
	//! author : Ebrahim Byagowi : https://github.com/ebraminio

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var symbolMap = {
	        '1': '۱',
	        '2': '۲',
	        '3': '۳',
	        '4': '۴',
	        '5': '۵',
	        '6': '۶',
	        '7': '۷',
	        '8': '۸',
	        '9': '۹',
	        '0': '۰'
	    },
	        numberMap = {
	        '۱': '1',
	        '۲': '2',
	        '۳': '3',
	        '۴': '4',
	        '۵': '5',
	        '۶': '6',
	        '۷': '7',
	        '۸': '8',
	        '۹': '9',
	        '۰': '0'
	    };

	    var fa = moment.defineLocale('fa', {
	        months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        weekdays: '\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647_\u062F\u0648\u0634\u0646\u0628\u0647_\u0633\u0647\u200C\u0634\u0646\u0628\u0647_\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647_\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647_\u062C\u0645\u0639\u0647_\u0634\u0646\u0628\u0647'.split('_'),
	        weekdaysShort: '\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647_\u062F\u0648\u0634\u0646\u0628\u0647_\u0633\u0647\u200C\u0634\u0646\u0628\u0647_\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647_\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647_\u062C\u0645\u0639\u0647_\u0634\u0646\u0628\u0647'.split('_'),
	        weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /قبل از ظهر|بعد از ظهر/,
	        isPM: function isPM(input) {
	            return (/بعد از ظهر/.test(input)
	            );
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 12) {
	                return 'قبل از ظهر';
	            } else {
	                return 'بعد از ظهر';
	            }
	        },
	        calendar: {
	            sameDay: '[امروز ساعت] LT',
	            nextDay: '[فردا ساعت] LT',
	            nextWeek: 'dddd [ساعت] LT',
	            lastDay: '[دیروز ساعت] LT',
	            lastWeek: 'dddd [پیش] [ساعت] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'در %s',
	            past: '%s پیش',
	            s: 'چندین ثانیه',
	            m: 'یک دقیقه',
	            mm: '%d دقیقه',
	            h: 'یک ساعت',
	            hh: '%d ساعت',
	            d: 'یک روز',
	            dd: '%d روز',
	            M: 'یک ماه',
	            MM: '%d ماه',
	            y: 'یک سال',
	            yy: '%d سال'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[۰-۹]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        ordinalParse: /\d{1,2}م/,
	        ordinal: '%dم',
	        week: {
	            dow: 6, // Saturday is the first day of the week.
	            doy: 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return fa;
	});

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Finnish [fi]
	//! author : Tarmo Aidantausta : https://github.com/bleadof

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
	        numbersFuture = ['nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden', numbersPast[7], numbersPast[8], numbersPast[9]];
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = '';
	        switch (key) {
	            case 's':
	                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
	            case 'm':
	                return isFuture ? 'minuutin' : 'minuutti';
	            case 'mm':
	                result = isFuture ? 'minuutin' : 'minuuttia';
	                break;
	            case 'h':
	                return isFuture ? 'tunnin' : 'tunti';
	            case 'hh':
	                result = isFuture ? 'tunnin' : 'tuntia';
	                break;
	            case 'd':
	                return isFuture ? 'päivän' : 'päivä';
	            case 'dd':
	                result = isFuture ? 'päivän' : 'päivää';
	                break;
	            case 'M':
	                return isFuture ? 'kuukauden' : 'kuukausi';
	            case 'MM':
	                result = isFuture ? 'kuukauden' : 'kuukautta';
	                break;
	            case 'y':
	                return isFuture ? 'vuoden' : 'vuosi';
	            case 'yy':
	                result = isFuture ? 'vuoden' : 'vuotta';
	                break;
	        }
	        result = verbalNumber(number, isFuture) + ' ' + result;
	        return result;
	    }
	    function verbalNumber(number, isFuture) {
	        return number < 10 ? isFuture ? numbersFuture[number] : numbersPast[number] : number;
	    }

	    var fi = moment.defineLocale('fi', {
	        months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
	        monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
	        weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
	        weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),
	        weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),
	        longDateFormat: {
	            LT: 'HH.mm',
	            LTS: 'HH.mm.ss',
	            L: 'DD.MM.YYYY',
	            LL: 'Do MMMM[ta] YYYY',
	            LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',
	            LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
	            l: 'D.M.YYYY',
	            ll: 'Do MMM YYYY',
	            lll: 'Do MMM YYYY, [klo] HH.mm',
	            llll: 'ddd, Do MMM YYYY, [klo] HH.mm'
	        },
	        calendar: {
	            sameDay: '[tänään] [klo] LT',
	            nextDay: '[huomenna] [klo] LT',
	            nextWeek: 'dddd [klo] LT',
	            lastDay: '[eilen] [klo] LT',
	            lastWeek: '[viime] dddd[na] [klo] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s päästä',
	            past: '%s sitten',
	            s: translate,
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: translate,
	            dd: translate,
	            M: translate,
	            MM: translate,
	            y: translate,
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fi;
	});

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Faroese [fo]
	//! author : Ragnar Johannesen : https://github.com/ragnar123

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var fo = moment.defineLocale('fo', {
	        months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays: 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
	        weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
	        weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D. MMMM, YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Í dag kl.] LT',
	            nextDay: '[Í morgin kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[Í gjár kl.] LT',
	            lastWeek: '[síðstu] dddd [kl] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'um %s',
	            past: '%s síðani',
	            s: 'fá sekund',
	            m: 'ein minutt',
	            mm: '%d minuttir',
	            h: 'ein tími',
	            hh: '%d tímar',
	            d: 'ein dagur',
	            dd: '%d dagar',
	            M: 'ein mánaði',
	            MM: '%d mánaðir',
	            y: 'eitt ár',
	            yy: '%d ár'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fo;
	});

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : French [fr]
	//! author : John Fischer : https://github.com/jfroffice

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var fr = moment.defineLocale('fr', {
	        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'dans %s',
	            past: 'il y a %s',
	            s: 'quelques secondes',
	            m: 'une minute',
	            mm: '%d minutes',
	            h: 'une heure',
	            hh: '%d heures',
	            d: 'un jour',
	            dd: '%d jours',
	            M: 'un mois',
	            MM: '%d mois',
	            y: 'un an',
	            yy: '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|)/,
	        ordinal: function ordinal(number) {
	            return number + (number === 1 ? 'er' : '');
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fr;
	});

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : French (Canada) [fr-ca]
	//! author : Jonathan Abourbih : https://github.com/jonbca

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var fr_ca = moment.defineLocale('fr-ca', {
	        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'YYYY-MM-DD',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'dans %s',
	            past: 'il y a %s',
	            s: 'quelques secondes',
	            m: 'une minute',
	            mm: '%d minutes',
	            h: 'une heure',
	            hh: '%d heures',
	            d: 'un jour',
	            dd: '%d jours',
	            M: 'un mois',
	            MM: '%d mois',
	            y: 'un an',
	            yy: '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|e)/,
	        ordinal: function ordinal(number) {
	            return number + (number === 1 ? 'er' : 'e');
	        }
	    });

	    return fr_ca;
	});

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : French (Switzerland) [fr-ch]
	//! author : Gaspard Bucher : https://github.com/gaspard

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var fr_ch = moment.defineLocale('fr-ch', {
	        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'dans %s',
	            past: 'il y a %s',
	            s: 'quelques secondes',
	            m: 'une minute',
	            mm: '%d minutes',
	            h: 'une heure',
	            hh: '%d heures',
	            d: 'un jour',
	            dd: '%d jours',
	            M: 'un mois',
	            MM: '%d mois',
	            y: 'un an',
	            yy: '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|e)/,
	        ordinal: function ordinal(number) {
	            return number + (number === 1 ? 'er' : 'e');
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fr_ch;
	});

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Frisian [fy]
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

	    var fy = moment.defineLocale('fy', {
	        months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
	        monthsShort: function monthsShort(m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        monthsParseExact: true,
	        weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
	        weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),
	        weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD-MM-YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[hjoed om] LT',
	            nextDay: '[moarn om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[juster om] LT',
	            lastWeek: '[ôfrûne] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'oer %s',
	            past: '%s lyn',
	            s: 'in pear sekonden',
	            m: 'ien minút',
	            mm: '%d minuten',
	            h: 'ien oere',
	            hh: '%d oeren',
	            d: 'ien dei',
	            dd: '%d dagen',
	            M: 'ien moanne',
	            MM: '%d moannen',
	            y: 'ien jier',
	            yy: '%d jierren'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal: function ordinal(number) {
	            return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de');
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fy;
	});

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Scottish Gaelic [gd]
	//! author : Jon Ashdown : https://github.com/jonashdown

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var months = ['Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'];

	    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

	    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

	    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

	    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

	    var gd = moment.defineLocale('gd', {
	        months: months,
	        monthsShort: monthsShort,
	        monthsParseExact: true,
	        weekdays: weekdays,
	        weekdaysShort: weekdaysShort,
	        weekdaysMin: weekdaysMin,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[An-diugh aig] LT',
	            nextDay: '[A-màireach aig] LT',
	            nextWeek: 'dddd [aig] LT',
	            lastDay: '[An-dè aig] LT',
	            lastWeek: 'dddd [seo chaidh] [aig] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'ann an %s',
	            past: 'bho chionn %s',
	            s: 'beagan diogan',
	            m: 'mionaid',
	            mm: '%d mionaidean',
	            h: 'uair',
	            hh: '%d uairean',
	            d: 'latha',
	            dd: '%d latha',
	            M: 'mìos',
	            MM: '%d mìosan',
	            y: 'bliadhna',
	            yy: '%d bliadhna'
	        },
	        ordinalParse: /\d{1,2}(d|na|mh)/,
	        ordinal: function ordinal(number) {
	            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return gd;
	});

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Galician [gl]
	//! author : Juan G. Hurtado : https://github.com/juanghurtado

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var gl = moment.defineLocale('gl', {
	        months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
	        monthsShort: 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
	        weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
	        weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D [de] MMMM [de] YYYY',
	            LLL: 'D [de] MMMM [de] YYYY H:mm',
	            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'
	        },
	        calendar: {
	            sameDay: function sameDay() {
	                return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
	            },
	            nextDay: function nextDay() {
	                return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
	            },
	            nextWeek: function nextWeek() {
	                return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';
	            },
	            lastDay: function lastDay() {
	                return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT';
	            },
	            lastWeek: function lastWeek() {
	                return '[o] dddd [pasado ' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: function future(str) {
	                if (str.indexOf('un') === 0) {
	                    return 'n' + str;
	                }
	                return 'en ' + str;
	            },
	            past: 'hai %s',
	            s: 'uns segundos',
	            m: 'un minuto',
	            mm: '%d minutos',
	            h: 'unha hora',
	            hh: '%d horas',
	            d: 'un día',
	            dd: '%d días',
	            M: 'un mes',
	            MM: '%d meses',
	            y: 'un ano',
	            yy: '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal: '%dº',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return gl;
	});

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Hebrew [he]
	//! author : Tomer Cohen : https://github.com/tomer
	//! author : Moshe Simantov : https://github.com/DevelopmentIL
	//! author : Tal Ater : https://github.com/TalAter

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var he = moment.defineLocale('he', {
	        months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
	        monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
	        weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
	        weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
	        weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D [ב]MMMM YYYY',
	            LLL: 'D [ב]MMMM YYYY HH:mm',
	            LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',
	            l: 'D/M/YYYY',
	            ll: 'D MMM YYYY',
	            lll: 'D MMM YYYY HH:mm',
	            llll: 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[היום ב־]LT',
	            nextDay: '[מחר ב־]LT',
	            nextWeek: 'dddd [בשעה] LT',
	            lastDay: '[אתמול ב־]LT',
	            lastWeek: '[ביום] dddd [האחרון בשעה] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'בעוד %s',
	            past: 'לפני %s',
	            s: 'מספר שניות',
	            m: 'דקה',
	            mm: '%d דקות',
	            h: 'שעה',
	            hh: function hh(number) {
	                if (number === 2) {
	                    return 'שעתיים';
	                }
	                return number + ' שעות';
	            },
	            d: 'יום',
	            dd: function dd(number) {
	                if (number === 2) {
	                    return 'יומיים';
	                }
	                return number + ' ימים';
	            },
	            M: 'חודש',
	            MM: function MM(number) {
	                if (number === 2) {
	                    return 'חודשיים';
	                }
	                return number + ' חודשים';
	            },
	            y: 'שנה',
	            yy: function yy(number) {
	                if (number === 2) {
	                    return 'שנתיים';
	                } else if (number % 10 === 0 && number !== 10) {
	                    return number + ' שנה';
	                }
	                return number + ' שנים';
	            }
	        },
	        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
	        isPM: function isPM(input) {
	            return (/^(אחה"צ|אחרי הצהריים|בערב)$/.test(input)
	            );
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 5) {
	                return 'לפנות בוקר';
	            } else if (hour < 10) {
	                return 'בבוקר';
	            } else if (hour < 12) {
	                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
	            } else if (hour < 18) {
	                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
	            } else {
	                return 'בערב';
	            }
	        }
	    });

	    return he;
	});

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Hindi [hi]
	//! author : Mayank Singhal : https://github.com/mayanksinghal

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	        numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var hi = moment.defineLocale('hi', {
	        months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
	        monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat: {
	            LT: 'A h:mm बजे',
	            LTS: 'A h:mm:ss बजे',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, A h:mm बजे',
	            LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'
	        },
	        calendar: {
	            sameDay: '[आज] LT',
	            nextDay: '[कल] LT',
	            nextWeek: 'dddd, LT',
	            lastDay: '[कल] LT',
	            lastWeek: '[पिछले] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s में',
	            past: '%s पहले',
	            s: 'कुछ ही क्षण',
	            m: 'एक मिनट',
	            mm: '%d मिनट',
	            h: 'एक घंटा',
	            hh: '%d घंटे',
	            d: 'एक दिन',
	            dd: '%d दिन',
	            M: 'एक महीने',
	            MM: '%d महीने',
	            y: 'एक वर्ष',
	            yy: '%d वर्ष'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
	        meridiemParse: /रात|सुबह|दोपहर|शाम/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सुबह') {
	                return hour;
	            } else if (meridiem === 'दोपहर') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'शाम') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात';
	            } else if (hour < 10) {
	                return 'सुबह';
	            } else if (hour < 17) {
	                return 'दोपहर';
	            } else if (hour < 20) {
	                return 'शाम';
	            } else {
	                return 'रात';
	            }
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hi;
	});

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Croatian [hr]
	//! author : Bojan Marković : https://github.com/bmarkovic

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	            case 'm':
	                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	            case 'mm':
	                if (number === 1) {
	                    result += 'minuta';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'minute';
	                } else {
	                    result += 'minuta';
	                }
	                return result;
	            case 'h':
	                return withoutSuffix ? 'jedan sat' : 'jednog sata';
	            case 'hh':
	                if (number === 1) {
	                    result += 'sat';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'sata';
	                } else {
	                    result += 'sati';
	                }
	                return result;
	            case 'dd':
	                if (number === 1) {
	                    result += 'dan';
	                } else {
	                    result += 'dana';
	                }
	                return result;
	            case 'MM':
	                if (number === 1) {
	                    result += 'mjesec';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'mjeseca';
	                } else {
	                    result += 'mjeseci';
	                }
	                return result;
	            case 'yy':
	                if (number === 1) {
	                    result += 'godina';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'godine';
	                } else {
	                    result += 'godina';
	                }
	                return result;
	        }
	    }

	    var hr = moment.defineLocale('hr', {
	        months: {
	            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
	            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
	        },
	        monthsShort: 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',
	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedjelju] [u] LT';
	                    case 3:
	                        return '[u] [srijedu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay: '[jučer u] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                        return '[prošlu] dddd [u] LT';
	                    case 6:
	                        return '[prošle] [subote] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'za %s',
	            past: 'prije %s',
	            s: 'par sekundi',
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: 'dan',
	            dd: translate,
	            M: 'mjesec',
	            MM: translate,
	            y: 'godinu',
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hr;
	});

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Hungarian [hu]
	//! author : Adam Brunner : https://github.com/adambrunner

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
	    function translate(number, withoutSuffix, key, isFuture) {
	        var num = number,
	            suffix;
	        switch (key) {
	            case 's':
	                return isFuture || withoutSuffix ? 'néhány másodperc' : 'néhány másodperce';
	            case 'm':
	                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
	            case 'mm':
	                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
	            case 'h':
	                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
	            case 'hh':
	                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
	            case 'd':
	                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
	            case 'dd':
	                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
	            case 'M':
	                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	            case 'MM':
	                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	            case 'y':
	                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
	            case 'yy':
	                return num + (isFuture || withoutSuffix ? ' év' : ' éve');
	        }
	        return '';
	    }
	    function week(isFuture) {
	        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
	    }

	    var hu = moment.defineLocale('hu', {
	        months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
	        monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
	        weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
	        weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
	        weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'YYYY.MM.DD.',
	            LL: 'YYYY. MMMM D.',
	            LLL: 'YYYY. MMMM D. H:mm',
	            LLLL: 'YYYY. MMMM D., dddd H:mm'
	        },
	        meridiemParse: /de|du/i,
	        isPM: function isPM(input) {
	            return input.charAt(1).toLowerCase() === 'u';
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower === true ? 'de' : 'DE';
	            } else {
	                return isLower === true ? 'du' : 'DU';
	            }
	        },
	        calendar: {
	            sameDay: '[ma] LT[-kor]',
	            nextDay: '[holnap] LT[-kor]',
	            nextWeek: function nextWeek() {
	                return week.call(this, true);
	            },
	            lastDay: '[tegnap] LT[-kor]',
	            lastWeek: function lastWeek() {
	                return week.call(this, false);
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s múlva',
	            past: '%s',
	            s: translate,
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: translate,
	            dd: translate,
	            M: translate,
	            MM: translate,
	            y: translate,
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hu;
	});

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Armenian [hy-am]
	//! author : Armendarabyan : https://github.com/armendarabyan

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var hy_am = moment.defineLocale('hy-am', {
	        months: {
	            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
	            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
	        },
	        monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
	        weekdays: 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
	        weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY թ.',
	            LLL: 'D MMMM YYYY թ., HH:mm',
	            LLLL: 'dddd, D MMMM YYYY թ., HH:mm'
	        },
	        calendar: {
	            sameDay: '[այսօր] LT',
	            nextDay: '[վաղը] LT',
	            lastDay: '[երեկ] LT',
	            nextWeek: function nextWeek() {
	                return 'dddd [օրը ժամը] LT';
	            },
	            lastWeek: function lastWeek() {
	                return '[անցած] dddd [օրը ժամը] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s հետո',
	            past: '%s առաջ',
	            s: 'մի քանի վայրկյան',
	            m: 'րոպե',
	            mm: '%d րոպե',
	            h: 'ժամ',
	            hh: '%d ժամ',
	            d: 'օր',
	            dd: '%d օր',
	            M: 'ամիս',
	            MM: '%d ամիս',
	            y: 'տարի',
	            yy: '%d տարի'
	        },
	        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
	        isPM: function isPM(input) {
	            return (/^(ցերեկվա|երեկոյան)$/.test(input)
	            );
	        },
	        meridiem: function meridiem(hour) {
	            if (hour < 4) {
	                return 'գիշերվա';
	            } else if (hour < 12) {
	                return 'առավոտվա';
	            } else if (hour < 17) {
	                return 'ցերեկվա';
	            } else {
	                return 'երեկոյան';
	            }
	        },
	        ordinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
	        ordinal: function ordinal(number, period) {
	            switch (period) {
	                case 'DDD':
	                case 'w':
	                case 'W':
	                case 'DDDo':
	                    if (number === 1) {
	                        return number + '-ին';
	                    }
	                    return number + '-րդ';
	                default:
	                    return number;
	            }
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hy_am;
	});

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Indonesian [id]
	//! author : Mohammad Satrio Utomo : https://github.com/tyok
	//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var id = moment.defineLocale('id', {
	        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
	        weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
	        weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
	        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat: {
	            LT: 'HH.mm',
	            LTS: 'HH.mm.ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY [pukul] HH.mm',
	            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|siang|sore|malam/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'siang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sore' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'siang';
	            } else if (hours < 19) {
	                return 'sore';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar: {
	            sameDay: '[Hari ini pukul] LT',
	            nextDay: '[Besok pukul] LT',
	            nextWeek: 'dddd [pukul] LT',
	            lastDay: '[Kemarin pukul] LT',
	            lastWeek: 'dddd [lalu pukul] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'dalam %s',
	            past: '%s yang lalu',
	            s: 'beberapa detik',
	            m: 'semenit',
	            mm: '%d menit',
	            h: 'sejam',
	            hh: '%d jam',
	            d: 'sehari',
	            dd: '%d hari',
	            M: 'sebulan',
	            MM: '%d bulan',
	            y: 'setahun',
	            yy: '%d tahun'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return id;
	});

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Icelandic [is]
	//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    function plural(n) {
	        if (n % 100 === 11) {
	            return true;
	        } else if (n % 10 === 1) {
	            return false;
	        }
	        return true;
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':
	                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
	            case 'm':
	                return withoutSuffix ? 'mínúta' : 'mínútu';
	            case 'mm':
	                if (plural(number)) {
	                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
	                } else if (withoutSuffix) {
	                    return result + 'mínúta';
	                }
	                return result + 'mínútu';
	            case 'hh':
	                if (plural(number)) {
	                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
	                }
	                return result + 'klukkustund';
	            case 'd':
	                if (withoutSuffix) {
	                    return 'dagur';
	                }
	                return isFuture ? 'dag' : 'degi';
	            case 'dd':
	                if (plural(number)) {
	                    if (withoutSuffix) {
	                        return result + 'dagar';
	                    }
	                    return result + (isFuture ? 'daga' : 'dögum');
	                } else if (withoutSuffix) {
	                    return result + 'dagur';
	                }
	                return result + (isFuture ? 'dag' : 'degi');
	            case 'M':
	                if (withoutSuffix) {
	                    return 'mánuður';
	                }
	                return isFuture ? 'mánuð' : 'mánuði';
	            case 'MM':
	                if (plural(number)) {
	                    if (withoutSuffix) {
	                        return result + 'mánuðir';
	                    }
	                    return result + (isFuture ? 'mánuði' : 'mánuðum');
	                } else if (withoutSuffix) {
	                    return result + 'mánuður';
	                }
	                return result + (isFuture ? 'mánuð' : 'mánuði');
	            case 'y':
	                return withoutSuffix || isFuture ? 'ár' : 'ári';
	            case 'yy':
	                if (plural(number)) {
	                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
	                }
	                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
	        }
	    }

	    var is = moment.defineLocale('is', {
	        months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
	        weekdays: 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
	        weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
	        weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY [kl.] H:mm',
	            LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm'
	        },
	        calendar: {
	            sameDay: '[í dag kl.] LT',
	            nextDay: '[á morgun kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[í gær kl.] LT',
	            lastWeek: '[síðasta] dddd [kl.] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'eftir %s',
	            past: 'fyrir %s síðan',
	            s: translate,
	            m: translate,
	            mm: translate,
	            h: 'klukkustund',
	            hh: translate,
	            d: translate,
	            dd: translate,
	            M: translate,
	            MM: translate,
	            y: translate,
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return is;
	});

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Italian [it]
	//! author : Lorenzo : https://github.com/aliem
	//! author: Mattia Larentis: https://github.com/nostalgiaz

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var it = moment.defineLocale('it', {
	        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	        weekdays: 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),
	        weekdaysShort: 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),
	        weekdaysMin: 'Do_Lu_Ma_Me_Gi_Ve_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Oggi alle] LT',
	            nextDay: '[Domani alle] LT',
	            nextWeek: 'dddd [alle] LT',
	            lastDay: '[Ieri alle] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[la scorsa] dddd [alle] LT';
	                    default:
	                        return '[lo scorso] dddd [alle] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: function future(s) {
	                return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s;
	            },
	            past: '%s fa',
	            s: 'alcuni secondi',
	            m: 'un minuto',
	            mm: '%d minuti',
	            h: 'un\'ora',
	            hh: '%d ore',
	            d: 'un giorno',
	            dd: '%d giorni',
	            M: 'un mese',
	            MM: '%d mesi',
	            y: 'un anno',
	            yy: '%d anni'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal: '%dº',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return it;
	});

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Japanese [ja]
	//! author : LI Long : https://github.com/baryon

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var ja = moment.defineLocale('ja', {
	        months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
	        weekdaysShort: '日_月_火_水_木_金_土'.split('_'),
	        weekdaysMin: '日_月_火_水_木_金_土'.split('_'),
	        longDateFormat: {
	            LT: 'Ah時m分',
	            LTS: 'Ah時m分s秒',
	            L: 'YYYY/MM/DD',
	            LL: 'YYYY年M月D日',
	            LLL: 'YYYY年M月D日Ah時m分',
	            LLLL: 'YYYY年M月D日Ah時m分 dddd'
	        },
	        meridiemParse: /午前|午後/i,
	        isPM: function isPM(input) {
	            return input === '午後';
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 12) {
	                return '午前';
	            } else {
	                return '午後';
	            }
	        },
	        calendar: {
	            sameDay: '[今日] LT',
	            nextDay: '[明日] LT',
	            nextWeek: '[来週]dddd LT',
	            lastDay: '[昨日] LT',
	            lastWeek: '[前週]dddd LT',
	            sameElse: 'L'
	        },
	        ordinalParse: /\d{1,2}日/,
	        ordinal: function ordinal(number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + '日';
	                default:
	                    return number;
	            }
	        },
	        relativeTime: {
	            future: '%s後',
	            past: '%s前',
	            s: '数秒',
	            m: '1分',
	            mm: '%d分',
	            h: '1時間',
	            hh: '%d時間',
	            d: '1日',
	            dd: '%d日',
	            M: '1ヶ月',
	            MM: '%dヶ月',
	            y: '1年',
	            yy: '%d年'
	        }
	    });

	    return ja;
	});

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Japanese [jv]
	//! author : Rony Lantip : https://github.com/lantip
	//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var jv = moment.defineLocale('jv', {
	        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
	        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
	        weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
	        weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
	        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
	        longDateFormat: {
	            LT: 'HH.mm',
	            LTS: 'HH.mm.ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY [pukul] HH.mm',
	            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /enjing|siyang|sonten|ndalu/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'enjing') {
	                return hour;
	            } else if (meridiem === 'siyang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'enjing';
	            } else if (hours < 15) {
	                return 'siyang';
	            } else if (hours < 19) {
	                return 'sonten';
	            } else {
	                return 'ndalu';
	            }
	        },
	        calendar: {
	            sameDay: '[Dinten puniko pukul] LT',
	            nextDay: '[Mbenjang pukul] LT',
	            nextWeek: 'dddd [pukul] LT',
	            lastDay: '[Kala wingi pukul] LT',
	            lastWeek: 'dddd [kepengker pukul] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'wonten ing %s',
	            past: '%s ingkang kepengker',
	            s: 'sawetawis detik',
	            m: 'setunggal menit',
	            mm: '%d menit',
	            h: 'setunggal jam',
	            hh: '%d jam',
	            d: 'sedinten',
	            dd: '%d dinten',
	            M: 'sewulan',
	            MM: '%d wulan',
	            y: 'setaun',
	            yy: '%d taun'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return jv;
	});

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Georgian [ka]
	//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var ka = moment.defineLocale('ka', {
	        months: {
	            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
	            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
	        },
	        monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
	        weekdays: {
	            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
	            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
	            isFormat: /(წინა|შემდეგ)/
	        },
	        weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
	        weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
	        longDateFormat: {
	            LT: 'h:mm A',
	            LTS: 'h:mm:ss A',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY h:mm A',
	            LLLL: 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar: {
	            sameDay: '[დღეს] LT[-ზე]',
	            nextDay: '[ხვალ] LT[-ზე]',
	            lastDay: '[გუშინ] LT[-ზე]',
	            nextWeek: '[შემდეგ] dddd LT[-ზე]',
	            lastWeek: '[წინა] dddd LT-ზე',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: function future(s) {
	                return (/(წამი|წუთი|საათი|წელი)/.test(s) ? s.replace(/ი$/, 'ში') : s + 'ში'
	                );
	            },
	            past: function past(s) {
	                if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {
	                    return s.replace(/(ი|ე)$/, 'ის წინ');
	                }
	                if (/წელი/.test(s)) {
	                    return s.replace(/წელი$/, 'წლის წინ');
	                }
	            },
	            s: 'რამდენიმე წამი',
	            m: 'წუთი',
	            mm: '%d წუთი',
	            h: 'საათი',
	            hh: '%d საათი',
	            d: 'დღე',
	            dd: '%d დღე',
	            M: 'თვე',
	            MM: '%d თვე',
	            y: 'წელი',
	            yy: '%d წელი'
	        },
	        ordinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
	        ordinal: function ordinal(number) {
	            if (number === 0) {
	                return number;
	            }
	            if (number === 1) {
	                return number + '-ლი';
	            }
	            if (number < 20 || number <= 100 && number % 20 === 0 || number % 100 === 0) {
	                return 'მე-' + number;
	            }
	            return number + '-ე';
	        },
	        week: {
	            dow: 1,
	            doy: 7
	        }
	    });

	    return ka;
	});

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Kazakh [kk]
	//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var suffixes = {
	        0: '-ші',
	        1: '-ші',
	        2: '-ші',
	        3: '-ші',
	        4: '-ші',
	        5: '-ші',
	        6: '-шы',
	        7: '-ші',
	        8: '-ші',
	        9: '-шы',
	        10: '-шы',
	        20: '-шы',
	        30: '-шы',
	        40: '-шы',
	        50: '-ші',
	        60: '-шы',
	        70: '-ші',
	        80: '-ші',
	        90: '-шы',
	        100: '-ші'
	    };

	    var kk = moment.defineLocale('kk', {
	        months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
	        monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
	        weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
	        weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
	        weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Бүгін сағат] LT',
	            nextDay: '[Ертең сағат] LT',
	            nextWeek: 'dddd [сағат] LT',
	            lastDay: '[Кеше сағат] LT',
	            lastWeek: '[Өткен аптаның] dddd [сағат] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s ішінде',
	            past: '%s бұрын',
	            s: 'бірнеше секунд',
	            m: 'бір минут',
	            mm: '%d минут',
	            h: 'бір сағат',
	            hh: '%d сағат',
	            d: 'бір күн',
	            dd: '%d күн',
	            M: 'бір ай',
	            MM: '%d ай',
	            y: 'бір жыл',
	            yy: '%d жыл'
	        },
	        ordinalParse: /\d{1,2}-(ші|шы)/,
	        ordinal: function ordinal(number) {
	            var a = number % 10,
	                b = number >= 100 ? 100 : null;
	            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return kk;
	});

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Cambodian [km]
	//! author : Kruy Vanna : https://github.com/kruyvanna

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var km = moment.defineLocale('km', {
	        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
	            nextDay: '[ស្អែក ម៉ោង] LT',
	            nextWeek: 'dddd [ម៉ោង] LT',
	            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
	            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%sទៀត',
	            past: '%sមុន',
	            s: 'ប៉ុន្មានវិនាទី',
	            m: 'មួយនាទី',
	            mm: '%d នាទី',
	            h: 'មួយម៉ោង',
	            hh: '%d ម៉ោង',
	            d: 'មួយថ្ងៃ',
	            dd: '%d ថ្ងៃ',
	            M: 'មួយខែ',
	            MM: '%d ខែ',
	            y: 'មួយឆ្នាំ',
	            yy: '%d ឆ្នាំ'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return km;
	});

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Korean [ko]
	//! author : Kyungwook, Park : https://github.com/kyungw00k
	//! author : Jeeeyul Lee <jeeeyul@gmail.com>

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var ko = moment.defineLocale('ko', {
	        months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
	        weekdaysShort: '일_월_화_수_목_금_토'.split('_'),
	        weekdaysMin: '일_월_화_수_목_금_토'.split('_'),
	        longDateFormat: {
	            LT: 'A h시 m분',
	            LTS: 'A h시 m분 s초',
	            L: 'YYYY.MM.DD',
	            LL: 'YYYY년 MMMM D일',
	            LLL: 'YYYY년 MMMM D일 A h시 m분',
	            LLLL: 'YYYY년 MMMM D일 dddd A h시 m분'
	        },
	        calendar: {
	            sameDay: '오늘 LT',
	            nextDay: '내일 LT',
	            nextWeek: 'dddd LT',
	            lastDay: '어제 LT',
	            lastWeek: '지난주 dddd LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s 후',
	            past: '%s 전',
	            s: '몇 초',
	            ss: '%d초',
	            m: '일분',
	            mm: '%d분',
	            h: '한 시간',
	            hh: '%d시간',
	            d: '하루',
	            dd: '%d일',
	            M: '한 달',
	            MM: '%d달',
	            y: '일 년',
	            yy: '%d년'
	        },
	        ordinalParse: /\d{1,2}일/,
	        ordinal: '%d일',
	        meridiemParse: /오전|오후/,
	        isPM: function isPM(token) {
	            return token === '오후';
	        },
	        meridiem: function meridiem(hour, minute, isUpper) {
	            return hour < 12 ? '오전' : '오후';
	        }
	    });

	    return ko;
	});

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Kyrgyz [ky]
	//! author : Chyngyz Arystan uulu : https://github.com/chyngyz

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var suffixes = {
	        0: '-чү',
	        1: '-чи',
	        2: '-чи',
	        3: '-чү',
	        4: '-чү',
	        5: '-чи',
	        6: '-чы',
	        7: '-чи',
	        8: '-чи',
	        9: '-чу',
	        10: '-чу',
	        20: '-чы',
	        30: '-чу',
	        40: '-чы',
	        50: '-чү',
	        60: '-чы',
	        70: '-чи',
	        80: '-чи',
	        90: '-чу',
	        100: '-чү'
	    };

	    var ky = moment.defineLocale('ky', {
	        months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	        monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
	        weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
	        weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Бүгүн саат] LT',
	            nextDay: '[Эртең саат] LT',
	            nextWeek: 'dddd [саат] LT',
	            lastDay: '[Кече саат] LT',
	            lastWeek: '[Өткен аптанын] dddd [күнү] [саат] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s ичинде',
	            past: '%s мурун',
	            s: 'бирнече секунд',
	            m: 'бир мүнөт',
	            mm: '%d мүнөт',
	            h: 'бир саат',
	            hh: '%d саат',
	            d: 'бир күн',
	            dd: '%d күн',
	            M: 'бир ай',
	            MM: '%d ай',
	            y: 'бир жыл',
	            yy: '%d жыл'
	        },
	        ordinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
	        ordinal: function ordinal(number) {
	            var a = number % 10,
	                b = number >= 100 ? 100 : null;
	            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ky;
	});

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Luxembourgish [lb]
	//! author : mweimerskirch : https://github.com/mweimerskirch
	//! author : David Raison : https://github.com/kwisatz

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eng Minutt', 'enger Minutt'],
	            'h': ['eng Stonn', 'enger Stonn'],
	            'd': ['een Dag', 'engem Dag'],
	            'M': ['ee Mount', 'engem Mount'],
	            'y': ['ee Joer', 'engem Joer']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	    function processFutureTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'a ' + string;
	        }
	        return 'an ' + string;
	    }
	    function processPastTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'viru ' + string;
	        }
	        return 'virun ' + string;
	    }
	    /**
	     * Returns true if the word before the given number loses the '-n' ending.
	     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
	     *
	     * @param number {integer}
	     * @returns {boolean}
	     */
	    function eifelerRegelAppliesToNumber(number) {
	        number = parseInt(number, 10);
	        if (isNaN(number)) {
	            return false;
	        }
	        if (number < 0) {
	            // Negative Number --> always true
	            return true;
	        } else if (number < 10) {
	            // Only 1 digit
	            if (4 <= number && number <= 7) {
	                return true;
	            }
	            return false;
	        } else if (number < 100) {
	            // 2 digits
	            var lastDigit = number % 10,
	                firstDigit = number / 10;
	            if (lastDigit === 0) {
	                return eifelerRegelAppliesToNumber(firstDigit);
	            }
	            return eifelerRegelAppliesToNumber(lastDigit);
	        } else if (number < 10000) {
	            // 3 or 4 digits --> recursively check first digit
	            while (number >= 10) {
	                number = number / 10;
	            }
	            return eifelerRegelAppliesToNumber(number);
	        } else {
	            // Anything larger than 4 digits: recursively check first n-3 digits
	            number = number / 1000;
	            return eifelerRegelAppliesToNumber(number);
	        }
	    }

	    var lb = moment.defineLocale('lb', {
	        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
	        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
	        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'H:mm [Auer]',
	            LTS: 'H:mm:ss [Auer]',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm [Auer]',
	            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
	        },
	        calendar: {
	            sameDay: '[Haut um] LT',
	            sameElse: 'L',
	            nextDay: '[Muer um] LT',
	            nextWeek: 'dddd [um] LT',
	            lastDay: '[Gëschter um] LT',
	            lastWeek: function lastWeek() {
	                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
	                switch (this.day()) {
	                    case 2:
	                    case 4:
	                        return '[Leschten] dddd [um] LT';
	                    default:
	                        return '[Leschte] dddd [um] LT';
	                }
	            }
	        },
	        relativeTime: {
	            future: processFutureTime,
	            past: processPastTime,
	            s: 'e puer Sekonnen',
	            m: processRelativeTime,
	            mm: '%d Minutten',
	            h: processRelativeTime,
	            hh: '%d Stonnen',
	            d: processRelativeTime,
	            dd: '%d Deeg',
	            M: processRelativeTime,
	            MM: '%d Méint',
	            y: processRelativeTime,
	            yy: '%d Joer'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lb;
	});

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Lao [lo]
	//! author : Ryan Hart : https://github.com/ryanhart2

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var lo = moment.defineLocale('lo', {
	        months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	        monthsShort: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	        weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	        weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	        weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'ວັນdddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
	        isPM: function isPM(input) {
	            return input === 'ຕອນແລງ';
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ຕອນເຊົ້າ';
	            } else {
	                return 'ຕອນແລງ';
	            }
	        },
	        calendar: {
	            sameDay: '[ມື້ນີ້ເວລາ] LT',
	            nextDay: '[ມື້ອື່ນເວລາ] LT',
	            nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',
	            lastDay: '[ມື້ວານນີ້ເວລາ] LT',
	            lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'ອີກ %s',
	            past: '%sຜ່ານມາ',
	            s: 'ບໍ່ເທົ່າໃດວິນາທີ',
	            m: '1 ນາທີ',
	            mm: '%d ນາທີ',
	            h: '1 ຊົ່ວໂມງ',
	            hh: '%d ຊົ່ວໂມງ',
	            d: '1 ມື້',
	            dd: '%d ມື້',
	            M: '1 ເດືອນ',
	            MM: '%d ເດືອນ',
	            y: '1 ປີ',
	            yy: '%d ປີ'
	        },
	        ordinalParse: /(ທີ່)\d{1,2}/,
	        ordinal: function ordinal(number) {
	            return 'ທີ່' + number;
	        }
	    });

	    return lo;
	});

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Lithuanian [lt]
	//! author : Mindaugas Mozūras : https://github.com/mmozuras

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var units = {
	        'm': 'minutė_minutės_minutę',
	        'mm': 'minutės_minučių_minutes',
	        'h': 'valanda_valandos_valandą',
	        'hh': 'valandos_valandų_valandas',
	        'd': 'diena_dienos_dieną',
	        'dd': 'dienos_dienų_dienas',
	        'M': 'mėnuo_mėnesio_mėnesį',
	        'MM': 'mėnesiai_mėnesių_mėnesius',
	        'y': 'metai_metų_metus',
	        'yy': 'metai_metų_metus'
	    };
	    function translateSeconds(number, withoutSuffix, key, isFuture) {
	        if (withoutSuffix) {
	            return 'kelios sekundės';
	        } else {
	            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
	        }
	    }
	    function translateSingular(number, withoutSuffix, key, isFuture) {
	        return withoutSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];
	    }
	    function special(number) {
	        return number % 10 === 0 || number > 10 && number < 20;
	    }
	    function forms(key) {
	        return units[key].split('_');
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        if (number === 1) {
	            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
	        } else if (withoutSuffix) {
	            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
	        } else {
	            if (isFuture) {
	                return result + forms(key)[1];
	            } else {
	                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
	            }
	        }
	    }
	    var lt = moment.defineLocale('lt', {
	        months: {
	            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
	            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
	            isFormat: /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?|MMMM?(\[[^\[\]]*\]|\s+)+D[oD]?/
	        },
	        monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
	        weekdays: {
	            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
	            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
	            isFormat: /dddd HH:mm/
	        },
	        weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
	        weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'YYYY-MM-DD',
	            LL: 'YYYY [m.] MMMM D [d.]',
	            LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
	            l: 'YYYY-MM-DD',
	            ll: 'YYYY [m.] MMMM D [d.]',
	            lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
	        },
	        calendar: {
	            sameDay: '[Šiandien] LT',
	            nextDay: '[Rytoj] LT',
	            nextWeek: 'dddd LT',
	            lastDay: '[Vakar] LT',
	            lastWeek: '[Praėjusį] dddd LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'po %s',
	            past: 'prieš %s',
	            s: translateSeconds,
	            m: translateSingular,
	            mm: translate,
	            h: translateSingular,
	            hh: translate,
	            d: translateSingular,
	            dd: translate,
	            M: translateSingular,
	            MM: translate,
	            y: translateSingular,
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}-oji/,
	        ordinal: function ordinal(number) {
	            return number + '-oji';
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lt;
	});

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Latvian [lv]
	//! author : Kristaps Karlsons : https://github.com/skakri
	//! author : Jānis Elmeris : https://github.com/JanisE

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var units = {
	        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'h': 'stundas_stundām_stunda_stundas'.split('_'),
	        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
	        'd': 'dienas_dienām_diena_dienas'.split('_'),
	        'dd': 'dienas_dienām_diena_dienas'.split('_'),
	        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'y': 'gada_gadiem_gads_gadi'.split('_'),
	        'yy': 'gada_gadiem_gads_gadi'.split('_')
	    };
	    /**
	     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
	     */
	    function format(forms, number, withoutSuffix) {
	        if (withoutSuffix) {
	            // E.g. "21 minūte", "3 minūtes".
	            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
	        } else {
	            // E.g. "21 minūtes" as in "pēc 21 minūtes".
	            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
	            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
	        }
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        return number + ' ' + format(units[key], number, withoutSuffix);
	    }
	    function relativeTimeWithSingular(number, withoutSuffix, key) {
	        return format(units[key], number, withoutSuffix);
	    }
	    function relativeSeconds(number, withoutSuffix) {
	        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
	    }

	    var lv = moment.defineLocale('lv', {
	        months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
	        weekdays: 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
	        weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY.',
	            LL: 'YYYY. [gada] D. MMMM',
	            LLL: 'YYYY. [gada] D. MMMM, HH:mm',
	            LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm'
	        },
	        calendar: {
	            sameDay: '[Šodien pulksten] LT',
	            nextDay: '[Rīt pulksten] LT',
	            nextWeek: 'dddd [pulksten] LT',
	            lastDay: '[Vakar pulksten] LT',
	            lastWeek: '[Pagājušā] dddd [pulksten] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'pēc %s',
	            past: 'pirms %s',
	            s: relativeSeconds,
	            m: relativeTimeWithSingular,
	            mm: relativeTimeWithPlural,
	            h: relativeTimeWithSingular,
	            hh: relativeTimeWithPlural,
	            d: relativeTimeWithSingular,
	            dd: relativeTimeWithPlural,
	            M: relativeTimeWithSingular,
	            MM: relativeTimeWithPlural,
	            y: relativeTimeWithSingular,
	            yy: relativeTimeWithPlural
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lv;
	});

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Montenegrin [me]
	//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jednog minuta'],
	            mm: ['minut', 'minuta', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mjesec', 'mjeseca', 'mjeseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
	            return number === 1 ? wordKey[0] : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];
	        },
	        translate: function translate(number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var me = moment.defineLocale('me', {
	        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sjutra u] LT',

	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedjelju] [u] LT';
	                    case 3:
	                        return '[u] [srijedu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay: '[juče u] LT',
	            lastWeek: function lastWeek() {
	                var lastWeekDays = ['[prošle] [nedjelje] [u] LT', '[prošlog] [ponedjeljka] [u] LT', '[prošlog] [utorka] [u] LT', '[prošle] [srijede] [u] LT', '[prošlog] [četvrtka] [u] LT', '[prošlog] [petka] [u] LT', '[prošle] [subote] [u] LT'];
	                return lastWeekDays[this.day()];
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'za %s',
	            past: 'prije %s',
	            s: 'nekoliko sekundi',
	            m: translator.translate,
	            mm: translator.translate,
	            h: translator.translate,
	            hh: translator.translate,
	            d: 'dan',
	            dd: translator.translate,
	            M: 'mjesec',
	            MM: translator.translate,
	            y: 'godinu',
	            yy: translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return me;
	});

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Maori [mi]
	//! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var mi = moment.defineLocale('mi', {
	        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
	        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
	        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
	        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
	        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
	        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY [i] HH:mm',
	            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
	        },
	        calendar: {
	            sameDay: '[i teie mahana, i] LT',
	            nextDay: '[apopo i] LT',
	            nextWeek: 'dddd [i] LT',
	            lastDay: '[inanahi i] LT',
	            lastWeek: 'dddd [whakamutunga i] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'i roto i %s',
	            past: '%s i mua',
	            s: 'te hēkona ruarua',
	            m: 'he meneti',
	            mm: '%d meneti',
	            h: 'te haora',
	            hh: '%d haora',
	            d: 'he ra',
	            dd: '%d ra',
	            M: 'he marama',
	            MM: '%d marama',
	            y: 'he tau',
	            yy: '%d tau'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal: '%dº',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return mi;
	});

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Macedonian [mk]
	//! author : Borislav Mickov : https://github.com/B0k0

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var mk = moment.defineLocale('mk', {
	        months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
	        weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
	        weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'D.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY H:mm',
	            LLLL: 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[Денес во] LT',
	            nextDay: '[Утре во] LT',
	            nextWeek: '[Во] dddd [во] LT',
	            lastDay: '[Вчера во] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 6:
	                        return '[Изминатата] dddd [во] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[Изминатиот] dddd [во] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'после %s',
	            past: 'пред %s',
	            s: 'неколку секунди',
	            m: 'минута',
	            mm: '%d минути',
	            h: 'час',
	            hh: '%d часа',
	            d: 'ден',
	            dd: '%d дена',
	            M: 'месец',
	            MM: '%d месеци',
	            y: 'година',
	            yy: '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal: function ordinal(number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return mk;
	});

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Malayalam [ml]
	//! author : Floyd Pink : https://github.com/floydpink

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var ml = moment.defineLocale('ml', {
	        months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
	        monthsShort: 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
	        weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
	        weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
	        longDateFormat: {
	            LT: 'A h:mm -നു',
	            LTS: 'A h:mm:ss -നു',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, A h:mm -നു',
	            LLLL: 'dddd, D MMMM YYYY, A h:mm -നു'
	        },
	        calendar: {
	            sameDay: '[ഇന്ന്] LT',
	            nextDay: '[നാളെ] LT',
	            nextWeek: 'dddd, LT',
	            lastDay: '[ഇന്നലെ] LT',
	            lastWeek: '[കഴിഞ്ഞ] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s കഴിഞ്ഞ്',
	            past: '%s മുൻപ്',
	            s: 'അൽപ നിമിഷങ്ങൾ',
	            m: 'ഒരു മിനിറ്റ്',
	            mm: '%d മിനിറ്റ്',
	            h: 'ഒരു മണിക്കൂർ',
	            hh: '%d മണിക്കൂർ',
	            d: 'ഒരു ദിവസം',
	            dd: '%d ദിവസം',
	            M: 'ഒരു മാസം',
	            MM: '%d മാസം',
	            y: 'ഒരു വർഷം',
	            yy: '%d വർഷം'
	        },
	        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'രാത്രി' && hour >= 4 || meridiem === 'ഉച്ച കഴിഞ്ഞ്' || meridiem === 'വൈകുന്നേരം') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'രാത്രി';
	            } else if (hour < 12) {
	                return 'രാവിലെ';
	            } else if (hour < 17) {
	                return 'ഉച്ച കഴിഞ്ഞ്';
	            } else if (hour < 20) {
	                return 'വൈകുന്നേരം';
	            } else {
	                return 'രാത്രി';
	            }
	        }
	    });

	    return ml;
	});

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Marathi [mr]
	//! author : Harshad Kale : https://github.com/kalehv
	//! author : Vivek Athalye : https://github.com/vnathalye

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	        numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    function relativeTimeMr(number, withoutSuffix, string, isFuture) {
	        var output = '';
	        if (withoutSuffix) {
	            switch (string) {
	                case 's':
	                    output = 'काही सेकंद';break;
	                case 'm':
	                    output = 'एक मिनिट';break;
	                case 'mm':
	                    output = '%d मिनिटे';break;
	                case 'h':
	                    output = 'एक तास';break;
	                case 'hh':
	                    output = '%d तास';break;
	                case 'd':
	                    output = 'एक दिवस';break;
	                case 'dd':
	                    output = '%d दिवस';break;
	                case 'M':
	                    output = 'एक महिना';break;
	                case 'MM':
	                    output = '%d महिने';break;
	                case 'y':
	                    output = 'एक वर्ष';break;
	                case 'yy':
	                    output = '%d वर्षे';break;
	            }
	        } else {
	            switch (string) {
	                case 's':
	                    output = 'काही सेकंदां';break;
	                case 'm':
	                    output = 'एका मिनिटा';break;
	                case 'mm':
	                    output = '%d मिनिटां';break;
	                case 'h':
	                    output = 'एका तासा';break;
	                case 'hh':
	                    output = '%d तासां';break;
	                case 'd':
	                    output = 'एका दिवसा';break;
	                case 'dd':
	                    output = '%d दिवसां';break;
	                case 'M':
	                    output = 'एका महिन्या';break;
	                case 'MM':
	                    output = '%d महिन्यां';break;
	                case 'y':
	                    output = 'एका वर्षा';break;
	                case 'yy':
	                    output = '%d वर्षां';break;
	            }
	        }
	        return output.replace(/%d/i, number);
	    }

	    var mr = moment.defineLocale('mr', {
	        months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
	        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat: {
	            LT: 'A h:mm वाजता',
	            LTS: 'A h:mm:ss वाजता',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, A h:mm वाजता',
	            LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता'
	        },
	        calendar: {
	            sameDay: '[आज] LT',
	            nextDay: '[उद्या] LT',
	            nextWeek: 'dddd, LT',
	            lastDay: '[काल] LT',
	            lastWeek: '[मागील] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%sमध्ये',
	            past: '%sपूर्वी',
	            s: relativeTimeMr,
	            m: relativeTimeMr,
	            mm: relativeTimeMr,
	            h: relativeTimeMr,
	            hh: relativeTimeMr,
	            d: relativeTimeMr,
	            dd: relativeTimeMr,
	            M: relativeTimeMr,
	            MM: relativeTimeMr,
	            y: relativeTimeMr,
	            yy: relativeTimeMr
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात्री') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सकाळी') {
	                return hour;
	            } else if (meridiem === 'दुपारी') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'सायंकाळी') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात्री';
	            } else if (hour < 10) {
	                return 'सकाळी';
	            } else if (hour < 17) {
	                return 'दुपारी';
	            } else if (hour < 20) {
	                return 'सायंकाळी';
	            } else {
	                return 'रात्री';
	            }
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return mr;
	});

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Malay [ms]
	//! author : Weldan Jamili : https://github.com/weldan

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var ms = moment.defineLocale('ms', {
	        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat: {
	            LT: 'HH.mm',
	            LTS: 'HH.mm.ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY [pukul] HH.mm',
	            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar: {
	            sameDay: '[Hari ini pukul] LT',
	            nextDay: '[Esok pukul] LT',
	            nextWeek: 'dddd [pukul] LT',
	            lastDay: '[Kelmarin pukul] LT',
	            lastWeek: 'dddd [lepas pukul] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'dalam %s',
	            past: '%s yang lepas',
	            s: 'beberapa saat',
	            m: 'seminit',
	            mm: '%d minit',
	            h: 'sejam',
	            hh: '%d jam',
	            d: 'sehari',
	            dd: '%d hari',
	            M: 'sebulan',
	            MM: '%d bulan',
	            y: 'setahun',
	            yy: '%d tahun'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ms;
	});

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Malay [ms-my]
	//! note : DEPRECATED, the correct one is [ms]
	//! author : Weldan Jamili : https://github.com/weldan

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var ms_my = moment.defineLocale('ms-my', {
	        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat: {
	            LT: 'HH.mm',
	            LTS: 'HH.mm.ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY [pukul] HH.mm',
	            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar: {
	            sameDay: '[Hari ini pukul] LT',
	            nextDay: '[Esok pukul] LT',
	            nextWeek: 'dddd [pukul] LT',
	            lastDay: '[Kelmarin pukul] LT',
	            lastWeek: 'dddd [lepas pukul] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'dalam %s',
	            past: '%s yang lepas',
	            s: 'beberapa saat',
	            m: 'seminit',
	            mm: '%d minit',
	            h: 'sejam',
	            hh: '%d jam',
	            d: 'sehari',
	            dd: '%d hari',
	            M: 'sebulan',
	            MM: '%d bulan',
	            y: 'setahun',
	            yy: '%d tahun'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ms_my;
	});

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Burmese [my]
	//! author : Squar team, mysquar.com
	//! author : David Rossellat : https://github.com/gholadr
	//! author : Tin Aung Lin : https://github.com/thanyawzinmin

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var symbolMap = {
	        '1': '၁',
	        '2': '၂',
	        '3': '၃',
	        '4': '၄',
	        '5': '၅',
	        '6': '၆',
	        '7': '၇',
	        '8': '၈',
	        '9': '၉',
	        '0': '၀'
	    },
	        numberMap = {
	        '၁': '1',
	        '၂': '2',
	        '၃': '3',
	        '၄': '4',
	        '၅': '5',
	        '၆': '6',
	        '၇': '7',
	        '၈': '8',
	        '၉': '9',
	        '၀': '0'
	    };

	    var my = moment.defineLocale('my', {
	        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
	        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
	        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
	        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ယနေ.] LT [မှာ]',
	            nextDay: '[မနက်ဖြန်] LT [မှာ]',
	            nextWeek: 'dddd LT [မှာ]',
	            lastDay: '[မနေ.က] LT [မှာ]',
	            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'လာမည့် %s မှာ',
	            past: 'လွန်ခဲ့သော %s က',
	            s: 'စက္ကန်.အနည်းငယ်',
	            m: 'တစ်မိနစ်',
	            mm: '%d မိနစ်',
	            h: 'တစ်နာရီ',
	            hh: '%d နာရီ',
	            d: 'တစ်ရက်',
	            dd: '%d ရက်',
	            M: 'တစ်လ',
	            MM: '%d လ',
	            y: 'တစ်နှစ်',
	            yy: '%d နှစ်'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return my;
	});

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Norwegian Bokmål [nb]
	//! authors : Espen Hovlandsdal : https://github.com/rexxars
	//!           Sigurd Gartmann : https://github.com/sigurdga

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var nb = moment.defineLocale('nb', {
	        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),
	        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY [kl.] HH:mm',
	            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'
	        },
	        calendar: {
	            sameDay: '[i dag kl.] LT',
	            nextDay: '[i morgen kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[i går kl.] LT',
	            lastWeek: '[forrige] dddd [kl.] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'om %s',
	            past: '%s siden',
	            s: 'noen sekunder',
	            m: 'ett minutt',
	            mm: '%d minutter',
	            h: 'en time',
	            hh: '%d timer',
	            d: 'en dag',
	            dd: '%d dager',
	            M: 'en måned',
	            MM: '%d måneder',
	            y: 'ett år',
	            yy: '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nb;
	});

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Nepalese [ne]
	//! author : suvash : https://github.com/suvash

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	        numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var ne = moment.defineLocale('ne', {
	        months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
	        monthsShort: 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
	        weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
	        weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'Aको h:mm बजे',
	            LTS: 'Aको h:mm:ss बजे',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, Aको h:mm बजे',
	            LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'राति') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'बिहान') {
	                return hour;
	            } else if (meridiem === 'दिउँसो') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'साँझ') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 3) {
	                return 'राति';
	            } else if (hour < 12) {
	                return 'बिहान';
	            } else if (hour < 16) {
	                return 'दिउँसो';
	            } else if (hour < 20) {
	                return 'साँझ';
	            } else {
	                return 'राति';
	            }
	        },
	        calendar: {
	            sameDay: '[आज] LT',
	            nextDay: '[भोलि] LT',
	            nextWeek: '[आउँदो] dddd[,] LT',
	            lastDay: '[हिजो] LT',
	            lastWeek: '[गएको] dddd[,] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%sमा',
	            past: '%s अगाडि',
	            s: 'केही क्षण',
	            m: 'एक मिनेट',
	            mm: '%d मिनेट',
	            h: 'एक घण्टा',
	            hh: '%d घण्टा',
	            d: 'एक दिन',
	            dd: '%d दिन',
	            M: 'एक महिना',
	            MM: '%d महिना',
	            y: 'एक बर्ष',
	            yy: '%d बर्ष'
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ne;
	});

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Dutch [nl]
	//! author : Joris Röling : https://github.com/jorisroling
	//! author : Jacob Middag : https://github.com/middagj

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

	    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
	    var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

	    var nl = moment.defineLocale('nl', {
	        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	        monthsShort: function monthsShort(m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },

	        monthsRegex: monthsRegex,
	        monthsShortRegex: monthsRegex,
	        monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
	        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

	        monthsParse: monthsParse,
	        longMonthsParse: monthsParse,
	        shortMonthsParse: monthsParse,

	        weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
	        weekdaysMin: 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD-MM-YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[vandaag om] LT',
	            nextDay: '[morgen om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[gisteren om] LT',
	            lastWeek: '[afgelopen] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'over %s',
	            past: '%s geleden',
	            s: 'een paar seconden',
	            m: 'één minuut',
	            mm: '%d minuten',
	            h: 'één uur',
	            hh: '%d uur',
	            d: 'één dag',
	            dd: '%d dagen',
	            M: 'één maand',
	            MM: '%d maanden',
	            y: 'één jaar',
	            yy: '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal: function ordinal(number) {
	            return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de');
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nl;
	});

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Nynorsk [nn]
	//! author : https://github.com/mechuwind

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var nn = moment.defineLocale('nn', {
	        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
	        weekdaysShort: 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
	        weekdaysMin: 'su_må_ty_on_to_fr_lø'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY [kl.] H:mm',
	            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'
	        },
	        calendar: {
	            sameDay: '[I dag klokka] LT',
	            nextDay: '[I morgon klokka] LT',
	            nextWeek: 'dddd [klokka] LT',
	            lastDay: '[I går klokka] LT',
	            lastWeek: '[Føregåande] dddd [klokka] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'om %s',
	            past: '%s sidan',
	            s: 'nokre sekund',
	            m: 'eit minutt',
	            mm: '%d minutt',
	            h: 'ein time',
	            hh: '%d timar',
	            d: 'ein dag',
	            dd: '%d dagar',
	            M: 'ein månad',
	            MM: '%d månader',
	            y: 'eit år',
	            yy: '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nn;
	});

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Punjabi (India) [pa-in]
	//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var symbolMap = {
	        '1': '੧',
	        '2': '੨',
	        '3': '੩',
	        '4': '੪',
	        '5': '੫',
	        '6': '੬',
	        '7': '੭',
	        '8': '੮',
	        '9': '੯',
	        '0': '੦'
	    },
	        numberMap = {
	        '੧': '1',
	        '੨': '2',
	        '੩': '3',
	        '੪': '4',
	        '੫': '5',
	        '੬': '6',
	        '੭': '7',
	        '੮': '8',
	        '੯': '9',
	        '੦': '0'
	    };

	    var pa_in = moment.defineLocale('pa-in', {
	        // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
	        months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	        monthsShort: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	        weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
	        weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	        weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	        longDateFormat: {
	            LT: 'A h:mm ਵਜੇ',
	            LTS: 'A h:mm:ss ਵਜੇ',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',
	            LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
	        },
	        calendar: {
	            sameDay: '[ਅਜ] LT',
	            nextDay: '[ਕਲ] LT',
	            nextWeek: 'dddd, LT',
	            lastDay: '[ਕਲ] LT',
	            lastWeek: '[ਪਿਛਲੇ] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s ਵਿੱਚ',
	            past: '%s ਪਿਛਲੇ',
	            s: 'ਕੁਝ ਸਕਿੰਟ',
	            m: 'ਇਕ ਮਿੰਟ',
	            mm: '%d ਮਿੰਟ',
	            h: 'ਇੱਕ ਘੰਟਾ',
	            hh: '%d ਘੰਟੇ',
	            d: 'ਇੱਕ ਦਿਨ',
	            dd: '%d ਦਿਨ',
	            M: 'ਇੱਕ ਮਹੀਨਾ',
	            MM: '%d ਮਹੀਨੇ',
	            y: 'ਇੱਕ ਸਾਲ',
	            yy: '%d ਸਾਲ'
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
	        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'ਰਾਤ') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'ਸਵੇਰ') {
	                return hour;
	            } else if (meridiem === 'ਦੁਪਹਿਰ') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'ਸ਼ਾਮ') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ਰਾਤ';
	            } else if (hour < 10) {
	                return 'ਸਵੇਰ';
	            } else if (hour < 17) {
	                return 'ਦੁਪਹਿਰ';
	            } else if (hour < 20) {
	                return 'ਸ਼ਾਮ';
	            } else {
	                return 'ਰਾਤ';
	            }
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return pa_in;
	});

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Polish [pl]
	//! author : Rafal Hirsz : https://github.com/evoL

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
	        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
	    function plural(n) {
	        return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;
	    }
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	            case 'm':
	                return withoutSuffix ? 'minuta' : 'minutę';
	            case 'mm':
	                return result + (plural(number) ? 'minuty' : 'minut');
	            case 'h':
	                return withoutSuffix ? 'godzina' : 'godzinę';
	            case 'hh':
	                return result + (plural(number) ? 'godziny' : 'godzin');
	            case 'MM':
	                return result + (plural(number) ? 'miesiące' : 'miesięcy');
	            case 'yy':
	                return result + (plural(number) ? 'lata' : 'lat');
	        }
	    }

	    var pl = moment.defineLocale('pl', {
	        months: function months(momentToFormat, format) {
	            if (format === '') {
	                // Hack: if format empty we know this is used to generate
	                // RegExp by moment. Give then back both valid forms of months
	                // in RegExp ready format.
	                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
	            } else if (/D MMMM/.test(format)) {
	                return monthsSubjective[momentToFormat.month()];
	            } else {
	                return monthsNominative[momentToFormat.month()];
	            }
	        },
	        monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
	        weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
	        weekdaysShort: 'nie_pon_wt_śr_czw_pt_sb'.split('_'),
	        weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Dziś o] LT',
	            nextDay: '[Jutro o] LT',
	            nextWeek: '[W] dddd [o] LT',
	            lastDay: '[Wczoraj o] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[W zeszłą niedzielę o] LT';
	                    case 3:
	                        return '[W zeszłą środę o] LT';
	                    case 6:
	                        return '[W zeszłą sobotę o] LT';
	                    default:
	                        return '[W zeszły] dddd [o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'za %s',
	            past: '%s temu',
	            s: 'kilka sekund',
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: '1 dzień',
	            dd: '%d dni',
	            M: 'miesiąc',
	            MM: translate,
	            y: 'rok',
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return pl;
	});

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Portuguese [pt]
	//! author : Jefferson : https://github.com/jalex79

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var pt = moment.defineLocale('pt', {
	        months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays: 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
	        weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin: 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D [de] MMMM [de] YYYY',
	            LLL: 'D [de] MMMM [de] YYYY HH:mm',
	            LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function lastWeek() {
	                return this.day() === 0 || this.day() === 6 ? '[Último] dddd [às] LT' : // Saturday + Sunday
	                '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'em %s',
	            past: 'há %s',
	            s: 'segundos',
	            m: 'um minuto',
	            mm: '%d minutos',
	            h: 'uma hora',
	            hh: '%d horas',
	            d: 'um dia',
	            dd: '%d dias',
	            M: 'um mês',
	            MM: '%d meses',
	            y: 'um ano',
	            yy: '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal: '%dº',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return pt;
	});

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Portuguese (Brazil) [pt-br]
	//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var pt_br = moment.defineLocale('pt-br', {
	        months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
	        weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin: 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D [de] MMMM [de] YYYY',
	            LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',
	            LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
	        },
	        calendar: {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function lastWeek() {
	                return this.day() === 0 || this.day() === 6 ? '[Último] dddd [às] LT' : // Saturday + Sunday
	                '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'em %s',
	            past: '%s atrás',
	            s: 'poucos segundos',
	            m: 'um minuto',
	            mm: '%d minutos',
	            h: 'uma hora',
	            hh: '%d horas',
	            d: 'um dia',
	            dd: '%d dias',
	            M: 'um mês',
	            MM: '%d meses',
	            y: 'um ano',
	            yy: '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal: '%dº'
	    });

	    return pt_br;
	});

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Romanian [ro]
	//! author : Vlad Gurdiga : https://github.com/gurdiga
	//! author : Valentin Agachi : https://github.com/avaly

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'minute',
	            'hh': 'ore',
	            'dd': 'zile',
	            'MM': 'luni',
	            'yy': 'ani'
	        },
	            separator = ' ';
	        if (number % 100 >= 20 || number >= 100 && number % 100 === 0) {
	            separator = ' de ';
	        }
	        return number + separator + format[key];
	    }

	    var ro = moment.defineLocale('ro', {
	        months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
	        monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
	        weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
	        weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY H:mm',
	            LLLL: 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[azi la] LT',
	            nextDay: '[mâine la] LT',
	            nextWeek: 'dddd [la] LT',
	            lastDay: '[ieri la] LT',
	            lastWeek: '[fosta] dddd [la] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'peste %s',
	            past: '%s în urmă',
	            s: 'câteva secunde',
	            m: 'un minut',
	            mm: relativeTimeWithPlural,
	            h: 'o oră',
	            hh: relativeTimeWithPlural,
	            d: 'o zi',
	            dd: relativeTimeWithPlural,
	            M: 'o lună',
	            MM: relativeTimeWithPlural,
	            y: 'un an',
	            yy: relativeTimeWithPlural
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ro;
	});

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Russian [ru]
	//! author : Viktorminator : https://github.com/Viktorminator
	//! Author : Menelion Elensúle : https://github.com/Oire
	//! author : Коренберг Марк : https://github.com/socketpair

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
	            'hh': 'час_часа_часов',
	            'dd': 'день_дня_дней',
	            'MM': 'месяц_месяца_месяцев',
	            'yy': 'год_года_лет'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'минута' : 'минуту';
	        } else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

	    // http://new.gramota.ru/spravka/rules/139-prop : § 103
	    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
	    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
	    var ru = moment.defineLocale('ru', {
	        months: {
	            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
	            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
	        },
	        monthsShort: {
	            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
	            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
	            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
	        },
	        weekdays: {
	            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
	            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
	            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
	        },
	        weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        monthsParse: monthsParse,
	        longMonthsParse: monthsParse,
	        shortMonthsParse: monthsParse,

	        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
	        monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

	        // копия предыдущего
	        monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

	        // полные названия с падежами
	        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

	        // Выражение, которое соотвествует только сокращённым формам
	        monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY г.',
	            LLL: 'D MMMM YYYY г., HH:mm',
	            LLLL: 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar: {
	            sameDay: '[Сегодня в] LT',
	            nextDay: '[Завтра в] LT',
	            lastDay: '[Вчера в] LT',
	            nextWeek: function nextWeek(now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                        case 0:
	                            return '[В следующее] dddd [в] LT';
	                        case 1:
	                        case 2:
	                        case 4:
	                            return '[В следующий] dddd [в] LT';
	                        case 3:
	                        case 5:
	                        case 6:
	                            return '[В следующую] dddd [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd [в] LT';
	                    } else {
	                        return '[В] dddd [в] LT';
	                    }
	                }
	            },
	            lastWeek: function lastWeek(now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                        case 0:
	                            return '[В прошлое] dddd [в] LT';
	                        case 1:
	                        case 2:
	                        case 4:
	                            return '[В прошлый] dddd [в] LT';
	                        case 3:
	                        case 5:
	                        case 6:
	                            return '[В прошлую] dddd [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd [в] LT';
	                    } else {
	                        return '[В] dddd [в] LT';
	                    }
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'через %s',
	            past: '%s назад',
	            s: 'несколько секунд',
	            m: relativeTimeWithPlural,
	            mm: relativeTimeWithPlural,
	            h: 'час',
	            hh: relativeTimeWithPlural,
	            d: 'день',
	            dd: relativeTimeWithPlural,
	            M: 'месяц',
	            MM: relativeTimeWithPlural,
	            y: 'год',
	            yy: relativeTimeWithPlural
	        },
	        meridiemParse: /ночи|утра|дня|вечера/i,
	        isPM: function isPM(input) {
	            return (/^(дня|вечера)$/.test(input)
	            );
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночи';
	            } else if (hour < 12) {
	                return 'утра';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечера';
	            }
	        },
	        ordinalParse: /\d{1,2}-(й|го|я)/,
	        ordinal: function ordinal(number, period) {
	            switch (period) {
	                case 'M':
	                case 'd':
	                case 'DDD':
	                    return number + '-й';
	                case 'D':
	                    return number + '-го';
	                case 'w':
	                case 'W':
	                    return number + '-я';
	                default:
	                    return number;
	            }
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ru;
	});

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Northern Sami [se]
	//! authors : Bård Rolstad Henriksen : https://github.com/karamell

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var se = moment.defineLocale('se', {
	        months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
	        monthsShort: 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
	        weekdays: 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
	        weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
	        weekdaysMin: 's_v_m_g_d_b_L'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'MMMM D. [b.] YYYY',
	            LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',
	            LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
	        },
	        calendar: {
	            sameDay: '[otne ti] LT',
	            nextDay: '[ihttin ti] LT',
	            nextWeek: 'dddd [ti] LT',
	            lastDay: '[ikte ti] LT',
	            lastWeek: '[ovddit] dddd [ti] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s geažes',
	            past: 'maŋit %s',
	            s: 'moadde sekunddat',
	            m: 'okta minuhta',
	            mm: '%d minuhtat',
	            h: 'okta diimmu',
	            hh: '%d diimmut',
	            d: 'okta beaivi',
	            dd: '%d beaivvit',
	            M: 'okta mánnu',
	            MM: '%d mánut',
	            y: 'okta jahki',
	            yy: '%d jagit'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return se;
	});

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Sinhalese [si]
	//! author : Sampath Sitinamaluwa : https://github.com/sampathsris

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    /*jshint -W100*/

	    var si = moment.defineLocale('si', {
	        months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
	        monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
	        weekdays: 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
	        weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
	        weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'a h:mm',
	            LTS: 'a h:mm:ss',
	            L: 'YYYY/MM/DD',
	            LL: 'YYYY MMMM D',
	            LLL: 'YYYY MMMM D, a h:mm',
	            LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
	        },
	        calendar: {
	            sameDay: '[අද] LT[ට]',
	            nextDay: '[හෙට] LT[ට]',
	            nextWeek: 'dddd LT[ට]',
	            lastDay: '[ඊයේ] LT[ට]',
	            lastWeek: '[පසුගිය] dddd LT[ට]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%sකින්',
	            past: '%sකට පෙර',
	            s: 'තත්පර කිහිපය',
	            m: 'මිනිත්තුව',
	            mm: 'මිනිත්තු %d',
	            h: 'පැය',
	            hh: 'පැය %d',
	            d: 'දිනය',
	            dd: 'දින %d',
	            M: 'මාසය',
	            MM: 'මාස %d',
	            y: 'වසර',
	            yy: 'වසර %d'
	        },
	        ordinalParse: /\d{1,2} වැනි/,
	        ordinal: function ordinal(number) {
	            return number + ' වැනි';
	        },
	        meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
	        isPM: function isPM(input) {
	            return input === 'ප.ව.' || input === 'පස් වරු';
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'ප.ව.' : 'පස් වරු';
	            } else {
	                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
	            }
	        }
	    });

	    return si;
	});

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Slovak [sk]
	//! author : Martin Minka : https://github.com/k2s
	//! based on work of petrbela : https://github.com/petrbela

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
	        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
	    function plural(n) {
	        return n > 1 && n < 5;
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':
	                // a few seconds / in a few seconds / a few seconds ago
	                return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';
	            case 'm':
	                // a minute / in a minute / a minute ago
	                return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';
	            case 'mm':
	                // 9 minutes / in 9 minutes / 9 minutes ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'minúty' : 'minút');
	                } else {
	                    return result + 'minútami';
	                }
	                break;
	            case 'h':
	                // an hour / in an hour / an hour ago
	                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
	            case 'hh':
	                // 9 hours / in 9 hours / 9 hours ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'hodiny' : 'hodín');
	                } else {
	                    return result + 'hodinami';
	                }
	                break;
	            case 'd':
	                // a day / in a day / a day ago
	                return withoutSuffix || isFuture ? 'deň' : 'dňom';
	            case 'dd':
	                // 9 days / in 9 days / 9 days ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'dni' : 'dní');
	                } else {
	                    return result + 'dňami';
	                }
	                break;
	            case 'M':
	                // a month / in a month / a month ago
	                return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';
	            case 'MM':
	                // 9 months / in 9 months / 9 months ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'mesiace' : 'mesiacov');
	                } else {
	                    return result + 'mesiacmi';
	                }
	                break;
	            case 'y':
	                // a year / in a year / a year ago
	                return withoutSuffix || isFuture ? 'rok' : 'rokom';
	            case 'yy':
	                // 9 years / in 9 years / 9 years ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'roky' : 'rokov');
	                } else {
	                    return result + 'rokmi';
	                }
	                break;
	        }
	    }

	    var sk = moment.defineLocale('sk', {
	        months: months,
	        monthsShort: monthsShort,
	        weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
	        weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),
	        weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[dnes o] LT',
	            nextDay: '[zajtra o] LT',
	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[v nedeľu o] LT';
	                    case 1:
	                    case 2:
	                        return '[v] dddd [o] LT';
	                    case 3:
	                        return '[v stredu o] LT';
	                    case 4:
	                        return '[vo štvrtok o] LT';
	                    case 5:
	                        return '[v piatok o] LT';
	                    case 6:
	                        return '[v sobotu o] LT';
	                }
	            },
	            lastDay: '[včera o] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[minulú nedeľu o] LT';
	                    case 1:
	                    case 2:
	                        return '[minulý] dddd [o] LT';
	                    case 3:
	                        return '[minulú stredu o] LT';
	                    case 4:
	                    case 5:
	                        return '[minulý] dddd [o] LT';
	                    case 6:
	                        return '[minulú sobotu o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'za %s',
	            past: 'pred %s',
	            s: translate,
	            m: translate,
	            mm: translate,
	            h: translate,
	            hh: translate,
	            d: translate,
	            dd: translate,
	            M: translate,
	            MM: translate,
	            y: translate,
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sk;
	});

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Slovenian [sl]
	//! author : Robert Sedovšek : https://github.com/sedovsek

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':
	                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
	            case 'm':
	                return withoutSuffix ? 'ena minuta' : 'eno minuto';
	            case 'mm':
	                if (number === 1) {
	                    result += withoutSuffix ? 'minuta' : 'minuto';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
	                } else if (number < 5) {
	                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';
	                } else {
	                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';
	                }
	                return result;
	            case 'h':
	                return withoutSuffix ? 'ena ura' : 'eno uro';
	            case 'hh':
	                if (number === 1) {
	                    result += withoutSuffix ? 'ura' : 'uro';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'uri' : 'urama';
	                } else if (number < 5) {
	                    result += withoutSuffix || isFuture ? 'ure' : 'urami';
	                } else {
	                    result += withoutSuffix || isFuture ? 'ur' : 'urami';
	                }
	                return result;
	            case 'd':
	                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
	            case 'dd':
	                if (number === 1) {
	                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
	                } else {
	                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
	                }
	                return result;
	            case 'M':
	                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
	            case 'MM':
	                if (number === 1) {
	                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
	                } else if (number < 5) {
	                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
	                } else {
	                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
	                }
	                return result;
	            case 'y':
	                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
	            case 'yy':
	                if (number === 1) {
	                    result += withoutSuffix || isFuture ? 'leto' : 'letom';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';
	                } else if (number < 5) {
	                    result += withoutSuffix || isFuture ? 'leta' : 'leti';
	                } else {
	                    result += withoutSuffix || isFuture ? 'let' : 'leti';
	                }
	                return result;
	        }
	    }

	    var sl = moment.defineLocale('sl', {
	        months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
	        weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
	        weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danes ob] LT',
	            nextDay: '[jutri ob] LT',

	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[v] [nedeljo] [ob] LT';
	                    case 3:
	                        return '[v] [sredo] [ob] LT';
	                    case 6:
	                        return '[v] [soboto] [ob] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[v] dddd [ob] LT';
	                }
	            },
	            lastDay: '[včeraj ob] LT',
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[prejšnjo] [nedeljo] [ob] LT';
	                    case 3:
	                        return '[prejšnjo] [sredo] [ob] LT';
	                    case 6:
	                        return '[prejšnjo] [soboto] [ob] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[prejšnji] dddd [ob] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'čez %s',
	            past: 'pred %s',
	            s: processRelativeTime,
	            m: processRelativeTime,
	            mm: processRelativeTime,
	            h: processRelativeTime,
	            hh: processRelativeTime,
	            d: processRelativeTime,
	            dd: processRelativeTime,
	            M: processRelativeTime,
	            MM: processRelativeTime,
	            y: processRelativeTime,
	            yy: processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sl;
	});

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Albanian [sq]
	//! author : Flakërim Ismani : https://github.com/flakerimi
	//! author : Menelion Elensúle : https://github.com/Oire
	//! author : Oerd Cukalla : https://github.com/oerd

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var sq = moment.defineLocale('sq', {
	        months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
	        monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
	        weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
	        weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
	        weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),
	        weekdaysParseExact: true,
	        meridiemParse: /PD|MD/,
	        isPM: function isPM(input) {
	            return input.charAt(0) === 'M';
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            return hours < 12 ? 'PD' : 'MD';
	        },
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Sot në] LT',
	            nextDay: '[Nesër në] LT',
	            nextWeek: 'dddd [në] LT',
	            lastDay: '[Dje në] LT',
	            lastWeek: 'dddd [e kaluar në] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'në %s',
	            past: '%s më parë',
	            s: 'disa sekonda',
	            m: 'një minutë',
	            mm: '%d minuta',
	            h: 'një orë',
	            hh: '%d orë',
	            d: 'një ditë',
	            dd: '%d ditë',
	            M: 'një muaj',
	            MM: '%d muaj',
	            y: 'një vit',
	            yy: '%d vite'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sq;
	});

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Serbian [sr]
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jedne minute'],
	            mm: ['minut', 'minute', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mesec', 'meseca', 'meseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
	            return number === 1 ? wordKey[0] : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];
	        },
	        translate: function translate(number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var sr = moment.defineLocale('sr', {
	        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',
	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedelju] [u] LT';
	                    case 3:
	                        return '[u] [sredu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay: '[juče u] LT',
	            lastWeek: function lastWeek() {
	                var lastWeekDays = ['[prošle] [nedelje] [u] LT', '[prošlog] [ponedeljka] [u] LT', '[prošlog] [utorka] [u] LT', '[prošle] [srede] [u] LT', '[prošlog] [četvrtka] [u] LT', '[prošlog] [petka] [u] LT', '[prošle] [subote] [u] LT'];
	                return lastWeekDays[this.day()];
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'za %s',
	            past: 'pre %s',
	            s: 'nekoliko sekundi',
	            m: translator.translate,
	            mm: translator.translate,
	            h: translator.translate,
	            hh: translator.translate,
	            d: 'dan',
	            dd: translator.translate,
	            M: 'mesec',
	            MM: translator.translate,
	            y: 'godinu',
	            yy: translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sr;
	});

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Serbian Cyrillic [sr-cyrl]
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var translator = {
	        words: { //Different grammatical cases
	            m: ['један минут', 'једне минуте'],
	            mm: ['минут', 'минуте', 'минута'],
	            h: ['један сат', 'једног сата'],
	            hh: ['сат', 'сата', 'сати'],
	            dd: ['дан', 'дана', 'дана'],
	            MM: ['месец', 'месеца', 'месеци'],
	            yy: ['година', 'године', 'година']
	        },
	        correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
	            return number === 1 ? wordKey[0] : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];
	        },
	        translate: function translate(number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var sr_cyrl = moment.defineLocale('sr-cyrl', {
	        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
	        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
	        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
	        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[данас у] LT',
	            nextDay: '[сутра у] LT',
	            nextWeek: function nextWeek() {
	                switch (this.day()) {
	                    case 0:
	                        return '[у] [недељу] [у] LT';
	                    case 3:
	                        return '[у] [среду] [у] LT';
	                    case 6:
	                        return '[у] [суботу] [у] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[у] dddd [у] LT';
	                }
	            },
	            lastDay: '[јуче у] LT',
	            lastWeek: function lastWeek() {
	                var lastWeekDays = ['[прошле] [недеље] [у] LT', '[прошлог] [понедељка] [у] LT', '[прошлог] [уторка] [у] LT', '[прошле] [среде] [у] LT', '[прошлог] [четвртка] [у] LT', '[прошлог] [петка] [у] LT', '[прошле] [суботе] [у] LT'];
	                return lastWeekDays[this.day()];
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'за %s',
	            past: 'пре %s',
	            s: 'неколико секунди',
	            m: translator.translate,
	            mm: translator.translate,
	            h: translator.translate,
	            hh: translator.translate,
	            d: 'дан',
	            dd: translator.translate,
	            M: 'месец',
	            MM: translator.translate,
	            y: 'годину',
	            yy: translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sr_cyrl;
	});

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : siSwati [ss]
	//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var ss = moment.defineLocale('ss', {
	        months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
	        monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
	        weekdays: 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
	        weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
	        weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'h:mm A',
	            LTS: 'h:mm:ss A',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY h:mm A',
	            LLLL: 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar: {
	            sameDay: '[Namuhla nga] LT',
	            nextDay: '[Kusasa nga] LT',
	            nextWeek: 'dddd [nga] LT',
	            lastDay: '[Itolo nga] LT',
	            lastWeek: 'dddd [leliphelile] [nga] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'nga %s',
	            past: 'wenteka nga %s',
	            s: 'emizuzwana lomcane',
	            m: 'umzuzu',
	            mm: '%d emizuzu',
	            h: 'lihora',
	            hh: '%d emahora',
	            d: 'lilanga',
	            dd: '%d emalanga',
	            M: 'inyanga',
	            MM: '%d tinyanga',
	            y: 'umnyaka',
	            yy: '%d iminyaka'
	        },
	        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'ekuseni';
	            } else if (hours < 15) {
	                return 'emini';
	            } else if (hours < 19) {
	                return 'entsambama';
	            } else {
	                return 'ebusuku';
	            }
	        },
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'ekuseni') {
	                return hour;
	            } else if (meridiem === 'emini') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
	                if (hour === 0) {
	                    return 0;
	                }
	                return hour + 12;
	            }
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal: '%d',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ss;
	});

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Swedish [sv]
	//! author : Jens Alm : https://github.com/ulmus

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var sv = moment.defineLocale('sv', {
	        months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
	        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
	        weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
	        weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'YYYY-MM-DD',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY [kl.] HH:mm',
	            LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',
	            lll: 'D MMM YYYY HH:mm',
	            llll: 'ddd D MMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Idag] LT',
	            nextDay: '[Imorgon] LT',
	            lastDay: '[Igår] LT',
	            nextWeek: '[På] dddd LT',
	            lastWeek: '[I] dddd[s] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'om %s',
	            past: 'för %s sedan',
	            s: 'några sekunder',
	            m: 'en minut',
	            mm: '%d minuter',
	            h: 'en timme',
	            hh: '%d timmar',
	            d: 'en dag',
	            dd: '%d dagar',
	            M: 'en månad',
	            MM: '%d månader',
	            y: 'ett år',
	            yy: '%d år'
	        },
	        ordinalParse: /\d{1,2}(e|a)/,
	        ordinal: function ordinal(number) {
	            var b = number % 10,
	                output = ~~(number % 100 / 10) === 1 ? 'e' : b === 1 ? 'a' : b === 2 ? 'a' : b === 3 ? 'e' : 'e';
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sv;
	});

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Swahili [sw]
	//! author : Fahad Kassim : https://github.com/fadsel

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var sw = moment.defineLocale('sw', {
	        months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
	        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
	        weekdays: 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
	        weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
	        weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[leo saa] LT',
	            nextDay: '[kesho saa] LT',
	            nextWeek: '[wiki ijayo] dddd [saat] LT',
	            lastDay: '[jana] LT',
	            lastWeek: '[wiki iliyopita] dddd [saat] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s baadaye',
	            past: 'tokea %s',
	            s: 'hivi punde',
	            m: 'dakika moja',
	            mm: 'dakika %d',
	            h: 'saa limoja',
	            hh: 'masaa %d',
	            d: 'siku moja',
	            dd: 'masiku %d',
	            M: 'mwezi mmoja',
	            MM: 'miezi %d',
	            y: 'mwaka mmoja',
	            yy: 'miaka %d'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sw;
	});

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Tamil [ta]
	//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var symbolMap = {
	        '1': '௧',
	        '2': '௨',
	        '3': '௩',
	        '4': '௪',
	        '5': '௫',
	        '6': '௬',
	        '7': '௭',
	        '8': '௮',
	        '9': '௯',
	        '0': '௦'
	    },
	        numberMap = {
	        '௧': '1',
	        '௨': '2',
	        '௩': '3',
	        '௪': '4',
	        '௫': '5',
	        '௬': '6',
	        '௭': '7',
	        '௮': '8',
	        '௯': '9',
	        '௦': '0'
	    };

	    var ta = moment.defineLocale('ta', {
	        months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        monthsShort: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        weekdays: 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
	        weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
	        weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, HH:mm',
	            LLLL: 'dddd, D MMMM YYYY, HH:mm'
	        },
	        calendar: {
	            sameDay: '[இன்று] LT',
	            nextDay: '[நாளை] LT',
	            nextWeek: 'dddd, LT',
	            lastDay: '[நேற்று] LT',
	            lastWeek: '[கடந்த வாரம்] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s இல்',
	            past: '%s முன்',
	            s: 'ஒரு சில விநாடிகள்',
	            m: 'ஒரு நிமிடம்',
	            mm: '%d நிமிடங்கள்',
	            h: 'ஒரு மணி நேரம்',
	            hh: '%d மணி நேரம்',
	            d: 'ஒரு நாள்',
	            dd: '%d நாட்கள்',
	            M: 'ஒரு மாதம்',
	            MM: '%d மாதங்கள்',
	            y: 'ஒரு வருடம்',
	            yy: '%d ஆண்டுகள்'
	        },
	        ordinalParse: /\d{1,2}வது/,
	        ordinal: function ordinal(number) {
	            return number + 'வது';
	        },
	        preparse: function preparse(string) {
	            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function postformat(string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // refer http://ta.wikipedia.org/s/1er1
	        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 2) {
	                return ' யாமம்';
	            } else if (hour < 6) {
	                return ' வைகறை'; // வைகறை
	            } else if (hour < 10) {
	                return ' காலை'; // காலை
	            } else if (hour < 14) {
	                return ' நண்பகல்'; // நண்பகல்
	            } else if (hour < 18) {
	                return ' எற்பாடு'; // எற்பாடு
	            } else if (hour < 22) {
	                return ' மாலை'; // மாலை
	            } else {
	                return ' யாமம்';
	            }
	        },
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'யாமம்') {
	                return hour < 2 ? hour : hour + 12;
	            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
	                return hour;
	            } else if (meridiem === 'நண்பகல்') {
	                return hour >= 10 ? hour : hour + 12;
	            } else {
	                return hour + 12;
	            }
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ta;
	});

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Telugu [te]
	//! author : Krishna Chaitanya Thota : https://github.com/kcthota

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var te = moment.defineLocale('te', {
	        months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
	        monthsShort: 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
	        weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
	        weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
	        longDateFormat: {
	            LT: 'A h:mm',
	            LTS: 'A h:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, A h:mm',
	            LLLL: 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar: {
	            sameDay: '[నేడు] LT',
	            nextDay: '[రేపు] LT',
	            nextWeek: 'dddd, LT',
	            lastDay: '[నిన్న] LT',
	            lastWeek: '[గత] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s లో',
	            past: '%s క్రితం',
	            s: 'కొన్ని క్షణాలు',
	            m: 'ఒక నిమిషం',
	            mm: '%d నిమిషాలు',
	            h: 'ఒక గంట',
	            hh: '%d గంటలు',
	            d: 'ఒక రోజు',
	            dd: '%d రోజులు',
	            M: 'ఒక నెల',
	            MM: '%d నెలలు',
	            y: 'ఒక సంవత్సరం',
	            yy: '%d సంవత్సరాలు'
	        },
	        ordinalParse: /\d{1,2}వ/,
	        ordinal: '%dవ',
	        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'రాత్రి') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'ఉదయం') {
	                return hour;
	            } else if (meridiem === 'మధ్యాహ్నం') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'సాయంత్రం') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'రాత్రి';
	            } else if (hour < 10) {
	                return 'ఉదయం';
	            } else if (hour < 17) {
	                return 'మధ్యాహ్నం';
	            } else if (hour < 20) {
	                return 'సాయంత్రం';
	            } else {
	                return 'రాత్రి';
	            }
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return te;
	});

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Thai [th]
	//! author : Kridsada Thanabulpong : https://github.com/sirn

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var th = moment.defineLocale('th', {
	        months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
	        monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
	        weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
	        weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS: 'H:mm:ss',
	            L: 'YYYY/MM/DD',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY เวลา H:mm',
	            LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'
	        },
	        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
	        isPM: function isPM(input) {
	            return input === 'หลังเที่ยง';
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ก่อนเที่ยง';
	            } else {
	                return 'หลังเที่ยง';
	            }
	        },
	        calendar: {
	            sameDay: '[วันนี้ เวลา] LT',
	            nextDay: '[พรุ่งนี้ เวลา] LT',
	            nextWeek: 'dddd[หน้า เวลา] LT',
	            lastDay: '[เมื่อวานนี้ เวลา] LT',
	            lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'อีก %s',
	            past: '%sที่แล้ว',
	            s: 'ไม่กี่วินาที',
	            m: '1 นาที',
	            mm: '%d นาที',
	            h: '1 ชั่วโมง',
	            hh: '%d ชั่วโมง',
	            d: '1 วัน',
	            dd: '%d วัน',
	            M: '1 เดือน',
	            MM: '%d เดือน',
	            y: '1 ปี',
	            yy: '%d ปี'
	        }
	    });

	    return th;
	});

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Tagalog (Philippines) [tl-ph]
	//! author : Dan Hagman : https://github.com/hagmandan

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var tl_ph = moment.defineLocale('tl-ph', {
	        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
	        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
	        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
	        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
	        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'MM/D/YYYY',
	            LL: 'MMMM D, YYYY',
	            LLL: 'MMMM D, YYYY HH:mm',
	            LLLL: 'dddd, MMMM DD, YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Ngayon sa] LT',
	            nextDay: '[Bukas sa] LT',
	            nextWeek: 'dddd [sa] LT',
	            lastDay: '[Kahapon sa] LT',
	            lastWeek: 'dddd [huling linggo] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'sa loob ng %s',
	            past: '%s ang nakalipas',
	            s: 'ilang segundo',
	            m: 'isang minuto',
	            mm: '%d minuto',
	            h: 'isang oras',
	            hh: '%d oras',
	            d: 'isang araw',
	            dd: '%d araw',
	            M: 'isang buwan',
	            MM: '%d buwan',
	            y: 'isang taon',
	            yy: '%d taon'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal: function ordinal(number) {
	            return number;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return tl_ph;
	});

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Klingon [tlh]
	//! author : Dominika Kruk : https://github.com/amaranthrose

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

	    function translateFuture(output) {
	        var time = output;
	        time = output.indexOf('jaj') !== -1 ? time.slice(0, -3) + 'leS' : output.indexOf('jar') !== -1 ? time.slice(0, -3) + 'waQ' : output.indexOf('DIS') !== -1 ? time.slice(0, -3) + 'nem' : time + ' pIq';
	        return time;
	    }

	    function translatePast(output) {
	        var time = output;
	        time = output.indexOf('jaj') !== -1 ? time.slice(0, -3) + 'Hu’' : output.indexOf('jar') !== -1 ? time.slice(0, -3) + 'wen' : output.indexOf('DIS') !== -1 ? time.slice(0, -3) + 'ben' : time + ' ret';
	        return time;
	    }

	    function translate(number, withoutSuffix, string, isFuture) {
	        var numberNoun = numberAsNoun(number);
	        switch (string) {
	            case 'mm':
	                return numberNoun + ' tup';
	            case 'hh':
	                return numberNoun + ' rep';
	            case 'dd':
	                return numberNoun + ' jaj';
	            case 'MM':
	                return numberNoun + ' jar';
	            case 'yy':
	                return numberNoun + ' DIS';
	        }
	    }

	    function numberAsNoun(number) {
	        var hundred = Math.floor(number % 1000 / 100),
	            ten = Math.floor(number % 100 / 10),
	            one = number % 10,
	            word = '';
	        if (hundred > 0) {
	            word += numbersNouns[hundred] + 'vatlh';
	        }
	        if (ten > 0) {
	            word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';
	        }
	        if (one > 0) {
	            word += (word !== '' ? ' ' : '') + numbersNouns[one];
	        }
	        return word === '' ? 'pagh' : word;
	    }

	    var tlh = moment.defineLocale('tlh', {
	        months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
	        monthsShort: 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        weekdaysShort: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        weekdaysMin: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[DaHjaj] LT',
	            nextDay: '[wa’leS] LT',
	            nextWeek: 'LLL',
	            lastDay: '[wa’Hu’] LT',
	            lastWeek: 'LLL',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: translateFuture,
	            past: translatePast,
	            s: 'puS lup',
	            m: 'wa’ tup',
	            mm: translate,
	            h: 'wa’ rep',
	            hh: translate,
	            d: 'wa’ jaj',
	            dd: translate,
	            M: 'wa’ jar',
	            MM: translate,
	            y: 'wa’ DIS',
	            yy: translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return tlh;
	});

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Turkish [tr]
	//! authors : Erhan Gundogan : https://github.com/erhangundogan,
	//!           Burak Yiğit Kaya: https://github.com/BYK

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var suffixes = {
	        1: '\'inci',
	        5: '\'inci',
	        8: '\'inci',
	        70: '\'inci',
	        80: '\'inci',
	        2: '\'nci',
	        7: '\'nci',
	        20: '\'nci',
	        50: '\'nci',
	        3: '\'üncü',
	        4: '\'üncü',
	        100: '\'üncü',
	        6: '\'ncı',
	        9: '\'uncu',
	        10: '\'uncu',
	        30: '\'uncu',
	        60: '\'ıncı',
	        90: '\'ıncı'
	    };

	    var tr = moment.defineLocale('tr', {
	        months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
	        monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
	        weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
	        weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
	        weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[bugün saat] LT',
	            nextDay: '[yarın saat] LT',
	            nextWeek: '[haftaya] dddd [saat] LT',
	            lastDay: '[dün] LT',
	            lastWeek: '[geçen hafta] dddd [saat] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s sonra',
	            past: '%s önce',
	            s: 'birkaç saniye',
	            m: 'bir dakika',
	            mm: '%d dakika',
	            h: 'bir saat',
	            hh: '%d saat',
	            d: 'bir gün',
	            dd: '%d gün',
	            M: 'bir ay',
	            MM: '%d ay',
	            y: 'bir yıl',
	            yy: '%d yıl'
	        },
	        ordinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
	        ordinal: function ordinal(number) {
	            if (number === 0) {
	                // special case for zero
	                return number + '\'ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tr;
	});

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Talossan [tzl]
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v
	//! author : Iustì Canun

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
	    // This is currently too difficult (maybe even impossible) to add.

	    var tzl = moment.defineLocale('tzl', {
	        months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
	        monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
	        weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
	        weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
	        weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
	        longDateFormat: {
	            LT: 'HH.mm',
	            LTS: 'HH.mm.ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM [dallas] YYYY',
	            LLL: 'D. MMMM [dallas] YYYY HH.mm',
	            LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
	        },
	        meridiemParse: /d\'o|d\'a/i,
	        isPM: function isPM(input) {
	            return 'd\'o' === input.toLowerCase();
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'd\'o' : 'D\'O';
	            } else {
	                return isLower ? 'd\'a' : 'D\'A';
	            }
	        },
	        calendar: {
	            sameDay: '[oxhi à] LT',
	            nextDay: '[demà à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[ieiri à] LT',
	            lastWeek: '[sür el] dddd [lasteu à] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'osprei %s',
	            past: 'ja%s',
	            s: processRelativeTime,
	            m: processRelativeTime,
	            mm: processRelativeTime,
	            h: processRelativeTime,
	            hh: processRelativeTime,
	            d: processRelativeTime,
	            dd: processRelativeTime,
	            M: processRelativeTime,
	            MM: processRelativeTime,
	            y: processRelativeTime,
	            yy: processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's': ['viensas secunds', '\'iensas secunds'],
	            'm': ['\'n míut', '\'iens míut'],
	            'mm': [number + ' míuts', '' + number + ' míuts'],
	            'h': ['\'n þora', '\'iensa þora'],
	            'hh': [number + ' þoras', '' + number + ' þoras'],
	            'd': ['\'n ziua', '\'iensa ziua'],
	            'dd': [number + ' ziuas', '' + number + ' ziuas'],
	            'M': ['\'n mes', '\'iens mes'],
	            'MM': [number + ' mesen', '' + number + ' mesen'],
	            'y': ['\'n ar', '\'iens ar'],
	            'yy': [number + ' ars', '' + number + ' ars']
	        };
	        return isFuture ? format[key][0] : withoutSuffix ? format[key][0] : format[key][1];
	    }

	    return tzl;
	});

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Central Atlas Tamazight [tzm]
	//! author : Abdel Said : https://github.com/abdelsaid

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var tzm = moment.defineLocale('tzm', {
	        months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        monthsShort: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
	            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
	            nextWeek: 'dddd [ⴴ] LT',
	            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
	            lastWeek: 'dddd [ⴴ] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
	            past: 'ⵢⴰⵏ %s',
	            s: 'ⵉⵎⵉⴽ',
	            m: 'ⵎⵉⵏⵓⴺ',
	            mm: '%d ⵎⵉⵏⵓⴺ',
	            h: 'ⵙⴰⵄⴰ',
	            hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
	            d: 'ⴰⵙⵙ',
	            dd: '%d oⵙⵙⴰⵏ',
	            M: 'ⴰⵢoⵓⵔ',
	            MM: '%d ⵉⵢⵢⵉⵔⵏ',
	            y: 'ⴰⵙⴳⴰⵙ',
	            yy: '%d ⵉⵙⴳⴰⵙⵏ'
	        },
	        week: {
	            dow: 6, // Saturday is the first day of the week.
	            doy: 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tzm;
	});

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Central Atlas Tamazight Latin [tzm-latn]
	//! author : Abdel Said : https://github.com/abdelsaid

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var tzm_latn = moment.defineLocale('tzm-latn', {
	        months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        monthsShort: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[asdkh g] LT',
	            nextDay: '[aska g] LT',
	            nextWeek: 'dddd [g] LT',
	            lastDay: '[assant g] LT',
	            lastWeek: 'dddd [g] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'dadkh s yan %s',
	            past: 'yan %s',
	            s: 'imik',
	            m: 'minuḍ',
	            mm: '%d minuḍ',
	            h: 'saɛa',
	            hh: '%d tassaɛin',
	            d: 'ass',
	            dd: '%d ossan',
	            M: 'ayowr',
	            MM: '%d iyyirn',
	            y: 'asgas',
	            yy: '%d isgasn'
	        },
	        week: {
	            dow: 6, // Saturday is the first day of the week.
	            doy: 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tzm_latn;
	});

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Ukrainian [uk]
	//! author : zemlanin : https://github.com/zemlanin
	//! Author : Menelion Elensúle : https://github.com/Oire

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
	            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
	            'dd': 'день_дні_днів',
	            'MM': 'місяць_місяці_місяців',
	            'yy': 'рік_роки_років'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвилина' : 'хвилину';
	        } else if (key === 'h') {
	            return withoutSuffix ? 'година' : 'годину';
	        } else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
	            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
	            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
	        },
	            nounCase = /(\[[ВвУу]\]) ?dddd/.test(format) ? 'accusative' : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(format) ? 'genitive' : 'nominative';
	        return weekdays[nounCase][m.day()];
	    }
	    function processHoursFunction(str) {
	        return function () {
	            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
	        };
	    }

	    var uk = moment.defineLocale('uk', {
	        months: {
	            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
	            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
	        },
	        monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
	        weekdays: weekdaysCaseReplace,
	        weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D MMMM YYYY р.',
	            LLL: 'D MMMM YYYY р., HH:mm',
	            LLLL: 'dddd, D MMMM YYYY р., HH:mm'
	        },
	        calendar: {
	            sameDay: processHoursFunction('[Сьогодні '),
	            nextDay: processHoursFunction('[Завтра '),
	            lastDay: processHoursFunction('[Вчора '),
	            nextWeek: processHoursFunction('[У] dddd ['),
	            lastWeek: function lastWeek() {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 5:
	                    case 6:
	                        return processHoursFunction('[Минулої] dddd [').call(this);
	                    case 1:
	                    case 2:
	                    case 4:
	                        return processHoursFunction('[Минулого] dddd [').call(this);
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'за %s',
	            past: '%s тому',
	            s: 'декілька секунд',
	            m: relativeTimeWithPlural,
	            mm: relativeTimeWithPlural,
	            h: 'годину',
	            hh: relativeTimeWithPlural,
	            d: 'день',
	            dd: relativeTimeWithPlural,
	            M: 'місяць',
	            MM: relativeTimeWithPlural,
	            y: 'рік',
	            yy: relativeTimeWithPlural
	        },
	        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
	        meridiemParse: /ночі|ранку|дня|вечора/,
	        isPM: function isPM(input) {
	            return (/^(дня|вечора)$/.test(input)
	            );
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночі';
	            } else if (hour < 12) {
	                return 'ранку';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечора';
	            }
	        },
	        ordinalParse: /\d{1,2}-(й|го)/,
	        ordinal: function ordinal(number, period) {
	            switch (period) {
	                case 'M':
	                case 'd':
	                case 'DDD':
	                case 'w':
	                case 'W':
	                    return number + '-й';
	                case 'D':
	                    return number + '-го';
	                default:
	                    return number;
	            }
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return uk;
	});

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Uzbek [uz]
	//! author : Sardor Muminov : https://github.com/muminoff

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var uz = moment.defineLocale('uz', {
	        months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
	        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
	        weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
	        weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'D MMMM YYYY, dddd HH:mm'
	        },
	        calendar: {
	            sameDay: '[Бугун соат] LT [да]',
	            nextDay: '[Эртага] LT [да]',
	            nextWeek: 'dddd [куни соат] LT [да]',
	            lastDay: '[Кеча соат] LT [да]',
	            lastWeek: '[Утган] dddd [куни соат] LT [да]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'Якин %s ичида',
	            past: 'Бир неча %s олдин',
	            s: 'фурсат',
	            m: 'бир дакика',
	            mm: '%d дакика',
	            h: 'бир соат',
	            hh: '%d соат',
	            d: 'бир кун',
	            dd: '%d кун',
	            M: 'бир ой',
	            MM: '%d ой',
	            y: 'бир йил',
	            yy: '%d йил'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return uz;
	});

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Vietnamese [vi]
	//! author : Bang Nguyen : https://github.com/bangnk

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var vi = moment.defineLocale('vi', {
	        months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
	        monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
	        weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysParseExact: true,
	        meridiemParse: /sa|ch/i,
	        isPM: function isPM(input) {
	            return (/^ch$/i.test(input)
	            );
	        },
	        meridiem: function meridiem(hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'sa' : 'SA';
	            } else {
	                return isLower ? 'ch' : 'CH';
	            }
	        },
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM [năm] YYYY',
	            LLL: 'D MMMM [năm] YYYY HH:mm',
	            LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',
	            l: 'DD/M/YYYY',
	            ll: 'D MMM YYYY',
	            lll: 'D MMM YYYY HH:mm',
	            llll: 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Hôm nay lúc] LT',
	            nextDay: '[Ngày mai lúc] LT',
	            nextWeek: 'dddd [tuần tới lúc] LT',
	            lastDay: '[Hôm qua lúc] LT',
	            lastWeek: 'dddd [tuần rồi lúc] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s tới',
	            past: '%s trước',
	            s: 'vài giây',
	            m: 'một phút',
	            mm: '%d phút',
	            h: 'một giờ',
	            hh: '%d giờ',
	            d: 'một ngày',
	            dd: '%d ngày',
	            M: 'một tháng',
	            MM: '%d tháng',
	            y: 'một năm',
	            yy: '%d năm'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal: function ordinal(number) {
	            return number;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return vi;
	});

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Pseudo [x-pseudo]
	//! author : Andrew Hood : https://github.com/andrewhood125

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var x_pseudo = moment.defineLocale('x-pseudo', {
	        months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
	        monthsShort: 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
	        weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
	        weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[T~ódá~ý át] LT',
	            nextDay: '[T~ómó~rró~w át] LT',
	            nextWeek: 'dddd [át] LT',
	            lastDay: '[Ý~ést~érdá~ý át] LT',
	            lastWeek: '[L~ást] dddd [át] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'í~ñ %s',
	            past: '%s á~gó',
	            s: 'á ~féw ~sécó~ñds',
	            m: 'á ~míñ~úté',
	            mm: '%d m~íñú~tés',
	            h: 'á~ñ hó~úr',
	            hh: '%d h~óúrs',
	            d: 'á ~dáý',
	            dd: '%d d~áýs',
	            M: 'á ~móñ~th',
	            MM: '%d m~óñt~hs',
	            y: 'á ~ýéár',
	            yy: '%d ý~éárs'
	        },
	        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal: function ordinal(number) {
	            var b = number % 10,
	                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
	            return number + output;
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return x_pseudo;
	});

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Chinese (China) [zh-cn]
	//! author : suupic : https://github.com/suupic
	//! author : Zeno Zeng : https://github.com/zenozeng

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var zh_cn = moment.defineLocale('zh-cn', {
	        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
	        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat: {
	            LT: 'Ah点mm分',
	            LTS: 'Ah点m分s秒',
	            L: 'YYYY-MM-DD',
	            LL: 'YYYY年MMMD日',
	            LLL: 'YYYY年MMMD日Ah点mm分',
	            LLLL: 'YYYY年MMMD日ddddAh点mm分',
	            l: 'YYYY-MM-DD',
	            ll: 'YYYY年MMMD日',
	            lll: 'YYYY年MMMD日Ah点mm分',
	            llll: 'YYYY年MMMD日ddddAh点mm分'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            } else {
	                // '中午'
	                return hour >= 11 ? hour : hour + 12;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar: {
	            sameDay: function sameDay() {
	                return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';
	            },
	            nextDay: function nextDay() {
	                return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';
	            },
	            lastDay: function lastDay() {
	                return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';
	            },
	            nextWeek: function nextWeek() {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.diff(startOfWeek, 'days') >= 7 ? '[下]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            lastWeek: function lastWeek() {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.unix() < startOfWeek.unix() ? '[上]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            sameElse: 'LL'
	        },
	        ordinalParse: /\d{1,2}(日|月|周)/,
	        ordinal: function ordinal(number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + '日';
	                case 'M':
	                    return number + '月';
	                case 'w':
	                case 'W':
	                    return number + '周';
	                default:
	                    return number;
	            }
	        },
	        relativeTime: {
	            future: '%s内',
	            past: '%s前',
	            s: '几秒',
	            m: '1 分钟',
	            mm: '%d 分钟',
	            h: '1 小时',
	            hh: '%d 小时',
	            d: '1 天',
	            dd: '%d 天',
	            M: '1 个月',
	            MM: '%d 个月',
	            y: '1 年',
	            yy: '%d 年'
	        },
	        week: {
	            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return zh_cn;
	});

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Chinese (Hong Kong) [zh-hk]
	//! author : Ben : https://github.com/ben-lin
	//! author : Chris Lam : https://github.com/hehachris
	//! author : Konstantin : https://github.com/skfd

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var zh_hk = moment.defineLocale('zh-hk', {
	        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat: {
	            LT: 'Ah點mm分',
	            LTS: 'Ah點m分s秒',
	            L: 'YYYY年MMMD日',
	            LL: 'YYYY年MMMD日',
	            LLL: 'YYYY年MMMD日Ah點mm分',
	            LLLL: 'YYYY年MMMD日ddddAh點mm分',
	            l: 'YYYY年MMMD日',
	            ll: 'YYYY年MMMD日',
	            lll: 'YYYY年MMMD日Ah點mm分',
	            llll: 'YYYY年MMMD日ddddAh點mm分'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '中午') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar: {
	            sameDay: '[今天]LT',
	            nextDay: '[明天]LT',
	            nextWeek: '[下]ddddLT',
	            lastDay: '[昨天]LT',
	            lastWeek: '[上]ddddLT',
	            sameElse: 'L'
	        },
	        ordinalParse: /\d{1,2}(日|月|週)/,
	        ordinal: function ordinal(number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + '日';
	                case 'M':
	                    return number + '月';
	                case 'w':
	                case 'W':
	                    return number + '週';
	                default:
	                    return number;
	            }
	        },
	        relativeTime: {
	            future: '%s內',
	            past: '%s前',
	            s: '幾秒',
	            m: '1 分鐘',
	            mm: '%d 分鐘',
	            h: '1 小時',
	            hh: '%d 小時',
	            d: '1 天',
	            dd: '%d 天',
	            M: '1 個月',
	            MM: '%d 個月',
	            y: '1 年',
	            yy: '%d 年'
	        }
	    });

	    return zh_hk;
	});

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	//! moment.js locale configuration
	//! locale : Chinese (Taiwan) [zh-tw]
	//! author : Ben : https://github.com/ben-lin
	//! author : Chris Lam : https://github.com/hehachris

	;(function (global, factory) {
	    ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' && "function" === 'function' ? factory(__webpack_require__(177)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(177)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.moment);
	})(undefined, function (moment) {
	    'use strict';

	    var zh_tw = moment.defineLocale('zh-tw', {
	        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat: {
	            LT: 'Ah點mm分',
	            LTS: 'Ah點m分s秒',
	            L: 'YYYY年MMMD日',
	            LL: 'YYYY年MMMD日',
	            LLL: 'YYYY年MMMD日Ah點mm分',
	            LLLL: 'YYYY年MMMD日ddddAh點mm分',
	            l: 'YYYY年MMMD日',
	            ll: 'YYYY年MMMD日',
	            lll: 'YYYY年MMMD日Ah點mm分',
	            llll: 'YYYY年MMMD日ddddAh點mm分'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour: function meridiemHour(hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '中午') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            }
	        },
	        meridiem: function meridiem(hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar: {
	            sameDay: '[今天]LT',
	            nextDay: '[明天]LT',
	            nextWeek: '[下]ddddLT',
	            lastDay: '[昨天]LT',
	            lastWeek: '[上]ddddLT',
	            sameElse: 'L'
	        },
	        ordinalParse: /\d{1,2}(日|月|週)/,
	        ordinal: function ordinal(number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + '日';
	                case 'M':
	                    return number + '月';
	                case 'w':
	                case 'W':
	                    return number + '週';
	                default:
	                    return number;
	            }
	        },
	        relativeTime: {
	            future: '%s內',
	            past: '%s前',
	            s: '幾秒',
	            m: '1 分鐘',
	            mm: '%d 分鐘',
	            h: '1 小時',
	            hh: '%d 小時',
	            d: '1 天',
	            dd: '%d 天',
	            M: '1 個月',
	            MM: '%d 個月',
	            y: '1 年',
	            yy: '%d 年'
	        }
	    });

	    return zh_tw;
	});

/***/ },
/* 284 */
/***/ function(module, exports) {

	'use strict';

	// DOM utility methods

	/**
	 * this prepares the JSON container for allocating SVG elements
	 * @param JSONcontainer
	 * @private
	 */
	exports.prepareElements = function (JSONcontainer) {
	  // cleanup the redundant svgElements;
	  for (var elementType in JSONcontainer) {
	    if (JSONcontainer.hasOwnProperty(elementType)) {
	      JSONcontainer[elementType].redundant = JSONcontainer[elementType].used;
	      JSONcontainer[elementType].used = [];
	    }
	  }
	};

	/**
	 * this cleans up all the unused SVG elements. By asking for the parentNode, we only need to supply the JSON container from
	 * which to remove the redundant elements.
	 *
	 * @param JSONcontainer
	 * @private
	 */
	exports.cleanupElements = function (JSONcontainer) {
	  // cleanup the redundant svgElements;
	  for (var elementType in JSONcontainer) {
	    if (JSONcontainer.hasOwnProperty(elementType)) {
	      if (JSONcontainer[elementType].redundant) {
	        for (var i = 0; i < JSONcontainer[elementType].redundant.length; i++) {
	          JSONcontainer[elementType].redundant[i].parentNode.removeChild(JSONcontainer[elementType].redundant[i]);
	        }
	        JSONcontainer[elementType].redundant = [];
	      }
	    }
	  }
	};

	/**
	 * Allocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer
	 * the JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.
	 *
	 * @param elementType
	 * @param JSONcontainer
	 * @param svgContainer
	 * @returns {*}
	 * @private
	 */
	exports.getSVGElement = function (elementType, JSONcontainer, svgContainer) {
	  var element;
	  // allocate SVG element, if it doesnt yet exist, create one.
	  if (JSONcontainer.hasOwnProperty(elementType)) {
	    // this element has been created before
	    // check if there is an redundant element
	    if (JSONcontainer[elementType].redundant.length > 0) {
	      element = JSONcontainer[elementType].redundant[0];
	      JSONcontainer[elementType].redundant.shift();
	    } else {
	      // create a new element and add it to the SVG
	      element = document.createElementNS('http://www.w3.org/2000/svg', elementType);
	      svgContainer.appendChild(element);
	    }
	  } else {
	    // create a new element and add it to the SVG, also create a new object in the svgElements to keep track of it.
	    element = document.createElementNS('http://www.w3.org/2000/svg', elementType);
	    JSONcontainer[elementType] = { used: [], redundant: [] };
	    svgContainer.appendChild(element);
	  }
	  JSONcontainer[elementType].used.push(element);
	  return element;
	};

	/**
	 * Allocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer
	 * the JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.
	 *
	 * @param elementType
	 * @param JSONcontainer
	 * @param DOMContainer
	 * @returns {*}
	 * @private
	 */
	exports.getDOMElement = function (elementType, JSONcontainer, DOMContainer, insertBefore) {
	  var element;
	  // allocate DOM element, if it doesnt yet exist, create one.
	  if (JSONcontainer.hasOwnProperty(elementType)) {
	    // this element has been created before
	    // check if there is an redundant element
	    if (JSONcontainer[elementType].redundant.length > 0) {
	      element = JSONcontainer[elementType].redundant[0];
	      JSONcontainer[elementType].redundant.shift();
	    } else {
	      // create a new element and add it to the SVG
	      element = document.createElement(elementType);
	      if (insertBefore !== undefined) {
	        DOMContainer.insertBefore(element, insertBefore);
	      } else {
	        DOMContainer.appendChild(element);
	      }
	    }
	  } else {
	    // create a new element and add it to the SVG, also create a new object in the svgElements to keep track of it.
	    element = document.createElement(elementType);
	    JSONcontainer[elementType] = { used: [], redundant: [] };
	    if (insertBefore !== undefined) {
	      DOMContainer.insertBefore(element, insertBefore);
	    } else {
	      DOMContainer.appendChild(element);
	    }
	  }
	  JSONcontainer[elementType].used.push(element);
	  return element;
	};

	/**
	 * draw a point object. this is a seperate function because it can also be called by the legend.
	 * The reason the JSONcontainer and the target SVG svgContainer have to be supplied is so the legend can use these functions
	 * as well.
	 *
	 * @param x
	 * @param y
	 * @param group
	 * @param JSONcontainer
	 * @param svgContainer
	 * @param labelObj
	 * @returns {*}
	 */
	exports.drawPoint = function (x, y, group, JSONcontainer, svgContainer, labelObj) {
	  var point;
	  if (group.options.drawPoints.style == 'circle') {
	    point = exports.getSVGElement('circle', JSONcontainer, svgContainer);
	    point.setAttributeNS(null, "cx", x);
	    point.setAttributeNS(null, "cy", y);
	    point.setAttributeNS(null, "r", 0.5 * group.options.drawPoints.size);
	  } else {
	    point = exports.getSVGElement('rect', JSONcontainer, svgContainer);
	    point.setAttributeNS(null, "x", x - 0.5 * group.options.drawPoints.size);
	    point.setAttributeNS(null, "y", y - 0.5 * group.options.drawPoints.size);
	    point.setAttributeNS(null, "width", group.options.drawPoints.size);
	    point.setAttributeNS(null, "height", group.options.drawPoints.size);
	  }

	  if (group.options.drawPoints.styles !== undefined) {
	    point.setAttributeNS(null, "style", group.group.options.drawPoints.styles);
	  }
	  point.setAttributeNS(null, "class", group.className + " point");
	  //handle label 
	  var label = exports.getSVGElement('text', JSONcontainer, svgContainer);
	  if (labelObj) {
	    if (labelObj.xOffset) {
	      x = x + labelObj.xOffset;
	    }

	    if (labelObj.yOffset) {
	      y = y + labelObj.yOffset;
	    }
	    if (labelObj.content) {
	      label.textContent = labelObj.content;
	    }

	    if (labelObj.className) {
	      label.setAttributeNS(null, "class", labelObj.className + " label");
	    }
	  }
	  label.setAttributeNS(null, "x", x);
	  label.setAttributeNS(null, "y", y);
	  return point;
	};

	/**
	 * draw a bar SVG element centered on the X coordinate
	 *
	 * @param x
	 * @param y
	 * @param className
	 */
	exports.drawBar = function (x, y, width, height, className, JSONcontainer, svgContainer) {
	  if (height != 0) {
	    if (height < 0) {
	      height *= -1;
	      y -= height;
	    }
	    var rect = exports.getSVGElement('rect', JSONcontainer, svgContainer);
	    rect.setAttributeNS(null, "x", x - 0.5 * width);
	    rect.setAttributeNS(null, "y", y);
	    rect.setAttributeNS(null, "width", width);
	    rect.setAttributeNS(null, "height", height);
	    rect.setAttributeNS(null, "class", className);
	  }
	};

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var util = __webpack_require__(175);
	var Queue = __webpack_require__(286);

	/**
	 * DataSet
	 *
	 * Usage:
	 *     var dataSet = new DataSet({
	 *         fieldId: '_id',
	 *         type: {
	 *             // ...
	 *         }
	 *     });
	 *
	 *     dataSet.add(item);
	 *     dataSet.add(data);
	 *     dataSet.update(item);
	 *     dataSet.update(data);
	 *     dataSet.remove(id);
	 *     dataSet.remove(ids);
	 *     var data = dataSet.get();
	 *     var data = dataSet.get(id);
	 *     var data = dataSet.get(ids);
	 *     var data = dataSet.get(ids, options, data);
	 *     dataSet.clear();
	 *
	 * A data set can:
	 * - add/remove/update data
	 * - gives triggers upon changes in the data
	 * - can  import/export data in various data formats
	 *
	 * @param {Array | DataTable} [data]    Optional array with initial data
	 * @param {Object} [options]   Available options:
	 *                             {String} fieldId Field name of the id in the
	 *                                              items, 'id' by default.
	 *                             {Object.<String, String} type
	 *                                              A map with field names as key,
	 *                                              and the field type as value.
	 *                             {Object} queue   Queue changes to the DataSet,
	 *                                              flush them all at once.
	 *                                              Queue options:
	 *                                              - {number} delay  Delay in ms, null by default
	 *                                              - {number} max    Maximum number of entries in the queue, Infinity by default
	 * @constructor DataSet
	 */
	// TODO: add a DataSet constructor DataSet(data, options)
	function DataSet(data, options) {
	  // correctly read optional arguments
	  if (data && !Array.isArray(data) && !util.isDataTable(data)) {
	    options = data;
	    data = null;
	  }

	  this._options = options || {};
	  this._data = {}; // map with data indexed by id
	  this.length = 0; // number of items in the DataSet
	  this._fieldId = this._options.fieldId || 'id'; // name of the field containing id
	  this._type = {}; // internal field types (NOTE: this can differ from this._options.type)

	  // all variants of a Date are internally stored as Date, so we can convert
	  // from everything to everything (also from ISODate to Number for example)
	  if (this._options.type) {
	    for (var field in this._options.type) {
	      if (this._options.type.hasOwnProperty(field)) {
	        var value = this._options.type[field];
	        if (value == 'Date' || value == 'ISODate' || value == 'ASPDate') {
	          this._type[field] = 'Date';
	        } else {
	          this._type[field] = value;
	        }
	      }
	    }
	  }

	  // TODO: deprecated since version 1.1.1 (or 2.0.0?)
	  if (this._options.convert) {
	    throw new Error('Option "convert" is deprecated. Use "type" instead.');
	  }

	  this._subscribers = {}; // event subscribers

	  // add initial data when provided
	  if (data) {
	    this.add(data);
	  }

	  this.setOptions(options);
	}

	/**
	 * @param {Object} [options]   Available options:
	 *                             {Object} queue   Queue changes to the DataSet,
	 *                                              flush them all at once.
	 *                                              Queue options:
	 *                                              - {number} delay  Delay in ms, null by default
	 *                                              - {number} max    Maximum number of entries in the queue, Infinity by default
	 * @param options
	 */
	DataSet.prototype.setOptions = function (options) {
	  if (options && options.queue !== undefined) {
	    if (options.queue === false) {
	      // delete queue if loaded
	      if (this._queue) {
	        this._queue.destroy();
	        delete this._queue;
	      }
	    } else {
	      // create queue and update its options
	      if (!this._queue) {
	        this._queue = Queue.extend(this, {
	          replace: ['add', 'update', 'remove']
	        });
	      }

	      if (_typeof(options.queue) === 'object') {
	        this._queue.setOptions(options.queue);
	      }
	    }
	  }
	};

	/**
	 * Subscribe to an event, add an event listener
	 * @param {String} event        Event name. Available events: 'put', 'update',
	 *                              'remove'
	 * @param {function} callback   Callback method. Called with three parameters:
	 *                                  {String} event
	 *                                  {Object | null} params
	 *                                  {String | Number} senderId
	 */
	DataSet.prototype.on = function (event, callback) {
	  var subscribers = this._subscribers[event];
	  if (!subscribers) {
	    subscribers = [];
	    this._subscribers[event] = subscribers;
	  }

	  subscribers.push({
	    callback: callback
	  });
	};

	// TODO: make this function deprecated (replaced with `on` since version 0.5)
	DataSet.prototype.subscribe = DataSet.prototype.on;

	/**
	 * Unsubscribe from an event, remove an event listener
	 * @param {String} event
	 * @param {function} callback
	 */
	DataSet.prototype.off = function (event, callback) {
	  var subscribers = this._subscribers[event];
	  if (subscribers) {
	    this._subscribers[event] = subscribers.filter(function (listener) {
	      return listener.callback != callback;
	    });
	  }
	};

	// TODO: make this function deprecated (replaced with `on` since version 0.5)
	DataSet.prototype.unsubscribe = DataSet.prototype.off;

	/**
	 * Trigger an event
	 * @param {String} event
	 * @param {Object | null} params
	 * @param {String} [senderId]       Optional id of the sender.
	 * @private
	 */
	DataSet.prototype._trigger = function (event, params, senderId) {
	  if (event == '*') {
	    throw new Error('Cannot trigger event *');
	  }

	  var subscribers = [];
	  if (event in this._subscribers) {
	    subscribers = subscribers.concat(this._subscribers[event]);
	  }
	  if ('*' in this._subscribers) {
	    subscribers = subscribers.concat(this._subscribers['*']);
	  }

	  for (var i = 0; i < subscribers.length; i++) {
	    var subscriber = subscribers[i];
	    if (subscriber.callback) {
	      subscriber.callback(event, params, senderId || null);
	    }
	  }
	};

	/**
	 * Add data.
	 * Adding an item will fail when there already is an item with the same id.
	 * @param {Object | Array | DataTable} data
	 * @param {String} [senderId] Optional sender id
	 * @return {Array} addedIds      Array with the ids of the added items
	 */
	DataSet.prototype.add = function (data, senderId) {
	  var addedIds = [],
	      id,
	      me = this;

	  if (Array.isArray(data)) {
	    // Array
	    for (var i = 0, len = data.length; i < len; i++) {
	      id = me._addItem(data[i]);
	      addedIds.push(id);
	    }
	  } else if (util.isDataTable(data)) {
	    // Google DataTable
	    var columns = this._getColumnNames(data);
	    for (var row = 0, rows = data.getNumberOfRows(); row < rows; row++) {
	      var item = {};
	      for (var col = 0, cols = columns.length; col < cols; col++) {
	        var field = columns[col];
	        item[field] = data.getValue(row, col);
	      }

	      id = me._addItem(item);
	      addedIds.push(id);
	    }
	  } else if (data instanceof Object) {
	    // Single item
	    id = me._addItem(data);
	    addedIds.push(id);
	  } else {
	    throw new Error('Unknown dataType');
	  }

	  if (addedIds.length) {
	    this._trigger('add', { items: addedIds }, senderId);
	  }

	  return addedIds;
	};

	/**
	 * Update existing items. When an item does not exist, it will be created
	 * @param {Object | Array | DataTable} data
	 * @param {String} [senderId] Optional sender id
	 * @return {Array} updatedIds     The ids of the added or updated items
	 */
	DataSet.prototype.update = function (data, senderId) {
	  var addedIds = [];
	  var updatedIds = [];
	  var updatedData = [];
	  var me = this;
	  var fieldId = me._fieldId;

	  var addOrUpdate = function addOrUpdate(item) {
	    var id = item[fieldId];
	    if (me._data[id]) {
	      // update item
	      id = me._updateItem(item);
	      updatedIds.push(id);
	      updatedData.push(item);
	    } else {
	      // add new item
	      id = me._addItem(item);
	      addedIds.push(id);
	    }
	  };

	  if (Array.isArray(data)) {
	    // Array
	    for (var i = 0, len = data.length; i < len; i++) {
	      addOrUpdate(data[i]);
	    }
	  } else if (util.isDataTable(data)) {
	    // Google DataTable
	    var columns = this._getColumnNames(data);
	    for (var row = 0, rows = data.getNumberOfRows(); row < rows; row++) {
	      var item = {};
	      for (var col = 0, cols = columns.length; col < cols; col++) {
	        var field = columns[col];
	        item[field] = data.getValue(row, col);
	      }

	      addOrUpdate(item);
	    }
	  } else if (data instanceof Object) {
	    // Single item
	    addOrUpdate(data);
	  } else {
	    throw new Error('Unknown dataType');
	  }

	  if (addedIds.length) {
	    this._trigger('add', { items: addedIds }, senderId);
	  }
	  if (updatedIds.length) {
	    this._trigger('update', { items: updatedIds, data: updatedData }, senderId);
	  }

	  return addedIds.concat(updatedIds);
	};

	/**
	 * Get a data item or multiple items.
	 *
	 * Usage:
	 *
	 *     get()
	 *     get(options: Object)
	 *     get(options: Object, data: Array | DataTable)
	 *
	 *     get(id: Number | String)
	 *     get(id: Number | String, options: Object)
	 *     get(id: Number | String, options: Object, data: Array | DataTable)
	 *
	 *     get(ids: Number[] | String[])
	 *     get(ids: Number[] | String[], options: Object)
	 *     get(ids: Number[] | String[], options: Object, data: Array | DataTable)
	 *
	 * Where:
	 *
	 * {Number | String} id         The id of an item
	 * {Number[] | String{}} ids    An array with ids of items
	 * {Object} options             An Object with options. Available options:
	 *                              {String} [returnType] Type of data to be
	 *                                  returned. Can be 'DataTable' or 'Array' (default)
	 *                              {Object.<String, String>} [type]
	 *                              {String[]} [fields] field names to be returned
	 *                              {function} [filter] filter items
	 *                              {String | function} [order] Order the items by
	 *                                  a field name or custom sort function.
	 * {Array | DataTable} [data]   If provided, items will be appended to this
	 *                              array or table. Required in case of Google
	 *                              DataTable.
	 *
	 * @throws Error
	 */
	DataSet.prototype.get = function (args) {
	  var me = this;

	  // parse the arguments
	  var id, ids, options, data;
	  var firstType = util.getType(arguments[0]);
	  if (firstType == 'String' || firstType == 'Number') {
	    // get(id [, options] [, data])
	    id = arguments[0];
	    options = arguments[1];
	    data = arguments[2];
	  } else if (firstType == 'Array') {
	    // get(ids [, options] [, data])
	    ids = arguments[0];
	    options = arguments[1];
	    data = arguments[2];
	  } else {
	    // get([, options] [, data])
	    options = arguments[0];
	    data = arguments[1];
	  }

	  // determine the return type
	  var returnType;
	  if (options && options.returnType) {
	    var allowedValues = ["DataTable", "Array", "Object"];
	    returnType = allowedValues.indexOf(options.returnType) == -1 ? "Array" : options.returnType;

	    if (data && returnType != util.getType(data)) {
	      throw new Error('Type of parameter "data" (' + util.getType(data) + ') ' + 'does not correspond with specified options.type (' + options.type + ')');
	    }
	    if (returnType == 'DataTable' && !util.isDataTable(data)) {
	      throw new Error('Parameter "data" must be a DataTable ' + 'when options.type is "DataTable"');
	    }
	  } else if (data) {
	    returnType = util.getType(data) == 'DataTable' ? 'DataTable' : 'Array';
	  } else {
	    returnType = 'Array';
	  }

	  // build options
	  var type = options && options.type || this._options.type;
	  var filter = options && options.filter;
	  var items = [],
	      item,
	      itemId,
	      i,
	      len;

	  // convert items
	  if (id != undefined) {
	    // return a single item
	    item = me._getItem(id, type);
	    if (filter && !filter(item)) {
	      item = null;
	    }
	  } else if (ids != undefined) {
	    // return a subset of items
	    for (i = 0, len = ids.length; i < len; i++) {
	      item = me._getItem(ids[i], type);
	      if (!filter || filter(item)) {
	        items.push(item);
	      }
	    }
	  } else {
	    // return all items
	    for (itemId in this._data) {
	      if (this._data.hasOwnProperty(itemId)) {
	        item = me._getItem(itemId, type);
	        if (!filter || filter(item)) {
	          items.push(item);
	        }
	      }
	    }
	  }

	  // order the results
	  if (options && options.order && id == undefined) {
	    this._sort(items, options.order);
	  }

	  // filter fields of the items
	  if (options && options.fields) {
	    var fields = options.fields;
	    if (id != undefined) {
	      item = this._filterFields(item, fields);
	    } else {
	      for (i = 0, len = items.length; i < len; i++) {
	        items[i] = this._filterFields(items[i], fields);
	      }
	    }
	  }

	  // return the results
	  if (returnType == 'DataTable') {
	    var columns = this._getColumnNames(data);
	    if (id != undefined) {
	      // append a single item to the data table
	      me._appendRow(data, columns, item);
	    } else {
	      // copy the items to the provided data table
	      for (i = 0; i < items.length; i++) {
	        me._appendRow(data, columns, items[i]);
	      }
	    }
	    return data;
	  } else if (returnType == "Object") {
	    var result = {};
	    for (i = 0; i < items.length; i++) {
	      result[items[i].id] = items[i];
	    }
	    return result;
	  } else {
	    // return an array
	    if (id != undefined) {
	      // a single item
	      return item;
	    } else {
	      // multiple items
	      if (data) {
	        // copy the items to the provided array
	        for (i = 0, len = items.length; i < len; i++) {
	          data.push(items[i]);
	        }
	        return data;
	      } else {
	        // just return our array
	        return items;
	      }
	    }
	  }
	};

	/**
	 * Get ids of all items or from a filtered set of items.
	 * @param {Object} [options]    An Object with options. Available options:
	 *                              {function} [filter] filter items
	 *                              {String | function} [order] Order the items by
	 *                                  a field name or custom sort function.
	 * @return {Array} ids
	 */
	DataSet.prototype.getIds = function (options) {
	  var data = this._data,
	      filter = options && options.filter,
	      order = options && options.order,
	      type = options && options.type || this._options.type,
	      i,
	      len,
	      id,
	      item,
	      items,
	      ids = [];

	  if (filter) {
	    // get filtered items
	    if (order) {
	      // create ordered list
	      items = [];
	      for (id in data) {
	        if (data.hasOwnProperty(id)) {
	          item = this._getItem(id, type);
	          if (filter(item)) {
	            items.push(item);
	          }
	        }
	      }

	      this._sort(items, order);

	      for (i = 0, len = items.length; i < len; i++) {
	        ids[i] = items[i][this._fieldId];
	      }
	    } else {
	      // create unordered list
	      for (id in data) {
	        if (data.hasOwnProperty(id)) {
	          item = this._getItem(id, type);
	          if (filter(item)) {
	            ids.push(item[this._fieldId]);
	          }
	        }
	      }
	    }
	  } else {
	    // get all items
	    if (order) {
	      // create an ordered list
	      items = [];
	      for (id in data) {
	        if (data.hasOwnProperty(id)) {
	          items.push(data[id]);
	        }
	      }

	      this._sort(items, order);

	      for (i = 0, len = items.length; i < len; i++) {
	        ids[i] = items[i][this._fieldId];
	      }
	    } else {
	      // create unordered list
	      for (id in data) {
	        if (data.hasOwnProperty(id)) {
	          item = data[id];
	          ids.push(item[this._fieldId]);
	        }
	      }
	    }
	  }

	  return ids;
	};

	/**
	 * Returns the DataSet itself. Is overwritten for example by the DataView,
	 * which returns the DataSet it is connected to instead.
	 */
	DataSet.prototype.getDataSet = function () {
	  return this;
	};

	/**
	 * Execute a callback function for every item in the dataset.
	 * @param {function} callback
	 * @param {Object} [options]    Available options:
	 *                              {Object.<String, String>} [type]
	 *                              {String[]} [fields] filter fields
	 *                              {function} [filter] filter items
	 *                              {String | function} [order] Order the items by
	 *                                  a field name or custom sort function.
	 */
	DataSet.prototype.forEach = function (callback, options) {
	  var filter = options && options.filter,
	      type = options && options.type || this._options.type,
	      data = this._data,
	      item,
	      id;

	  if (options && options.order) {
	    // execute forEach on ordered list
	    var items = this.get(options);

	    for (var i = 0, len = items.length; i < len; i++) {
	      item = items[i];
	      id = item[this._fieldId];
	      callback(item, id);
	    }
	  } else {
	    // unordered
	    for (id in data) {
	      if (data.hasOwnProperty(id)) {
	        item = this._getItem(id, type);
	        if (!filter || filter(item)) {
	          callback(item, id);
	        }
	      }
	    }
	  }
	};

	/**
	 * Map every item in the dataset.
	 * @param {function} callback
	 * @param {Object} [options]    Available options:
	 *                              {Object.<String, String>} [type]
	 *                              {String[]} [fields] filter fields
	 *                              {function} [filter] filter items
	 *                              {String | function} [order] Order the items by
	 *                                  a field name or custom sort function.
	 * @return {Object[]} mappedItems
	 */
	DataSet.prototype.map = function (callback, options) {
	  var filter = options && options.filter,
	      type = options && options.type || this._options.type,
	      mappedItems = [],
	      data = this._data,
	      item;

	  // convert and filter items
	  for (var id in data) {
	    if (data.hasOwnProperty(id)) {
	      item = this._getItem(id, type);
	      if (!filter || filter(item)) {
	        mappedItems.push(callback(item, id));
	      }
	    }
	  }

	  // order items
	  if (options && options.order) {
	    this._sort(mappedItems, options.order);
	  }

	  return mappedItems;
	};

	/**
	 * Filter the fields of an item
	 * @param {Object | null} item
	 * @param {String[]} fields     Field names
	 * @return {Object | null} filteredItem or null if no item is provided
	 * @private
	 */
	DataSet.prototype._filterFields = function (item, fields) {
	  if (!item) {
	    // item is null
	    return item;
	  }

	  var filteredItem = {};

	  if (Array.isArray(fields)) {
	    for (var field in item) {
	      if (item.hasOwnProperty(field) && fields.indexOf(field) != -1) {
	        filteredItem[field] = item[field];
	      }
	    }
	  } else {
	    for (var field in item) {
	      if (item.hasOwnProperty(field) && fields.hasOwnProperty(field)) {
	        filteredItem[fields[field]] = item[field];
	      }
	    }
	  }

	  return filteredItem;
	};

	/**
	 * Sort the provided array with items
	 * @param {Object[]} items
	 * @param {String | function} order      A field name or custom sort function.
	 * @private
	 */
	DataSet.prototype._sort = function (items, order) {
	  if (util.isString(order)) {
	    // order by provided field name
	    var name = order; // field name
	    items.sort(function (a, b) {
	      var av = a[name];
	      var bv = b[name];
	      return av > bv ? 1 : av < bv ? -1 : 0;
	    });
	  } else if (typeof order === 'function') {
	    // order by sort function
	    items.sort(order);
	  }
	  // TODO: extend order by an Object {field:String, direction:String}
	  //       where direction can be 'asc' or 'desc'
	  else {
	      throw new TypeError('Order must be a function or a string');
	    }
	};

	/**
	 * Remove an object by pointer or by id
	 * @param {String | Number | Object | Array} id Object or id, or an array with
	 *                                              objects or ids to be removed
	 * @param {String} [senderId] Optional sender id
	 * @return {Array} removedIds
	 */
	DataSet.prototype.remove = function (id, senderId) {
	  var removedIds = [],
	      i,
	      len,
	      removedId;

	  if (Array.isArray(id)) {
	    for (i = 0, len = id.length; i < len; i++) {
	      removedId = this._remove(id[i]);
	      if (removedId != null) {
	        removedIds.push(removedId);
	      }
	    }
	  } else {
	    removedId = this._remove(id);
	    if (removedId != null) {
	      removedIds.push(removedId);
	    }
	  }

	  if (removedIds.length) {
	    this._trigger('remove', { items: removedIds }, senderId);
	  }

	  return removedIds;
	};

	/**
	 * Remove an item by its id
	 * @param {Number | String | Object} id   id or item
	 * @returns {Number | String | null} id
	 * @private
	 */
	DataSet.prototype._remove = function (id) {
	  if (util.isNumber(id) || util.isString(id)) {
	    if (this._data[id]) {
	      delete this._data[id];
	      this.length--;
	      return id;
	    }
	  } else if (id instanceof Object) {
	    var itemId = id[this._fieldId];
	    if (itemId && this._data[itemId]) {
	      delete this._data[itemId];
	      this.length--;
	      return itemId;
	    }
	  }
	  return null;
	};

	/**
	 * Clear the data
	 * @param {String} [senderId] Optional sender id
	 * @return {Array} removedIds    The ids of all removed items
	 */
	DataSet.prototype.clear = function (senderId) {
	  var ids = Object.keys(this._data);

	  this._data = {};
	  this.length = 0;

	  this._trigger('remove', { items: ids }, senderId);

	  return ids;
	};

	/**
	 * Find the item with maximum value of a specified field
	 * @param {String} field
	 * @return {Object | null} item  Item containing max value, or null if no items
	 */
	DataSet.prototype.max = function (field) {
	  var data = this._data,
	      max = null,
	      maxField = null;

	  for (var id in data) {
	    if (data.hasOwnProperty(id)) {
	      var item = data[id];
	      var itemField = item[field];
	      if (itemField != null && (!max || itemField > maxField)) {
	        max = item;
	        maxField = itemField;
	      }
	    }
	  }

	  return max;
	};

	/**
	 * Find the item with minimum value of a specified field
	 * @param {String} field
	 * @return {Object | null} item  Item containing max value, or null if no items
	 */
	DataSet.prototype.min = function (field) {
	  var data = this._data,
	      min = null,
	      minField = null;

	  for (var id in data) {
	    if (data.hasOwnProperty(id)) {
	      var item = data[id];
	      var itemField = item[field];
	      if (itemField != null && (!min || itemField < minField)) {
	        min = item;
	        minField = itemField;
	      }
	    }
	  }

	  return min;
	};

	/**
	 * Find all distinct values of a specified field
	 * @param {String} field
	 * @return {Array} values  Array containing all distinct values. If data items
	 *                         do not contain the specified field are ignored.
	 *                         The returned array is unordered.
	 */
	DataSet.prototype.distinct = function (field) {
	  var data = this._data;
	  var values = [];
	  var fieldType = this._options.type && this._options.type[field] || null;
	  var count = 0;
	  var i;

	  for (var prop in data) {
	    if (data.hasOwnProperty(prop)) {
	      var item = data[prop];
	      var value = item[field];
	      var exists = false;
	      for (i = 0; i < count; i++) {
	        if (values[i] == value) {
	          exists = true;
	          break;
	        }
	      }
	      if (!exists && value !== undefined) {
	        values[count] = value;
	        count++;
	      }
	    }
	  }

	  if (fieldType) {
	    for (i = 0; i < values.length; i++) {
	      values[i] = util.convert(values[i], fieldType);
	    }
	  }

	  return values;
	};

	/**
	 * Add a single item. Will fail when an item with the same id already exists.
	 * @param {Object} item
	 * @return {String} id
	 * @private
	 */
	DataSet.prototype._addItem = function (item) {
	  var id = item[this._fieldId];

	  if (id != undefined) {
	    // check whether this id is already taken
	    if (this._data[id]) {
	      // item already exists
	      throw new Error('Cannot add item: item with id ' + id + ' already exists');
	    }
	  } else {
	    // generate an id
	    id = util.randomUUID();
	    item[this._fieldId] = id;
	  }

	  var d = {};
	  for (var field in item) {
	    if (item.hasOwnProperty(field)) {
	      var fieldType = this._type[field]; // type may be undefined
	      d[field] = util.convert(item[field], fieldType);
	    }
	  }
	  this._data[id] = d;
	  this.length++;

	  return id;
	};

	/**
	 * Get an item. Fields can be converted to a specific type
	 * @param {String} id
	 * @param {Object.<String, String>} [types]  field types to convert
	 * @return {Object | null} item
	 * @private
	 */
	DataSet.prototype._getItem = function (id, types) {
	  var field, value;

	  // get the item from the dataset
	  var raw = this._data[id];
	  if (!raw) {
	    return null;
	  }

	  // convert the items field types
	  var converted = {};
	  if (types) {
	    for (field in raw) {
	      if (raw.hasOwnProperty(field)) {
	        value = raw[field];
	        converted[field] = util.convert(value, types[field]);
	      }
	    }
	  } else {
	    // no field types specified, no converting needed
	    for (field in raw) {
	      if (raw.hasOwnProperty(field)) {
	        value = raw[field];
	        converted[field] = value;
	      }
	    }
	  }
	  return converted;
	};

	/**
	 * Update a single item: merge with existing item.
	 * Will fail when the item has no id, or when there does not exist an item
	 * with the same id.
	 * @param {Object} item
	 * @return {String} id
	 * @private
	 */
	DataSet.prototype._updateItem = function (item) {
	  var id = item[this._fieldId];
	  if (id == undefined) {
	    throw new Error('Cannot update item: item has no id (item: ' + JSON.stringify(item) + ')');
	  }
	  var d = this._data[id];
	  if (!d) {
	    // item doesn't exist
	    throw new Error('Cannot update item: no item with id ' + id + ' found');
	  }

	  // merge with current item
	  for (var field in item) {
	    if (item.hasOwnProperty(field)) {
	      var fieldType = this._type[field]; // type may be undefined
	      d[field] = util.convert(item[field], fieldType);
	    }
	  }

	  return id;
	};

	/**
	 * Get an array with the column names of a Google DataTable
	 * @param {DataTable} dataTable
	 * @return {String[]} columnNames
	 * @private
	 */
	DataSet.prototype._getColumnNames = function (dataTable) {
	  var columns = [];
	  for (var col = 0, cols = dataTable.getNumberOfColumns(); col < cols; col++) {
	    columns[col] = dataTable.getColumnId(col) || dataTable.getColumnLabel(col);
	  }
	  return columns;
	};

	/**
	 * Append an item as a row to the dataTable
	 * @param dataTable
	 * @param columns
	 * @param item
	 * @private
	 */
	DataSet.prototype._appendRow = function (dataTable, columns, item) {
	  var row = dataTable.addRow();

	  for (var col = 0, cols = columns.length; col < cols; col++) {
	    var field = columns[col];
	    dataTable.setValue(row, col, item[field]);
	  }
	};

	module.exports = DataSet;

/***/ },
/* 286 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * A queue
	 * @param {Object} options
	 *            Available options:
	 *            - delay: number    When provided, the queue will be flushed
	 *                               automatically after an inactivity of this delay
	 *                               in milliseconds.
	 *                               Default value is null.
	 *            - max: number      When the queue exceeds the given maximum number
	 *                               of entries, the queue is flushed automatically.
	 *                               Default value of max is Infinity.
	 * @constructor
	 */
	function Queue(options) {
	  // options
	  this.delay = null;
	  this.max = Infinity;

	  // properties
	  this._queue = [];
	  this._timeout = null;
	  this._extended = null;

	  this.setOptions(options);
	}

	/**
	 * Update the configuration of the queue
	 * @param {Object} options
	 *            Available options:
	 *            - delay: number    When provided, the queue will be flushed
	 *                               automatically after an inactivity of this delay
	 *                               in milliseconds.
	 *                               Default value is null.
	 *            - max: number      When the queue exceeds the given maximum number
	 *                               of entries, the queue is flushed automatically.
	 *                               Default value of max is Infinity.
	 * @param options
	 */
	Queue.prototype.setOptions = function (options) {
	  if (options && typeof options.delay !== 'undefined') {
	    this.delay = options.delay;
	  }
	  if (options && typeof options.max !== 'undefined') {
	    this.max = options.max;
	  }

	  this._flushIfNeeded();
	};

	/**
	 * Extend an object with queuing functionality.
	 * The object will be extended with a function flush, and the methods provided
	 * in options.replace will be replaced with queued ones.
	 * @param {Object} object
	 * @param {Object} options
	 *            Available options:
	 *            - replace: Array.<string>
	 *                               A list with method names of the methods
	 *                               on the object to be replaced with queued ones.
	 *            - delay: number    When provided, the queue will be flushed
	 *                               automatically after an inactivity of this delay
	 *                               in milliseconds.
	 *                               Default value is null.
	 *            - max: number      When the queue exceeds the given maximum number
	 *                               of entries, the queue is flushed automatically.
	 *                               Default value of max is Infinity.
	 * @return {Queue} Returns the created queue
	 */
	Queue.extend = function (object, options) {
	  var queue = new Queue(options);

	  if (object.flush !== undefined) {
	    throw new Error('Target object already has a property flush');
	  }
	  object.flush = function () {
	    queue.flush();
	  };

	  var methods = [{
	    name: 'flush',
	    original: undefined
	  }];

	  if (options && options.replace) {
	    for (var i = 0; i < options.replace.length; i++) {
	      var name = options.replace[i];
	      methods.push({
	        name: name,
	        original: object[name]
	      });
	      queue.replace(object, name);
	    }
	  }

	  queue._extended = {
	    object: object,
	    methods: methods
	  };

	  return queue;
	};

	/**
	 * Destroy the queue. The queue will first flush all queued actions, and in
	 * case it has extended an object, will restore the original object.
	 */
	Queue.prototype.destroy = function () {
	  this.flush();

	  if (this._extended) {
	    var object = this._extended.object;
	    var methods = this._extended.methods;
	    for (var i = 0; i < methods.length; i++) {
	      var method = methods[i];
	      if (method.original) {
	        object[method.name] = method.original;
	      } else {
	        delete object[method.name];
	      }
	    }
	    this._extended = null;
	  }
	};

	/**
	 * Replace a method on an object with a queued version
	 * @param {Object} object   Object having the method
	 * @param {string} method   The method name
	 */
	Queue.prototype.replace = function (object, method) {
	  var me = this;
	  var original = object[method];
	  if (!original) {
	    throw new Error('Method ' + method + ' undefined');
	  }

	  object[method] = function () {
	    // create an Array with the arguments
	    var args = [];
	    for (var i = 0; i < arguments.length; i++) {
	      args[i] = arguments[i];
	    }

	    // add this call to the queue
	    me.queue({
	      args: args,
	      fn: original,
	      context: this
	    });
	  };
	};

	/**
	 * Queue a call
	 * @param {function | {fn: function, args: Array} | {fn: function, args: Array, context: Object}} entry
	 */
	Queue.prototype.queue = function (entry) {
	  if (typeof entry === 'function') {
	    this._queue.push({ fn: entry });
	  } else {
	    this._queue.push(entry);
	  }

	  this._flushIfNeeded();
	};

	/**
	 * Check whether the queue needs to be flushed
	 * @private
	 */
	Queue.prototype._flushIfNeeded = function () {
	  // flush when the maximum is exceeded.
	  if (this._queue.length > this.max) {
	    this.flush();
	  }

	  // flush after a period of inactivity when a delay is configured
	  clearTimeout(this._timeout);
	  if (this.queue.length > 0 && typeof this.delay === 'number') {
	    var me = this;
	    this._timeout = setTimeout(function () {
	      me.flush();
	    }, this.delay);
	  }
	};

	/**
	 * Flush all queued calls
	 */
	Queue.prototype.flush = function () {
	  while (this._queue.length > 0) {
	    var entry = this._queue.shift();
	    entry.fn.apply(entry.context || entry.fn, entry.args || []);
	  }
	};

	module.exports = Queue;

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(175);
	var DataSet = __webpack_require__(285);

	/**
	 * DataView
	 *
	 * a dataview offers a filtered view on a dataset or an other dataview.
	 *
	 * @param {DataSet | DataView} data
	 * @param {Object} [options]   Available options: see method get
	 *
	 * @constructor DataView
	 */
	function DataView(data, options) {
	  this._data = null;
	  this._ids = {}; // ids of the items currently in memory (just contains a boolean true)
	  this.length = 0; // number of items in the DataView
	  this._options = options || {};
	  this._fieldId = 'id'; // name of the field containing id
	  this._subscribers = {}; // event subscribers

	  var me = this;
	  this.listener = function () {
	    me._onEvent.apply(me, arguments);
	  };

	  this.setData(data);
	}

	// TODO: implement a function .config() to dynamically update things like configured filter
	// and trigger changes accordingly

	/**
	 * Set a data source for the view
	 * @param {DataSet | DataView} data
	 */
	DataView.prototype.setData = function (data) {
	  var ids, i, len;

	  if (this._data) {
	    // unsubscribe from current dataset
	    if (this._data.unsubscribe) {
	      this._data.unsubscribe('*', this.listener);
	    }

	    // trigger a remove of all items in memory
	    ids = [];
	    for (var id in this._ids) {
	      if (this._ids.hasOwnProperty(id)) {
	        ids.push(id);
	      }
	    }
	    this._ids = {};
	    this.length = 0;
	    this._trigger('remove', { items: ids });
	  }

	  this._data = data;

	  if (this._data) {
	    // update fieldId
	    this._fieldId = this._options.fieldId || this._data && this._data.options && this._data.options.fieldId || 'id';

	    // trigger an add of all added items
	    ids = this._data.getIds({ filter: this._options && this._options.filter });
	    for (i = 0, len = ids.length; i < len; i++) {
	      id = ids[i];
	      this._ids[id] = true;
	    }
	    this.length = ids.length;
	    this._trigger('add', { items: ids });

	    // subscribe to new dataset
	    if (this._data.on) {
	      this._data.on('*', this.listener);
	    }
	  }
	};

	/**
	 * Refresh the DataView. Useful when the DataView has a filter function
	 * containing a variable parameter.
	 */
	DataView.prototype.refresh = function () {
	  var id;
	  var ids = this._data.getIds({ filter: this._options && this._options.filter });
	  var newIds = {};
	  var added = [];
	  var removed = [];

	  // check for additions
	  for (var i = 0; i < ids.length; i++) {
	    id = ids[i];
	    newIds[id] = true;
	    if (!this._ids[id]) {
	      added.push(id);
	      this._ids[id] = true;
	      this.length++;
	    }
	  }

	  // check for removals
	  for (id in this._ids) {
	    if (this._ids.hasOwnProperty(id)) {
	      if (!newIds[id]) {
	        removed.push(id);
	        delete this._ids[id];
	        this.length--;
	      }
	    }
	  }

	  // trigger events
	  if (added.length) {
	    this._trigger('add', { items: added });
	  }
	  if (removed.length) {
	    this._trigger('remove', { items: removed });
	  }
	};

	/**
	 * Get data from the data view
	 *
	 * Usage:
	 *
	 *     get()
	 *     get(options: Object)
	 *     get(options: Object, data: Array | DataTable)
	 *
	 *     get(id: Number)
	 *     get(id: Number, options: Object)
	 *     get(id: Number, options: Object, data: Array | DataTable)
	 *
	 *     get(ids: Number[])
	 *     get(ids: Number[], options: Object)
	 *     get(ids: Number[], options: Object, data: Array | DataTable)
	 *
	 * Where:
	 *
	 * {Number | String} id         The id of an item
	 * {Number[] | String{}} ids    An array with ids of items
	 * {Object} options             An Object with options. Available options:
	 *                              {String} [type] Type of data to be returned. Can
	 *                                              be 'DataTable' or 'Array' (default)
	 *                              {Object.<String, String>} [convert]
	 *                              {String[]} [fields] field names to be returned
	 *                              {function} [filter] filter items
	 *                              {String | function} [order] Order the items by
	 *                                  a field name or custom sort function.
	 * {Array | DataTable} [data]   If provided, items will be appended to this
	 *                              array or table. Required in case of Google
	 *                              DataTable.
	 * @param args
	 */
	DataView.prototype.get = function (args) {
	  var me = this;

	  // parse the arguments
	  var ids, options, data;
	  var firstType = util.getType(arguments[0]);
	  if (firstType == 'String' || firstType == 'Number' || firstType == 'Array') {
	    // get(id(s) [, options] [, data])
	    ids = arguments[0]; // can be a single id or an array with ids
	    options = arguments[1];
	    data = arguments[2];
	  } else {
	    // get([, options] [, data])
	    options = arguments[0];
	    data = arguments[1];
	  }

	  // extend the options with the default options and provided options
	  var viewOptions = util.extend({}, this._options, options);

	  // create a combined filter method when needed
	  if (this._options.filter && options && options.filter) {
	    viewOptions.filter = function (item) {
	      return me._options.filter(item) && options.filter(item);
	    };
	  }

	  // build up the call to the linked data set
	  var getArguments = [];
	  if (ids != undefined) {
	    getArguments.push(ids);
	  }
	  getArguments.push(viewOptions);
	  getArguments.push(data);

	  return this._data && this._data.get.apply(this._data, getArguments);
	};

	/**
	 * Get ids of all items or from a filtered set of items.
	 * @param {Object} [options]    An Object with options. Available options:
	 *                              {function} [filter] filter items
	 *                              {String | function} [order] Order the items by
	 *                                  a field name or custom sort function.
	 * @return {Array} ids
	 */
	DataView.prototype.getIds = function (options) {
	  var ids;

	  if (this._data) {
	    var defaultFilter = this._options.filter;
	    var filter;

	    if (options && options.filter) {
	      if (defaultFilter) {
	        filter = function filter(item) {
	          return defaultFilter(item) && options.filter(item);
	        };
	      } else {
	        filter = options.filter;
	      }
	    } else {
	      filter = defaultFilter;
	    }

	    ids = this._data.getIds({
	      filter: filter,
	      order: options && options.order
	    });
	  } else {
	    ids = [];
	  }

	  return ids;
	};

	/**
	 * Get the DataSet to which this DataView is connected. In case there is a chain
	 * of multiple DataViews, the root DataSet of this chain is returned.
	 * @return {DataSet} dataSet
	 */
	DataView.prototype.getDataSet = function () {
	  var dataSet = this;
	  while (dataSet instanceof DataView) {
	    dataSet = dataSet._data;
	  }
	  return dataSet || null;
	};

	/**
	 * Event listener. Will propagate all events from the connected data set to
	 * the subscribers of the DataView, but will filter the items and only trigger
	 * when there are changes in the filtered data set.
	 * @param {String} event
	 * @param {Object | null} params
	 * @param {String} senderId
	 * @private
	 */
	DataView.prototype._onEvent = function (event, params, senderId) {
	  var i, len, id, item;
	  var ids = params && params.items;
	  var data = this._data;
	  var updatedData = [];
	  var added = [];
	  var updated = [];
	  var removed = [];

	  if (ids && data) {
	    switch (event) {
	      case 'add':
	        // filter the ids of the added items
	        for (i = 0, len = ids.length; i < len; i++) {
	          id = ids[i];
	          item = this.get(id);
	          if (item) {
	            this._ids[id] = true;
	            added.push(id);
	          }
	        }

	        break;

	      case 'update':
	        // determine the event from the views viewpoint: an updated
	        // item can be added, updated, or removed from this view.
	        for (i = 0, len = ids.length; i < len; i++) {
	          id = ids[i];
	          item = this.get(id);

	          if (item) {
	            if (this._ids[id]) {
	              updated.push(id);
	              updatedData.push(params.data[i]);
	            } else {
	              this._ids[id] = true;
	              added.push(id);
	            }
	          } else {
	            if (this._ids[id]) {
	              delete this._ids[id];
	              removed.push(id);
	            } else {
	              // nothing interesting for me :-(
	            }
	          }
	        }

	        break;

	      case 'remove':
	        // filter the ids of the removed items
	        for (i = 0, len = ids.length; i < len; i++) {
	          id = ids[i];
	          if (this._ids[id]) {
	            delete this._ids[id];
	            removed.push(id);
	          }
	        }

	        break;
	    }

	    this.length += added.length - removed.length;

	    if (added.length) {
	      this._trigger('add', { items: added }, senderId);
	    }
	    if (updated.length) {
	      this._trigger('update', { items: updated, data: updatedData }, senderId);
	    }
	    if (removed.length) {
	      this._trigger('remove', { items: removed }, senderId);
	    }
	  }
	};

	// copy subscription functionality from DataSet
	DataView.prototype.on = DataSet.prototype.on;
	DataView.prototype.off = DataSet.prototype.off;
	DataView.prototype._trigger = DataSet.prototype._trigger;

	// TODO: make these functions deprecated (replaced with `on` and `off` since version 0.5)
	DataView.prototype.subscribe = DataView.prototype.on;
	DataView.prototype.unsubscribe = DataView.prototype.off;

	module.exports = DataView;

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var Emitter = __webpack_require__(289);
	var DataSet = __webpack_require__(285);
	var DataView = __webpack_require__(287);
	var util = __webpack_require__(175);
	var Point3d = __webpack_require__(290);
	var Point2d = __webpack_require__(291);
	var Camera = __webpack_require__(292);
	var Filter = __webpack_require__(293);
	var Slider = __webpack_require__(294);
	var StepNumber = __webpack_require__(295);

	/**
	 * @constructor Graph3d
	 * Graph3d displays data in 3d.
	 *
	 * Graph3d is developed in javascript as a Google Visualization Chart.
	 *
	 * @param {Element} container   The DOM element in which the Graph3d will
	 *                              be created. Normally a div element.
	 * @param {DataSet | DataView | Array} [data]
	 * @param {Object} [options]
	 */
	function Graph3d(container, data, options) {
	  if (!(this instanceof Graph3d)) {
	    throw new SyntaxError('Constructor must be called with the new operator');
	  }

	  // create variables and set default values
	  this.containerElement = container;
	  this.width = '400px';
	  this.height = '400px';
	  this.margin = 10; // px
	  this.defaultXCenter = '55%';
	  this.defaultYCenter = '50%';

	  this.xLabel = 'x';
	  this.yLabel = 'y';
	  this.zLabel = 'z';

	  var passValueFn = function passValueFn(v) {
	    return v;
	  };
	  this.xValueLabel = passValueFn;
	  this.yValueLabel = passValueFn;
	  this.zValueLabel = passValueFn;

	  this.filterLabel = 'time';
	  this.legendLabel = 'value';

	  this.style = Graph3d.STYLE.DOT;
	  this.showPerspective = true;
	  this.showGrid = true;
	  this.keepAspectRatio = true;
	  this.showShadow = false;
	  this.showGrayBottom = false; // TODO: this does not work correctly
	  this.showTooltip = false;
	  this.verticalRatio = 0.5; // 0.1 to 1.0, where 1.0 results in a 'cube'

	  this.animationInterval = 1000; // milliseconds
	  this.animationPreload = false;

	  this.camera = new Camera();
	  this.eye = new Point3d(0, 0, -1); // TODO: set eye.z about 3/4 of the width of the window?

	  this.dataTable = null; // The original data table
	  this.dataPoints = null; // The table with point objects

	  // the column indexes
	  this.colX = undefined;
	  this.colY = undefined;
	  this.colZ = undefined;
	  this.colValue = undefined;
	  this.colFilter = undefined;

	  this.xMin = 0;
	  this.xStep = undefined; // auto by default
	  this.xMax = 1;
	  this.yMin = 0;
	  this.yStep = undefined; // auto by default
	  this.yMax = 1;
	  this.zMin = 0;
	  this.zStep = undefined; // auto by default
	  this.zMax = 1;
	  this.valueMin = 0;
	  this.valueMax = 1;
	  this.xBarWidth = 1;
	  this.yBarWidth = 1;
	  // TODO: customize axis range

	  // constants
	  this.colorAxis = '#4D4D4D';
	  this.colorGrid = '#D3D3D3';
	  this.colorDot = '#7DC1FF';
	  this.colorDotBorder = '#3267D2';

	  // create a frame and canvas
	  this.create();

	  // apply options (also when undefined)
	  this.setOptions(options);

	  // apply data
	  if (data) {
	    this.setData(data);
	  }
	}

	// Extend Graph3d with an Emitter mixin
	Emitter(Graph3d.prototype);

	/**
	 * Calculate the scaling values, dependent on the range in x, y, and z direction
	 */
	Graph3d.prototype._setScale = function () {
	  this.scale = new Point3d(1 / (this.xMax - this.xMin), 1 / (this.yMax - this.yMin), 1 / (this.zMax - this.zMin));

	  // keep aspect ration between x and y scale if desired
	  if (this.keepAspectRatio) {
	    if (this.scale.x < this.scale.y) {
	      //noinspection JSSuspiciousNameCombination
	      this.scale.y = this.scale.x;
	    } else {
	      //noinspection JSSuspiciousNameCombination
	      this.scale.x = this.scale.y;
	    }
	  }

	  // scale the vertical axis
	  this.scale.z *= this.verticalRatio;
	  // TODO: can this be automated? verticalRatio?

	  // determine scale for (optional) value
	  this.scale.value = 1 / (this.valueMax - this.valueMin);

	  // position the camera arm
	  var xCenter = (this.xMax + this.xMin) / 2 * this.scale.x;
	  var yCenter = (this.yMax + this.yMin) / 2 * this.scale.y;
	  var zCenter = (this.zMax + this.zMin) / 2 * this.scale.z;
	  this.camera.setArmLocation(xCenter, yCenter, zCenter);
	};

	/**
	 * Convert a 3D location to a 2D location on screen
	 * http://en.wikipedia.org/wiki/3D_projection
	 * @param {Point3d} point3d   A 3D point with parameters x, y, z
	 * @return {Point2d} point2d  A 2D point with parameters x, y
	 */
	Graph3d.prototype._convert3Dto2D = function (point3d) {
	  var translation = this._convertPointToTranslation(point3d);
	  return this._convertTranslationToScreen(translation);
	};

	/**
	 * Convert a 3D location its translation seen from the camera
	 * http://en.wikipedia.org/wiki/3D_projection
	 * @param {Point3d} point3d    A 3D point with parameters x, y, z
	 * @return {Point3d} translation A 3D point with parameters x, y, z This is
	 *                   the translation of the point, seen from the
	 *                   camera
	 */
	Graph3d.prototype._convertPointToTranslation = function (point3d) {
	  var ax = point3d.x * this.scale.x,
	      ay = point3d.y * this.scale.y,
	      az = point3d.z * this.scale.z,
	      cx = this.camera.getCameraLocation().x,
	      cy = this.camera.getCameraLocation().y,
	      cz = this.camera.getCameraLocation().z,


	  // calculate angles
	  sinTx = Math.sin(this.camera.getCameraRotation().x),
	      cosTx = Math.cos(this.camera.getCameraRotation().x),
	      sinTy = Math.sin(this.camera.getCameraRotation().y),
	      cosTy = Math.cos(this.camera.getCameraRotation().y),
	      sinTz = Math.sin(this.camera.getCameraRotation().z),
	      cosTz = Math.cos(this.camera.getCameraRotation().z),


	  // calculate translation
	  dx = cosTy * (sinTz * (ay - cy) + cosTz * (ax - cx)) - sinTy * (az - cz),
	      dy = sinTx * (cosTy * (az - cz) + sinTy * (sinTz * (ay - cy) + cosTz * (ax - cx))) + cosTx * (cosTz * (ay - cy) - sinTz * (ax - cx)),
	      dz = cosTx * (cosTy * (az - cz) + sinTy * (sinTz * (ay - cy) + cosTz * (ax - cx))) - sinTx * (cosTz * (ay - cy) - sinTz * (ax - cx));

	  return new Point3d(dx, dy, dz);
	};

	/**
	 * Convert a translation point to a point on the screen
	 * @param {Point3d} translation   A 3D point with parameters x, y, z This is
	 *                    the translation of the point, seen from the
	 *                    camera
	 * @return {Point2d} point2d    A 2D point with parameters x, y
	 */
	Graph3d.prototype._convertTranslationToScreen = function (translation) {
	  var ex = this.eye.x,
	      ey = this.eye.y,
	      ez = this.eye.z,
	      dx = translation.x,
	      dy = translation.y,
	      dz = translation.z;

	  // calculate position on screen from translation
	  var bx;
	  var by;
	  if (this.showPerspective) {
	    bx = (dx - ex) * (ez / dz);
	    by = (dy - ey) * (ez / dz);
	  } else {
	    bx = dx * -(ez / this.camera.getArmLength());
	    by = dy * -(ez / this.camera.getArmLength());
	  }

	  // shift and scale the point to the center of the screen
	  // use the width of the graph to scale both horizontally and vertically.
	  return new Point2d(this.xcenter + bx * this.frame.canvas.clientWidth, this.ycenter - by * this.frame.canvas.clientWidth);
	};

	/**
	 * Set the background styling for the graph
	 * @param {string | {fill: string, stroke: string, strokeWidth: string}} backgroundColor
	 */
	Graph3d.prototype._setBackgroundColor = function (backgroundColor) {
	  var fill = 'white';
	  var stroke = 'gray';
	  var strokeWidth = 1;

	  if (typeof backgroundColor === 'string') {
	    fill = backgroundColor;
	    stroke = 'none';
	    strokeWidth = 0;
	  } else if ((typeof backgroundColor === 'undefined' ? 'undefined' : _typeof(backgroundColor)) === 'object') {
	    if (backgroundColor.fill !== undefined) fill = backgroundColor.fill;
	    if (backgroundColor.stroke !== undefined) stroke = backgroundColor.stroke;
	    if (backgroundColor.strokeWidth !== undefined) strokeWidth = backgroundColor.strokeWidth;
	  } else if (backgroundColor === undefined) {
	    // use use defaults
	  } else {
	    throw 'Unsupported type of backgroundColor';
	  }

	  this.frame.style.backgroundColor = fill;
	  this.frame.style.borderColor = stroke;
	  this.frame.style.borderWidth = strokeWidth + 'px';
	  this.frame.style.borderStyle = 'solid';
	};

	/// enumerate the available styles
	Graph3d.STYLE = {
	  BAR: 0,
	  BARCOLOR: 1,
	  BARSIZE: 2,
	  DOT: 3,
	  DOTLINE: 4,
	  DOTCOLOR: 5,
	  DOTSIZE: 6,
	  GRID: 7,
	  LINE: 8,
	  SURFACE: 9
	};

	/**
	 * Retrieve the style index from given styleName
	 * @param {string} styleName  Style name such as 'dot', 'grid', 'dot-line'
	 * @return {Number} styleNumber Enumeration value representing the style, or -1
	 *                when not found
	 */
	Graph3d.prototype._getStyleNumber = function (styleName) {
	  switch (styleName) {
	    case 'dot':
	      return Graph3d.STYLE.DOT;
	    case 'dot-line':
	      return Graph3d.STYLE.DOTLINE;
	    case 'dot-color':
	      return Graph3d.STYLE.DOTCOLOR;
	    case 'dot-size':
	      return Graph3d.STYLE.DOTSIZE;
	    case 'line':
	      return Graph3d.STYLE.LINE;
	    case 'grid':
	      return Graph3d.STYLE.GRID;
	    case 'surface':
	      return Graph3d.STYLE.SURFACE;
	    case 'bar':
	      return Graph3d.STYLE.BAR;
	    case 'bar-color':
	      return Graph3d.STYLE.BARCOLOR;
	    case 'bar-size':
	      return Graph3d.STYLE.BARSIZE;
	  }

	  return -1;
	};

	/**
	 * Determine the indexes of the data columns, based on the given style and data
	 * @param {DataSet} data
	 * @param {Number}  style
	 */
	Graph3d.prototype._determineColumnIndexes = function (data, style) {
	  if (this.style === Graph3d.STYLE.DOT || this.style === Graph3d.STYLE.DOTLINE || this.style === Graph3d.STYLE.LINE || this.style === Graph3d.STYLE.GRID || this.style === Graph3d.STYLE.SURFACE || this.style === Graph3d.STYLE.BAR) {
	    // 3 columns expected, and optionally a 4th with filter values
	    this.colX = 0;
	    this.colY = 1;
	    this.colZ = 2;
	    this.colValue = undefined;

	    if (data.getNumberOfColumns() > 3) {
	      this.colFilter = 3;
	    }
	  } else if (this.style === Graph3d.STYLE.DOTCOLOR || this.style === Graph3d.STYLE.DOTSIZE || this.style === Graph3d.STYLE.BARCOLOR || this.style === Graph3d.STYLE.BARSIZE) {
	    // 4 columns expected, and optionally a 5th with filter values
	    this.colX = 0;
	    this.colY = 1;
	    this.colZ = 2;
	    this.colValue = 3;

	    if (data.getNumberOfColumns() > 4) {
	      this.colFilter = 4;
	    }
	  } else {
	    throw 'Unknown style "' + this.style + '"';
	  }
	};

	Graph3d.prototype.getNumberOfRows = function (data) {
	  return data.length;
	};

	Graph3d.prototype.getNumberOfColumns = function (data) {
	  var counter = 0;
	  for (var column in data[0]) {
	    if (data[0].hasOwnProperty(column)) {
	      counter++;
	    }
	  }
	  return counter;
	};

	Graph3d.prototype.getDistinctValues = function (data, column) {
	  var distinctValues = [];
	  for (var i = 0; i < data.length; i++) {
	    if (distinctValues.indexOf(data[i][column]) == -1) {
	      distinctValues.push(data[i][column]);
	    }
	  }
	  return distinctValues;
	};

	Graph3d.prototype.getColumnRange = function (data, column) {
	  var minMax = { min: data[0][column], max: data[0][column] };
	  for (var i = 0; i < data.length; i++) {
	    if (minMax.min > data[i][column]) {
	      minMax.min = data[i][column];
	    }
	    if (minMax.max < data[i][column]) {
	      minMax.max = data[i][column];
	    }
	  }
	  return minMax;
	};

	/**
	 * Initialize the data from the data table. Calculate minimum and maximum values
	 * and column index values
	 * @param {Array | DataSet | DataView} rawData   The data containing the items for the Graph.
	 * @param {Number}     style   Style Number
	 */
	Graph3d.prototype._dataInitialize = function (rawData, style) {
	  var me = this;

	  // unsubscribe from the dataTable
	  if (this.dataSet) {
	    this.dataSet.off('*', this._onChange);
	  }

	  if (rawData === undefined) return;

	  if (Array.isArray(rawData)) {
	    rawData = new DataSet(rawData);
	  }

	  var data;
	  if (rawData instanceof DataSet || rawData instanceof DataView) {
	    data = rawData.get();
	  } else {
	    throw new Error('Array, DataSet, or DataView expected');
	  }

	  if (data.length == 0) return;

	  this.dataSet = rawData;
	  this.dataTable = data;

	  // subscribe to changes in the dataset
	  this._onChange = function () {
	    me.setData(me.dataSet);
	  };
	  this.dataSet.on('*', this._onChange);

	  // _determineColumnIndexes
	  // getNumberOfRows (points)
	  // getNumberOfColumns (x,y,z,v,t,t1,t2...)
	  // getDistinctValues (unique values?)
	  // getColumnRange

	  // determine the location of x,y,z,value,filter columns
	  this.colX = 'x';
	  this.colY = 'y';
	  this.colZ = 'z';
	  this.colValue = 'style';
	  this.colFilter = 'filter';

	  // check if a filter column is provided
	  if (data[0].hasOwnProperty('filter')) {
	    if (this.dataFilter === undefined) {
	      this.dataFilter = new Filter(rawData, this.colFilter, this);
	      this.dataFilter.setOnLoadCallback(function () {
	        me.redraw();
	      });
	    }
	  }

	  var withBars = this.style == Graph3d.STYLE.BAR || this.style == Graph3d.STYLE.BARCOLOR || this.style == Graph3d.STYLE.BARSIZE;

	  // determine barWidth from data
	  if (withBars) {
	    if (this.defaultXBarWidth !== undefined) {
	      this.xBarWidth = this.defaultXBarWidth;
	    } else {
	      var dataX = this.getDistinctValues(data, this.colX);
	      this.xBarWidth = dataX[1] - dataX[0] || 1;
	    }

	    if (this.defaultYBarWidth !== undefined) {
	      this.yBarWidth = this.defaultYBarWidth;
	    } else {
	      var dataY = this.getDistinctValues(data, this.colY);
	      this.yBarWidth = dataY[1] - dataY[0] || 1;
	    }
	  }

	  // calculate minimums and maximums
	  var xRange = this.getColumnRange(data, this.colX);
	  if (withBars) {
	    xRange.min -= this.xBarWidth / 2;
	    xRange.max += this.xBarWidth / 2;
	  }
	  this.xMin = this.defaultXMin !== undefined ? this.defaultXMin : xRange.min;
	  this.xMax = this.defaultXMax !== undefined ? this.defaultXMax : xRange.max;
	  if (this.xMax <= this.xMin) this.xMax = this.xMin + 1;
	  this.xStep = this.defaultXStep !== undefined ? this.defaultXStep : (this.xMax - this.xMin) / 5;

	  var yRange = this.getColumnRange(data, this.colY);
	  if (withBars) {
	    yRange.min -= this.yBarWidth / 2;
	    yRange.max += this.yBarWidth / 2;
	  }
	  this.yMin = this.defaultYMin !== undefined ? this.defaultYMin : yRange.min;
	  this.yMax = this.defaultYMax !== undefined ? this.defaultYMax : yRange.max;
	  if (this.yMax <= this.yMin) this.yMax = this.yMin + 1;
	  this.yStep = this.defaultYStep !== undefined ? this.defaultYStep : (this.yMax - this.yMin) / 5;

	  var zRange = this.getColumnRange(data, this.colZ);
	  this.zMin = this.defaultZMin !== undefined ? this.defaultZMin : zRange.min;
	  this.zMax = this.defaultZMax !== undefined ? this.defaultZMax : zRange.max;
	  if (this.zMax <= this.zMin) this.zMax = this.zMin + 1;
	  this.zStep = this.defaultZStep !== undefined ? this.defaultZStep : (this.zMax - this.zMin) / 5;

	  if (this.colValue !== undefined) {
	    var valueRange = this.getColumnRange(data, this.colValue);
	    this.valueMin = this.defaultValueMin !== undefined ? this.defaultValueMin : valueRange.min;
	    this.valueMax = this.defaultValueMax !== undefined ? this.defaultValueMax : valueRange.max;
	    if (this.valueMax <= this.valueMin) this.valueMax = this.valueMin + 1;
	  }

	  // set the scale dependent on the ranges.
	  this._setScale();
	};

	/**
	 * Filter the data based on the current filter
	 * @param {Array} data
	 * @return {Array} dataPoints   Array with point objects which can be drawn on screen
	 */
	Graph3d.prototype._getDataPoints = function (data) {
	  // TODO: store the created matrix dataPoints in the filters instead of reloading each time
	  var x, y, i, z, obj, point;

	  var dataPoints = [];

	  if (this.style === Graph3d.STYLE.GRID || this.style === Graph3d.STYLE.SURFACE) {
	    // copy all values from the google data table to a matrix
	    // the provided values are supposed to form a grid of (x,y) positions

	    // create two lists with all present x and y values
	    var dataX = [];
	    var dataY = [];
	    for (i = 0; i < this.getNumberOfRows(data); i++) {
	      x = data[i][this.colX] || 0;
	      y = data[i][this.colY] || 0;

	      if (dataX.indexOf(x) === -1) {
	        dataX.push(x);
	      }
	      if (dataY.indexOf(y) === -1) {
	        dataY.push(y);
	      }
	    }

	    var sortNumber = function sortNumber(a, b) {
	      return a - b;
	    };
	    dataX.sort(sortNumber);
	    dataY.sort(sortNumber);

	    // create a grid, a 2d matrix, with all values.
	    var dataMatrix = []; // temporary data matrix
	    for (i = 0; i < data.length; i++) {
	      x = data[i][this.colX] || 0;
	      y = data[i][this.colY] || 0;
	      z = data[i][this.colZ] || 0;

	      var xIndex = dataX.indexOf(x); // TODO: implement Array().indexOf() for Internet Explorer
	      var yIndex = dataY.indexOf(y);

	      if (dataMatrix[xIndex] === undefined) {
	        dataMatrix[xIndex] = [];
	      }

	      var point3d = new Point3d();
	      point3d.x = x;
	      point3d.y = y;
	      point3d.z = z;

	      obj = {};
	      obj.point = point3d;
	      obj.trans = undefined;
	      obj.screen = undefined;
	      obj.bottom = new Point3d(x, y, this.zMin);

	      dataMatrix[xIndex][yIndex] = obj;

	      dataPoints.push(obj);
	    }

	    // fill in the pointers to the neighbors.
	    for (x = 0; x < dataMatrix.length; x++) {
	      for (y = 0; y < dataMatrix[x].length; y++) {
	        if (dataMatrix[x][y]) {
	          dataMatrix[x][y].pointRight = x < dataMatrix.length - 1 ? dataMatrix[x + 1][y] : undefined;
	          dataMatrix[x][y].pointTop = y < dataMatrix[x].length - 1 ? dataMatrix[x][y + 1] : undefined;
	          dataMatrix[x][y].pointCross = x < dataMatrix.length - 1 && y < dataMatrix[x].length - 1 ? dataMatrix[x + 1][y + 1] : undefined;
	        }
	      }
	    }
	  } else {
	    // 'dot', 'dot-line', etc.
	    // copy all values from the google data table to a list with Point3d objects
	    for (i = 0; i < data.length; i++) {
	      point = new Point3d();
	      point.x = data[i][this.colX] || 0;
	      point.y = data[i][this.colY] || 0;
	      point.z = data[i][this.colZ] || 0;

	      if (this.colValue !== undefined) {
	        point.value = data[i][this.colValue] || 0;
	      }

	      obj = {};
	      obj.point = point;
	      obj.bottom = new Point3d(point.x, point.y, this.zMin);
	      obj.trans = undefined;
	      obj.screen = undefined;

	      dataPoints.push(obj);
	    }
	  }

	  return dataPoints;
	};

	/**
	 * Create the main frame for the Graph3d.
	 * This function is executed once when a Graph3d object is created. The frame
	 * contains a canvas, and this canvas contains all objects like the axis and
	 * nodes.
	 */
	Graph3d.prototype.create = function () {
	  // remove all elements from the container element.
	  while (this.containerElement.hasChildNodes()) {
	    this.containerElement.removeChild(this.containerElement.firstChild);
	  }

	  this.frame = document.createElement('div');
	  this.frame.style.position = 'relative';
	  this.frame.style.overflow = 'hidden';

	  // create the graph canvas (HTML canvas element)
	  this.frame.canvas = document.createElement('canvas');
	  this.frame.canvas.style.position = 'relative';
	  this.frame.appendChild(this.frame.canvas);
	  //if (!this.frame.canvas.getContext) {
	  {
	    var noCanvas = document.createElement('DIV');
	    noCanvas.style.color = 'red';
	    noCanvas.style.fontWeight = 'bold';
	    noCanvas.style.padding = '10px';
	    noCanvas.innerHTML = 'Error: your browser does not support HTML canvas';
	    this.frame.canvas.appendChild(noCanvas);
	  }

	  this.frame.filter = document.createElement('div');
	  this.frame.filter.style.position = 'absolute';
	  this.frame.filter.style.bottom = '0px';
	  this.frame.filter.style.left = '0px';
	  this.frame.filter.style.width = '100%';
	  this.frame.appendChild(this.frame.filter);

	  // add event listeners to handle moving and zooming the contents
	  var me = this;
	  var onmousedown = function onmousedown(event) {
	    me._onMouseDown(event);
	  };
	  var ontouchstart = function ontouchstart(event) {
	    me._onTouchStart(event);
	  };
	  var onmousewheel = function onmousewheel(event) {
	    me._onWheel(event);
	  };
	  var ontooltip = function ontooltip(event) {
	    me._onTooltip(event);
	  };
	  // TODO: these events are never cleaned up... can give a 'memory leakage'

	  util.addEventListener(this.frame.canvas, 'keydown', onkeydown);
	  util.addEventListener(this.frame.canvas, 'mousedown', onmousedown);
	  util.addEventListener(this.frame.canvas, 'touchstart', ontouchstart);
	  util.addEventListener(this.frame.canvas, 'mousewheel', onmousewheel);
	  util.addEventListener(this.frame.canvas, 'mousemove', ontooltip);

	  // add the new graph to the container element
	  this.containerElement.appendChild(this.frame);
	};

	/**
	 * Set a new size for the graph
	 * @param {string} width   Width in pixels or percentage (for example '800px'
	 *             or '50%')
	 * @param {string} height  Height in pixels or percentage  (for example '400px'
	 *             or '30%')
	 */
	Graph3d.prototype.setSize = function (width, height) {
	  this.frame.style.width = width;
	  this.frame.style.height = height;

	  this._resizeCanvas();
	};

	/**
	 * Resize the canvas to the current size of the frame
	 */
	Graph3d.prototype._resizeCanvas = function () {
	  this.frame.canvas.style.width = '100%';
	  this.frame.canvas.style.height = '100%';

	  this.frame.canvas.width = this.frame.canvas.clientWidth;
	  this.frame.canvas.height = this.frame.canvas.clientHeight;

	  // adjust with for margin
	  this.frame.filter.style.width = this.frame.canvas.clientWidth - 2 * 10 + 'px';
	};

	/**
	 * Start animation
	 */
	Graph3d.prototype.animationStart = function () {
	  if (!this.frame.filter || !this.frame.filter.slider) throw 'No animation available';

	  this.frame.filter.slider.play();
	};

	/**
	 * Stop animation
	 */
	Graph3d.prototype.animationStop = function () {
	  if (!this.frame.filter || !this.frame.filter.slider) return;

	  this.frame.filter.slider.stop();
	};

	/**
	 * Resize the center position based on the current values in this.defaultXCenter
	 * and this.defaultYCenter (which are strings with a percentage or a value
	 * in pixels). The center positions are the variables this.xCenter
	 * and this.yCenter
	 */
	Graph3d.prototype._resizeCenter = function () {
	  // calculate the horizontal center position
	  if (this.defaultXCenter.charAt(this.defaultXCenter.length - 1) === '%') {
	    this.xcenter = parseFloat(this.defaultXCenter) / 100 * this.frame.canvas.clientWidth;
	  } else {
	    this.xcenter = parseFloat(this.defaultXCenter); // supposed to be in px
	  }

	  // calculate the vertical center position
	  if (this.defaultYCenter.charAt(this.defaultYCenter.length - 1) === '%') {
	    this.ycenter = parseFloat(this.defaultYCenter) / 100 * (this.frame.canvas.clientHeight - this.frame.filter.clientHeight);
	  } else {
	    this.ycenter = parseFloat(this.defaultYCenter); // supposed to be in px
	  }
	};

	/**
	 * Set the rotation and distance of the camera
	 * @param {Object} pos   An object with the camera position. The object
	 *             contains three parameters:
	 *             - horizontal {Number}
	 *             The horizontal rotation, between 0 and 2*PI.
	 *             Optional, can be left undefined.
	 *             - vertical {Number}
	 *             The vertical rotation, between 0 and 0.5*PI
	 *             if vertical=0.5*PI, the graph is shown from the
	 *             top. Optional, can be left undefined.
	 *             - distance {Number}
	 *             The (normalized) distance of the camera to the
	 *             center of the graph, a value between 0.71 and 5.0.
	 *             Optional, can be left undefined.
	 */
	Graph3d.prototype.setCameraPosition = function (pos) {
	  if (pos === undefined) {
	    return;
	  }

	  if (pos.horizontal !== undefined && pos.vertical !== undefined) {
	    this.camera.setArmRotation(pos.horizontal, pos.vertical);
	  }

	  if (pos.distance !== undefined) {
	    this.camera.setArmLength(pos.distance);
	  }

	  this.redraw();
	};

	/**
	 * Retrieve the current camera rotation
	 * @return {object}   An object with parameters horizontal, vertical, and
	 *          distance
	 */
	Graph3d.prototype.getCameraPosition = function () {
	  var pos = this.camera.getArmRotation();
	  pos.distance = this.camera.getArmLength();
	  return pos;
	};

	/**
	 * Load data into the 3D Graph
	 */
	Graph3d.prototype._readData = function (data) {
	  // read the data
	  this._dataInitialize(data, this.style);

	  if (this.dataFilter) {
	    // apply filtering
	    this.dataPoints = this.dataFilter._getDataPoints();
	  } else {
	    // no filtering. load all data
	    this.dataPoints = this._getDataPoints(this.dataTable);
	  }

	  // draw the filter
	  this._redrawFilter();
	};

	/**
	 * Replace the dataset of the Graph3d
	 * @param {Array | DataSet | DataView} data
	 */
	Graph3d.prototype.setData = function (data) {
	  this._readData(data);
	  this.redraw();

	  // start animation when option is true
	  if (this.animationAutoStart && this.dataFilter) {
	    this.animationStart();
	  }
	};

	/**
	 * Update the options. Options will be merged with current options
	 * @param {Object} options
	 */
	Graph3d.prototype.setOptions = function (options) {
	  var cameraPosition = undefined;

	  this.animationStop();

	  if (options !== undefined) {
	    // retrieve parameter values
	    if (options.width !== undefined) this.width = options.width;
	    if (options.height !== undefined) this.height = options.height;

	    if (options.xCenter !== undefined) this.defaultXCenter = options.xCenter;
	    if (options.yCenter !== undefined) this.defaultYCenter = options.yCenter;

	    if (options.filterLabel !== undefined) this.filterLabel = options.filterLabel;
	    if (options.legendLabel !== undefined) this.legendLabel = options.legendLabel;
	    if (options.xLabel !== undefined) this.xLabel = options.xLabel;
	    if (options.yLabel !== undefined) this.yLabel = options.yLabel;
	    if (options.zLabel !== undefined) this.zLabel = options.zLabel;

	    if (options.xValueLabel !== undefined) this.xValueLabel = options.xValueLabel;
	    if (options.yValueLabel !== undefined) this.yValueLabel = options.yValueLabel;
	    if (options.zValueLabel !== undefined) this.zValueLabel = options.zValueLabel;

	    if (options.style !== undefined) {
	      var styleNumber = this._getStyleNumber(options.style);
	      if (styleNumber !== -1) {
	        this.style = styleNumber;
	      }
	    }
	    if (options.showGrid !== undefined) this.showGrid = options.showGrid;
	    if (options.showPerspective !== undefined) this.showPerspective = options.showPerspective;
	    if (options.showShadow !== undefined) this.showShadow = options.showShadow;
	    if (options.tooltip !== undefined) this.showTooltip = options.tooltip;
	    if (options.showAnimationControls !== undefined) this.showAnimationControls = options.showAnimationControls;
	    if (options.keepAspectRatio !== undefined) this.keepAspectRatio = options.keepAspectRatio;
	    if (options.verticalRatio !== undefined) this.verticalRatio = options.verticalRatio;

	    if (options.animationInterval !== undefined) this.animationInterval = options.animationInterval;
	    if (options.animationPreload !== undefined) this.animationPreload = options.animationPreload;
	    if (options.animationAutoStart !== undefined) this.animationAutoStart = options.animationAutoStart;

	    if (options.xBarWidth !== undefined) this.defaultXBarWidth = options.xBarWidth;
	    if (options.yBarWidth !== undefined) this.defaultYBarWidth = options.yBarWidth;

	    if (options.xMin !== undefined) this.defaultXMin = options.xMin;
	    if (options.xStep !== undefined) this.defaultXStep = options.xStep;
	    if (options.xMax !== undefined) this.defaultXMax = options.xMax;
	    if (options.yMin !== undefined) this.defaultYMin = options.yMin;
	    if (options.yStep !== undefined) this.defaultYStep = options.yStep;
	    if (options.yMax !== undefined) this.defaultYMax = options.yMax;
	    if (options.zMin !== undefined) this.defaultZMin = options.zMin;
	    if (options.zStep !== undefined) this.defaultZStep = options.zStep;
	    if (options.zMax !== undefined) this.defaultZMax = options.zMax;
	    if (options.valueMin !== undefined) this.defaultValueMin = options.valueMin;
	    if (options.valueMax !== undefined) this.defaultValueMax = options.valueMax;

	    if (options.cameraPosition !== undefined) cameraPosition = options.cameraPosition;

	    if (cameraPosition !== undefined) {
	      this.camera.setArmRotation(cameraPosition.horizontal, cameraPosition.vertical);
	      this.camera.setArmLength(cameraPosition.distance);
	    } else {
	      this.camera.setArmRotation(1.0, 0.5);
	      this.camera.setArmLength(1.7);
	    }
	  }

	  this._setBackgroundColor(options && options.backgroundColor);

	  this.setSize(this.width, this.height);

	  // re-load the data
	  if (this.dataTable) {
	    this.setData(this.dataTable);
	  }

	  // start animation when option is true
	  if (this.animationAutoStart && this.dataFilter) {
	    this.animationStart();
	  }
	};

	/**
	 * Redraw the Graph.
	 */
	Graph3d.prototype.redraw = function () {
	  if (this.dataPoints === undefined) {
	    throw 'Error: graph data not initialized';
	  }

	  this._resizeCanvas();
	  this._resizeCenter();
	  this._redrawSlider();
	  this._redrawClear();
	  this._redrawAxis();

	  if (this.style === Graph3d.STYLE.GRID || this.style === Graph3d.STYLE.SURFACE) {
	    this._redrawDataGrid();
	  } else if (this.style === Graph3d.STYLE.LINE) {
	    this._redrawDataLine();
	  } else if (this.style === Graph3d.STYLE.BAR || this.style === Graph3d.STYLE.BARCOLOR || this.style === Graph3d.STYLE.BARSIZE) {
	    this._redrawDataBar();
	  } else {
	    // style is DOT, DOTLINE, DOTCOLOR, DOTSIZE
	    this._redrawDataDot();
	  }

	  this._redrawInfo();
	  this._redrawLegend();
	};

	/**
	 * Clear the canvas before redrawing
	 */
	Graph3d.prototype._redrawClear = function () {
	  var canvas = this.frame.canvas;
	  var ctx = canvas.getContext('2d');

	  ctx.clearRect(0, 0, canvas.width, canvas.height);
	};

	/**
	 * Redraw the legend showing the colors
	 */
	Graph3d.prototype._redrawLegend = function () {
	  var y;

	  if (this.style === Graph3d.STYLE.DOTCOLOR || this.style === Graph3d.STYLE.DOTSIZE) {

	    var dotSize = this.frame.clientWidth * 0.02;

	    var widthMin, widthMax;
	    if (this.style === Graph3d.STYLE.DOTSIZE) {
	      widthMin = dotSize / 2; // px
	      widthMax = dotSize / 2 + dotSize * 2; // Todo: put this in one function
	    } else {
	      widthMin = 20; // px
	      widthMax = 20; // px
	    }

	    var height = Math.max(this.frame.clientHeight * 0.25, 100);
	    var top = this.margin;
	    var right = this.frame.clientWidth - this.margin;
	    var left = right - widthMax;
	    var bottom = top + height;
	  }

	  var canvas = this.frame.canvas;
	  var ctx = canvas.getContext('2d');
	  ctx.lineWidth = 1;
	  ctx.font = '14px arial'; // TODO: put in options

	  if (this.style === Graph3d.STYLE.DOTCOLOR) {
	    // draw the color bar
	    var ymin = 0;
	    var ymax = height; // Todo: make height customizable
	    for (y = ymin; y < ymax; y++) {
	      var f = (y - ymin) / (ymax - ymin);

	      //var width = (dotSize / 2 + (1-f) * dotSize * 2); // Todo: put this in one function
	      var hue = f * 240;
	      var color = this._hsv2rgb(hue, 1, 1);

	      ctx.strokeStyle = color;
	      ctx.beginPath();
	      ctx.moveTo(left, top + y);
	      ctx.lineTo(right, top + y);
	      ctx.stroke();
	    }

	    ctx.strokeStyle = this.colorAxis;
	    ctx.strokeRect(left, top, widthMax, height);
	  }

	  if (this.style === Graph3d.STYLE.DOTSIZE) {
	    // draw border around color bar
	    ctx.strokeStyle = this.colorAxis;
	    ctx.fillStyle = this.colorDot;
	    ctx.beginPath();
	    ctx.moveTo(left, top);
	    ctx.lineTo(right, top);
	    ctx.lineTo(right - widthMax + widthMin, bottom);
	    ctx.lineTo(left, bottom);
	    ctx.closePath();
	    ctx.fill();
	    ctx.stroke();
	  }

	  if (this.style === Graph3d.STYLE.DOTCOLOR || this.style === Graph3d.STYLE.DOTSIZE) {
	    // print values along the color bar
	    var gridLineLen = 5; // px
	    var step = new StepNumber(this.valueMin, this.valueMax, (this.valueMax - this.valueMin) / 5, true);
	    step.start();
	    if (step.getCurrent() < this.valueMin) {
	      step.next();
	    }
	    while (!step.end()) {
	      y = bottom - (step.getCurrent() - this.valueMin) / (this.valueMax - this.valueMin) * height;

	      ctx.beginPath();
	      ctx.moveTo(left - gridLineLen, y);
	      ctx.lineTo(left, y);
	      ctx.stroke();

	      ctx.textAlign = 'right';
	      ctx.textBaseline = 'middle';
	      ctx.fillStyle = this.colorAxis;
	      ctx.fillText(step.getCurrent(), left - 2 * gridLineLen, y);

	      step.next();
	    }

	    ctx.textAlign = 'right';
	    ctx.textBaseline = 'top';
	    var label = this.legendLabel;
	    ctx.fillText(label, right, bottom + this.margin);
	  }
	};

	/**
	 * Redraw the filter
	 */
	Graph3d.prototype._redrawFilter = function () {
	  this.frame.filter.innerHTML = '';

	  if (this.dataFilter) {
	    var options = {
	      'visible': this.showAnimationControls
	    };
	    var slider = new Slider(this.frame.filter, options);
	    this.frame.filter.slider = slider;

	    // TODO: css here is not nice here...
	    this.frame.filter.style.padding = '10px';
	    //this.frame.filter.style.backgroundColor = '#EFEFEF';

	    slider.setValues(this.dataFilter.values);
	    slider.setPlayInterval(this.animationInterval);

	    // create an event handler
	    var me = this;
	    var onchange = function onchange() {
	      var index = slider.getIndex();

	      me.dataFilter.selectValue(index);
	      me.dataPoints = me.dataFilter._getDataPoints();

	      me.redraw();
	    };
	    slider.setOnChangeCallback(onchange);
	  } else {
	    this.frame.filter.slider = undefined;
	  }
	};

	/**
	 * Redraw the slider
	 */
	Graph3d.prototype._redrawSlider = function () {
	  if (this.frame.filter.slider !== undefined) {
	    this.frame.filter.slider.redraw();
	  }
	};

	/**
	 * Redraw common information
	 */
	Graph3d.prototype._redrawInfo = function () {
	  if (this.dataFilter) {
	    var canvas = this.frame.canvas;
	    var ctx = canvas.getContext('2d');

	    ctx.font = '14px arial'; // TODO: put in options
	    ctx.lineStyle = 'gray';
	    ctx.fillStyle = 'gray';
	    ctx.textAlign = 'left';
	    ctx.textBaseline = 'top';

	    var x = this.margin;
	    var y = this.margin;
	    ctx.fillText(this.dataFilter.getLabel() + ': ' + this.dataFilter.getSelectedValue(), x, y);
	  }
	};

	/**
	 * Redraw the axis
	 */
	Graph3d.prototype._redrawAxis = function () {
	  var canvas = this.frame.canvas,
	      ctx = canvas.getContext('2d'),
	      from,
	      to,
	      step,
	      prettyStep,
	      text,
	      xText,
	      yText,
	      zText,
	      offset,
	      xOffset,
	      yOffset,
	      xMin2d,
	      xMax2d;

	  // TODO: get the actual rendered style of the containerElement
	  //ctx.font = this.containerElement.style.font;
	  ctx.font = 24 / this.camera.getArmLength() + 'px arial';

	  // calculate the length for the short grid lines
	  var gridLenX = 0.025 / this.scale.x;
	  var gridLenY = 0.025 / this.scale.y;
	  var textMargin = 5 / this.camera.getArmLength(); // px
	  var armAngle = this.camera.getArmRotation().horizontal;

	  // draw x-grid lines
	  ctx.lineWidth = 1;
	  prettyStep = this.defaultXStep === undefined;
	  step = new StepNumber(this.xMin, this.xMax, this.xStep, prettyStep);
	  step.start();
	  if (step.getCurrent() < this.xMin) {
	    step.next();
	  }
	  while (!step.end()) {
	    var x = step.getCurrent();

	    if (this.showGrid) {
	      from = this._convert3Dto2D(new Point3d(x, this.yMin, this.zMin));
	      to = this._convert3Dto2D(new Point3d(x, this.yMax, this.zMin));
	      ctx.strokeStyle = this.colorGrid;
	      ctx.beginPath();
	      ctx.moveTo(from.x, from.y);
	      ctx.lineTo(to.x, to.y);
	      ctx.stroke();
	    } else {
	      from = this._convert3Dto2D(new Point3d(x, this.yMin, this.zMin));
	      to = this._convert3Dto2D(new Point3d(x, this.yMin + gridLenX, this.zMin));
	      ctx.strokeStyle = this.colorAxis;
	      ctx.beginPath();
	      ctx.moveTo(from.x, from.y);
	      ctx.lineTo(to.x, to.y);
	      ctx.stroke();

	      from = this._convert3Dto2D(new Point3d(x, this.yMax, this.zMin));
	      to = this._convert3Dto2D(new Point3d(x, this.yMax - gridLenX, this.zMin));
	      ctx.strokeStyle = this.colorAxis;
	      ctx.beginPath();
	      ctx.moveTo(from.x, from.y);
	      ctx.lineTo(to.x, to.y);
	      ctx.stroke();
	    }

	    yText = Math.cos(armAngle) > 0 ? this.yMin : this.yMax;
	    text = this._convert3Dto2D(new Point3d(x, yText, this.zMin));
	    if (Math.cos(armAngle * 2) > 0) {
	      ctx.textAlign = 'center';
	      ctx.textBaseline = 'top';
	      text.y += textMargin;
	    } else if (Math.sin(armAngle * 2) < 0) {
	      ctx.textAlign = 'right';
	      ctx.textBaseline = 'middle';
	    } else {
	      ctx.textAlign = 'left';
	      ctx.textBaseline = 'middle';
	    }
	    ctx.fillStyle = this.colorAxis;
	    ctx.fillText('  ' + this.xValueLabel(step.getCurrent()) + '  ', text.x, text.y);

	    step.next();
	  }

	  // draw y-grid lines
	  ctx.lineWidth = 1;
	  prettyStep = this.defaultYStep === undefined;
	  step = new StepNumber(this.yMin, this.yMax, this.yStep, prettyStep);
	  step.start();
	  if (step.getCurrent() < this.yMin) {
	    step.next();
	  }
	  while (!step.end()) {
	    if (this.showGrid) {
	      from = this._convert3Dto2D(new Point3d(this.xMin, step.getCurrent(), this.zMin));
	      to = this._convert3Dto2D(new Point3d(this.xMax, step.getCurrent(), this.zMin));
	      ctx.strokeStyle = this.colorGrid;
	      ctx.beginPath();
	      ctx.moveTo(from.x, from.y);
	      ctx.lineTo(to.x, to.y);
	      ctx.stroke();
	    } else {
	      from = this._convert3Dto2D(new Point3d(this.xMin, step.getCurrent(), this.zMin));
	      to = this._convert3Dto2D(new Point3d(this.xMin + gridLenY, step.getCurrent(), this.zMin));
	      ctx.strokeStyle = this.colorAxis;
	      ctx.beginPath();
	      ctx.moveTo(from.x, from.y);
	      ctx.lineTo(to.x, to.y);
	      ctx.stroke();

	      from = this._convert3Dto2D(new Point3d(this.xMax, step.getCurrent(), this.zMin));
	      to = this._convert3Dto2D(new Point3d(this.xMax - gridLenY, step.getCurrent(), this.zMin));
	      ctx.strokeStyle = this.colorAxis;
	      ctx.beginPath();
	      ctx.moveTo(from.x, from.y);
	      ctx.lineTo(to.x, to.y);
	      ctx.stroke();
	    }

	    xText = Math.sin(armAngle) > 0 ? this.xMin : this.xMax;
	    text = this._convert3Dto2D(new Point3d(xText, step.getCurrent(), this.zMin));
	    if (Math.cos(armAngle * 2) < 0) {
	      ctx.textAlign = 'center';
	      ctx.textBaseline = 'top';
	      text.y += textMargin;
	    } else if (Math.sin(armAngle * 2) > 0) {
	      ctx.textAlign = 'right';
	      ctx.textBaseline = 'middle';
	    } else {
	      ctx.textAlign = 'left';
	      ctx.textBaseline = 'middle';
	    }
	    ctx.fillStyle = this.colorAxis;
	    ctx.fillText('  ' + this.yValueLabel(step.getCurrent()) + '  ', text.x, text.y);

	    step.next();
	  }

	  // draw z-grid lines and axis
	  ctx.lineWidth = 1;
	  prettyStep = this.defaultZStep === undefined;
	  step = new StepNumber(this.zMin, this.zMax, this.zStep, prettyStep);
	  step.start();
	  if (step.getCurrent() < this.zMin) {
	    step.next();
	  }
	  xText = Math.cos(armAngle) > 0 ? this.xMin : this.xMax;
	  yText = Math.sin(armAngle) < 0 ? this.yMin : this.yMax;
	  while (!step.end()) {
	    // TODO: make z-grid lines really 3d?
	    from = this._convert3Dto2D(new Point3d(xText, yText, step.getCurrent()));
	    ctx.strokeStyle = this.colorAxis;
	    ctx.beginPath();
	    ctx.moveTo(from.x, from.y);
	    ctx.lineTo(from.x - textMargin, from.y);
	    ctx.stroke();

	    ctx.textAlign = 'right';
	    ctx.textBaseline = 'middle';
	    ctx.fillStyle = this.colorAxis;
	    ctx.fillText(this.zValueLabel(step.getCurrent()) + ' ', from.x - 5, from.y);

	    step.next();
	  }
	  ctx.lineWidth = 1;
	  from = this._convert3Dto2D(new Point3d(xText, yText, this.zMin));
	  to = this._convert3Dto2D(new Point3d(xText, yText, this.zMax));
	  ctx.strokeStyle = this.colorAxis;
	  ctx.beginPath();
	  ctx.moveTo(from.x, from.y);
	  ctx.lineTo(to.x, to.y);
	  ctx.stroke();

	  // draw x-axis
	  ctx.lineWidth = 1;
	  // line at yMin
	  xMin2d = this._convert3Dto2D(new Point3d(this.xMin, this.yMin, this.zMin));
	  xMax2d = this._convert3Dto2D(new Point3d(this.xMax, this.yMin, this.zMin));
	  ctx.strokeStyle = this.colorAxis;
	  ctx.beginPath();
	  ctx.moveTo(xMin2d.x, xMin2d.y);
	  ctx.lineTo(xMax2d.x, xMax2d.y);
	  ctx.stroke();
	  // line at ymax
	  xMin2d = this._convert3Dto2D(new Point3d(this.xMin, this.yMax, this.zMin));
	  xMax2d = this._convert3Dto2D(new Point3d(this.xMax, this.yMax, this.zMin));
	  ctx.strokeStyle = this.colorAxis;
	  ctx.beginPath();
	  ctx.moveTo(xMin2d.x, xMin2d.y);
	  ctx.lineTo(xMax2d.x, xMax2d.y);
	  ctx.stroke();

	  // draw y-axis
	  ctx.lineWidth = 1;
	  // line at xMin
	  from = this._convert3Dto2D(new Point3d(this.xMin, this.yMin, this.zMin));
	  to = this._convert3Dto2D(new Point3d(this.xMin, this.yMax, this.zMin));
	  ctx.strokeStyle = this.colorAxis;
	  ctx.beginPath();
	  ctx.moveTo(from.x, from.y);
	  ctx.lineTo(to.x, to.y);
	  ctx.stroke();
	  // line at xMax
	  from = this._convert3Dto2D(new Point3d(this.xMax, this.yMin, this.zMin));
	  to = this._convert3Dto2D(new Point3d(this.xMax, this.yMax, this.zMin));
	  ctx.strokeStyle = this.colorAxis;
	  ctx.beginPath();
	  ctx.moveTo(from.x, from.y);
	  ctx.lineTo(to.x, to.y);
	  ctx.stroke();

	  // draw x-label
	  var xLabel = this.xLabel;
	  if (xLabel.length > 0) {
	    yOffset = 0.1 / this.scale.y;
	    xText = (this.xMin + this.xMax) / 2;
	    yText = Math.cos(armAngle) > 0 ? this.yMin - yOffset : this.yMax + yOffset;
	    text = this._convert3Dto2D(new Point3d(xText, yText, this.zMin));
	    if (Math.cos(armAngle * 2) > 0) {
	      ctx.textAlign = 'center';
	      ctx.textBaseline = 'top';
	    } else if (Math.sin(armAngle * 2) < 0) {
	      ctx.textAlign = 'right';
	      ctx.textBaseline = 'middle';
	    } else {
	      ctx.textAlign = 'left';
	      ctx.textBaseline = 'middle';
	    }
	    ctx.fillStyle = this.colorAxis;
	    ctx.fillText(xLabel, text.x, text.y);
	  }

	  // draw y-label
	  var yLabel = this.yLabel;
	  if (yLabel.length > 0) {
	    xOffset = 0.1 / this.scale.x;
	    xText = Math.sin(armAngle) > 0 ? this.xMin - xOffset : this.xMax + xOffset;
	    yText = (this.yMin + this.yMax) / 2;
	    text = this._convert3Dto2D(new Point3d(xText, yText, this.zMin));
	    if (Math.cos(armAngle * 2) < 0) {
	      ctx.textAlign = 'center';
	      ctx.textBaseline = 'top';
	    } else if (Math.sin(armAngle * 2) > 0) {
	      ctx.textAlign = 'right';
	      ctx.textBaseline = 'middle';
	    } else {
	      ctx.textAlign = 'left';
	      ctx.textBaseline = 'middle';
	    }
	    ctx.fillStyle = this.colorAxis;
	    ctx.fillText(yLabel, text.x, text.y);
	  }

	  // draw z-label
	  var zLabel = this.zLabel;
	  if (zLabel.length > 0) {
	    offset = 30; // pixels.  // TODO: relate to the max width of the values on the z axis?
	    xText = Math.cos(armAngle) > 0 ? this.xMin : this.xMax;
	    yText = Math.sin(armAngle) < 0 ? this.yMin : this.yMax;
	    zText = (this.zMin + this.zMax) / 2;
	    text = this._convert3Dto2D(new Point3d(xText, yText, zText));
	    ctx.textAlign = 'right';
	    ctx.textBaseline = 'middle';
	    ctx.fillStyle = this.colorAxis;
	    ctx.fillText(zLabel, text.x - offset, text.y);
	  }
	};

	/**
	 * Calculate the color based on the given value.
	 * @param {Number} H   Hue, a value be between 0 and 360
	 * @param {Number} S   Saturation, a value between 0 and 1
	 * @param {Number} V   Value, a value between 0 and 1
	 */
	Graph3d.prototype._hsv2rgb = function (H, S, V) {
	  var R, G, B, C, Hi, X;

	  C = V * S;
	  Hi = Math.floor(H / 60); // hi = 0,1,2,3,4,5
	  X = C * (1 - Math.abs(H / 60 % 2 - 1));

	  switch (Hi) {
	    case 0:
	      R = C;G = X;B = 0;break;
	    case 1:
	      R = X;G = C;B = 0;break;
	    case 2:
	      R = 0;G = C;B = X;break;
	    case 3:
	      R = 0;G = X;B = C;break;
	    case 4:
	      R = X;G = 0;B = C;break;
	    case 5:
	      R = C;G = 0;B = X;break;

	    default:
	      R = 0;G = 0;B = 0;break;
	  }

	  return 'RGB(' + parseInt(R * 255) + ',' + parseInt(G * 255) + ',' + parseInt(B * 255) + ')';
	};

	/**
	 * Draw all datapoints as a grid
	 * This function can be used when the style is 'grid'
	 */
	Graph3d.prototype._redrawDataGrid = function () {
	  var canvas = this.frame.canvas,
	      ctx = canvas.getContext('2d'),
	      point,
	      right,
	      top,
	      cross,
	      i,
	      topSideVisible,
	      fillStyle,
	      strokeStyle,
	      lineWidth,
	      h,
	      s,
	      v,
	      zAvg;

	  if (this.dataPoints === undefined || this.dataPoints.length <= 0) return; // TODO: throw exception?

	  // calculate the translations and screen position of all points
	  for (i = 0; i < this.dataPoints.length; i++) {
	    var trans = this._convertPointToTranslation(this.dataPoints[i].point);
	    var screen = this._convertTranslationToScreen(trans);

	    this.dataPoints[i].trans = trans;
	    this.dataPoints[i].screen = screen;

	    // calculate the translation of the point at the bottom (needed for sorting)
	    var transBottom = this._convertPointToTranslation(this.dataPoints[i].bottom);
	    this.dataPoints[i].dist = this.showPerspective ? transBottom.length() : -transBottom.z;
	  }

	  // sort the points on depth of their (x,y) position (not on z)
	  var sortDepth = function sortDepth(a, b) {
	    return b.dist - a.dist;
	  };
	  this.dataPoints.sort(sortDepth);

	  if (this.style === Graph3d.STYLE.SURFACE) {
	    for (i = 0; i < this.dataPoints.length; i++) {
	      point = this.dataPoints[i];
	      right = this.dataPoints[i].pointRight;
	      top = this.dataPoints[i].pointTop;
	      cross = this.dataPoints[i].pointCross;

	      if (point !== undefined && right !== undefined && top !== undefined && cross !== undefined) {

	        if (this.showGrayBottom || this.showShadow) {
	          // calculate the cross product of the two vectors from center
	          // to left and right, in order to know whether we are looking at the
	          // bottom or at the top side. We can also use the cross product
	          // for calculating light intensity
	          var aDiff = Point3d.subtract(cross.trans, point.trans);
	          var bDiff = Point3d.subtract(top.trans, right.trans);
	          var crossproduct = Point3d.crossProduct(aDiff, bDiff);
	          var len = crossproduct.length();
	          // FIXME: there is a bug with determining the surface side (shadow or colored)

	          topSideVisible = crossproduct.z > 0;
	        } else {
	          topSideVisible = true;
	        }

	        if (topSideVisible) {
	          // calculate Hue from the current value. At zMin the hue is 240, at zMax the hue is 0
	          zAvg = (point.point.z + right.point.z + top.point.z + cross.point.z) / 4;
	          h = (1 - (zAvg - this.zMin) * this.scale.z / this.verticalRatio) * 240;
	          s = 1; // saturation

	          if (this.showShadow) {
	            v = Math.min(1 + crossproduct.x / len / 2, 1); // value. TODO: scale
	            fillStyle = this._hsv2rgb(h, s, v);
	            strokeStyle = fillStyle;
	          } else {
	            v = 1;
	            fillStyle = this._hsv2rgb(h, s, v);
	            strokeStyle = this.colorAxis;
	          }
	        } else {
	          fillStyle = 'gray';
	          strokeStyle = this.colorAxis;
	        }
	        lineWidth = 0.5;

	        ctx.lineWidth = lineWidth;
	        ctx.fillStyle = fillStyle;
	        ctx.strokeStyle = strokeStyle;
	        ctx.beginPath();
	        ctx.moveTo(point.screen.x, point.screen.y);
	        ctx.lineTo(right.screen.x, right.screen.y);
	        ctx.lineTo(cross.screen.x, cross.screen.y);
	        ctx.lineTo(top.screen.x, top.screen.y);
	        ctx.closePath();
	        ctx.fill();
	        ctx.stroke();
	      }
	    }
	  } else {
	    // grid style
	    for (i = 0; i < this.dataPoints.length; i++) {
	      point = this.dataPoints[i];
	      right = this.dataPoints[i].pointRight;
	      top = this.dataPoints[i].pointTop;

	      if (point !== undefined) {
	        if (this.showPerspective) {
	          lineWidth = 2 / -point.trans.z;
	        } else {
	          lineWidth = 2 * -(this.eye.z / this.camera.getArmLength());
	        }
	      }

	      if (point !== undefined && right !== undefined) {
	        // calculate Hue from the current value. At zMin the hue is 240, at zMax the hue is 0
	        zAvg = (point.point.z + right.point.z) / 2;
	        h = (1 - (zAvg - this.zMin) * this.scale.z / this.verticalRatio) * 240;

	        ctx.lineWidth = lineWidth;
	        ctx.strokeStyle = this._hsv2rgb(h, 1, 1);
	        ctx.beginPath();
	        ctx.moveTo(point.screen.x, point.screen.y);
	        ctx.lineTo(right.screen.x, right.screen.y);
	        ctx.stroke();
	      }

	      if (point !== undefined && top !== undefined) {
	        // calculate Hue from the current value. At zMin the hue is 240, at zMax the hue is 0
	        zAvg = (point.point.z + top.point.z) / 2;
	        h = (1 - (zAvg - this.zMin) * this.scale.z / this.verticalRatio) * 240;

	        ctx.lineWidth = lineWidth;
	        ctx.strokeStyle = this._hsv2rgb(h, 1, 1);
	        ctx.beginPath();
	        ctx.moveTo(point.screen.x, point.screen.y);
	        ctx.lineTo(top.screen.x, top.screen.y);
	        ctx.stroke();
	      }
	    }
	  }
	};

	/**
	 * Draw all datapoints as dots.
	 * This function can be used when the style is 'dot' or 'dot-line'
	 */
	Graph3d.prototype._redrawDataDot = function () {
	  var canvas = this.frame.canvas;
	  var ctx = canvas.getContext('2d');
	  var i;

	  if (this.dataPoints === undefined || this.dataPoints.length <= 0) return; // TODO: throw exception?

	  // calculate the translations of all points
	  for (i = 0; i < this.dataPoints.length; i++) {
	    var trans = this._convertPointToTranslation(this.dataPoints[i].point);
	    var screen = this._convertTranslationToScreen(trans);
	    this.dataPoints[i].trans = trans;
	    this.dataPoints[i].screen = screen;

	    // calculate the distance from the point at the bottom to the camera
	    var transBottom = this._convertPointToTranslation(this.dataPoints[i].bottom);
	    this.dataPoints[i].dist = this.showPerspective ? transBottom.length() : -transBottom.z;
	  }

	  // order the translated points by depth
	  var sortDepth = function sortDepth(a, b) {
	    return b.dist - a.dist;
	  };
	  this.dataPoints.sort(sortDepth);

	  // draw the datapoints as colored circles
	  var dotSize = this.frame.clientWidth * 0.02; // px
	  for (i = 0; i < this.dataPoints.length; i++) {
	    var point = this.dataPoints[i];

	    if (this.style === Graph3d.STYLE.DOTLINE) {
	      // draw a vertical line from the bottom to the graph value
	      //var from = this._convert3Dto2D(new Point3d(point.point.x, point.point.y, this.zMin));
	      var from = this._convert3Dto2D(point.bottom);
	      ctx.lineWidth = 1;
	      ctx.strokeStyle = this.colorGrid;
	      ctx.beginPath();
	      ctx.moveTo(from.x, from.y);
	      ctx.lineTo(point.screen.x, point.screen.y);
	      ctx.stroke();
	    }

	    // calculate radius for the circle
	    var size;
	    if (this.style === Graph3d.STYLE.DOTSIZE) {
	      size = dotSize / 2 + 2 * dotSize * (point.point.value - this.valueMin) / (this.valueMax - this.valueMin);
	    } else {
	      size = dotSize;
	    }

	    var radius;
	    if (this.showPerspective) {
	      radius = size / -point.trans.z;
	    } else {
	      radius = size * -(this.eye.z / this.camera.getArmLength());
	    }
	    if (radius < 0) {
	      radius = 0;
	    }

	    var hue, color, borderColor;
	    if (this.style === Graph3d.STYLE.DOTCOLOR) {
	      // calculate the color based on the value
	      hue = (1 - (point.point.value - this.valueMin) * this.scale.value) * 240;
	      color = this._hsv2rgb(hue, 1, 1);
	      borderColor = this._hsv2rgb(hue, 1, 0.8);
	    } else if (this.style === Graph3d.STYLE.DOTSIZE) {
	      color = this.colorDot;
	      borderColor = this.colorDotBorder;
	    } else {
	      // calculate Hue from the current value. At zMin the hue is 240, at zMax the hue is 0
	      hue = (1 - (point.point.z - this.zMin) * this.scale.z / this.verticalRatio) * 240;
	      color = this._hsv2rgb(hue, 1, 1);
	      borderColor = this._hsv2rgb(hue, 1, 0.8);
	    }

	    // draw the circle
	    ctx.lineWidth = 1.0;
	    ctx.strokeStyle = borderColor;
	    ctx.fillStyle = color;
	    ctx.beginPath();
	    ctx.arc(point.screen.x, point.screen.y, radius, 0, Math.PI * 2, true);
	    ctx.fill();
	    ctx.stroke();
	  }
	};

	/**
	 * Draw all datapoints as bars.
	 * This function can be used when the style is 'bar', 'bar-color', or 'bar-size'
	 */
	Graph3d.prototype._redrawDataBar = function () {
	  var canvas = this.frame.canvas;
	  var ctx = canvas.getContext('2d');
	  var i, j, surface, corners;

	  if (this.dataPoints === undefined || this.dataPoints.length <= 0) return; // TODO: throw exception?

	  // calculate the translations of all points
	  for (i = 0; i < this.dataPoints.length; i++) {
	    var trans = this._convertPointToTranslation(this.dataPoints[i].point);
	    var screen = this._convertTranslationToScreen(trans);
	    this.dataPoints[i].trans = trans;
	    this.dataPoints[i].screen = screen;

	    // calculate the distance from the point at the bottom to the camera
	    var transBottom = this._convertPointToTranslation(this.dataPoints[i].bottom);
	    this.dataPoints[i].dist = this.showPerspective ? transBottom.length() : -transBottom.z;
	  }

	  // order the translated points by depth
	  var sortDepth = function sortDepth(a, b) {
	    return b.dist - a.dist;
	  };
	  this.dataPoints.sort(sortDepth);

	  // draw the datapoints as bars
	  var xWidth = this.xBarWidth / 2;
	  var yWidth = this.yBarWidth / 2;
	  for (i = 0; i < this.dataPoints.length; i++) {
	    var point = this.dataPoints[i];

	    // determine color
	    var hue, color, borderColor;
	    if (this.style === Graph3d.STYLE.BARCOLOR) {
	      // calculate the color based on the value
	      hue = (1 - (point.point.value - this.valueMin) * this.scale.value) * 240;
	      color = this._hsv2rgb(hue, 1, 1);
	      borderColor = this._hsv2rgb(hue, 1, 0.8);
	    } else if (this.style === Graph3d.STYLE.BARSIZE) {
	      color = this.colorDot;
	      borderColor = this.colorDotBorder;
	    } else {
	      // calculate Hue from the current value. At zMin the hue is 240, at zMax the hue is 0
	      hue = (1 - (point.point.z - this.zMin) * this.scale.z / this.verticalRatio) * 240;
	      color = this._hsv2rgb(hue, 1, 1);
	      borderColor = this._hsv2rgb(hue, 1, 0.8);
	    }

	    // calculate size for the bar
	    if (this.style === Graph3d.STYLE.BARSIZE) {
	      xWidth = this.xBarWidth / 2 * ((point.point.value - this.valueMin) / (this.valueMax - this.valueMin) * 0.8 + 0.2);
	      yWidth = this.yBarWidth / 2 * ((point.point.value - this.valueMin) / (this.valueMax - this.valueMin) * 0.8 + 0.2);
	    }

	    // calculate all corner points
	    var me = this;
	    var point3d = point.point;
	    var top = [{ point: new Point3d(point3d.x - xWidth, point3d.y - yWidth, point3d.z) }, { point: new Point3d(point3d.x + xWidth, point3d.y - yWidth, point3d.z) }, { point: new Point3d(point3d.x + xWidth, point3d.y + yWidth, point3d.z) }, { point: new Point3d(point3d.x - xWidth, point3d.y + yWidth, point3d.z) }];
	    var bottom = [{ point: new Point3d(point3d.x - xWidth, point3d.y - yWidth, this.zMin) }, { point: new Point3d(point3d.x + xWidth, point3d.y - yWidth, this.zMin) }, { point: new Point3d(point3d.x + xWidth, point3d.y + yWidth, this.zMin) }, { point: new Point3d(point3d.x - xWidth, point3d.y + yWidth, this.zMin) }];

	    // calculate screen location of the points
	    top.forEach(function (obj) {
	      obj.screen = me._convert3Dto2D(obj.point);
	    });
	    bottom.forEach(function (obj) {
	      obj.screen = me._convert3Dto2D(obj.point);
	    });

	    // create five sides, calculate both corner points and center points
	    var surfaces = [{ corners: top, center: Point3d.avg(bottom[0].point, bottom[2].point) }, { corners: [top[0], top[1], bottom[1], bottom[0]], center: Point3d.avg(bottom[1].point, bottom[0].point) }, { corners: [top[1], top[2], bottom[2], bottom[1]], center: Point3d.avg(bottom[2].point, bottom[1].point) }, { corners: [top[2], top[3], bottom[3], bottom[2]], center: Point3d.avg(bottom[3].point, bottom[2].point) }, { corners: [top[3], top[0], bottom[0], bottom[3]], center: Point3d.avg(bottom[0].point, bottom[3].point) }];
	    point.surfaces = surfaces;

	    // calculate the distance of each of the surface centers to the camera
	    for (j = 0; j < surfaces.length; j++) {
	      surface = surfaces[j];
	      var transCenter = this._convertPointToTranslation(surface.center);
	      surface.dist = this.showPerspective ? transCenter.length() : -transCenter.z;
	      // TODO: this dept calculation doesn't work 100% of the cases due to perspective,
	      //     but the current solution is fast/simple and works in 99.9% of all cases
	      //     the issue is visible in example 14, with graph.setCameraPosition({horizontal: 2.97, vertical: 0.5, distance: 0.9})
	    }

	    // order the surfaces by their (translated) depth
	    surfaces.sort(function (a, b) {
	      var diff = b.dist - a.dist;
	      if (diff) return diff;

	      // if equal depth, sort the top surface last
	      if (a.corners === top) return 1;
	      if (b.corners === top) return -1;

	      // both are equal
	      return 0;
	    });

	    // draw the ordered surfaces
	    ctx.lineWidth = 1;
	    ctx.strokeStyle = borderColor;
	    ctx.fillStyle = color;
	    // NOTE: we start at j=2 instead of j=0 as we don't need to draw the two surfaces at the backside
	    for (j = 2; j < surfaces.length; j++) {
	      surface = surfaces[j];
	      corners = surface.corners;
	      ctx.beginPath();
	      ctx.moveTo(corners[3].screen.x, corners[3].screen.y);
	      ctx.lineTo(corners[0].screen.x, corners[0].screen.y);
	      ctx.lineTo(corners[1].screen.x, corners[1].screen.y);
	      ctx.lineTo(corners[2].screen.x, corners[2].screen.y);
	      ctx.lineTo(corners[3].screen.x, corners[3].screen.y);
	      ctx.fill();
	      ctx.stroke();
	    }
	  }
	};

	/**
	 * Draw a line through all datapoints.
	 * This function can be used when the style is 'line'
	 */
	Graph3d.prototype._redrawDataLine = function () {
	  var canvas = this.frame.canvas,
	      ctx = canvas.getContext('2d'),
	      point,
	      i;

	  if (this.dataPoints === undefined || this.dataPoints.length <= 0) return; // TODO: throw exception?

	  // calculate the translations of all points
	  for (i = 0; i < this.dataPoints.length; i++) {
	    var trans = this._convertPointToTranslation(this.dataPoints[i].point);
	    var screen = this._convertTranslationToScreen(trans);

	    this.dataPoints[i].trans = trans;
	    this.dataPoints[i].screen = screen;
	  }

	  // start the line
	  if (this.dataPoints.length > 0) {
	    point = this.dataPoints[0];

	    ctx.lineWidth = 1; // TODO: make customizable
	    ctx.strokeStyle = 'blue'; // TODO: make customizable
	    ctx.beginPath();
	    ctx.moveTo(point.screen.x, point.screen.y);
	  }

	  // draw the datapoints as colored circles
	  for (i = 1; i < this.dataPoints.length; i++) {
	    point = this.dataPoints[i];
	    ctx.lineTo(point.screen.x, point.screen.y);
	  }

	  // finish the line
	  if (this.dataPoints.length > 0) {
	    ctx.stroke();
	  }
	};

	/**
	 * Start a moving operation inside the provided parent element
	 * @param {Event}     event     The event that occurred (required for
	 *                  retrieving the  mouse position)
	 */
	Graph3d.prototype._onMouseDown = function (event) {
	  event = event || window.event;

	  // check if mouse is still down (may be up when focus is lost for example
	  // in an iframe)
	  if (this.leftButtonDown) {
	    this._onMouseUp(event);
	  }

	  // only react on left mouse button down
	  this.leftButtonDown = event.which ? event.which === 1 : event.button === 1;
	  if (!this.leftButtonDown && !this.touchDown) return;

	  // get mouse position (different code for IE and all other browsers)
	  this.startMouseX = getMouseX(event);
	  this.startMouseY = getMouseY(event);

	  this.startStart = new Date(this.start);
	  this.startEnd = new Date(this.end);
	  this.startArmRotation = this.camera.getArmRotation();

	  this.frame.style.cursor = 'move';

	  // add event listeners to handle moving the contents
	  // we store the function onmousemove and onmouseup in the graph, so we can
	  // remove the eventlisteners lateron in the function mouseUp()
	  var me = this;
	  this.onmousemove = function (event) {
	    me._onMouseMove(event);
	  };
	  this.onmouseup = function (event) {
	    me._onMouseUp(event);
	  };
	  util.addEventListener(document, 'mousemove', me.onmousemove);
	  util.addEventListener(document, 'mouseup', me.onmouseup);
	  util.preventDefault(event);
	};

	/**
	 * Perform moving operating.
	 * This function activated from within the funcion Graph.mouseDown().
	 * @param {Event}   event  Well, eehh, the event
	 */
	Graph3d.prototype._onMouseMove = function (event) {
	  event = event || window.event;

	  // calculate change in mouse position
	  var diffX = parseFloat(getMouseX(event)) - this.startMouseX;
	  var diffY = parseFloat(getMouseY(event)) - this.startMouseY;

	  var horizontalNew = this.startArmRotation.horizontal + diffX / 200;
	  var verticalNew = this.startArmRotation.vertical + diffY / 200;

	  var snapAngle = 4; // degrees
	  var snapValue = Math.sin(snapAngle / 360 * 2 * Math.PI);

	  // snap horizontally to nice angles at 0pi, 0.5pi, 1pi, 1.5pi, etc...
	  // the -0.001 is to take care that the vertical axis is always drawn at the left front corner
	  if (Math.abs(Math.sin(horizontalNew)) < snapValue) {
	    horizontalNew = Math.round(horizontalNew / Math.PI) * Math.PI - 0.001;
	  }
	  if (Math.abs(Math.cos(horizontalNew)) < snapValue) {
	    horizontalNew = (Math.round(horizontalNew / Math.PI - 0.5) + 0.5) * Math.PI - 0.001;
	  }

	  // snap vertically to nice angles
	  if (Math.abs(Math.sin(verticalNew)) < snapValue) {
	    verticalNew = Math.round(verticalNew / Math.PI) * Math.PI;
	  }
	  if (Math.abs(Math.cos(verticalNew)) < snapValue) {
	    verticalNew = (Math.round(verticalNew / Math.PI - 0.5) + 0.5) * Math.PI;
	  }

	  this.camera.setArmRotation(horizontalNew, verticalNew);
	  this.redraw();

	  // fire a cameraPositionChange event
	  var parameters = this.getCameraPosition();
	  this.emit('cameraPositionChange', parameters);

	  util.preventDefault(event);
	};

	/**
	 * Stop moving operating.
	 * This function activated from within the funcion Graph.mouseDown().
	 * @param {event}  event   The event
	 */
	Graph3d.prototype._onMouseUp = function (event) {
	  this.frame.style.cursor = 'auto';
	  this.leftButtonDown = false;

	  // remove event listeners here
	  util.removeEventListener(document, 'mousemove', this.onmousemove);
	  util.removeEventListener(document, 'mouseup', this.onmouseup);
	  util.preventDefault(event);
	};

	/**
	 * After having moved the mouse, a tooltip should pop up when the mouse is resting on a data point
	 * @param {Event}  event   A mouse move event
	 */
	Graph3d.prototype._onTooltip = function (event) {
	  var delay = 300; // ms
	  var boundingRect = this.frame.getBoundingClientRect();
	  var mouseX = getMouseX(event) - boundingRect.left;
	  var mouseY = getMouseY(event) - boundingRect.top;

	  if (!this.showTooltip) {
	    return;
	  }

	  if (this.tooltipTimeout) {
	    clearTimeout(this.tooltipTimeout);
	  }

	  // (delayed) display of a tooltip only if no mouse button is down
	  if (this.leftButtonDown) {
	    this._hideTooltip();
	    return;
	  }

	  if (this.tooltip && this.tooltip.dataPoint) {
	    // tooltip is currently visible
	    var dataPoint = this._dataPointFromXY(mouseX, mouseY);
	    if (dataPoint !== this.tooltip.dataPoint) {
	      // datapoint changed
	      if (dataPoint) {
	        this._showTooltip(dataPoint);
	      } else {
	        this._hideTooltip();
	      }
	    }
	  } else {
	    // tooltip is currently not visible
	    var me = this;
	    this.tooltipTimeout = setTimeout(function () {
	      me.tooltipTimeout = null;

	      // show a tooltip if we have a data point
	      var dataPoint = me._dataPointFromXY(mouseX, mouseY);
	      if (dataPoint) {
	        me._showTooltip(dataPoint);
	      }
	    }, delay);
	  }
	};

	/**
	 * Event handler for touchstart event on mobile devices
	 */
	Graph3d.prototype._onTouchStart = function (event) {
	  this.touchDown = true;

	  var me = this;
	  this.ontouchmove = function (event) {
	    me._onTouchMove(event);
	  };
	  this.ontouchend = function (event) {
	    me._onTouchEnd(event);
	  };
	  util.addEventListener(document, 'touchmove', me.ontouchmove);
	  util.addEventListener(document, 'touchend', me.ontouchend);

	  this._onMouseDown(event);
	};

	/**
	 * Event handler for touchmove event on mobile devices
	 */
	Graph3d.prototype._onTouchMove = function (event) {
	  this._onMouseMove(event);
	};

	/**
	 * Event handler for touchend event on mobile devices
	 */
	Graph3d.prototype._onTouchEnd = function (event) {
	  this.touchDown = false;

	  util.removeEventListener(document, 'touchmove', this.ontouchmove);
	  util.removeEventListener(document, 'touchend', this.ontouchend);

	  this._onMouseUp(event);
	};

	/**
	 * Event handler for mouse wheel event, used to zoom the graph
	 * Code from http://adomas.org/javascript-mouse-wheel/
	 * @param {event}  event   The event
	 */
	Graph3d.prototype._onWheel = function (event) {
	  if (!event) /* For IE. */
	    event = window.event;

	  // retrieve delta
	  var delta = 0;
	  if (event.wheelDelta) {
	    /* IE/Opera. */
	    delta = event.wheelDelta / 120;
	  } else if (event.detail) {
	    /* Mozilla case. */
	    // In Mozilla, sign of delta is different than in IE.
	    // Also, delta is multiple of 3.
	    delta = -event.detail / 3;
	  }

	  // If delta is nonzero, handle it.
	  // Basically, delta is now positive if wheel was scrolled up,
	  // and negative, if wheel was scrolled down.
	  if (delta) {
	    var oldLength = this.camera.getArmLength();
	    var newLength = oldLength * (1 - delta / 10);

	    this.camera.setArmLength(newLength);
	    this.redraw();

	    this._hideTooltip();
	  }

	  // fire a cameraPositionChange event
	  var parameters = this.getCameraPosition();
	  this.emit('cameraPositionChange', parameters);

	  // Prevent default actions caused by mouse wheel.
	  // That might be ugly, but we handle scrolls somehow
	  // anyway, so don't bother here..
	  util.preventDefault(event);
	};

	/**
	 * Test whether a point lies inside given 2D triangle
	 * @param {Point2d} point
	 * @param {Point2d[]} triangle
	 * @return {boolean} Returns true if given point lies inside or on the edge of the triangle
	 * @private
	 */
	Graph3d.prototype._insideTriangle = function (point, triangle) {
	  var a = triangle[0],
	      b = triangle[1],
	      c = triangle[2];

	  function sign(x) {
	    return x > 0 ? 1 : x < 0 ? -1 : 0;
	  }

	  var as = sign((b.x - a.x) * (point.y - a.y) - (b.y - a.y) * (point.x - a.x));
	  var bs = sign((c.x - b.x) * (point.y - b.y) - (c.y - b.y) * (point.x - b.x));
	  var cs = sign((a.x - c.x) * (point.y - c.y) - (a.y - c.y) * (point.x - c.x));

	  // each of the three signs must be either equal to each other or zero
	  return (as == 0 || bs == 0 || as == bs) && (bs == 0 || cs == 0 || bs == cs) && (as == 0 || cs == 0 || as == cs);
	};

	/**
	 * Find a data point close to given screen position (x, y)
	 * @param {Number} x
	 * @param {Number} y
	 * @return {Object | null} The closest data point or null if not close to any data point
	 * @private
	 */
	Graph3d.prototype._dataPointFromXY = function (x, y) {
	  var i,
	      distMax = 100,
	      // px
	  dataPoint = null,
	      closestDataPoint = null,
	      closestDist = null,
	      center = new Point2d(x, y);

	  if (this.style === Graph3d.STYLE.BAR || this.style === Graph3d.STYLE.BARCOLOR || this.style === Graph3d.STYLE.BARSIZE) {
	    // the data points are ordered from far away to closest
	    for (i = this.dataPoints.length - 1; i >= 0; i--) {
	      dataPoint = this.dataPoints[i];
	      var surfaces = dataPoint.surfaces;
	      if (surfaces) {
	        for (var s = surfaces.length - 1; s >= 0; s--) {
	          // split each surface in two triangles, and see if the center point is inside one of these
	          var surface = surfaces[s];
	          var corners = surface.corners;
	          var triangle1 = [corners[0].screen, corners[1].screen, corners[2].screen];
	          var triangle2 = [corners[2].screen, corners[3].screen, corners[0].screen];
	          if (this._insideTriangle(center, triangle1) || this._insideTriangle(center, triangle2)) {
	            // return immediately at the first hit
	            return dataPoint;
	          }
	        }
	      }
	    }
	  } else {
	    // find the closest data point, using distance to the center of the point on 2d screen
	    for (i = 0; i < this.dataPoints.length; i++) {
	      dataPoint = this.dataPoints[i];
	      var point = dataPoint.screen;
	      if (point) {
	        var distX = Math.abs(x - point.x);
	        var distY = Math.abs(y - point.y);
	        var dist = Math.sqrt(distX * distX + distY * distY);

	        if ((closestDist === null || dist < closestDist) && dist < distMax) {
	          closestDist = dist;
	          closestDataPoint = dataPoint;
	        }
	      }
	    }
	  }

	  return closestDataPoint;
	};

	/**
	 * Display a tooltip for given data point
	 * @param {Object} dataPoint
	 * @private
	 */
	Graph3d.prototype._showTooltip = function (dataPoint) {
	  var content, line, dot;

	  if (!this.tooltip) {
	    content = document.createElement('div');
	    content.style.position = 'absolute';
	    content.style.padding = '10px';
	    content.style.border = '1px solid #4d4d4d';
	    content.style.color = '#1a1a1a';
	    content.style.background = 'rgba(255,255,255,0.7)';
	    content.style.borderRadius = '2px';
	    content.style.boxShadow = '5px 5px 10px rgba(128,128,128,0.5)';

	    line = document.createElement('div');
	    line.style.position = 'absolute';
	    line.style.height = '40px';
	    line.style.width = '0';
	    line.style.borderLeft = '1px solid #4d4d4d';

	    dot = document.createElement('div');
	    dot.style.position = 'absolute';
	    dot.style.height = '0';
	    dot.style.width = '0';
	    dot.style.border = '5px solid #4d4d4d';
	    dot.style.borderRadius = '5px';

	    this.tooltip = {
	      dataPoint: null,
	      dom: {
	        content: content,
	        line: line,
	        dot: dot
	      }
	    };
	  } else {
	    content = this.tooltip.dom.content;
	    line = this.tooltip.dom.line;
	    dot = this.tooltip.dom.dot;
	  }

	  this._hideTooltip();

	  this.tooltip.dataPoint = dataPoint;
	  if (typeof this.showTooltip === 'function') {
	    content.innerHTML = this.showTooltip(dataPoint.point);
	  } else {
	    content.innerHTML = '<table>' + '<tr><td>x:</td><td>' + dataPoint.point.x + '</td></tr>' + '<tr><td>y:</td><td>' + dataPoint.point.y + '</td></tr>' + '<tr><td>z:</td><td>' + dataPoint.point.z + '</td></tr>' + '</table>';
	  }

	  content.style.left = '0';
	  content.style.top = '0';
	  this.frame.appendChild(content);
	  this.frame.appendChild(line);
	  this.frame.appendChild(dot);

	  // calculate sizes
	  var contentWidth = content.offsetWidth;
	  var contentHeight = content.offsetHeight;
	  var lineHeight = line.offsetHeight;
	  var dotWidth = dot.offsetWidth;
	  var dotHeight = dot.offsetHeight;

	  var left = dataPoint.screen.x - contentWidth / 2;
	  left = Math.min(Math.max(left, 10), this.frame.clientWidth - 10 - contentWidth);

	  line.style.left = dataPoint.screen.x + 'px';
	  line.style.top = dataPoint.screen.y - lineHeight + 'px';
	  content.style.left = left + 'px';
	  content.style.top = dataPoint.screen.y - lineHeight - contentHeight + 'px';
	  dot.style.left = dataPoint.screen.x - dotWidth / 2 + 'px';
	  dot.style.top = dataPoint.screen.y - dotHeight / 2 + 'px';
	};

	/**
	 * Hide the tooltip when displayed
	 * @private
	 */
	Graph3d.prototype._hideTooltip = function () {
	  if (this.tooltip) {
	    this.tooltip.dataPoint = null;

	    for (var prop in this.tooltip.dom) {
	      if (this.tooltip.dom.hasOwnProperty(prop)) {
	        var elem = this.tooltip.dom[prop];
	        if (elem && elem.parentNode) {
	          elem.parentNode.removeChild(elem);
	        }
	      }
	    }
	  }
	};

	/**--------------------------------------------------------------------------**/

	/**
	 * Get the horizontal mouse position from a mouse event
	 * @param {Event} event
	 * @return {Number} mouse x
	 */
	function getMouseX(event) {
	  if ('clientX' in event) return event.clientX;
	  return event.targetTouches[0] && event.targetTouches[0].clientX || 0;
	}

	/**
	 * Get the vertical mouse position from a mouse event
	 * @param {Event} event
	 * @return {Number} mouse y
	 */
	function getMouseY(event) {
	  if ('clientY' in event) return event.clientY;
	  return event.targetTouches[0] && event.targetTouches[0].clientY || 0;
	}

	module.exports = Graph3d;

/***/ },
/* 289 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Expose `Emitter`.
	 */

	module.exports = Emitter;

	/**
	 * Initialize a new `Emitter`.
	 *
	 * @api public
	 */

	function Emitter(obj) {
	  if (obj) return mixin(obj);
	};

	/**
	 * Mixin the emitter properties.
	 *
	 * @param {Object} obj
	 * @return {Object}
	 * @api private
	 */

	function mixin(obj) {
	  for (var key in Emitter.prototype) {
	    obj[key] = Emitter.prototype[key];
	  }
	  return obj;
	}

	/**
	 * Listen on the given `event` with `fn`.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {
	  this._callbacks = this._callbacks || {};
	  (this._callbacks[event] = this._callbacks[event] || []).push(fn);
	  return this;
	};

	/**
	 * Adds an `event` listener that will be invoked a single
	 * time then automatically removed.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.once = function (event, fn) {
	  var self = this;
	  this._callbacks = this._callbacks || {};

	  function on() {
	    self.off(event, on);
	    fn.apply(this, arguments);
	  }

	  on.fn = fn;
	  this.on(event, on);
	  return this;
	};

	/**
	 * Remove the given callback for `event` or all
	 * registered callbacks.
	 *
	 * @param {String} event
	 * @param {Function} fn
	 * @return {Emitter}
	 * @api public
	 */

	Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {
	  this._callbacks = this._callbacks || {};

	  // all
	  if (0 == arguments.length) {
	    this._callbacks = {};
	    return this;
	  }

	  // specific event
	  var callbacks = this._callbacks[event];
	  if (!callbacks) return this;

	  // remove all handlers
	  if (1 == arguments.length) {
	    delete this._callbacks[event];
	    return this;
	  }

	  // remove specific handler
	  var cb;
	  for (var i = 0; i < callbacks.length; i++) {
	    cb = callbacks[i];
	    if (cb === fn || cb.fn === fn) {
	      callbacks.splice(i, 1);
	      break;
	    }
	  }
	  return this;
	};

	/**
	 * Emit `event` with the given args.
	 *
	 * @param {String} event
	 * @param {Mixed} ...
	 * @return {Emitter}
	 */

	Emitter.prototype.emit = function (event) {
	  this._callbacks = this._callbacks || {};
	  var args = [].slice.call(arguments, 1),
	      callbacks = this._callbacks[event];

	  if (callbacks) {
	    callbacks = callbacks.slice(0);
	    for (var i = 0, len = callbacks.length; i < len; ++i) {
	      callbacks[i].apply(this, args);
	    }
	  }

	  return this;
	};

	/**
	 * Return array of callbacks for `event`.
	 *
	 * @param {String} event
	 * @return {Array}
	 * @api public
	 */

	Emitter.prototype.listeners = function (event) {
	  this._callbacks = this._callbacks || {};
	  return this._callbacks[event] || [];
	};

	/**
	 * Check if this emitter has `event` handlers.
	 *
	 * @param {String} event
	 * @return {Boolean}
	 * @api public
	 */

	Emitter.prototype.hasListeners = function (event) {
	  return !!this.listeners(event).length;
	};

/***/ },
/* 290 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * @prototype Point3d
	 * @param {Number} [x]
	 * @param {Number} [y]
	 * @param {Number} [z]
	 */
	function Point3d(x, y, z) {
	  this.x = x !== undefined ? x : 0;
	  this.y = y !== undefined ? y : 0;
	  this.z = z !== undefined ? z : 0;
	};

	/**
	 * Subtract the two provided points, returns a-b
	 * @param {Point3d} a
	 * @param {Point3d} b
	 * @return {Point3d} a-b
	 */
	Point3d.subtract = function (a, b) {
	  var sub = new Point3d();
	  sub.x = a.x - b.x;
	  sub.y = a.y - b.y;
	  sub.z = a.z - b.z;
	  return sub;
	};

	/**
	 * Add the two provided points, returns a+b
	 * @param {Point3d} a
	 * @param {Point3d} b
	 * @return {Point3d} a+b
	 */
	Point3d.add = function (a, b) {
	  var sum = new Point3d();
	  sum.x = a.x + b.x;
	  sum.y = a.y + b.y;
	  sum.z = a.z + b.z;
	  return sum;
	};

	/**
	 * Calculate the average of two 3d points
	 * @param {Point3d} a
	 * @param {Point3d} b
	 * @return {Point3d} The average, (a+b)/2
	 */
	Point3d.avg = function (a, b) {
	  return new Point3d((a.x + b.x) / 2, (a.y + b.y) / 2, (a.z + b.z) / 2);
	};

	/**
	 * Calculate the cross product of the two provided points, returns axb
	 * Documentation: http://en.wikipedia.org/wiki/Cross_product
	 * @param {Point3d} a
	 * @param {Point3d} b
	 * @return {Point3d} cross product axb
	 */
	Point3d.crossProduct = function (a, b) {
	  var crossproduct = new Point3d();

	  crossproduct.x = a.y * b.z - a.z * b.y;
	  crossproduct.y = a.z * b.x - a.x * b.z;
	  crossproduct.z = a.x * b.y - a.y * b.x;

	  return crossproduct;
	};

	/**
	 * Rtrieve the length of the vector (or the distance from this point to the origin
	 * @return {Number}  length
	 */
	Point3d.prototype.length = function () {
	  return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	};

	module.exports = Point3d;

/***/ },
/* 291 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * @prototype Point2d
	 * @param {Number} [x]
	 * @param {Number} [y]
	 */
	function Point2d(x, y) {
	  this.x = x !== undefined ? x : 0;
	  this.y = y !== undefined ? y : 0;
	}

	module.exports = Point2d;

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Point3d = __webpack_require__(290);

	/**
	 * @class Camera
	 * The camera is mounted on a (virtual) camera arm. The camera arm can rotate
	 * The camera is always looking in the direction of the origin of the arm.
	 * This way, the camera always rotates around one fixed point, the location
	 * of the camera arm.
	 *
	 * Documentation:
	 *   http://en.wikipedia.org/wiki/3D_projection
	 */
	function Camera() {
	  this.armLocation = new Point3d();
	  this.armRotation = {};
	  this.armRotation.horizontal = 0;
	  this.armRotation.vertical = 0;
	  this.armLength = 1.7;

	  this.cameraLocation = new Point3d();
	  this.cameraRotation = new Point3d(0.5 * Math.PI, 0, 0);

	  this.calculateCameraOrientation();
	}

	/**
	 * Set the location (origin) of the arm
	 * @param {Number} x  Normalized value of x
	 * @param {Number} y  Normalized value of y
	 * @param {Number} z  Normalized value of z
	 */
	Camera.prototype.setArmLocation = function (x, y, z) {
	  this.armLocation.x = x;
	  this.armLocation.y = y;
	  this.armLocation.z = z;

	  this.calculateCameraOrientation();
	};

	/**
	 * Set the rotation of the camera arm
	 * @param {Number} horizontal   The horizontal rotation, between 0 and 2*PI.
	 *                Optional, can be left undefined.
	 * @param {Number} vertical   The vertical rotation, between 0 and 0.5*PI
	 *                if vertical=0.5*PI, the graph is shown from the
	 *                top. Optional, can be left undefined.
	 */
	Camera.prototype.setArmRotation = function (horizontal, vertical) {
	  if (horizontal !== undefined) {
	    this.armRotation.horizontal = horizontal;
	  }

	  if (vertical !== undefined) {
	    this.armRotation.vertical = vertical;
	    if (this.armRotation.vertical < 0) this.armRotation.vertical = 0;
	    if (this.armRotation.vertical > 0.5 * Math.PI) this.armRotation.vertical = 0.5 * Math.PI;
	  }

	  if (horizontal !== undefined || vertical !== undefined) {
	    this.calculateCameraOrientation();
	  }
	};

	/**
	 * Retrieve the current arm rotation
	 * @return {object}   An object with parameters horizontal and vertical
	 */
	Camera.prototype.getArmRotation = function () {
	  var rot = {};
	  rot.horizontal = this.armRotation.horizontal;
	  rot.vertical = this.armRotation.vertical;

	  return rot;
	};

	/**
	 * Set the (normalized) length of the camera arm.
	 * @param {Number} length A length between 0.71 and 5.0
	 */
	Camera.prototype.setArmLength = function (length) {
	  if (length === undefined) return;

	  this.armLength = length;

	  // Radius must be larger than the corner of the graph,
	  // which has a distance of sqrt(0.5^2+0.5^2) = 0.71 from the center of the
	  // graph
	  if (this.armLength < 0.71) this.armLength = 0.71;
	  if (this.armLength > 5.0) this.armLength = 5.0;

	  this.calculateCameraOrientation();
	};

	/**
	 * Retrieve the arm length
	 * @return {Number} length
	 */
	Camera.prototype.getArmLength = function () {
	  return this.armLength;
	};

	/**
	 * Retrieve the camera location
	 * @return {Point3d} cameraLocation
	 */
	Camera.prototype.getCameraLocation = function () {
	  return this.cameraLocation;
	};

	/**
	 * Retrieve the camera rotation
	 * @return {Point3d} cameraRotation
	 */
	Camera.prototype.getCameraRotation = function () {
	  return this.cameraRotation;
	};

	/**
	 * Calculate the location and rotation of the camera based on the
	 * position and orientation of the camera arm
	 */
	Camera.prototype.calculateCameraOrientation = function () {
	  // calculate location of the camera
	  this.cameraLocation.x = this.armLocation.x - this.armLength * Math.sin(this.armRotation.horizontal) * Math.cos(this.armRotation.vertical);
	  this.cameraLocation.y = this.armLocation.y - this.armLength * Math.cos(this.armRotation.horizontal) * Math.cos(this.armRotation.vertical);
	  this.cameraLocation.z = this.armLocation.z + this.armLength * Math.sin(this.armRotation.vertical);

	  // calculate rotation of the camera
	  this.cameraRotation.x = Math.PI / 2 - this.armRotation.vertical;
	  this.cameraRotation.y = 0;
	  this.cameraRotation.z = -this.armRotation.horizontal;
	};

	module.exports = Camera;

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var DataView = __webpack_require__(287);

	/**
	 * @class Filter
	 *
	 * @param {DataSet} data The google data table
	 * @param {Number}  column             The index of the column to be filtered
	 * @param {Graph} graph           The graph
	 */
	function Filter(data, column, graph) {
	  this.data = data;
	  this.column = column;
	  this.graph = graph; // the parent graph

	  this.index = undefined;
	  this.value = undefined;

	  // read all distinct values and select the first one
	  this.values = graph.getDistinctValues(data.get(), this.column);

	  // sort both numeric and string values correctly
	  this.values.sort(function (a, b) {
	    return a > b ? 1 : a < b ? -1 : 0;
	  });

	  if (this.values.length > 0) {
	    this.selectValue(0);
	  }

	  // create an array with the filtered datapoints. this will be loaded afterwards
	  this.dataPoints = [];

	  this.loaded = false;
	  this.onLoadCallback = undefined;

	  if (graph.animationPreload) {
	    this.loaded = false;
	    this.loadInBackground();
	  } else {
	    this.loaded = true;
	  }
	};

	/**
	 * Return the label
	 * @return {string} label
	 */
	Filter.prototype.isLoaded = function () {
	  return this.loaded;
	};

	/**
	 * Return the loaded progress
	 * @return {Number} percentage between 0 and 100
	 */
	Filter.prototype.getLoadedProgress = function () {
	  var len = this.values.length;

	  var i = 0;
	  while (this.dataPoints[i]) {
	    i++;
	  }

	  return Math.round(i / len * 100);
	};

	/**
	 * Return the label
	 * @return {string} label
	 */
	Filter.prototype.getLabel = function () {
	  return this.graph.filterLabel;
	};

	/**
	 * Return the columnIndex of the filter
	 * @return {Number} columnIndex
	 */
	Filter.prototype.getColumn = function () {
	  return this.column;
	};

	/**
	 * Return the currently selected value. Returns undefined if there is no selection
	 * @return {*} value
	 */
	Filter.prototype.getSelectedValue = function () {
	  if (this.index === undefined) return undefined;

	  return this.values[this.index];
	};

	/**
	 * Retrieve all values of the filter
	 * @return {Array} values
	 */
	Filter.prototype.getValues = function () {
	  return this.values;
	};

	/**
	 * Retrieve one value of the filter
	 * @param {Number}  index
	 * @return {*} value
	 */
	Filter.prototype.getValue = function (index) {
	  if (index >= this.values.length) throw 'Error: index out of range';

	  return this.values[index];
	};

	/**
	 * Retrieve the (filtered) dataPoints for the currently selected filter index
	 * @param {Number} [index] (optional)
	 * @return {Array} dataPoints
	 */
	Filter.prototype._getDataPoints = function (index) {
	  if (index === undefined) index = this.index;

	  if (index === undefined) return [];

	  var dataPoints;
	  if (this.dataPoints[index]) {
	    dataPoints = this.dataPoints[index];
	  } else {
	    var f = {};
	    f.column = this.column;
	    f.value = this.values[index];

	    var dataView = new DataView(this.data, { filter: function filter(item) {
	        return item[f.column] == f.value;
	      } }).get();
	    dataPoints = this.graph._getDataPoints(dataView);

	    this.dataPoints[index] = dataPoints;
	  }

	  return dataPoints;
	};

	/**
	 * Set a callback function when the filter is fully loaded.
	 */
	Filter.prototype.setOnLoadCallback = function (callback) {
	  this.onLoadCallback = callback;
	};

	/**
	 * Add a value to the list with available values for this filter
	 * No double entries will be created.
	 * @param {Number} index
	 */
	Filter.prototype.selectValue = function (index) {
	  if (index >= this.values.length) throw 'Error: index out of range';

	  this.index = index;
	  this.value = this.values[index];
	};

	/**
	 * Load all filtered rows in the background one by one
	 * Start this method without providing an index!
	 */
	Filter.prototype.loadInBackground = function (index) {
	  if (index === undefined) index = 0;

	  var frame = this.graph.frame;

	  if (index < this.values.length) {
	    var dataPointsTemp = this._getDataPoints(index);
	    //this.graph.redrawInfo(); // TODO: not neat

	    // create a progress box
	    if (frame.progress === undefined) {
	      frame.progress = document.createElement('DIV');
	      frame.progress.style.position = 'absolute';
	      frame.progress.style.color = 'gray';
	      frame.appendChild(frame.progress);
	    }
	    var progress = this.getLoadedProgress();
	    frame.progress.innerHTML = 'Loading animation... ' + progress + '%';
	    // TODO: this is no nice solution...
	    frame.progress.style.bottom = 60 + 'px'; // TODO: use height of slider
	    frame.progress.style.left = 10 + 'px';

	    var me = this;
	    setTimeout(function () {
	      me.loadInBackground(index + 1);
	    }, 10);
	    this.loaded = false;
	  } else {
	    this.loaded = true;

	    // remove the progress box
	    if (frame.progress !== undefined) {
	      frame.removeChild(frame.progress);
	      frame.progress = undefined;
	    }

	    if (this.onLoadCallback) this.onLoadCallback();
	  }
	};

	module.exports = Filter;

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(175);

	/**
	 * @constructor Slider
	 *
	 * An html slider control with start/stop/prev/next buttons
	 * @param {Element} container  The element where the slider will be created
	 * @param {Object} options   Available options:
	 *                 {boolean} visible   If true (default) the
	 *                           slider is visible.
	 */
	function Slider(container, options) {
	  if (container === undefined) {
	    throw 'Error: No container element defined';
	  }
	  this.container = container;
	  this.visible = options && options.visible != undefined ? options.visible : true;

	  if (this.visible) {
	    this.frame = document.createElement('DIV');
	    //this.frame.style.backgroundColor = '#E5E5E5';
	    this.frame.style.width = '100%';
	    this.frame.style.position = 'relative';
	    this.container.appendChild(this.frame);

	    this.frame.prev = document.createElement('INPUT');
	    this.frame.prev.type = 'BUTTON';
	    this.frame.prev.value = 'Prev';
	    this.frame.appendChild(this.frame.prev);

	    this.frame.play = document.createElement('INPUT');
	    this.frame.play.type = 'BUTTON';
	    this.frame.play.value = 'Play';
	    this.frame.appendChild(this.frame.play);

	    this.frame.next = document.createElement('INPUT');
	    this.frame.next.type = 'BUTTON';
	    this.frame.next.value = 'Next';
	    this.frame.appendChild(this.frame.next);

	    this.frame.bar = document.createElement('INPUT');
	    this.frame.bar.type = 'BUTTON';
	    this.frame.bar.style.position = 'absolute';
	    this.frame.bar.style.border = '1px solid red';
	    this.frame.bar.style.width = '100px';
	    this.frame.bar.style.height = '6px';
	    this.frame.bar.style.borderRadius = '2px';
	    this.frame.bar.style.MozBorderRadius = '2px';
	    this.frame.bar.style.border = '1px solid #7F7F7F';
	    this.frame.bar.style.backgroundColor = '#E5E5E5';
	    this.frame.appendChild(this.frame.bar);

	    this.frame.slide = document.createElement('INPUT');
	    this.frame.slide.type = 'BUTTON';
	    this.frame.slide.style.margin = '0px';
	    this.frame.slide.value = ' ';
	    this.frame.slide.style.position = 'relative';
	    this.frame.slide.style.left = '-100px';
	    this.frame.appendChild(this.frame.slide);

	    // create events
	    var me = this;
	    this.frame.slide.onmousedown = function (event) {
	      me._onMouseDown(event);
	    };
	    this.frame.prev.onclick = function (event) {
	      me.prev(event);
	    };
	    this.frame.play.onclick = function (event) {
	      me.togglePlay(event);
	    };
	    this.frame.next.onclick = function (event) {
	      me.next(event);
	    };
	  }

	  this.onChangeCallback = undefined;

	  this.values = [];
	  this.index = undefined;

	  this.playTimeout = undefined;
	  this.playInterval = 1000; // milliseconds
	  this.playLoop = true;
	}

	/**
	 * Select the previous index
	 */
	Slider.prototype.prev = function () {
	  var index = this.getIndex();
	  if (index > 0) {
	    index--;
	    this.setIndex(index);
	  }
	};

	/**
	 * Select the next index
	 */
	Slider.prototype.next = function () {
	  var index = this.getIndex();
	  if (index < this.values.length - 1) {
	    index++;
	    this.setIndex(index);
	  }
	};

	/**
	 * Select the next index
	 */
	Slider.prototype.playNext = function () {
	  var start = new Date();

	  var index = this.getIndex();
	  if (index < this.values.length - 1) {
	    index++;
	    this.setIndex(index);
	  } else if (this.playLoop) {
	    // jump to the start
	    index = 0;
	    this.setIndex(index);
	  }

	  var end = new Date();
	  var diff = end - start;

	  // calculate how much time it to to set the index and to execute the callback
	  // function.
	  var interval = Math.max(this.playInterval - diff, 0);
	  // document.title = diff // TODO: cleanup

	  var me = this;
	  this.playTimeout = setTimeout(function () {
	    me.playNext();
	  }, interval);
	};

	/**
	 * Toggle start or stop playing
	 */
	Slider.prototype.togglePlay = function () {
	  if (this.playTimeout === undefined) {
	    this.play();
	  } else {
	    this.stop();
	  }
	};

	/**
	 * Start playing
	 */
	Slider.prototype.play = function () {
	  // Test whether already playing
	  if (this.playTimeout) return;

	  this.playNext();

	  if (this.frame) {
	    this.frame.play.value = 'Stop';
	  }
	};

	/**
	 * Stop playing
	 */
	Slider.prototype.stop = function () {
	  clearInterval(this.playTimeout);
	  this.playTimeout = undefined;

	  if (this.frame) {
	    this.frame.play.value = 'Play';
	  }
	};

	/**
	 * Set a callback function which will be triggered when the value of the
	 * slider bar has changed.
	 */
	Slider.prototype.setOnChangeCallback = function (callback) {
	  this.onChangeCallback = callback;
	};

	/**
	 * Set the interval for playing the list
	 * @param {Number} interval   The interval in milliseconds
	 */
	Slider.prototype.setPlayInterval = function (interval) {
	  this.playInterval = interval;
	};

	/**
	 * Retrieve the current play interval
	 * @return {Number} interval   The interval in milliseconds
	 */
	Slider.prototype.getPlayInterval = function (interval) {
	  return this.playInterval;
	};

	/**
	 * Set looping on or off
	 * @pararm {boolean} doLoop  If true, the slider will jump to the start when
	 *               the end is passed, and will jump to the end
	 *               when the start is passed.
	 */
	Slider.prototype.setPlayLoop = function (doLoop) {
	  this.playLoop = doLoop;
	};

	/**
	 * Execute the onchange callback function
	 */
	Slider.prototype.onChange = function () {
	  if (this.onChangeCallback !== undefined) {
	    this.onChangeCallback();
	  }
	};

	/**
	 * redraw the slider on the correct place
	 */
	Slider.prototype.redraw = function () {
	  if (this.frame) {
	    // resize the bar
	    this.frame.bar.style.top = this.frame.clientHeight / 2 - this.frame.bar.offsetHeight / 2 + 'px';
	    this.frame.bar.style.width = this.frame.clientWidth - this.frame.prev.clientWidth - this.frame.play.clientWidth - this.frame.next.clientWidth - 30 + 'px';

	    // position the slider button
	    var left = this.indexToLeft(this.index);
	    this.frame.slide.style.left = left + 'px';
	  }
	};

	/**
	 * Set the list with values for the slider
	 * @param {Array} values   A javascript array with values (any type)
	 */
	Slider.prototype.setValues = function (values) {
	  this.values = values;

	  if (this.values.length > 0) this.setIndex(0);else this.index = undefined;
	};

	/**
	 * Select a value by its index
	 * @param {Number} index
	 */
	Slider.prototype.setIndex = function (index) {
	  if (index < this.values.length) {
	    this.index = index;

	    this.redraw();
	    this.onChange();
	  } else {
	    throw 'Error: index out of range';
	  }
	};

	/**
	 * retrieve the index of the currently selected vaue
	 * @return {Number} index
	 */
	Slider.prototype.getIndex = function () {
	  return this.index;
	};

	/**
	 * retrieve the currently selected value
	 * @return {*} value
	 */
	Slider.prototype.get = function () {
	  return this.values[this.index];
	};

	Slider.prototype._onMouseDown = function (event) {
	  // only react on left mouse button down
	  var leftButtonDown = event.which ? event.which === 1 : event.button === 1;
	  if (!leftButtonDown) return;

	  this.startClientX = event.clientX;
	  this.startSlideX = parseFloat(this.frame.slide.style.left);

	  this.frame.style.cursor = 'move';

	  // add event listeners to handle moving the contents
	  // we store the function onmousemove and onmouseup in the graph, so we can
	  // remove the eventlisteners lateron in the function mouseUp()
	  var me = this;
	  this.onmousemove = function (event) {
	    me._onMouseMove(event);
	  };
	  this.onmouseup = function (event) {
	    me._onMouseUp(event);
	  };
	  util.addEventListener(document, 'mousemove', this.onmousemove);
	  util.addEventListener(document, 'mouseup', this.onmouseup);
	  util.preventDefault(event);
	};

	Slider.prototype.leftToIndex = function (left) {
	  var width = parseFloat(this.frame.bar.style.width) - this.frame.slide.clientWidth - 10;
	  var x = left - 3;

	  var index = Math.round(x / width * (this.values.length - 1));
	  if (index < 0) index = 0;
	  if (index > this.values.length - 1) index = this.values.length - 1;

	  return index;
	};

	Slider.prototype.indexToLeft = function (index) {
	  var width = parseFloat(this.frame.bar.style.width) - this.frame.slide.clientWidth - 10;

	  var x = index / (this.values.length - 1) * width;
	  var left = x + 3;

	  return left;
	};

	Slider.prototype._onMouseMove = function (event) {
	  var diff = event.clientX - this.startClientX;
	  var x = this.startSlideX + diff;

	  var index = this.leftToIndex(x);

	  this.setIndex(index);

	  util.preventDefault();
	};

	Slider.prototype._onMouseUp = function (event) {
	  this.frame.style.cursor = 'auto';

	  // remove event listeners
	  util.removeEventListener(document, 'mousemove', this.onmousemove);
	  util.removeEventListener(document, 'mouseup', this.onmouseup);

	  util.preventDefault();
	};

	module.exports = Slider;

/***/ },
/* 295 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * @prototype StepNumber
	 * The class StepNumber is an iterator for Numbers. You provide a start and end
	 * value, and a best step size. StepNumber itself rounds to fixed values and
	 * a finds the step that best fits the provided step.
	 *
	 * If prettyStep is true, the step size is chosen as close as possible to the
	 * provided step, but being a round value like 1, 2, 5, 10, 20, 50, ....
	 *
	 * Example usage:
	 *   var step = new StepNumber(0, 10, 2.5, true);
	 *   step.start();
	 *   while (!step.end()) {
	 *   alert(step.getCurrent());
	 *   step.next();
	 *   }
	 *
	 * Version: 1.0
	 *
	 * @param {Number} start     The start value
	 * @param {Number} end     The end value
	 * @param {Number} step    Optional. Step size. Must be a positive value.
	 * @param {boolean} prettyStep Optional. If true, the step size is rounded
	 *               To a pretty step size (like 1, 2, 5, 10, 20, 50, ...)
	 */
	function StepNumber(start, end, step, prettyStep) {
	  // set default values
	  this._start = 0;
	  this._end = 0;
	  this._step = 1;
	  this.prettyStep = true;
	  this.precision = 5;

	  this._current = 0;
	  this.setRange(start, end, step, prettyStep);
	};

	/**
	 * Set a new range: start, end and step.
	 *
	 * @param {Number} start     The start value
	 * @param {Number} end     The end value
	 * @param {Number} step    Optional. Step size. Must be a positive value.
	 * @param {boolean} prettyStep Optional. If true, the step size is rounded
	 *               To a pretty step size (like 1, 2, 5, 10, 20, 50, ...)
	 */
	StepNumber.prototype.setRange = function (start, end, step, prettyStep) {
	  this._start = start ? start : 0;
	  this._end = end ? end : 0;

	  this.setStep(step, prettyStep);
	};

	/**
	 * Set a new step size
	 * @param {Number} step    New step size. Must be a positive value
	 * @param {boolean} prettyStep Optional. If true, the provided step is rounded
	 *               to a pretty step size (like 1, 2, 5, 10, 20, 50, ...)
	 */
	StepNumber.prototype.setStep = function (step, prettyStep) {
	  if (step === undefined || step <= 0) return;

	  if (prettyStep !== undefined) this.prettyStep = prettyStep;

	  if (this.prettyStep === true) this._step = StepNumber.calculatePrettyStep(step);else this._step = step;
	};

	/**
	 * Calculate a nice step size, closest to the desired step size.
	 * Returns a value in one of the ranges 1*10^n, 2*10^n, or 5*10^n, where n is an
	 * integer Number. For example 1, 2, 5, 10, 20, 50, etc...
	 * @param {Number}  step  Desired step size
	 * @return {Number}     Nice step size
	 */
	StepNumber.calculatePrettyStep = function (step) {
	  var log10 = function log10(x) {
	    return Math.log(x) / Math.LN10;
	  };

	  // try three steps (multiple of 1, 2, or 5
	  var step1 = Math.pow(10, Math.round(log10(step))),
	      step2 = 2 * Math.pow(10, Math.round(log10(step / 2))),
	      step5 = 5 * Math.pow(10, Math.round(log10(step / 5)));

	  // choose the best step (closest to minimum step)
	  var prettyStep = step1;
	  if (Math.abs(step2 - step) <= Math.abs(prettyStep - step)) prettyStep = step2;
	  if (Math.abs(step5 - step) <= Math.abs(prettyStep - step)) prettyStep = step5;

	  // for safety
	  if (prettyStep <= 0) {
	    prettyStep = 1;
	  }

	  return prettyStep;
	};

	/**
	 * returns the current value of the step
	 * @return {Number} current value
	 */
	StepNumber.prototype.getCurrent = function () {
	  return parseFloat(this._current.toPrecision(this.precision));
	};

	/**
	 * returns the current step size
	 * @return {Number} current step size
	 */
	StepNumber.prototype.getStep = function () {
	  return this._step;
	};

	/**
	 * Set the current value to the largest value smaller than start, which
	 * is a multiple of the step size
	 */
	StepNumber.prototype.start = function () {
	  this._current = this._start - this._start % this._step;
	};

	/**
	 * Do a step, add the step size to the current value
	 */
	StepNumber.prototype.next = function () {
	  this._current += this._step;
	};

	/**
	 * Returns true whether the end is reached
	 * @return {boolean}  True if the current value has passed the end value.
	 */
	StepNumber.prototype.end = function () {
	  return this._current > this._end;
	};

	module.exports = StepNumber;

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Emitter = __webpack_require__(289);
	var Hammer = __webpack_require__(297);
	var util = __webpack_require__(175);
	var DataSet = __webpack_require__(285);
	var DataView = __webpack_require__(287);
	var Range = __webpack_require__(299);
	var Core = __webpack_require__(303);
	var TimeAxis = __webpack_require__(314);
	var CurrentTime = __webpack_require__(319);
	var CustomTime = __webpack_require__(317);
	var ItemSet = __webpack_require__(304);

	/**
	 * Create a timeline visualization
	 * @param {HTMLElement} container
	 * @param {vis.DataSet | vis.DataView | Array | google.visualization.DataTable} [items]
	 * @param {vis.DataSet | vis.DataView | Array | google.visualization.DataTable} [groups]
	 * @param {Object} [options]  See Timeline.setOptions for the available options.
	 * @constructor
	 * @extends Core
	 */
	function Timeline(container, items, groups, options) {
	  if (!(this instanceof Timeline)) {
	    throw new SyntaxError('Constructor must be called with the new operator');
	  }

	  // if the third element is options, the forth is groups (optionally);
	  if (!(Array.isArray(groups) || groups instanceof DataSet || groups instanceof DataView) && groups instanceof Object) {
	    var forthArgument = options;
	    options = groups;
	    groups = forthArgument;
	  }

	  var me = this;
	  this.defaultOptions = {
	    start: null,
	    end: null,

	    autoResize: true,

	    orientation: 'bottom', // axis orientation: 'bottom', 'top', or 'both'
	    width: null,
	    height: null,
	    maxHeight: null,
	    minHeight: null
	  };
	  this.options = util.deepExtend({}, this.defaultOptions);

	  // Create the DOM, props, and emitter
	  this._create(container);

	  // all components listed here will be repainted automatically
	  this.components = [];

	  this.body = {
	    dom: this.dom,
	    domProps: this.props,
	    emitter: {
	      on: this.on.bind(this),
	      off: this.off.bind(this),
	      emit: this.emit.bind(this)
	    },
	    hiddenDates: [],
	    util: {
	      getScale: function getScale() {
	        return me.timeAxis.step.scale;
	      },
	      getStep: function getStep() {
	        return me.timeAxis.step.step;
	      },

	      toScreen: me._toScreen.bind(me),
	      toGlobalScreen: me._toGlobalScreen.bind(me), // this refers to the root.width
	      toTime: me._toTime.bind(me),
	      toGlobalTime: me._toGlobalTime.bind(me)
	    }
	  };

	  // range
	  this.range = new Range(this.body);
	  this.components.push(this.range);
	  this.body.range = this.range;

	  // time axis
	  this.timeAxis = new TimeAxis(this.body);
	  this.timeAxis2 = null; // used in case of orientation option 'both'
	  this.components.push(this.timeAxis);

	  // current time bar
	  this.currentTime = new CurrentTime(this.body);
	  this.components.push(this.currentTime);

	  // custom time bar
	  // Note: time bar will be attached in this.setOptions when selected
	  this.customTime = new CustomTime(this.body);
	  this.components.push(this.customTime);

	  // item set
	  this.itemSet = new ItemSet(this.body);
	  this.components.push(this.itemSet);

	  this.itemsData = null; // DataSet
	  this.groupsData = null; // DataSet

	  this.on('tap', function (event) {
	    me.emit('click', me.getEventProperties(event));
	  });
	  this.on('doubletap', function (event) {
	    me.emit('doubleClick', me.getEventProperties(event));
	  });
	  this.dom.root.oncontextmenu = function (event) {
	    me.emit('contextmenu', me.getEventProperties(event));
	  };

	  // apply options
	  if (options) {
	    this.setOptions(options);
	  }

	  // IMPORTANT: THIS HAPPENS BEFORE SET ITEMS!
	  if (groups) {
	    this.setGroups(groups);
	  }

	  // create itemset
	  if (items) {
	    this.setItems(items);
	  } else {
	    this._redraw();
	  }
	}

	// Extend the functionality from Core
	Timeline.prototype = new Core();

	/**
	 * Force a redraw. The size of all items will be recalculated.
	 * Can be useful to manually redraw when option autoResize=false and the window
	 * has been resized, or when the items CSS has been changed.
	 */
	Timeline.prototype.redraw = function () {
	  this.itemSet && this.itemSet.markDirty({ refreshItems: true });
	  this._redraw();
	};

	/**
	 * Set items
	 * @param {vis.DataSet | Array | google.visualization.DataTable | null} items
	 */
	Timeline.prototype.setItems = function (items) {
	  var initialLoad = this.itemsData == null;

	  // convert to type DataSet when needed
	  var newDataSet;
	  if (!items) {
	    newDataSet = null;
	  } else if (items instanceof DataSet || items instanceof DataView) {
	    newDataSet = items;
	  } else {
	    // turn an array into a dataset
	    newDataSet = new DataSet(items, {
	      type: {
	        start: 'Date',
	        end: 'Date'
	      }
	    });
	  }

	  // set items
	  this.itemsData = newDataSet;
	  this.itemSet && this.itemSet.setItems(newDataSet);

	  if (initialLoad) {
	    if (this.options.start != undefined || this.options.end != undefined) {
	      if (this.options.start == undefined || this.options.end == undefined) {
	        var dataRange = this._getDataRange();
	      }

	      var start = this.options.start != undefined ? this.options.start : dataRange.start;
	      var end = this.options.end != undefined ? this.options.end : dataRange.end;

	      this.setWindow(start, end, { animate: false });
	    } else {
	      this.fit({ animate: false });
	    }
	  }
	};

	/**
	 * Set groups
	 * @param {vis.DataSet | Array | google.visualization.DataTable} groups
	 */
	Timeline.prototype.setGroups = function (groups) {
	  // convert to type DataSet when needed
	  var newDataSet;
	  if (!groups) {
	    newDataSet = null;
	  } else if (groups instanceof DataSet || groups instanceof DataView) {
	    newDataSet = groups;
	  } else {
	    // turn an array into a dataset
	    newDataSet = new DataSet(groups);
	  }

	  this.groupsData = newDataSet;
	  this.itemSet.setGroups(newDataSet);
	};

	/**
	 * Set selected items by their id. Replaces the current selection
	 * Unknown id's are silently ignored.
	 * @param {string[] | string} [ids]  An array with zero or more id's of the items to be
	 *                                selected. If ids is an empty array, all items will be
	 *                                unselected.
	 * @param {Object} [options]      Available options:
	 *                                `focus: boolean`
	 *                                    If true, focus will be set to the selected item(s)
	 *                                `animate: boolean | number`
	 *                                    If true (default), the range is animated
	 *                                    smoothly to the new window.
	 *                                    If a number, the number is taken as duration
	 *                                    for the animation. Default duration is 500 ms.
	 *                                    Only applicable when option focus is true.
	 */
	Timeline.prototype.setSelection = function (ids, options) {
	  this.itemSet && this.itemSet.setSelection(ids);

	  if (options && options.focus) {
	    this.focus(ids, options);
	  }
	};

	/**
	 * Get the selected items by their id
	 * @return {Array} ids  The ids of the selected items
	 */
	Timeline.prototype.getSelection = function () {
	  return this.itemSet && this.itemSet.getSelection() || [];
	};

	/**
	 * Adjust the visible window such that the selected item (or multiple items)
	 * are centered on screen.
	 * @param {String | String[]} id     An item id or array with item ids
	 * @param {Object} [options]      Available options:
	 *                                `animate: boolean | number`
	 *                                    If true (default), the range is animated
	 *                                    smoothly to the new window.
	 *                                    If a number, the number is taken as duration
	 *                                    for the animation. Default duration is 500 ms.
	 *                                    Only applicable when option focus is true
	 */
	Timeline.prototype.focus = function (id, options) {
	  if (!this.itemsData || id == undefined) return;

	  var ids = Array.isArray(id) ? id : [id];

	  // get the specified item(s)
	  var itemsData = this.itemsData.getDataSet().get(ids, {
	    type: {
	      start: 'Date',
	      end: 'Date'
	    }
	  });

	  // calculate minimum start and maximum end of specified items
	  var start = null;
	  var end = null;
	  itemsData.forEach(function (itemData) {
	    var s = itemData.start.valueOf();
	    var e = 'end' in itemData ? itemData.end.valueOf() : itemData.start.valueOf();

	    if (start === null || s < start) {
	      start = s;
	    }

	    if (end === null || e > end) {
	      end = e;
	    }
	  });

	  if (start !== null && end !== null) {
	    // calculate the new middle and interval for the window
	    var middle = (start + end) / 2;
	    var interval = Math.max(this.range.end - this.range.start, (end - start) * 1.1);

	    var animate = options && options.animate !== undefined ? options.animate : true;
	    this.range.setRange(middle - interval / 2, middle + interval / 2, animate);
	  }
	};

	/**
	 * Get the data range of the item set.
	 * @returns {{min: Date, max: Date}} range  A range with a start and end Date.
	 *                                          When no minimum is found, min==null
	 *                                          When no maximum is found, max==null
	 */
	Timeline.prototype.getItemRange = function () {
	  // calculate min from start filed
	  var dataset = this.itemsData.getDataSet(),
	      min = null,
	      max = null;

	  if (dataset) {
	    // calculate the minimum value of the field 'start'
	    var minItem = dataset.min('start');
	    min = minItem ? util.convert(minItem.start, 'Date').valueOf() : null;
	    // Note: we convert first to Date and then to number because else
	    // a conversion from ISODate to Number will fail

	    // calculate maximum value of fields 'start' and 'end'
	    var maxStartItem = dataset.max('start');
	    if (maxStartItem) {
	      max = util.convert(maxStartItem.start, 'Date').valueOf();
	    }
	    var maxEndItem = dataset.max('end');
	    if (maxEndItem) {
	      if (max == null) {
	        max = util.convert(maxEndItem.end, 'Date').valueOf();
	      } else {
	        max = Math.max(max, util.convert(maxEndItem.end, 'Date').valueOf());
	      }
	    }
	  }

	  return {
	    min: min != null ? new Date(min) : null,
	    max: max != null ? new Date(max) : null
	  };
	};

	/**
	 * Generate Timeline related information from an event
	 * @param {Event} event
	 * @return {Object} An object with related information, like on which area
	 *                  The event happened, whether clicked on an item, etc.
	 */
	Timeline.prototype.getEventProperties = function (event) {
	  var item = this.itemSet.itemFromTarget(event);
	  var group = this.itemSet.groupFromTarget(event);
	  var pageX = event.gesture ? event.gesture.center.pageX : event.pageX;
	  var pageY = event.gesture ? event.gesture.center.pageY : event.pageY;
	  var x = pageX - util.getAbsoluteLeft(this.dom.centerContainer);
	  var y = pageY - util.getAbsoluteTop(this.dom.centerContainer);

	  var snap = this.itemSet.options.snap || null;
	  var scale = this.body.util.getScale();
	  var step = this.body.util.getStep();
	  var time = this._toTime(x);
	  var snappedTime = snap ? snap(time, scale, step) : time;

	  var element = util.getTarget(event);
	  var what = null;
	  if (item != null) {
	    what = 'item';
	  } else if (util.hasParent(element, this.timeAxis.dom.foreground)) {
	    what = 'axis';
	  } else if (this.timeAxis2 && util.hasParent(element, this.timeAxis2.dom.foreground)) {
	    what = 'axis';
	  } else if (util.hasParent(element, this.itemSet.dom.labelSet)) {
	    what = 'group-label';
	  } else if (util.hasParent(element, this.customTime.bar)) {
	    what = 'custom-time';
	  } // TODO: fix for multiple custom time bars
	  else if (util.hasParent(element, this.currentTime.bar)) {
	      what = 'current-time';
	    } else if (util.hasParent(element, this.dom.center)) {
	      what = 'background';
	    }

	  return {
	    event: event,
	    item: item ? item.id : null,
	    group: group ? group.groupId : null,
	    what: what,
	    pageX: pageX,
	    pageY: pageY,
	    x: x,
	    y: y,
	    time: time,
	    snappedTime: snappedTime
	  };
	};

	module.exports = Timeline;

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// Only load hammer.js when in a browser environment
	// (loading hammer.js in a node.js environment gives errors)
	if (typeof window !== 'undefined') {
	  module.exports = window['Hammer'] || __webpack_require__(298);
	} else {
	  module.exports = function () {
	    throw Error('hammer.js is only available in a browser, not in node.js.');
	  };
	}

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	/*! Hammer.JS - v1.1.3 - 2014-05-20
	 * http://eightmedia.github.io/hammer.js
	 *
	 * Copyright (c) 2014 Jorik Tangelder <j.tangelder@gmail.com>;
	 * Licensed under the MIT license */

	(function (window, undefined) {
	    'use strict';

	    /**
	     * @main
	     * @module hammer
	     *
	     * @class Hammer
	     * @static
	     */

	    /**
	     * Hammer, use this to create instances
	     * ````
	     * var hammertime = new Hammer(myElement);
	     * ````
	     *
	     * @method Hammer
	     * @param {HTMLElement} element
	     * @param {Object} [options={}]
	     * @return {Hammer.Instance}
	     */

	    var Hammer = function Hammer(element, options) {
	        return new Hammer.Instance(element, options || {});
	    };

	    /**
	     * version, as defined in package.json
	     * the value will be set at each build
	     * @property VERSION
	     * @final
	     * @type {String}
	     */
	    Hammer.VERSION = '1.1.3';

	    /**
	     * default settings.
	     * more settings are defined per gesture at `/gestures`. Each gesture can be disabled/enabled
	     * by setting it's name (like `swipe`) to false.
	     * You can set the defaults for all instances by changing this object before creating an instance.
	     * @example
	     * ````
	     *  Hammer.defaults.drag = false;
	     *  Hammer.defaults.behavior.touchAction = 'pan-y';
	     *  delete Hammer.defaults.behavior.userSelect;
	     * ````
	     * @property defaults
	     * @type {Object}
	     */
	    Hammer.defaults = {
	        /**
	         * this setting object adds styles and attributes to the element to prevent the browser from doing
	         * its native behavior. The css properties are auto prefixed for the browsers when needed.
	         * @property defaults.behavior
	         * @type {Object}
	         */
	        behavior: {
	            /**
	             * Disables text selection to improve the dragging gesture. When the value is `none` it also sets
	             * `onselectstart=false` for IE on the element. Mainly for desktop browsers.
	             * @property defaults.behavior.userSelect
	             * @type {String}
	             * @default 'none'
	             */
	            userSelect: 'none',

	            /**
	             * Specifies whether and how a given region can be manipulated by the user (for instance, by panning or zooming).
	             * Used by Chrome 35> and IE10>. By default this makes the element blocking any touch event.
	             * @property defaults.behavior.touchAction
	             * @type {String}
	             * @default: 'pan-y'
	             */
	            touchAction: 'pan-y',

	            /**
	             * Disables the default callout shown when you touch and hold a touch target.
	             * On iOS, when you touch and hold a touch target such as a link, Safari displays
	             * a callout containing information about the link. This property allows you to disable that callout.
	             * @property defaults.behavior.touchCallout
	             * @type {String}
	             * @default 'none'
	             */
	            touchCallout: 'none',

	            /**
	             * Specifies whether zooming is enabled. Used by IE10>
	             * @property defaults.behavior.contentZooming
	             * @type {String}
	             * @default 'none'
	             */
	            contentZooming: 'none',

	            /**
	             * Specifies that an entire element should be draggable instead of its contents.
	             * Mainly for desktop browsers.
	             * @property defaults.behavior.userDrag
	             * @type {String}
	             * @default 'none'
	             */
	            userDrag: 'none',

	            /**
	             * Overrides the highlight color shown when the user taps a link or a JavaScript
	             * clickable element in Safari on iPhone. This property obeys the alpha value, if specified.
	             *
	             * If you don't specify an alpha value, Safari on iPhone applies a default alpha value
	             * to the color. To disable tap highlighting, set the alpha value to 0 (invisible).
	             * If you set the alpha value to 1.0 (opaque), the element is not visible when tapped.
	             * @property defaults.behavior.tapHighlightColor
	             * @type {String}
	             * @default 'rgba(0,0,0,0)'
	             */
	            tapHighlightColor: 'rgba(0,0,0,0)'
	        }
	    };

	    /**
	     * hammer document where the base events are added at
	     * @property DOCUMENT
	     * @type {HTMLElement}
	     * @default window.document
	     */
	    Hammer.DOCUMENT = document;

	    /**
	     * detect support for pointer events
	     * @property HAS_POINTEREVENTS
	     * @type {Boolean}
	     */
	    Hammer.HAS_POINTEREVENTS = navigator.pointerEnabled || navigator.msPointerEnabled;

	    /**
	     * detect support for touch events
	     * @property HAS_TOUCHEVENTS
	     * @type {Boolean}
	     */
	    Hammer.HAS_TOUCHEVENTS = 'ontouchstart' in window;

	    /**
	     * detect mobile browsers
	     * @property IS_MOBILE
	     * @type {Boolean}
	     */
	    Hammer.IS_MOBILE = /mobile|tablet|ip(ad|hone|od)|android|silk/i.test(navigator.userAgent);

	    /**
	     * detect if we want to support mouseevents at all
	     * @property NO_MOUSEEVENTS
	     * @type {Boolean}
	     */
	    Hammer.NO_MOUSEEVENTS = Hammer.HAS_TOUCHEVENTS && Hammer.IS_MOBILE || Hammer.HAS_POINTEREVENTS;

	    /**
	     * interval in which Hammer recalculates current velocity/direction/angle in ms
	     * @property CALCULATE_INTERVAL
	     * @type {Number}
	     * @default 25
	     */
	    Hammer.CALCULATE_INTERVAL = 25;

	    /**
	     * eventtypes per touchevent (start, move, end) are filled by `Event.determineEventTypes` on `setup`
	     * the object contains the DOM event names per type (`EVENT_START`, `EVENT_MOVE`, `EVENT_END`)
	     * @property EVENT_TYPES
	     * @private
	     * @writeOnce
	     * @type {Object}
	     */
	    var EVENT_TYPES = {};

	    /**
	     * direction strings, for safe comparisons
	     * @property DIRECTION_DOWN|LEFT|UP|RIGHT
	     * @final
	     * @type {String}
	     * @default 'down' 'left' 'up' 'right'
	     */
	    var DIRECTION_DOWN = Hammer.DIRECTION_DOWN = 'down';
	    var DIRECTION_LEFT = Hammer.DIRECTION_LEFT = 'left';
	    var DIRECTION_UP = Hammer.DIRECTION_UP = 'up';
	    var DIRECTION_RIGHT = Hammer.DIRECTION_RIGHT = 'right';

	    /**
	     * pointertype strings, for safe comparisons
	     * @property POINTER_MOUSE|TOUCH|PEN
	     * @final
	     * @type {String}
	     * @default 'mouse' 'touch' 'pen'
	     */
	    var POINTER_MOUSE = Hammer.POINTER_MOUSE = 'mouse';
	    var POINTER_TOUCH = Hammer.POINTER_TOUCH = 'touch';
	    var POINTER_PEN = Hammer.POINTER_PEN = 'pen';

	    /**
	     * eventtypes
	     * @property EVENT_START|MOVE|END|RELEASE|TOUCH
	     * @final
	     * @type {String}
	     * @default 'start' 'change' 'move' 'end' 'release' 'touch'
	     */
	    var EVENT_START = Hammer.EVENT_START = 'start';
	    var EVENT_MOVE = Hammer.EVENT_MOVE = 'move';
	    var EVENT_END = Hammer.EVENT_END = 'end';
	    var EVENT_RELEASE = Hammer.EVENT_RELEASE = 'release';
	    var EVENT_TOUCH = Hammer.EVENT_TOUCH = 'touch';

	    /**
	     * if the window events are set...
	     * @property READY
	     * @writeOnce
	     * @type {Boolean}
	     * @default false
	     */
	    Hammer.READY = false;

	    /**
	     * plugins namespace
	     * @property plugins
	     * @type {Object}
	     */
	    Hammer.plugins = Hammer.plugins || {};

	    /**
	     * gestures namespace
	     * see `/gestures` for the definitions
	     * @property gestures
	     * @type {Object}
	     */
	    Hammer.gestures = Hammer.gestures || {};

	    /**
	     * setup events to detect gestures on the document
	     * this function is called when creating an new instance
	     * @private
	     */
	    function setup() {
	        if (Hammer.READY) {
	            return;
	        }

	        // find what eventtypes we add listeners to
	        Event.determineEventTypes();

	        // Register all gestures inside Hammer.gestures
	        Utils.each(Hammer.gestures, function (gesture) {
	            Detection.register(gesture);
	        });

	        // Add touch events on the document
	        Event.onTouch(Hammer.DOCUMENT, EVENT_MOVE, Detection.detect);
	        Event.onTouch(Hammer.DOCUMENT, EVENT_END, Detection.detect);

	        // Hammer is ready...!
	        Hammer.READY = true;
	    }

	    /**
	     * @module hammer
	     *
	     * @class Utils
	     * @static
	     */
	    var Utils = Hammer.utils = {
	        /**
	         * extend method, could also be used for cloning when `dest` is an empty object.
	         * changes the dest object
	         * @method extend
	         * @param {Object} dest
	         * @param {Object} src
	         * @param {Boolean} [merge=false]  do a merge
	         * @return {Object} dest
	         */
	        extend: function extend(dest, src, merge) {
	            for (var key in src) {
	                if (!src.hasOwnProperty(key) || dest[key] !== undefined && merge) {
	                    continue;
	                }
	                dest[key] = src[key];
	            }
	            return dest;
	        },

	        /**
	         * simple addEventListener wrapper
	         * @method on
	         * @param {HTMLElement} element
	         * @param {String} type
	         * @param {Function} handler
	         */
	        on: function on(element, type, handler) {
	            element.addEventListener(type, handler, false);
	        },

	        /**
	         * simple removeEventListener wrapper
	         * @method off
	         * @param {HTMLElement} element
	         * @param {String} type
	         * @param {Function} handler
	         */
	        off: function off(element, type, handler) {
	            element.removeEventListener(type, handler, false);
	        },

	        /**
	         * forEach over arrays and objects
	         * @method each
	         * @param {Object|Array} obj
	         * @param {Function} iterator
	         * @param {any} iterator.item
	         * @param {Number} iterator.index
	         * @param {Object|Array} iterator.obj the source object
	         * @param {Object} context value to use as `this` in the iterator
	         */
	        each: function each(obj, iterator, context) {
	            var i, len;

	            // native forEach on arrays
	            if ('forEach' in obj) {
	                obj.forEach(iterator, context);
	                // arrays
	            } else if (obj.length !== undefined) {
	                for (i = 0, len = obj.length; i < len; i++) {
	                    if (iterator.call(context, obj[i], i, obj) === false) {
	                        return;
	                    }
	                }
	                // objects
	            } else {
	                for (i in obj) {
	                    if (obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj) === false) {
	                        return;
	                    }
	                }
	            }
	        },

	        /**
	         * find if a string contains the string using indexOf
	         * @method inStr
	         * @param {String} src
	         * @param {String} find
	         * @return {Boolean} found
	         */
	        inStr: function inStr(src, find) {
	            return src.indexOf(find) > -1;
	        },

	        /**
	         * find if a array contains the object using indexOf or a simple polyfill
	         * @method inArray
	         * @param {String} src
	         * @param {String} find
	         * @return {Boolean|Number} false when not found, or the index
	         */
	        inArray: function inArray(src, find) {
	            if (src.indexOf) {
	                var index = src.indexOf(find);
	                return index === -1 ? false : index;
	            } else {
	                for (var i = 0, len = src.length; i < len; i++) {
	                    if (src[i] === find) {
	                        return i;
	                    }
	                }
	                return false;
	            }
	        },

	        /**
	         * convert an array-like object (`arguments`, `touchlist`) to an array
	         * @method toArray
	         * @param {Object} obj
	         * @return {Array}
	         */
	        toArray: function toArray(obj) {
	            return Array.prototype.slice.call(obj, 0);
	        },

	        /**
	         * find if a node is in the given parent
	         * @method hasParent
	         * @param {HTMLElement} node
	         * @param {HTMLElement} parent
	         * @return {Boolean} found
	         */
	        hasParent: function hasParent(node, parent) {
	            while (node) {
	                if (node == parent) {
	                    return true;
	                }
	                node = node.parentNode;
	            }
	            return false;
	        },

	        /**
	         * get the center of all the touches
	         * @method getCenter
	         * @param {Array} touches
	         * @return {Object} center contains `pageX`, `pageY`, `clientX` and `clientY` properties
	         */
	        getCenter: function getCenter(touches) {
	            var pageX = [],
	                pageY = [],
	                clientX = [],
	                clientY = [],
	                min = Math.min,
	                max = Math.max;

	            // no need to loop when only one touch
	            if (touches.length === 1) {
	                return {
	                    pageX: touches[0].pageX,
	                    pageY: touches[0].pageY,
	                    clientX: touches[0].clientX,
	                    clientY: touches[0].clientY
	                };
	            }

	            Utils.each(touches, function (touch) {
	                pageX.push(touch.pageX);
	                pageY.push(touch.pageY);
	                clientX.push(touch.clientX);
	                clientY.push(touch.clientY);
	            });

	            return {
	                pageX: (min.apply(Math, pageX) + max.apply(Math, pageX)) / 2,
	                pageY: (min.apply(Math, pageY) + max.apply(Math, pageY)) / 2,
	                clientX: (min.apply(Math, clientX) + max.apply(Math, clientX)) / 2,
	                clientY: (min.apply(Math, clientY) + max.apply(Math, clientY)) / 2
	            };
	        },

	        /**
	         * calculate the velocity between two points. unit is in px per ms.
	         * @method getVelocity
	         * @param {Number} deltaTime
	         * @param {Number} deltaX
	         * @param {Number} deltaY
	         * @return {Object} velocity `x` and `y`
	         */
	        getVelocity: function getVelocity(deltaTime, deltaX, deltaY) {
	            return {
	                x: Math.abs(deltaX / deltaTime) || 0,
	                y: Math.abs(deltaY / deltaTime) || 0
	            };
	        },

	        /**
	         * calculate the angle between two coordinates
	         * @method getAngle
	         * @param {Touch} touch1
	         * @param {Touch} touch2
	         * @return {Number} angle
	         */
	        getAngle: function getAngle(touch1, touch2) {
	            var x = touch2.clientX - touch1.clientX,
	                y = touch2.clientY - touch1.clientY;

	            return Math.atan2(y, x) * 180 / Math.PI;
	        },

	        /**
	         * do a small comparision to get the direction between two touches.
	         * @method getDirection
	         * @param {Touch} touch1
	         * @param {Touch} touch2
	         * @return {String} direction matches `DIRECTION_LEFT|RIGHT|UP|DOWN`
	         */
	        getDirection: function getDirection(touch1, touch2) {
	            var x = Math.abs(touch1.clientX - touch2.clientX),
	                y = Math.abs(touch1.clientY - touch2.clientY);

	            if (x >= y) {
	                return touch1.clientX - touch2.clientX > 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
	            }
	            return touch1.clientY - touch2.clientY > 0 ? DIRECTION_UP : DIRECTION_DOWN;
	        },

	        /**
	         * calculate the distance between two touches
	         * @method getDistance
	         * @param {Touch}touch1
	         * @param {Touch} touch2
	         * @return {Number} distance
	         */
	        getDistance: function getDistance(touch1, touch2) {
	            var x = touch2.clientX - touch1.clientX,
	                y = touch2.clientY - touch1.clientY;

	            return Math.sqrt(x * x + y * y);
	        },

	        /**
	         * calculate the scale factor between two touchLists
	         * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
	         * @method getScale
	         * @param {Array} start array of touches
	         * @param {Array} end array of touches
	         * @return {Number} scale
	         */
	        getScale: function getScale(start, end) {
	            // need two fingers...
	            if (start.length >= 2 && end.length >= 2) {
	                return this.getDistance(end[0], end[1]) / this.getDistance(start[0], start[1]);
	            }
	            return 1;
	        },

	        /**
	         * calculate the rotation degrees between two touchLists
	         * @method getRotation
	         * @param {Array} start array of touches
	         * @param {Array} end array of touches
	         * @return {Number} rotation
	         */
	        getRotation: function getRotation(start, end) {
	            // need two fingers
	            if (start.length >= 2 && end.length >= 2) {
	                return this.getAngle(end[1], end[0]) - this.getAngle(start[1], start[0]);
	            }
	            return 0;
	        },

	        /**
	         * find out if the direction is vertical   *
	         * @method isVertical
	         * @param {String} direction matches `DIRECTION_UP|DOWN`
	         * @return {Boolean} is_vertical
	         */
	        isVertical: function isVertical(direction) {
	            return direction == DIRECTION_UP || direction == DIRECTION_DOWN;
	        },

	        /**
	         * set css properties with their prefixes
	         * @param {HTMLElement} element
	         * @param {String} prop
	         * @param {String} value
	         * @param {Boolean} [toggle=true]
	         * @return {Boolean}
	         */
	        setPrefixedCss: function setPrefixedCss(element, prop, value, toggle) {
	            var prefixes = ['', 'Webkit', 'Moz', 'O', 'ms'];
	            prop = Utils.toCamelCase(prop);

	            for (var i = 0; i < prefixes.length; i++) {
	                var p = prop;
	                // prefixes
	                if (prefixes[i]) {
	                    p = prefixes[i] + p.slice(0, 1).toUpperCase() + p.slice(1);
	                }

	                // test the style
	                if (p in element.style) {
	                    element.style[p] = (toggle == null || toggle) && value || '';
	                    break;
	                }
	            }
	        },

	        /**
	         * toggle browser default behavior by setting css properties.
	         * `userSelect='none'` also sets `element.onselectstart` to false
	         * `userDrag='none'` also sets `element.ondragstart` to false
	         *
	         * @method toggleBehavior
	         * @param {HtmlElement} element
	         * @param {Object} props
	         * @param {Boolean} [toggle=true]
	         */
	        toggleBehavior: function toggleBehavior(element, props, toggle) {
	            if (!props || !element || !element.style) {
	                return;
	            }

	            // set the css properties
	            Utils.each(props, function (value, prop) {
	                Utils.setPrefixedCss(element, prop, value, toggle);
	            });

	            var falseFn = toggle && function () {
	                return false;
	            };

	            // also the disable onselectstart
	            if (props.userSelect == 'none') {
	                element.onselectstart = falseFn;
	            }
	            // and disable ondragstart
	            if (props.userDrag == 'none') {
	                element.ondragstart = falseFn;
	            }
	        },

	        /**
	         * convert a string with underscores to camelCase
	         * so prevent_default becomes preventDefault
	         * @param {String} str
	         * @return {String} camelCaseStr
	         */
	        toCamelCase: function toCamelCase(str) {
	            return str.replace(/[_-]([a-z])/g, function (s) {
	                return s[1].toUpperCase();
	            });
	        }
	    };

	    /**
	     * @module hammer
	     */
	    /**
	     * @class Event
	     * @static
	     */
	    var Event = Hammer.event = {
	        /**
	         * when touch events have been fired, this is true
	         * this is used to stop mouse events
	         * @property prevent_mouseevents
	         * @private
	         * @type {Boolean}
	         */
	        preventMouseEvents: false,

	        /**
	         * if EVENT_START has been fired
	         * @property started
	         * @private
	         * @type {Boolean}
	         */
	        started: false,

	        /**
	         * when the mouse is hold down, this is true
	         * @property should_detect
	         * @private
	         * @type {Boolean}
	         */
	        shouldDetect: false,

	        /**
	         * simple event binder with a hook and support for multiple types
	         * @method on
	         * @param {HTMLElement} element
	         * @param {String} type
	         * @param {Function} handler
	         * @param {Function} [hook]
	         * @param {Object} hook.type
	         */
	        on: function on(element, type, handler, hook) {
	            var types = type.split(' ');
	            Utils.each(types, function (type) {
	                Utils.on(element, type, handler);
	                hook && hook(type);
	            });
	        },

	        /**
	         * simple event unbinder with a hook and support for multiple types
	         * @method off
	         * @param {HTMLElement} element
	         * @param {String} type
	         * @param {Function} handler
	         * @param {Function} [hook]
	         * @param {Object} hook.type
	         */
	        off: function off(element, type, handler, hook) {
	            var types = type.split(' ');
	            Utils.each(types, function (type) {
	                Utils.off(element, type, handler);
	                hook && hook(type);
	            });
	        },

	        /**
	         * the core touch event handler.
	         * this finds out if we should to detect gestures
	         * @method onTouch
	         * @param {HTMLElement} element
	         * @param {String} eventType matches `EVENT_START|MOVE|END`
	         * @param {Function} handler
	         * @return onTouchHandler {Function} the core event handler
	         */
	        onTouch: function onTouch(element, eventType, handler) {
	            var self = this;

	            var onTouchHandler = function onTouchHandler(ev) {
	                var srcType = ev.type.toLowerCase(),
	                    isPointer = Hammer.HAS_POINTEREVENTS,
	                    isMouse = Utils.inStr(srcType, 'mouse'),
	                    triggerType;

	                // if we are in a mouseevent, but there has been a touchevent triggered in this session
	                // we want to do nothing. simply break out of the event.
	                if (isMouse && self.preventMouseEvents) {
	                    return;

	                    // mousebutton must be down
	                } else if (isMouse && eventType == EVENT_START && ev.button === 0) {
	                    self.preventMouseEvents = false;
	                    self.shouldDetect = true;
	                } else if (isPointer && eventType == EVENT_START) {
	                    self.shouldDetect = ev.buttons === 1 || PointerEvent.matchType(POINTER_TOUCH, ev);
	                    // just a valid start event, but no mouse
	                } else if (!isMouse && eventType == EVENT_START) {
	                    self.preventMouseEvents = true;
	                    self.shouldDetect = true;
	                }

	                // update the pointer event before entering the detection
	                if (isPointer && eventType != EVENT_END) {
	                    PointerEvent.updatePointer(eventType, ev);
	                }

	                // we are in a touch/down state, so allowed detection of gestures
	                if (self.shouldDetect) {
	                    triggerType = self.doDetect.call(self, ev, eventType, element, handler);
	                }

	                // ...and we are done with the detection
	                // so reset everything to start each detection totally fresh
	                if (triggerType == EVENT_END) {
	                    self.preventMouseEvents = false;
	                    self.shouldDetect = false;
	                    PointerEvent.reset();
	                    // update the pointerevent object after the detection
	                }

	                if (isPointer && eventType == EVENT_END) {
	                    PointerEvent.updatePointer(eventType, ev);
	                }
	            };

	            this.on(element, EVENT_TYPES[eventType], onTouchHandler);
	            return onTouchHandler;
	        },

	        /**
	         * the core detection method
	         * this finds out what hammer-touch-events to trigger
	         * @method doDetect
	         * @param {Object} ev
	         * @param {String} eventType matches `EVENT_START|MOVE|END`
	         * @param {HTMLElement} element
	         * @param {Function} handler
	         * @return {String} triggerType matches `EVENT_START|MOVE|END`
	         */
	        doDetect: function doDetect(ev, eventType, element, handler) {
	            var touchList = this.getTouchList(ev, eventType);
	            var touchListLength = touchList.length;
	            var triggerType = eventType;
	            var triggerChange = touchList.trigger; // used by fakeMultitouch plugin
	            var changedLength = touchListLength;

	            // at each touchstart-like event we want also want to trigger a TOUCH event...
	            if (eventType == EVENT_START) {
	                triggerChange = EVENT_TOUCH;
	                // ...the same for a touchend-like event
	            } else if (eventType == EVENT_END) {
	                triggerChange = EVENT_RELEASE;

	                // keep track of how many touches have been removed
	                changedLength = touchList.length - (ev.changedTouches ? ev.changedTouches.length : 1);
	            }

	            // after there are still touches on the screen,
	            // we just want to trigger a MOVE event. so change the START or END to a MOVE
	            // but only after detection has been started, the first time we actualy want a START
	            if (changedLength > 0 && this.started) {
	                triggerType = EVENT_MOVE;
	            }

	            // detection has been started, we keep track of this, see above
	            this.started = true;

	            // generate some event data, some basic information
	            var evData = this.collectEventData(element, triggerType, touchList, ev);

	            // trigger the triggerType event before the change (TOUCH, RELEASE) events
	            // but the END event should be at last
	            if (eventType != EVENT_END) {
	                handler.call(Detection, evData);
	            }

	            // trigger a change (TOUCH, RELEASE) event, this means the length of the touches changed
	            if (triggerChange) {
	                evData.changedLength = changedLength;
	                evData.eventType = triggerChange;

	                handler.call(Detection, evData);

	                evData.eventType = triggerType;
	                delete evData.changedLength;
	            }

	            // trigger the END event
	            if (triggerType == EVENT_END) {
	                handler.call(Detection, evData);

	                // ...and we are done with the detection
	                // so reset everything to start each detection totally fresh
	                this.started = false;
	            }

	            return triggerType;
	        },

	        /**
	         * we have different events for each device/browser
	         * determine what we need and set them in the EVENT_TYPES constant
	         * the `onTouch` method is bind to these properties.
	         * @method determineEventTypes
	         * @return {Object} events
	         */
	        determineEventTypes: function determineEventTypes() {
	            var types;
	            if (Hammer.HAS_POINTEREVENTS) {
	                if (window.PointerEvent) {
	                    types = ['pointerdown', 'pointermove', 'pointerup pointercancel lostpointercapture'];
	                } else {
	                    types = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp MSPointerCancel MSLostPointerCapture'];
	                }
	            } else if (Hammer.NO_MOUSEEVENTS) {
	                types = ['touchstart', 'touchmove', 'touchend touchcancel'];
	            } else {
	                types = ['touchstart mousedown', 'touchmove mousemove', 'touchend touchcancel mouseup'];
	            }

	            EVENT_TYPES[EVENT_START] = types[0];
	            EVENT_TYPES[EVENT_MOVE] = types[1];
	            EVENT_TYPES[EVENT_END] = types[2];
	            return EVENT_TYPES;
	        },

	        /**
	         * create touchList depending on the event
	         * @method getTouchList
	         * @param {Object} ev
	         * @param {String} eventType
	         * @return {Array} touches
	         */
	        getTouchList: function getTouchList(ev, eventType) {
	            // get the fake pointerEvent touchlist
	            if (Hammer.HAS_POINTEREVENTS) {
	                return PointerEvent.getTouchList();
	            }

	            // get the touchlist
	            if (ev.touches) {
	                if (eventType == EVENT_MOVE) {
	                    return ev.touches;
	                }

	                var identifiers = [];
	                var concat = [].concat(Utils.toArray(ev.touches), Utils.toArray(ev.changedTouches));
	                var touchList = [];

	                Utils.each(concat, function (touch) {
	                    if (Utils.inArray(identifiers, touch.identifier) === false) {
	                        touchList.push(touch);
	                    }
	                    identifiers.push(touch.identifier);
	                });

	                return touchList;
	            }

	            // make fake touchList from mouse position
	            ev.identifier = 1;
	            return [ev];
	        },

	        /**
	         * collect basic event data
	         * @method collectEventData
	         * @param {HTMLElement} element
	         * @param {String} eventType matches `EVENT_START|MOVE|END`
	         * @param {Array} touches
	         * @param {Object} ev
	         * @return {Object} ev
	         */
	        collectEventData: function collectEventData(element, eventType, touches, ev) {
	            // find out pointerType
	            var pointerType = POINTER_TOUCH;
	            if (Utils.inStr(ev.type, 'mouse') || PointerEvent.matchType(POINTER_MOUSE, ev)) {
	                pointerType = POINTER_MOUSE;
	            } else if (PointerEvent.matchType(POINTER_PEN, ev)) {
	                pointerType = POINTER_PEN;
	            }

	            return {
	                center: Utils.getCenter(touches),
	                timeStamp: Date.now(),
	                target: ev.target,
	                touches: touches,
	                eventType: eventType,
	                pointerType: pointerType,
	                srcEvent: ev,

	                /**
	                 * prevent the browser default actions
	                 * mostly used to disable scrolling of the browser
	                 */
	                preventDefault: function preventDefault() {
	                    var srcEvent = this.srcEvent;
	                    srcEvent.preventManipulation && srcEvent.preventManipulation();
	                    srcEvent.preventDefault && srcEvent.preventDefault();
	                },

	                /**
	                 * stop bubbling the event up to its parents
	                 */
	                stopPropagation: function stopPropagation() {
	                    this.srcEvent.stopPropagation();
	                },

	                /**
	                 * immediately stop gesture detection
	                 * might be useful after a swipe was detected
	                 * @return {*}
	                 */
	                stopDetect: function stopDetect() {
	                    return Detection.stopDetect();
	                }
	            };
	        }
	    };

	    /**
	     * @module hammer
	     *
	     * @class PointerEvent
	     * @static
	     */
	    var PointerEvent = Hammer.PointerEvent = {
	        /**
	         * holds all pointers, by `identifier`
	         * @property pointers
	         * @type {Object}
	         */
	        pointers: {},

	        /**
	         * get the pointers as an array
	         * @method getTouchList
	         * @return {Array} touchlist
	         */
	        getTouchList: function getTouchList() {
	            var touchlist = [];
	            // we can use forEach since pointerEvents only is in IE10
	            Utils.each(this.pointers, function (pointer) {
	                touchlist.push(pointer);
	            });
	            return touchlist;
	        },

	        /**
	         * update the position of a pointer
	         * @method updatePointer
	         * @param {String} eventType matches `EVENT_START|MOVE|END`
	         * @param {Object} pointerEvent
	         */
	        updatePointer: function updatePointer(eventType, pointerEvent) {
	            if (eventType == EVENT_END || eventType != EVENT_END && pointerEvent.buttons !== 1) {
	                delete this.pointers[pointerEvent.pointerId];
	            } else {
	                pointerEvent.identifier = pointerEvent.pointerId;
	                this.pointers[pointerEvent.pointerId] = pointerEvent;
	            }
	        },

	        /**
	         * check if ev matches pointertype
	         * @method matchType
	         * @param {String} pointerType matches `POINTER_MOUSE|TOUCH|PEN`
	         * @param {PointerEvent} ev
	         */
	        matchType: function matchType(pointerType, ev) {
	            if (!ev.pointerType) {
	                return false;
	            }

	            var pt = ev.pointerType,
	                types = {};

	            types[POINTER_MOUSE] = pt === (ev.MSPOINTER_TYPE_MOUSE || POINTER_MOUSE);
	            types[POINTER_TOUCH] = pt === (ev.MSPOINTER_TYPE_TOUCH || POINTER_TOUCH);
	            types[POINTER_PEN] = pt === (ev.MSPOINTER_TYPE_PEN || POINTER_PEN);
	            return types[pointerType];
	        },

	        /**
	         * reset the stored pointers
	         * @method reset
	         */
	        reset: function resetList() {
	            this.pointers = {};
	        }
	    };

	    /**
	     * @module hammer
	     *
	     * @class Detection
	     * @static
	     */
	    var Detection = Hammer.detection = {
	        // contains all registred Hammer.gestures in the correct order
	        gestures: [],

	        // data of the current Hammer.gesture detection session
	        current: null,

	        // the previous Hammer.gesture session data
	        // is a full clone of the previous gesture.current object
	        previous: null,

	        // when this becomes true, no gestures are fired
	        stopped: false,

	        /**
	         * start Hammer.gesture detection
	         * @method startDetect
	         * @param {Hammer.Instance} inst
	         * @param {Object} eventData
	         */
	        startDetect: function startDetect(inst, eventData) {
	            // already busy with a Hammer.gesture detection on an element
	            if (this.current) {
	                return;
	            }

	            this.stopped = false;

	            // holds current session
	            this.current = {
	                inst: inst, // reference to HammerInstance we're working for
	                startEvent: Utils.extend({}, eventData), // start eventData for distances, timing etc
	                lastEvent: false, // last eventData
	                lastCalcEvent: false, // last eventData for calculations.
	                futureCalcEvent: false, // last eventData for calculations.
	                lastCalcData: {}, // last lastCalcData
	                name: '' // current gesture we're in/detected, can be 'tap', 'hold' etc
	            };

	            this.detect(eventData);
	        },

	        /**
	         * Hammer.gesture detection
	         * @method detect
	         * @param {Object} eventData
	         * @return {any}
	         */
	        detect: function detect(eventData) {
	            if (!this.current || this.stopped) {
	                return;
	            }

	            // extend event data with calculations about scale, distance etc
	            eventData = this.extendEventData(eventData);

	            // hammer instance and instance options
	            var inst = this.current.inst,
	                instOptions = inst.options;

	            // call Hammer.gesture handlers
	            Utils.each(this.gestures, function triggerGesture(gesture) {
	                // only when the instance options have enabled this gesture
	                if (!this.stopped && inst.enabled && instOptions[gesture.name]) {
	                    gesture.handler.call(gesture, eventData, inst);
	                }
	            }, this);

	            // store as previous event event
	            if (this.current) {
	                this.current.lastEvent = eventData;
	            }

	            if (eventData.eventType == EVENT_END) {
	                this.stopDetect();
	            }

	            return eventData;
	        },

	        /**
	         * clear the Hammer.gesture vars
	         * this is called on endDetect, but can also be used when a final Hammer.gesture has been detected
	         * to stop other Hammer.gestures from being fired
	         * @method stopDetect
	         */
	        stopDetect: function stopDetect() {
	            // clone current data to the store as the previous gesture
	            // used for the double tap gesture, since this is an other gesture detect session
	            this.previous = Utils.extend({}, this.current);

	            // reset the current
	            this.current = null;
	            this.stopped = true;
	        },

	        /**
	         * calculate velocity, angle and direction
	         * @method getVelocityData
	         * @param {Object} ev
	         * @param {Object} center
	         * @param {Number} deltaTime
	         * @param {Number} deltaX
	         * @param {Number} deltaY
	         */
	        getCalculatedData: function getCalculatedData(ev, center, deltaTime, deltaX, deltaY) {
	            var cur = this.current,
	                recalc = false,
	                calcEv = cur.lastCalcEvent,
	                calcData = cur.lastCalcData;

	            if (calcEv && ev.timeStamp - calcEv.timeStamp > Hammer.CALCULATE_INTERVAL) {
	                center = calcEv.center;
	                deltaTime = ev.timeStamp - calcEv.timeStamp;
	                deltaX = ev.center.clientX - calcEv.center.clientX;
	                deltaY = ev.center.clientY - calcEv.center.clientY;
	                recalc = true;
	            }

	            if (ev.eventType == EVENT_TOUCH || ev.eventType == EVENT_RELEASE) {
	                cur.futureCalcEvent = ev;
	            }

	            if (!cur.lastCalcEvent || recalc) {
	                calcData.velocity = Utils.getVelocity(deltaTime, deltaX, deltaY);
	                calcData.angle = Utils.getAngle(center, ev.center);
	                calcData.direction = Utils.getDirection(center, ev.center);

	                cur.lastCalcEvent = cur.futureCalcEvent || ev;
	                cur.futureCalcEvent = ev;
	            }

	            ev.velocityX = calcData.velocity.x;
	            ev.velocityY = calcData.velocity.y;
	            ev.interimAngle = calcData.angle;
	            ev.interimDirection = calcData.direction;
	        },

	        /**
	         * extend eventData for Hammer.gestures
	         * @method extendEventData
	         * @param {Object} ev
	         * @return {Object} ev
	         */
	        extendEventData: function extendEventData(ev) {
	            var cur = this.current,
	                startEv = cur.startEvent,
	                lastEv = cur.lastEvent || startEv;

	            // update the start touchlist to calculate the scale/rotation
	            if (ev.eventType == EVENT_TOUCH || ev.eventType == EVENT_RELEASE) {
	                startEv.touches = [];
	                Utils.each(ev.touches, function (touch) {
	                    startEv.touches.push({
	                        clientX: touch.clientX,
	                        clientY: touch.clientY
	                    });
	                });
	            }

	            var deltaTime = ev.timeStamp - startEv.timeStamp,
	                deltaX = ev.center.clientX - startEv.center.clientX,
	                deltaY = ev.center.clientY - startEv.center.clientY;

	            this.getCalculatedData(ev, lastEv.center, deltaTime, deltaX, deltaY);

	            Utils.extend(ev, {
	                startEvent: startEv,

	                deltaTime: deltaTime,
	                deltaX: deltaX,
	                deltaY: deltaY,

	                distance: Utils.getDistance(startEv.center, ev.center),
	                angle: Utils.getAngle(startEv.center, ev.center),
	                direction: Utils.getDirection(startEv.center, ev.center),
	                scale: Utils.getScale(startEv.touches, ev.touches),
	                rotation: Utils.getRotation(startEv.touches, ev.touches)
	            });

	            return ev;
	        },

	        /**
	         * register new gesture
	         * @method register
	         * @param {Object} gesture object, see `gestures/` for documentation
	         * @return {Array} gestures
	         */
	        register: function register(gesture) {
	            // add an enable gesture options if there is no given
	            var options = gesture.defaults || {};
	            if (options[gesture.name] === undefined) {
	                options[gesture.name] = true;
	            }

	            // extend Hammer default options with the Hammer.gesture options
	            Utils.extend(Hammer.defaults, options, true);

	            // set its index
	            gesture.index = gesture.index || 1000;

	            // add Hammer.gesture to the list
	            this.gestures.push(gesture);

	            // sort the list by index
	            this.gestures.sort(function (a, b) {
	                if (a.index < b.index) {
	                    return -1;
	                }
	                if (a.index > b.index) {
	                    return 1;
	                }
	                return 0;
	            });

	            return this.gestures;
	        }
	    };

	    /**
	     * @module hammer
	     */

	    /**
	     * create new hammer instance
	     * all methods should return the instance itself, so it is chainable.
	     *
	     * @class Instance
	     * @constructor
	     * @param {HTMLElement} element
	     * @param {Object} [options={}] options are merged with `Hammer.defaults`
	     * @return {Hammer.Instance}
	     */
	    Hammer.Instance = function (element, options) {
	        var self = this;

	        // setup HammerJS window events and register all gestures
	        // this also sets up the default options
	        setup();

	        /**
	         * @property element
	         * @type {HTMLElement}
	         */
	        this.element = element;

	        /**
	         * @property enabled
	         * @type {Boolean}
	         * @protected
	         */
	        this.enabled = true;

	        /**
	         * options, merged with the defaults
	         * options with an _ are converted to camelCase
	         * @property options
	         * @type {Object}
	         */
	        Utils.each(options, function (value, name) {
	            delete options[name];
	            options[Utils.toCamelCase(name)] = value;
	        });

	        this.options = Utils.extend(Utils.extend({}, Hammer.defaults), options || {});

	        // add some css to the element to prevent the browser from doing its native behavoir
	        if (this.options.behavior) {
	            Utils.toggleBehavior(this.element, this.options.behavior, true);
	        }

	        /**
	         * event start handler on the element to start the detection
	         * @property eventStartHandler
	         * @type {Object}
	         */
	        this.eventStartHandler = Event.onTouch(element, EVENT_START, function (ev) {
	            if (self.enabled && ev.eventType == EVENT_START) {
	                Detection.startDetect(self, ev);
	            } else if (ev.eventType == EVENT_TOUCH) {
	                Detection.detect(ev);
	            }
	        });

	        /**
	         * keep a list of user event handlers which needs to be removed when calling 'dispose'
	         * @property eventHandlers
	         * @type {Array}
	         */
	        this.eventHandlers = [];
	    };

	    Hammer.Instance.prototype = {
	        /**
	         * bind events to the instance
	         * @method on
	         * @chainable
	         * @param {String} gestures multiple gestures by splitting with a space
	         * @param {Function} handler
	         * @param {Object} handler.ev event object
	         */
	        on: function onEvent(gestures, handler) {
	            var self = this;
	            Event.on(self.element, gestures, handler, function (type) {
	                self.eventHandlers.push({ gesture: type, handler: handler });
	            });
	            return self;
	        },

	        /**
	         * unbind events to the instance
	         * @method off
	         * @chainable
	         * @param {String} gestures
	         * @param {Function} handler
	         */
	        off: function offEvent(gestures, handler) {
	            var self = this;

	            Event.off(self.element, gestures, handler, function (type) {
	                var index = Utils.inArray({ gesture: type, handler: handler });
	                if (index !== false) {
	                    self.eventHandlers.splice(index, 1);
	                }
	            });
	            return self;
	        },

	        /**
	         * trigger gesture event
	         * @method trigger
	         * @chainable
	         * @param {String} gesture
	         * @param {Object} [eventData]
	         */
	        trigger: function triggerEvent(gesture, eventData) {
	            // optional
	            if (!eventData) {
	                eventData = {};
	            }

	            // create DOM event
	            var event = Hammer.DOCUMENT.createEvent('Event');
	            event.initEvent(gesture, true, true);
	            event.gesture = eventData;

	            // trigger on the target if it is in the instance element,
	            // this is for event delegation tricks
	            var element = this.element;
	            if (Utils.hasParent(eventData.target, element)) {
	                element = eventData.target;
	            }

	            element.dispatchEvent(event);
	            return this;
	        },

	        /**
	         * enable of disable hammer.js detection
	         * @method enable
	         * @chainable
	         * @param {Boolean} state
	         */
	        enable: function enable(state) {
	            this.enabled = state;
	            return this;
	        },

	        /**
	         * dispose this hammer instance
	         * @method dispose
	         * @return {Null}
	         */
	        dispose: function dispose() {
	            var i, eh;

	            // undo all changes made by stop_browser_behavior
	            Utils.toggleBehavior(this.element, this.options.behavior, false);

	            // unbind all custom event handlers
	            for (i = -1; eh = this.eventHandlers[++i];) {
	                Utils.off(this.element, eh.gesture, eh.handler);
	            }

	            this.eventHandlers = [];

	            // unbind the start event listener
	            Event.off(this.element, EVENT_TYPES[EVENT_START], this.eventStartHandler);

	            return null;
	        }
	    };

	    /**
	     * @module gestures
	     */
	    /**
	     * Move with x fingers (default 1) around on the page.
	     * Preventing the default browser behavior is a good way to improve feel and working.
	     * ````
	     *  hammertime.on("drag", function(ev) {
	     *    console.log(ev);
	     *    ev.gesture.preventDefault();
	     *  });
	     * ````
	     *
	     * @class Drag
	     * @static
	     */
	    /**
	     * @event drag
	     * @param {Object} ev
	     */
	    /**
	     * @event dragstart
	     * @param {Object} ev
	     */
	    /**
	     * @event dragend
	     * @param {Object} ev
	     */
	    /**
	     * @event drapleft
	     * @param {Object} ev
	     */
	    /**
	     * @event dragright
	     * @param {Object} ev
	     */
	    /**
	     * @event dragup
	     * @param {Object} ev
	     */
	    /**
	     * @event dragdown
	     * @param {Object} ev
	     */

	    /**
	     * @param {String} name
	     */
	    (function (name) {
	        var triggered = false;

	        function dragGesture(ev, inst) {
	            var cur = Detection.current;

	            // max touches
	            if (inst.options.dragMaxTouches > 0 && ev.touches.length > inst.options.dragMaxTouches) {
	                return;
	            }

	            switch (ev.eventType) {
	                case EVENT_START:
	                    triggered = false;
	                    break;

	                case EVENT_MOVE:
	                    // when the distance we moved is too small we skip this gesture
	                    // or we can be already in dragging
	                    if (ev.distance < inst.options.dragMinDistance && cur.name != name) {
	                        return;
	                    }

	                    var startCenter = cur.startEvent.center;

	                    // we are dragging!
	                    if (cur.name != name) {
	                        cur.name = name;
	                        if (inst.options.dragDistanceCorrection && ev.distance > 0) {
	                            // When a drag is triggered, set the event center to dragMinDistance pixels from the original event center.
	                            // Without this correction, the dragged distance would jumpstart at dragMinDistance pixels instead of at 0.
	                            // It might be useful to save the original start point somewhere
	                            var factor = Math.abs(inst.options.dragMinDistance / ev.distance);
	                            startCenter.pageX += ev.deltaX * factor;
	                            startCenter.pageY += ev.deltaY * factor;
	                            startCenter.clientX += ev.deltaX * factor;
	                            startCenter.clientY += ev.deltaY * factor;

	                            // recalculate event data using new start point
	                            ev = Detection.extendEventData(ev);
	                        }
	                    }

	                    // lock drag to axis?
	                    if (cur.lastEvent.dragLockToAxis || inst.options.dragLockToAxis && inst.options.dragLockMinDistance <= ev.distance) {
	                        ev.dragLockToAxis = true;
	                    }

	                    // keep direction on the axis that the drag gesture started on
	                    var lastDirection = cur.lastEvent.direction;
	                    if (ev.dragLockToAxis && lastDirection !== ev.direction) {
	                        if (Utils.isVertical(lastDirection)) {
	                            ev.direction = ev.deltaY < 0 ? DIRECTION_UP : DIRECTION_DOWN;
	                        } else {
	                            ev.direction = ev.deltaX < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
	                        }
	                    }

	                    // first time, trigger dragstart event
	                    if (!triggered) {
	                        inst.trigger(name + 'start', ev);
	                        triggered = true;
	                    }

	                    // trigger events
	                    inst.trigger(name, ev);
	                    inst.trigger(name + ev.direction, ev);

	                    var isVertical = Utils.isVertical(ev.direction);

	                    // block the browser events
	                    if (inst.options.dragBlockVertical && isVertical || inst.options.dragBlockHorizontal && !isVertical) {
	                        ev.preventDefault();
	                    }
	                    break;

	                case EVENT_RELEASE:
	                    if (triggered && ev.changedLength <= inst.options.dragMaxTouches) {
	                        inst.trigger(name + 'end', ev);
	                        triggered = false;
	                    }
	                    break;

	                case EVENT_END:
	                    triggered = false;
	                    break;
	            }
	        }

	        Hammer.gestures.Drag = {
	            name: name,
	            index: 50,
	            handler: dragGesture,
	            defaults: {
	                /**
	                 * minimal movement that have to be made before the drag event gets triggered
	                 * @property dragMinDistance
	                 * @type {Number}
	                 * @default 10
	                 */
	                dragMinDistance: 10,

	                /**
	                 * Set dragDistanceCorrection to true to make the starting point of the drag
	                 * be calculated from where the drag was triggered, not from where the touch started.
	                 * Useful to avoid a jerk-starting drag, which can make fine-adjustments
	                 * through dragging difficult, and be visually unappealing.
	                 * @property dragDistanceCorrection
	                 * @type {Boolean}
	                 * @default true
	                 */
	                dragDistanceCorrection: true,

	                /**
	                 * set 0 for unlimited, but this can conflict with transform
	                 * @property dragMaxTouches
	                 * @type {Number}
	                 * @default 1
	                 */
	                dragMaxTouches: 1,

	                /**
	                 * prevent default browser behavior when dragging occurs
	                 * be careful with it, it makes the element a blocking element
	                 * when you are using the drag gesture, it is a good practice to set this true
	                 * @property dragBlockHorizontal
	                 * @type {Boolean}
	                 * @default false
	                 */
	                dragBlockHorizontal: false,

	                /**
	                 * same as `dragBlockHorizontal`, but for vertical movement
	                 * @property dragBlockVertical
	                 * @type {Boolean}
	                 * @default false
	                 */
	                dragBlockVertical: false,

	                /**
	                 * dragLockToAxis keeps the drag gesture on the axis that it started on,
	                 * It disallows vertical directions if the initial direction was horizontal, and vice versa.
	                 * @property dragLockToAxis
	                 * @type {Boolean}
	                 * @default false
	                 */
	                dragLockToAxis: false,

	                /**
	                 * drag lock only kicks in when distance > dragLockMinDistance
	                 * This way, locking occurs only when the distance has become large enough to reliably determine the direction
	                 * @property dragLockMinDistance
	                 * @type {Number}
	                 * @default 25
	                 */
	                dragLockMinDistance: 25
	            }
	        };
	    })('drag');

	    /**
	     * @module gestures
	     */
	    /**
	     * trigger a simple gesture event, so you can do anything in your handler.
	     * only usable if you know what your doing...
	     *
	     * @class Gesture
	     * @static
	     */
	    /**
	     * @event gesture
	     * @param {Object} ev
	     */
	    Hammer.gestures.Gesture = {
	        name: 'gesture',
	        index: 1337,
	        handler: function releaseGesture(ev, inst) {
	            inst.trigger(this.name, ev);
	        }
	    };

	    /**
	     * @module gestures
	     */
	    /**
	     * Touch stays at the same place for x time
	     *
	     * @class Hold
	     * @static
	     */
	    /**
	     * @event hold
	     * @param {Object} ev
	     */

	    /**
	     * @param {String} name
	     */
	    (function (name) {
	        var timer;

	        function holdGesture(ev, inst) {
	            var options = inst.options,
	                current = Detection.current;

	            switch (ev.eventType) {
	                case EVENT_START:
	                    clearTimeout(timer);

	                    // set the gesture so we can check in the timeout if it still is
	                    current.name = name;

	                    // set timer and if after the timeout it still is hold,
	                    // we trigger the hold event
	                    timer = setTimeout(function () {
	                        if (current && current.name == name) {
	                            inst.trigger(name, ev);
	                        }
	                    }, options.holdTimeout);
	                    break;

	                case EVENT_MOVE:
	                    if (ev.distance > options.holdThreshold) {
	                        clearTimeout(timer);
	                    }
	                    break;

	                case EVENT_RELEASE:
	                    clearTimeout(timer);
	                    break;
	            }
	        }

	        Hammer.gestures.Hold = {
	            name: name,
	            index: 10,
	            defaults: {
	                /**
	                 * @property holdTimeout
	                 * @type {Number}
	                 * @default 500
	                 */
	                holdTimeout: 500,

	                /**
	                 * movement allowed while holding
	                 * @property holdThreshold
	                 * @type {Number}
	                 * @default 2
	                 */
	                holdThreshold: 2
	            },
	            handler: holdGesture
	        };
	    })('hold');

	    /**
	     * @module gestures
	     */
	    /**
	     * when a touch is being released from the page
	     *
	     * @class Release
	     * @static
	     */
	    /**
	     * @event release
	     * @param {Object} ev
	     */
	    Hammer.gestures.Release = {
	        name: 'release',
	        index: Infinity,
	        handler: function releaseGesture(ev, inst) {
	            if (ev.eventType == EVENT_RELEASE) {
	                inst.trigger(this.name, ev);
	            }
	        }
	    };

	    /**
	     * @module gestures
	     */
	    /**
	     * triggers swipe events when the end velocity is above the threshold
	     * for best usage, set `preventDefault` (on the drag gesture) to `true`
	     * ````
	     *  hammertime.on("dragleft swipeleft", function(ev) {
	     *    console.log(ev);
	     *    ev.gesture.preventDefault();
	     *  });
	     * ````
	     *
	     * @class Swipe
	     * @static
	     */
	    /**
	     * @event swipe
	     * @param {Object} ev
	     */
	    /**
	     * @event swipeleft
	     * @param {Object} ev
	     */
	    /**
	     * @event swiperight
	     * @param {Object} ev
	     */
	    /**
	     * @event swipeup
	     * @param {Object} ev
	     */
	    /**
	     * @event swipedown
	     * @param {Object} ev
	     */
	    Hammer.gestures.Swipe = {
	        name: 'swipe',
	        index: 40,
	        defaults: {
	            /**
	             * @property swipeMinTouches
	             * @type {Number}
	             * @default 1
	             */
	            swipeMinTouches: 1,

	            /**
	             * @property swipeMaxTouches
	             * @type {Number}
	             * @default 1
	             */
	            swipeMaxTouches: 1,

	            /**
	             * horizontal swipe velocity
	             * @property swipeVelocityX
	             * @type {Number}
	             * @default 0.6
	             */
	            swipeVelocityX: 0.6,

	            /**
	             * vertical swipe velocity
	             * @property swipeVelocityY
	             * @type {Number}
	             * @default 0.6
	             */
	            swipeVelocityY: 0.6
	        },

	        handler: function swipeGesture(ev, inst) {
	            if (ev.eventType == EVENT_RELEASE) {
	                var touches = ev.touches.length,
	                    options = inst.options;

	                // max touches
	                if (touches < options.swipeMinTouches || touches > options.swipeMaxTouches) {
	                    return;
	                }

	                // when the distance we moved is too small we skip this gesture
	                // or we can be already in dragging
	                if (ev.velocityX > options.swipeVelocityX || ev.velocityY > options.swipeVelocityY) {
	                    // trigger swipe events
	                    inst.trigger(this.name, ev);
	                    inst.trigger(this.name + ev.direction, ev);
	                }
	            }
	        }
	    };

	    /**
	     * @module gestures
	     */
	    /**
	     * Single tap and a double tap on a place
	     *
	     * @class Tap
	     * @static
	     */
	    /**
	     * @event tap
	     * @param {Object} ev
	     */
	    /**
	     * @event doubletap
	     * @param {Object} ev
	     */

	    /**
	     * @param {String} name
	     */
	    (function (name) {
	        var hasMoved = false;

	        function tapGesture(ev, inst) {
	            var options = inst.options,
	                current = Detection.current,
	                prev = Detection.previous,
	                sincePrev,
	                didDoubleTap;

	            switch (ev.eventType) {
	                case EVENT_START:
	                    hasMoved = false;
	                    break;

	                case EVENT_MOVE:
	                    hasMoved = hasMoved || ev.distance > options.tapMaxDistance;
	                    break;

	                case EVENT_END:
	                    if (!Utils.inStr(ev.srcEvent.type, 'cancel') && ev.deltaTime < options.tapMaxTime && !hasMoved) {
	                        // previous gesture, for the double tap since these are two different gesture detections
	                        sincePrev = prev && prev.lastEvent && ev.timeStamp - prev.lastEvent.timeStamp;
	                        didDoubleTap = false;

	                        // check if double tap
	                        if (prev && prev.name == name && sincePrev && sincePrev < options.doubleTapInterval && ev.distance < options.doubleTapDistance) {
	                            inst.trigger('doubletap', ev);
	                            didDoubleTap = true;
	                        }

	                        // do a single tap
	                        if (!didDoubleTap || options.tapAlways) {
	                            current.name = name;
	                            inst.trigger(current.name, ev);
	                        }
	                    }
	                    break;
	            }
	        }

	        Hammer.gestures.Tap = {
	            name: name,
	            index: 100,
	            handler: tapGesture,
	            defaults: {
	                /**
	                 * max time of a tap, this is for the slow tappers
	                 * @property tapMaxTime
	                 * @type {Number}
	                 * @default 250
	                 */
	                tapMaxTime: 250,

	                /**
	                 * max distance of movement of a tap, this is for the slow tappers
	                 * @property tapMaxDistance
	                 * @type {Number}
	                 * @default 10
	                 */
	                tapMaxDistance: 10,

	                /**
	                 * always trigger the `tap` event, even while double-tapping
	                 * @property tapAlways
	                 * @type {Boolean}
	                 * @default true
	                 */
	                tapAlways: true,

	                /**
	                 * max distance between two taps
	                 * @property doubleTapDistance
	                 * @type {Number}
	                 * @default 20
	                 */
	                doubleTapDistance: 20,

	                /**
	                 * max time between two taps
	                 * @property doubleTapInterval
	                 * @type {Number}
	                 * @default 300
	                 */
	                doubleTapInterval: 300
	            }
	        };
	    })('tap');

	    /**
	     * @module gestures
	     */
	    /**
	     * when a touch is being touched at the page
	     *
	     * @class Touch
	     * @static
	     */
	    /**
	     * @event touch
	     * @param {Object} ev
	     */
	    Hammer.gestures.Touch = {
	        name: 'touch',
	        index: -Infinity,
	        defaults: {
	            /**
	             * call preventDefault at touchstart, and makes the element blocking by disabling the scrolling of the page,
	             * but it improves gestures like transforming and dragging.
	             * be careful with using this, it can be very annoying for users to be stuck on the page
	             * @property preventDefault
	             * @type {Boolean}
	             * @default false
	             */
	            preventDefault: false,

	            /**
	             * disable mouse events, so only touch (or pen!) input triggers events
	             * @property preventMouse
	             * @type {Boolean}
	             * @default false
	             */
	            preventMouse: false
	        },
	        handler: function touchGesture(ev, inst) {
	            if (inst.options.preventMouse && ev.pointerType == POINTER_MOUSE) {
	                ev.stopDetect();
	                return;
	            }

	            if (inst.options.preventDefault) {
	                ev.preventDefault();
	            }

	            if (ev.eventType == EVENT_TOUCH) {
	                inst.trigger('touch', ev);
	            }
	        }
	    };

	    /**
	     * @module gestures
	     */
	    /**
	     * User want to scale or rotate with 2 fingers
	     * Preventing the default browser behavior is a good way to improve feel and working. This can be done with the
	     * `preventDefault` option.
	     *
	     * @class Transform
	     * @static
	     */
	    /**
	     * @event transform
	     * @param {Object} ev
	     */
	    /**
	     * @event transformstart
	     * @param {Object} ev
	     */
	    /**
	     * @event transformend
	     * @param {Object} ev
	     */
	    /**
	     * @event pinchin
	     * @param {Object} ev
	     */
	    /**
	     * @event pinchout
	     * @param {Object} ev
	     */
	    /**
	     * @event rotate
	     * @param {Object} ev
	     */

	    /**
	     * @param {String} name
	     */
	    (function (name) {
	        var triggered = false;

	        function transformGesture(ev, inst) {
	            switch (ev.eventType) {
	                case EVENT_START:
	                    triggered = false;
	                    break;

	                case EVENT_MOVE:
	                    // at least multitouch
	                    if (ev.touches.length < 2) {
	                        return;
	                    }

	                    var scaleThreshold = Math.abs(1 - ev.scale);
	                    var rotationThreshold = Math.abs(ev.rotation);

	                    // when the distance we moved is too small we skip this gesture
	                    // or we can be already in dragging
	                    if (scaleThreshold < inst.options.transformMinScale && rotationThreshold < inst.options.transformMinRotation) {
	                        return;
	                    }

	                    // we are transforming!
	                    Detection.current.name = name;

	                    // first time, trigger dragstart event
	                    if (!triggered) {
	                        inst.trigger(name + 'start', ev);
	                        triggered = true;
	                    }

	                    inst.trigger(name, ev); // basic transform event

	                    // trigger rotate event
	                    if (rotationThreshold > inst.options.transformMinRotation) {
	                        inst.trigger('rotate', ev);
	                    }

	                    // trigger pinch event
	                    if (scaleThreshold > inst.options.transformMinScale) {
	                        inst.trigger('pinch', ev);
	                        inst.trigger('pinch' + (ev.scale < 1 ? 'in' : 'out'), ev);
	                    }
	                    break;

	                case EVENT_RELEASE:
	                    if (triggered && ev.changedLength < 2) {
	                        inst.trigger(name + 'end', ev);
	                        triggered = false;
	                    }
	                    break;
	            }
	        }

	        Hammer.gestures.Transform = {
	            name: name,
	            index: 45,
	            defaults: {
	                /**
	                 * minimal scale factor, no scale is 1, zoomin is to 0 and zoomout until higher then 1
	                 * @property transformMinScale
	                 * @type {Number}
	                 * @default 0.01
	                 */
	                transformMinScale: 0.01,

	                /**
	                 * rotation in degrees
	                 * @property transformMinRotation
	                 * @type {Number}
	                 * @default 1
	                 */
	                transformMinRotation: 1
	            },

	            handler: transformGesture
	        };
	    })('transform');

	    /**
	     * @module hammer
	     */

	    // AMD export
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
	            return Hammer;
	        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	        // commonjs export
	    } else if (typeof module !== 'undefined' && module.exports) {
	        module.exports = Hammer;
	        // browser export
	    } else {
	        window.Hammer = Hammer;
	    }
	})(window);

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(175);
	var hammerUtil = __webpack_require__(300);
	var moment = __webpack_require__(176);
	var Component = __webpack_require__(301);
	var DateUtil = __webpack_require__(302);

	/**
	 * @constructor Range
	 * A Range controls a numeric range with a start and end value.
	 * The Range adjusts the range based on mouse events or programmatic changes,
	 * and triggers events when the range is changing or has been changed.
	 * @param {{dom: Object, domProps: Object, emitter: Emitter}} body
	 * @param {Object} [options]    See description at Range.setOptions
	 */
	function Range(body, options) {
	  var now = moment().hours(0).minutes(0).seconds(0).milliseconds(0);
	  this.start = now.clone().add(-3, 'days').valueOf(); // Number
	  this.end = now.clone().add(4, 'days').valueOf(); // Number

	  this.body = body;
	  this.deltaDifference = 0;
	  this.scaleOffset = 0;
	  this.startToFront = false;
	  this.endToFront = true;

	  // default options
	  this.defaultOptions = {
	    start: null,
	    end: null,
	    direction: 'horizontal', // 'horizontal' or 'vertical'
	    moveable: true,
	    zoomable: true,
	    min: null,
	    max: null,
	    zoomMin: 10, // milliseconds
	    zoomMax: 1000 * 60 * 60 * 24 * 365 * 10000 // milliseconds
	  };
	  this.options = util.extend({}, this.defaultOptions);

	  this.props = {
	    touch: {}
	  };
	  this.animateTimer = null;

	  // drag listeners for dragging
	  this.body.emitter.on('dragstart', this._onDragStart.bind(this));
	  this.body.emitter.on('drag', this._onDrag.bind(this));
	  this.body.emitter.on('dragend', this._onDragEnd.bind(this));

	  // ignore dragging when holding
	  this.body.emitter.on('hold', this._onHold.bind(this));

	  // mouse wheel for zooming
	  this.body.emitter.on('mousewheel', this._onMouseWheel.bind(this));
	  this.body.emitter.on('DOMMouseScroll', this._onMouseWheel.bind(this)); // For FF

	  // pinch to zoom
	  this.body.emitter.on('touch', this._onTouch.bind(this));
	  this.body.emitter.on('pinch', this._onPinch.bind(this));

	  this.setOptions(options);
	}

	Range.prototype = new Component();

	/**
	 * Set options for the range controller
	 * @param {Object} options      Available options:
	 *                              {Number | Date | String} start  Start date for the range
	 *                              {Number | Date | String} end    End date for the range
	 *                              {Number} min    Minimum value for start
	 *                              {Number} max    Maximum value for end
	 *                              {Number} zoomMin    Set a minimum value for
	 *                                                  (end - start).
	 *                              {Number} zoomMax    Set a maximum value for
	 *                                                  (end - start).
	 *                              {Boolean} moveable Enable moving of the range
	 *                                                 by dragging. True by default
	 *                              {Boolean} zoomable Enable zooming of the range
	 *                                                 by pinching/scrolling. True by default
	 */
	Range.prototype.setOptions = function (options) {
	  if (options) {
	    // copy the options that we know
	    var fields = ['direction', 'min', 'max', 'zoomMin', 'zoomMax', 'moveable', 'zoomable', 'activate', 'hiddenDates'];
	    util.selectiveExtend(fields, this.options, options);

	    if ('start' in options || 'end' in options) {
	      // apply a new range. both start and end are optional
	      this.setRange(options.start, options.end);
	    }
	  }
	};

	/**
	 * Test whether direction has a valid value
	 * @param {String} direction    'horizontal' or 'vertical'
	 */
	function validateDirection(direction) {
	  if (direction != 'horizontal' && direction != 'vertical') {
	    throw new TypeError('Unknown direction "' + direction + '". ' + 'Choose "horizontal" or "vertical".');
	  }
	}

	/**
	 * Set a new start and end range
	 * @param {Date | Number | String} [start]
	 * @param {Date | Number | String} [end]
	 * @param {boolean | number} [animate=false]     If true, the range is animated
	 *                                               smoothly to the new window.
	 *                                               If animate is a number, the
	 *                                               number is taken as duration
	 *                                               Default duration is 500 ms.
	 * @param {Boolean} [byUser=false]
	 *
	 */
	Range.prototype.setRange = function (start, end, animate, byUser) {
	  if (byUser !== true) {
	    byUser = false;
	  }
	  var _start = start != undefined ? util.convert(start, 'Date').valueOf() : null;
	  var _end = end != undefined ? util.convert(end, 'Date').valueOf() : null;
	  this._cancelAnimation();

	  if (animate) {
	    var me = this;
	    var initStart = this.start;
	    var initEnd = this.end;
	    var duration = typeof animate === 'number' ? animate : 500;
	    var initTime = new Date().valueOf();
	    var anyChanged = false;

	    var next = function next() {
	      if (!me.props.touch.dragging) {
	        var now = new Date().valueOf();
	        var time = now - initTime;
	        var done = time > duration;
	        var s = done || _start === null ? _start : util.easeInOutQuad(time, initStart, _start, duration);
	        var e = done || _end === null ? _end : util.easeInOutQuad(time, initEnd, _end, duration);

	        changed = me._applyRange(s, e);
	        DateUtil.updateHiddenDates(me.body, me.options.hiddenDates);
	        anyChanged = anyChanged || changed;
	        if (changed) {
	          me.body.emitter.emit('rangechange', { start: new Date(me.start), end: new Date(me.end), byUser: byUser });
	        }

	        if (done) {
	          if (anyChanged) {
	            me.body.emitter.emit('rangechanged', { start: new Date(me.start), end: new Date(me.end), byUser: byUser });
	          }
	        } else {
	          // animate with as high as possible frame rate, leave 20 ms in between
	          // each to prevent the browser from blocking
	          me.animateTimer = setTimeout(next, 20);
	        }
	      }
	    };

	    return next();
	  } else {
	    var changed = this._applyRange(_start, _end);
	    DateUtil.updateHiddenDates(this.body, this.options.hiddenDates);
	    if (changed) {
	      var params = { start: new Date(this.start), end: new Date(this.end), byUser: byUser };
	      this.body.emitter.emit('rangechange', params);
	      this.body.emitter.emit('rangechanged', params);
	    }
	  }
	};

	/**
	 * Stop an animation
	 * @private
	 */
	Range.prototype._cancelAnimation = function () {
	  if (this.animateTimer) {
	    clearTimeout(this.animateTimer);
	    this.animateTimer = null;
	  }
	};

	/**
	 * Set a new start and end range. This method is the same as setRange, but
	 * does not trigger a range change and range changed event, and it returns
	 * true when the range is changed
	 * @param {Number} [start]
	 * @param {Number} [end]
	 * @return {Boolean} changed
	 * @private
	 */
	Range.prototype._applyRange = function (start, end) {
	  var newStart = start != null ? util.convert(start, 'Date').valueOf() : this.start,
	      newEnd = end != null ? util.convert(end, 'Date').valueOf() : this.end,
	      max = this.options.max != null ? util.convert(this.options.max, 'Date').valueOf() : null,
	      min = this.options.min != null ? util.convert(this.options.min, 'Date').valueOf() : null,
	      diff;

	  // check for valid number
	  if (isNaN(newStart) || newStart === null) {
	    throw new Error('Invalid start "' + start + '"');
	  }
	  if (isNaN(newEnd) || newEnd === null) {
	    throw new Error('Invalid end "' + end + '"');
	  }

	  // prevent start < end
	  if (newEnd < newStart) {
	    newEnd = newStart;
	  }

	  // prevent start < min
	  if (min !== null) {
	    if (newStart < min) {
	      diff = min - newStart;
	      newStart += diff;
	      newEnd += diff;

	      // prevent end > max
	      if (max != null) {
	        if (newEnd > max) {
	          newEnd = max;
	        }
	      }
	    }
	  }

	  // prevent end > max
	  if (max !== null) {
	    if (newEnd > max) {
	      diff = newEnd - max;
	      newStart -= diff;
	      newEnd -= diff;

	      // prevent start < min
	      if (min != null) {
	        if (newStart < min) {
	          newStart = min;
	        }
	      }
	    }
	  }

	  // prevent (end-start) < zoomMin
	  if (this.options.zoomMin !== null) {
	    var zoomMin = parseFloat(this.options.zoomMin);
	    if (zoomMin < 0) {
	      zoomMin = 0;
	    }
	    if (newEnd - newStart < zoomMin) {
	      if (this.end - this.start === zoomMin && newStart > this.start && newEnd < this.end) {
	        // ignore this action, we are already zoomed to the minimum
	        newStart = this.start;
	        newEnd = this.end;
	      } else {
	        // zoom to the minimum
	        diff = zoomMin - (newEnd - newStart);
	        newStart -= diff / 2;
	        newEnd += diff / 2;
	      }
	    }
	  }

	  // prevent (end-start) > zoomMax
	  if (this.options.zoomMax !== null) {
	    var zoomMax = parseFloat(this.options.zoomMax);
	    if (zoomMax < 0) {
	      zoomMax = 0;
	    }

	    if (newEnd - newStart > zoomMax) {
	      if (this.end - this.start === zoomMax && newStart < this.start && newEnd > this.end) {
	        // ignore this action, we are already zoomed to the maximum
	        newStart = this.start;
	        newEnd = this.end;
	      } else {
	        // zoom to the maximum
	        diff = newEnd - newStart - zoomMax;
	        newStart += diff / 2;
	        newEnd -= diff / 2;
	      }
	    }
	  }

	  var changed = this.start != newStart || this.end != newEnd;

	  // if the new range does NOT overlap with the old range, emit checkRangedItems to avoid not showing ranged items (ranged meaning has end time, not necessarily of type Range)
	  if (!(newStart >= this.start && newStart <= this.end || newEnd >= this.start && newEnd <= this.end) && !(this.start >= newStart && this.start <= newEnd || this.end >= newStart && this.end <= newEnd)) {
	    this.body.emitter.emit('checkRangedItems');
	  }

	  this.start = newStart;
	  this.end = newEnd;
	  return changed;
	};

	/**
	 * Retrieve the current range.
	 * @return {Object} An object with start and end properties
	 */
	Range.prototype.getRange = function () {
	  return {
	    start: this.start,
	    end: this.end
	  };
	};

	/**
	 * Calculate the conversion offset and scale for current range, based on
	 * the provided width
	 * @param {Number} width
	 * @returns {{offset: number, scale: number}} conversion
	 */
	Range.prototype.conversion = function (width, totalHidden) {
	  return Range.conversion(this.start, this.end, width, totalHidden);
	};

	/**
	 * Static method to calculate the conversion offset and scale for a range,
	 * based on the provided start, end, and width
	 * @param {Number} start
	 * @param {Number} end
	 * @param {Number} width
	 * @returns {{offset: number, scale: number}} conversion
	 */
	Range.conversion = function (start, end, width, totalHidden) {
	  if (totalHidden === undefined) {
	    totalHidden = 0;
	  }
	  if (width != 0 && end - start != 0) {
	    return {
	      offset: start,
	      scale: width / (end - start - totalHidden)
	    };
	  } else {
	    return {
	      offset: 0,
	      scale: 1
	    };
	  }
	};

	/**
	 * Start dragging horizontally or vertically
	 * @param {Event} event
	 * @private
	 */
	Range.prototype._onDragStart = function (event) {
	  this.deltaDifference = 0;
	  this.previousDelta = 0;
	  // only allow dragging when configured as movable
	  if (!this.options.moveable) return;

	  // refuse to drag when we where pinching to prevent the timeline make a jump
	  // when releasing the fingers in opposite order from the touch screen
	  if (!this.props.touch.allowDragging) return;

	  this.props.touch.start = this.start;
	  this.props.touch.end = this.end;
	  this.props.touch.dragging = true;

	  if (this.body.dom.root) {
	    this.body.dom.root.style.cursor = 'move';
	  }
	};

	/**
	 * Perform dragging operation
	 * @param {Event} event
	 * @private
	 */
	Range.prototype._onDrag = function (event) {
	  // only allow dragging when configured as movable
	  if (!this.options.moveable) return;
	  // refuse to drag when we where pinching to prevent the timeline make a jump
	  // when releasing the fingers in opposite order from the touch screen
	  if (!this.props.touch.allowDragging) return;

	  var direction = this.options.direction;
	  validateDirection(direction);

	  var delta = direction == 'horizontal' ? event.gesture.deltaX : event.gesture.deltaY;
	  delta -= this.deltaDifference;
	  var interval = this.props.touch.end - this.props.touch.start;

	  // normalize dragging speed if cutout is in between.
	  var duration = DateUtil.getHiddenDurationBetween(this.body.hiddenDates, this.start, this.end);
	  interval -= duration;

	  var width = direction == 'horizontal' ? this.body.domProps.center.width : this.body.domProps.center.height;
	  var diffRange = -delta / width * interval;
	  var newStart = this.props.touch.start + diffRange;
	  var newEnd = this.props.touch.end + diffRange;

	  // snapping times away from hidden zones
	  var safeStart = DateUtil.snapAwayFromHidden(this.body.hiddenDates, newStart, this.previousDelta - delta, true);
	  var safeEnd = DateUtil.snapAwayFromHidden(this.body.hiddenDates, newEnd, this.previousDelta - delta, true);
	  if (safeStart != newStart || safeEnd != newEnd) {
	    this.deltaDifference += delta;
	    this.props.touch.start = safeStart;
	    this.props.touch.end = safeEnd;
	    this._onDrag(event);
	    return;
	  }

	  this.previousDelta = delta;
	  this._applyRange(newStart, newEnd);

	  // fire a rangechange event
	  this.body.emitter.emit('rangechange', {
	    start: new Date(this.start),
	    end: new Date(this.end),
	    byUser: true
	  });
	};

	/**
	 * Stop dragging operation
	 * @param {event} event
	 * @private
	 */
	Range.prototype._onDragEnd = function (event) {
	  // only allow dragging when configured as movable
	  if (!this.options.moveable) return;

	  // refuse to drag when we where pinching to prevent the timeline make a jump
	  // when releasing the fingers in opposite order from the touch screen
	  if (!this.props.touch.allowDragging) return;

	  this.props.touch.dragging = false;
	  if (this.body.dom.root) {
	    this.body.dom.root.style.cursor = 'auto';
	  }

	  // fire a rangechanged event
	  this.body.emitter.emit('rangechanged', {
	    start: new Date(this.start),
	    end: new Date(this.end),
	    byUser: true
	  });
	};

	/**
	 * Event handler for mouse wheel event, used to zoom
	 * Code from http://adomas.org/javascript-mouse-wheel/
	 * @param {Event} event
	 * @private
	 */
	Range.prototype._onMouseWheel = function (event) {
	  // only allow zooming when configured as zoomable and moveable
	  if (!(this.options.zoomable && this.options.moveable)) return;

	  // retrieve delta
	  var delta = 0;
	  if (event.wheelDelta) {
	    /* IE/Opera. */
	    delta = event.wheelDelta / 120;
	  } else if (event.detail) {
	    /* Mozilla case. */
	    // In Mozilla, sign of delta is different than in IE.
	    // Also, delta is multiple of 3.
	    delta = -event.detail / 3;
	  }

	  // If delta is nonzero, handle it.
	  // Basically, delta is now positive if wheel was scrolled up,
	  // and negative, if wheel was scrolled down.
	  if (delta) {
	    // perform the zoom action. Delta is normally 1 or -1

	    // adjust a negative delta such that zooming in with delta 0.1
	    // equals zooming out with a delta -0.1
	    var scale;
	    if (delta < 0) {
	      scale = 1 - delta / 5;
	    } else {
	      scale = 1 / (1 + delta / 5);
	    }

	    // calculate center, the date to zoom around
	    var gesture = hammerUtil.fakeGesture(this, event),
	        pointer = getPointer(gesture.center, this.body.dom.center),
	        pointerDate = this._pointerToDate(pointer);

	    this.zoom(scale, pointerDate, delta);
	  }

	  // Prevent default actions caused by mouse wheel
	  // (else the page and timeline both zoom and scroll)
	  event.preventDefault();
	};

	/**
	 * Start of a touch gesture
	 * @private
	 */
	Range.prototype._onTouch = function (event) {
	  this.props.touch.start = this.start;
	  this.props.touch.end = this.end;
	  this.props.touch.allowDragging = true;
	  this.props.touch.center = null;
	  this.scaleOffset = 0;
	  this.deltaDifference = 0;
	};

	/**
	 * On start of a hold gesture
	 * @private
	 */
	Range.prototype._onHold = function () {
	  this.props.touch.allowDragging = false;
	};

	/**
	 * Handle pinch event
	 * @param {Event} event
	 * @private
	 */
	Range.prototype._onPinch = function (event) {
	  // only allow zooming when configured as zoomable and moveable
	  if (!(this.options.zoomable && this.options.moveable)) return;

	  this.props.touch.allowDragging = false;

	  if (event.gesture.touches.length > 1) {
	    if (!this.props.touch.center) {
	      this.props.touch.center = getPointer(event.gesture.center, this.body.dom.center);
	    }

	    var scale = 1 / (event.gesture.scale + this.scaleOffset);
	    var centerDate = this._pointerToDate(this.props.touch.center);

	    var hiddenDuration = DateUtil.getHiddenDurationBetween(this.body.hiddenDates, this.start, this.end);
	    var hiddenDurationBefore = DateUtil.getHiddenDurationBefore(this.body.hiddenDates, this, centerDate);
	    var hiddenDurationAfter = hiddenDuration - hiddenDurationBefore;

	    // calculate new start and end
	    var newStart = centerDate - hiddenDurationBefore + (this.props.touch.start - (centerDate - hiddenDurationBefore)) * scale;
	    var newEnd = centerDate + hiddenDurationAfter + (this.props.touch.end - (centerDate + hiddenDurationAfter)) * scale;

	    // snapping times away from hidden zones
	    this.startToFront = 1 - scale > 0 ? false : true; // used to do the right autocorrection with periodic hidden times
	    this.endToFront = scale - 1 > 0 ? false : true; // used to do the right autocorrection with periodic hidden times

	    var safeStart = DateUtil.snapAwayFromHidden(this.body.hiddenDates, newStart, 1 - scale, true);
	    var safeEnd = DateUtil.snapAwayFromHidden(this.body.hiddenDates, newEnd, scale - 1, true);
	    if (safeStart != newStart || safeEnd != newEnd) {
	      this.props.touch.start = safeStart;
	      this.props.touch.end = safeEnd;
	      this.scaleOffset = 1 - event.gesture.scale;
	      newStart = safeStart;
	      newEnd = safeEnd;
	    }

	    this.setRange(newStart, newEnd, false, true);

	    this.startToFront = false; // revert to default
	    this.endToFront = true; // revert to default
	  }
	};

	/**
	 * Helper function to calculate the center date for zooming
	 * @param {{x: Number, y: Number}} pointer
	 * @return {number} date
	 * @private
	 */
	Range.prototype._pointerToDate = function (pointer) {
	  var conversion;
	  var direction = this.options.direction;

	  validateDirection(direction);

	  if (direction == 'horizontal') {
	    return this.body.util.toTime(pointer.x).valueOf();
	  } else {
	    var height = this.body.domProps.center.height;
	    conversion = this.conversion(height);
	    return pointer.y / conversion.scale + conversion.offset;
	  }
	};

	/**
	 * Get the pointer location relative to the location of the dom element
	 * @param {{pageX: Number, pageY: Number}} touch
	 * @param {Element} element   HTML DOM element
	 * @return {{x: Number, y: Number}} pointer
	 * @private
	 */
	function getPointer(touch, element) {
	  return {
	    x: touch.pageX - util.getAbsoluteLeft(element),
	    y: touch.pageY - util.getAbsoluteTop(element)
	  };
	}

	/**
	 * Zoom the range the given scale in or out. Start and end date will
	 * be adjusted, and the timeline will be redrawn. You can optionally give a
	 * date around which to zoom.
	 * For example, try scale = 0.9 or 1.1
	 * @param {Number} scale      Scaling factor. Values above 1 will zoom out,
	 *                            values below 1 will zoom in.
	 * @param {Number} [center]   Value representing a date around which will
	 *                            be zoomed.
	 */
	Range.prototype.zoom = function (scale, center, delta) {
	  // if centerDate is not provided, take it half between start Date and end Date
	  if (center == null) {
	    center = (this.start + this.end) / 2;
	  }

	  var hiddenDuration = DateUtil.getHiddenDurationBetween(this.body.hiddenDates, this.start, this.end);
	  var hiddenDurationBefore = DateUtil.getHiddenDurationBefore(this.body.hiddenDates, this, center);
	  var hiddenDurationAfter = hiddenDuration - hiddenDurationBefore;

	  // calculate new start and end
	  var newStart = center - hiddenDurationBefore + (this.start - (center - hiddenDurationBefore)) * scale;
	  var newEnd = center + hiddenDurationAfter + (this.end - (center + hiddenDurationAfter)) * scale;

	  // snapping times away from hidden zones
	  this.startToFront = delta > 0 ? false : true; // used to do the right autocorrection with periodic hidden times
	  this.endToFront = -delta > 0 ? false : true; // used to do the right autocorrection with periodic hidden times
	  var safeStart = DateUtil.snapAwayFromHidden(this.body.hiddenDates, newStart, delta, true);
	  var safeEnd = DateUtil.snapAwayFromHidden(this.body.hiddenDates, newEnd, -delta, true);
	  if (safeStart != newStart || safeEnd != newEnd) {
	    newStart = safeStart;
	    newEnd = safeEnd;
	  }

	  this.setRange(newStart, newEnd, false, true);

	  this.startToFront = false; // revert to default
	  this.endToFront = true; // revert to default
	};

	/**
	 * Move the range with a given delta to the left or right. Start and end
	 * value will be adjusted. For example, try delta = 0.1 or -0.1
	 * @param {Number}  delta     Moving amount. Positive value will move right,
	 *                            negative value will move left
	 */
	Range.prototype.move = function (delta) {
	  // zoom start Date and end Date relative to the centerDate
	  var diff = this.end - this.start;

	  // apply new values
	  var newStart = this.start + diff * delta;
	  var newEnd = this.end + diff * delta;

	  // TODO: reckon with min and max range

	  this.start = newStart;
	  this.end = newEnd;
	};

	/**
	 * Move the range to a new center point
	 * @param {Number} moveTo      New center point of the range
	 */
	Range.prototype.moveTo = function (moveTo) {
	  var center = (this.start + this.end) / 2;

	  var diff = center - moveTo;

	  // calculate new start and end
	  var newStart = this.start - diff;
	  var newEnd = this.end - diff;

	  this.setRange(newStart, newEnd);
	};

	module.exports = Range;

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Hammer = __webpack_require__(297);

	/**
	 * Fake a hammer.js gesture. Event can be a ScrollEvent or MouseMoveEvent
	 * @param {Element} element
	 * @param {Event} event
	 */
	exports.fakeGesture = function (element, event) {
	  var eventType = null;

	  // for hammer.js 1.0.5
	  // var gesture = Hammer.event.collectEventData(this, eventType, event);

	  // for hammer.js 1.0.6+
	  var touches = Hammer.event.getTouchList(event, eventType);
	  var gesture = Hammer.event.collectEventData(this, eventType, touches, event);

	  // on IE in standards mode, no touches are recognized by hammer.js,
	  // resulting in NaN values for center.pageX and center.pageY
	  if (isNaN(gesture.center.pageX)) {
	    gesture.center.pageX = event.pageX;
	  }
	  if (isNaN(gesture.center.pageY)) {
	    gesture.center.pageY = event.pageY;
	  }

	  return gesture;
	};

/***/ },
/* 301 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Prototype for visual components
	 * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} [body]
	 * @param {Object} [options]
	 */
	function Component(body, options) {
	  this.options = null;
	  this.props = null;
	}

	/**
	 * Set options for the component. The new options will be merged into the
	 * current options.
	 * @param {Object} options
	 */
	Component.prototype.setOptions = function (options) {
	  if (options) {
	    util.extend(this.options, options);
	  }
	};

	/**
	 * Repaint the component
	 * @return {boolean} Returns true if the component is resized
	 */
	Component.prototype.redraw = function () {
	  // should be implemented by the component
	  return false;
	};

	/**
	 * Destroy the component. Cleanup DOM and event listeners
	 */
	Component.prototype.destroy = function () {
	  // should be implemented by the component
	};

	/**
	 * Test whether the component is resized since the last time _isResized() was
	 * called.
	 * @return {Boolean} Returns true if the component is resized
	 * @protected
	 */
	Component.prototype._isResized = function () {
	  var resized = this.props._previousWidth !== this.props.width || this.props._previousHeight !== this.props.height;

	  this.props._previousWidth = this.props.width;
	  this.props._previousHeight = this.props.height;

	  return resized;
	};

	module.exports = Component;

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	/**
	 * Created by Alex on 10/3/2014.
	 */
	var moment = __webpack_require__(176);

	/**
	 * used in Core to convert the options into a volatile variable
	 * 
	 * @param Core
	 */
	exports.convertHiddenOptions = function (body, hiddenDates) {
	  body.hiddenDates = [];
	  if (hiddenDates) {
	    if (Array.isArray(hiddenDates) == true) {
	      for (var i = 0; i < hiddenDates.length; i++) {
	        if (hiddenDates[i].repeat === undefined) {
	          var dateItem = {};
	          dateItem.start = moment(hiddenDates[i].start).toDate().valueOf();
	          dateItem.end = moment(hiddenDates[i].end).toDate().valueOf();
	          body.hiddenDates.push(dateItem);
	        }
	      }
	      body.hiddenDates.sort(function (a, b) {
	        return a.start - b.start;
	      }); // sort by start time
	    }
	  }
	};

	/**
	 * create new entrees for the repeating hidden dates
	 * @param body
	 * @param hiddenDates
	 */
	exports.updateHiddenDates = function (body, hiddenDates) {
	  if (hiddenDates && body.domProps.centerContainer.width !== undefined) {
	    exports.convertHiddenOptions(body, hiddenDates);

	    var start = moment(body.range.start);
	    var end = moment(body.range.end);

	    var totalRange = body.range.end - body.range.start;
	    var pixelTime = totalRange / body.domProps.centerContainer.width;

	    for (var i = 0; i < hiddenDates.length; i++) {
	      if (hiddenDates[i].repeat !== undefined) {
	        var startDate = moment(hiddenDates[i].start);
	        var endDate = moment(hiddenDates[i].end);

	        if (startDate._d == "Invalid Date") {
	          throw new Error("Supplied start date is not valid: " + hiddenDates[i].start);
	        }
	        if (endDate._d == "Invalid Date") {
	          throw new Error("Supplied end date is not valid: " + hiddenDates[i].end);
	        }

	        var duration = endDate - startDate;
	        if (duration >= 4 * pixelTime) {

	          var offset = 0;
	          var runUntil = end.clone();
	          switch (hiddenDates[i].repeat) {
	            case "daily":
	              // case of time
	              if (startDate.day() != endDate.day()) {
	                offset = 1;
	              }
	              startDate.dayOfYear(start.dayOfYear());
	              startDate.year(start.year());
	              startDate.subtract(7, 'days');

	              endDate.dayOfYear(start.dayOfYear());
	              endDate.year(start.year());
	              endDate.subtract(7 - offset, 'days');

	              runUntil.add(1, 'weeks');
	              break;
	            case "weekly":
	              var dayOffset = endDate.diff(startDate, 'days');
	              var day = startDate.day();

	              // set the start date to the range.start
	              startDate.date(start.date());
	              startDate.month(start.month());
	              startDate.year(start.year());
	              endDate = startDate.clone();

	              // force
	              startDate.day(day);
	              endDate.day(day);
	              endDate.add(dayOffset, 'days');

	              startDate.subtract(1, 'weeks');
	              endDate.subtract(1, 'weeks');

	              runUntil.add(1, 'weeks');
	              break;
	            case "monthly":
	              if (startDate.month() != endDate.month()) {
	                offset = 1;
	              }
	              startDate.month(start.month());
	              startDate.year(start.year());
	              startDate.subtract(1, 'months');

	              endDate.month(start.month());
	              endDate.year(start.year());
	              endDate.subtract(1, 'months');
	              endDate.add(offset, 'months');

	              runUntil.add(1, 'months');
	              break;
	            case "yearly":
	              if (startDate.year() != endDate.year()) {
	                offset = 1;
	              }
	              startDate.year(start.year());
	              startDate.subtract(1, 'years');
	              endDate.year(start.year());
	              endDate.subtract(1, 'years');
	              endDate.add(offset, 'years');

	              runUntil.add(1, 'years');
	              break;
	            default:
	              console.log("Wrong repeat format, allowed are: daily, weekly, monthly, yearly. Given:", hiddenDates[i].repeat);
	              return;
	          }
	          while (startDate < runUntil) {
	            body.hiddenDates.push({ start: startDate.valueOf(), end: endDate.valueOf() });
	            switch (hiddenDates[i].repeat) {
	              case "daily":
	                startDate.add(1, 'days');
	                endDate.add(1, 'days');
	                break;
	              case "weekly":
	                startDate.add(1, 'weeks');
	                endDate.add(1, 'weeks');
	                break;
	              case "monthly":
	                startDate.add(1, 'months');
	                endDate.add(1, 'months');
	                break;
	              case "yearly":
	                startDate.add(1, 'y');
	                endDate.add(1, 'y');
	                break;
	              default:
	                console.log("Wrong repeat format, allowed are: daily, weekly, monthly, yearly. Given:", hiddenDates[i].repeat);
	                return;
	            }
	          }
	          body.hiddenDates.push({ start: startDate.valueOf(), end: endDate.valueOf() });
	        }
	      }
	    }
	    // remove duplicates, merge where possible
	    exports.removeDuplicates(body);
	    // ensure the new positions are not on hidden dates
	    var startHidden = exports.isHidden(body.range.start, body.hiddenDates);
	    var endHidden = exports.isHidden(body.range.end, body.hiddenDates);
	    var rangeStart = body.range.start;
	    var rangeEnd = body.range.end;
	    if (startHidden.hidden == true) {
	      rangeStart = body.range.startToFront == true ? startHidden.startDate - 1 : startHidden.endDate + 1;
	    }
	    if (endHidden.hidden == true) {
	      rangeEnd = body.range.endToFront == true ? endHidden.startDate - 1 : endHidden.endDate + 1;
	    }
	    if (startHidden.hidden == true || endHidden.hidden == true) {
	      body.range._applyRange(rangeStart, rangeEnd);
	    }
	  }
	};

	/**
	 * remove duplicates from the hidden dates list. Duplicates are evil. They mess everything up.
	 * Scales with N^2
	 * @param body
	 */
	exports.removeDuplicates = function (body) {
	  var hiddenDates = body.hiddenDates;
	  var safeDates = [];
	  for (var i = 0; i < hiddenDates.length; i++) {
	    for (var j = 0; j < hiddenDates.length; j++) {
	      if (i != j && hiddenDates[j].remove != true && hiddenDates[i].remove != true) {
	        // j inside i
	        if (hiddenDates[j].start >= hiddenDates[i].start && hiddenDates[j].end <= hiddenDates[i].end) {
	          hiddenDates[j].remove = true;
	        }
	        // j start inside i
	        else if (hiddenDates[j].start >= hiddenDates[i].start && hiddenDates[j].start <= hiddenDates[i].end) {
	            hiddenDates[i].end = hiddenDates[j].end;
	            hiddenDates[j].remove = true;
	          }
	          // j end inside i
	          else if (hiddenDates[j].end >= hiddenDates[i].start && hiddenDates[j].end <= hiddenDates[i].end) {
	              hiddenDates[i].start = hiddenDates[j].start;
	              hiddenDates[j].remove = true;
	            }
	      }
	    }
	  }

	  for (var i = 0; i < hiddenDates.length; i++) {
	    if (hiddenDates[i].remove !== true) {
	      safeDates.push(hiddenDates[i]);
	    }
	  }

	  body.hiddenDates = safeDates;
	  body.hiddenDates.sort(function (a, b) {
	    return a.start - b.start;
	  }); // sort by start time
	};

	exports.printDates = function (dates) {
	  for (var i = 0; i < dates.length; i++) {
	    console.log(i, new Date(dates[i].start), new Date(dates[i].end), dates[i].start, dates[i].end, dates[i].remove);
	  }
	};

	/**
	 * Used in TimeStep to avoid the hidden times.
	 * @param timeStep
	 * @param previousTime
	 */
	exports.stepOverHiddenDates = function (timeStep, previousTime) {
	  var stepInHidden = false;
	  var currentValue = timeStep.current.valueOf();
	  for (var i = 0; i < timeStep.hiddenDates.length; i++) {
	    var startDate = timeStep.hiddenDates[i].start;
	    var endDate = timeStep.hiddenDates[i].end;
	    if (currentValue >= startDate && currentValue < endDate) {
	      stepInHidden = true;
	      break;
	    }
	  }

	  if (stepInHidden == true && currentValue < timeStep._end.valueOf() && currentValue != previousTime) {
	    var prevValue = moment(previousTime);
	    var newValue = moment(endDate);
	    //check if the next step should be major
	    if (prevValue.year() != newValue.year()) {
	      timeStep.switchedYear = true;
	    } else if (prevValue.month() != newValue.month()) {
	      timeStep.switchedMonth = true;
	    } else if (prevValue.dayOfYear() != newValue.dayOfYear()) {
	      timeStep.switchedDay = true;
	    }

	    timeStep.current = newValue.toDate();
	  }
	};

	///**
	// * Used in TimeStep to avoid the hidden times.
	// * @param timeStep
	// * @param previousTime
	// */
	//exports.checkFirstStep = function(timeStep) {
	//  var stepInHidden = false;
	//  var currentValue = timeStep.current.valueOf();
	//  for (var i = 0; i < timeStep.hiddenDates.length; i++) {
	//    var startDate = timeStep.hiddenDates[i].start;
	//    var endDate = timeStep.hiddenDates[i].end;
	//    if (currentValue >= startDate && currentValue < endDate) {
	//      stepInHidden = true;
	//      break;
	//    }
	//  }
	//
	//  if (stepInHidden == true && currentValue <= timeStep._end.valueOf()) {
	//    var newValue = moment(endDate);
	//    timeStep.current = newValue.toDate();
	//  }
	//};

	/**
	 * replaces the Core toScreen methods
	 * @param Core
	 * @param time
	 * @param width
	 * @returns {number}
	 */
	exports.toScreen = function (Core, time, width) {
	  if (Core.body.hiddenDates.length == 0) {
	    var conversion = Core.range.conversion(width);
	    return (time.valueOf() - conversion.offset) * conversion.scale;
	  } else {
	    var hidden = exports.isHidden(time, Core.body.hiddenDates);
	    if (hidden.hidden == true) {
	      time = hidden.startDate;
	    }

	    var duration = exports.getHiddenDurationBetween(Core.body.hiddenDates, Core.range.start, Core.range.end);
	    time = exports.correctTimeForHidden(Core.body.hiddenDates, Core.range, time);

	    var conversion = Core.range.conversion(width, duration);
	    return (time.valueOf() - conversion.offset) * conversion.scale;
	  }
	};

	/**
	 * Replaces the core toTime methods
	 * @param body
	 * @param range
	 * @param x
	 * @param width
	 * @returns {Date}
	 */
	exports.toTime = function (Core, x, width) {
	  if (Core.body.hiddenDates.length == 0) {
	    var conversion = Core.range.conversion(width);
	    return new Date(x / conversion.scale + conversion.offset);
	  } else {
	    var hiddenDuration = exports.getHiddenDurationBetween(Core.body.hiddenDates, Core.range.start, Core.range.end);
	    var totalDuration = Core.range.end - Core.range.start - hiddenDuration;
	    var partialDuration = totalDuration * x / width;
	    var accumulatedHiddenDuration = exports.getAccumulatedHiddenDuration(Core.body.hiddenDates, Core.range, partialDuration);

	    var newTime = new Date(accumulatedHiddenDuration + partialDuration + Core.range.start);
	    return newTime;
	  }
	};

	/**
	 * Support function
	 *
	 * @param hiddenDates
	 * @param range
	 * @returns {number}
	 */
	exports.getHiddenDurationBetween = function (hiddenDates, start, end) {
	  var duration = 0;
	  for (var i = 0; i < hiddenDates.length; i++) {
	    var startDate = hiddenDates[i].start;
	    var endDate = hiddenDates[i].end;
	    // if time after the cutout, and the
	    if (startDate >= start && endDate < end) {
	      duration += endDate - startDate;
	    }
	  }
	  return duration;
	};

	/**
	 * Support function
	 * @param hiddenDates
	 * @param range
	 * @param time
	 * @returns {{duration: number, time: *, offset: number}}
	 */
	exports.correctTimeForHidden = function (hiddenDates, range, time) {
	  time = moment(time).toDate().valueOf();
	  time -= exports.getHiddenDurationBefore(hiddenDates, range, time);
	  return time;
	};

	exports.getHiddenDurationBefore = function (hiddenDates, range, time) {
	  var timeOffset = 0;
	  time = moment(time).toDate().valueOf();

	  for (var i = 0; i < hiddenDates.length; i++) {
	    var startDate = hiddenDates[i].start;
	    var endDate = hiddenDates[i].end;
	    // if time after the cutout, and the
	    if (startDate >= range.start && endDate < range.end) {
	      if (time >= endDate) {
	        timeOffset += endDate - startDate;
	      }
	    }
	  }
	  return timeOffset;
	};

	/**
	 * sum the duration from start to finish, including the hidden duration,
	 * until the required amount has been reached, return the accumulated hidden duration
	 * @param hiddenDates
	 * @param range
	 * @param time
	 * @returns {{duration: number, time: *, offset: number}}
	 */
	exports.getAccumulatedHiddenDuration = function (hiddenDates, range, requiredDuration) {
	  var hiddenDuration = 0;
	  var duration = 0;
	  var previousPoint = range.start;
	  //exports.printDates(hiddenDates)
	  for (var i = 0; i < hiddenDates.length; i++) {
	    var startDate = hiddenDates[i].start;
	    var endDate = hiddenDates[i].end;
	    // if time after the cutout, and the
	    if (startDate >= range.start && endDate < range.end) {
	      duration += startDate - previousPoint;
	      previousPoint = endDate;
	      if (duration >= requiredDuration) {
	        break;
	      } else {
	        hiddenDuration += endDate - startDate;
	      }
	    }
	  }

	  return hiddenDuration;
	};

	/**
	 * used to step over to either side of a hidden block. Correction is disabled on tablets, might be set to true
	 * @param hiddenDates
	 * @param time
	 * @param direction
	 * @param correctionEnabled
	 * @returns {*}
	 */
	exports.snapAwayFromHidden = function (hiddenDates, time, direction, correctionEnabled) {
	  var isHidden = exports.isHidden(time, hiddenDates);
	  if (isHidden.hidden == true) {
	    if (direction < 0) {
	      if (correctionEnabled == true) {
	        return isHidden.startDate - (isHidden.endDate - time) - 1;
	      } else {
	        return isHidden.startDate - 1;
	      }
	    } else {
	      if (correctionEnabled == true) {
	        return isHidden.endDate + (time - isHidden.startDate) + 1;
	      } else {
	        return isHidden.endDate + 1;
	      }
	    }
	  } else {
	    return time;
	  }
	};

	/**
	 * Check if a time is hidden
	 *
	 * @param time
	 * @param hiddenDates
	 * @returns {{hidden: boolean, startDate: Window.start, endDate: *}}
	 */
	exports.isHidden = function (time, hiddenDates) {
	  for (var i = 0; i < hiddenDates.length; i++) {
	    var startDate = hiddenDates[i].start;
	    var endDate = hiddenDates[i].end;

	    if (time >= startDate && time < endDate) {
	      // if the start is entering a hidden zone
	      return { hidden: true, startDate: startDate, endDate: endDate };
	      break;
	    }
	  }
	  return { hidden: false, startDate: startDate, endDate: endDate };
	};

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var Emitter = __webpack_require__(289);
	var Hammer = __webpack_require__(297);
	var util = __webpack_require__(175);
	var DataSet = __webpack_require__(285);
	var DataView = __webpack_require__(287);
	var Range = __webpack_require__(299);
	var ItemSet = __webpack_require__(304);
	var TimeAxis = __webpack_require__(314);
	var Activator = __webpack_require__(315);
	var DateUtil = __webpack_require__(302);
	var CustomTime = __webpack_require__(317);

	/**
	 * Create a timeline visualization
	 * @param {HTMLElement} container
	 * @param {vis.DataSet | Array | google.visualization.DataTable} [items]
	 * @param {Object} [options]  See Core.setOptions for the available options.
	 * @constructor
	 */
	function Core() {}

	// turn Core into an event emitter
	Emitter(Core.prototype);

	/**
	 * Create the main DOM for the Core: a root panel containing left, right,
	 * top, bottom, content, and background panel.
	 * @param {Element} container  The container element where the Core will
	 *                             be attached.
	 * @protected
	 */
	Core.prototype._create = function (container) {
	  this.dom = {};

	  this.dom.root = document.createElement('div');
	  this.dom.background = document.createElement('div');
	  this.dom.backgroundVertical = document.createElement('div');
	  this.dom.backgroundHorizontal = document.createElement('div');
	  this.dom.centerContainer = document.createElement('div');
	  this.dom.leftContainer = document.createElement('div');
	  this.dom.rightContainer = document.createElement('div');
	  this.dom.center = document.createElement('div');
	  this.dom.left = document.createElement('div');
	  this.dom.right = document.createElement('div');
	  this.dom.top = document.createElement('div');
	  this.dom.bottom = document.createElement('div');
	  this.dom.shadowTop = document.createElement('div');
	  this.dom.shadowBottom = document.createElement('div');
	  this.dom.shadowTopLeft = document.createElement('div');
	  this.dom.shadowBottomLeft = document.createElement('div');
	  this.dom.shadowTopRight = document.createElement('div');
	  this.dom.shadowBottomRight = document.createElement('div');

	  this.dom.root.className = 'vis timeline root';
	  this.dom.background.className = 'vispanel background';
	  this.dom.backgroundVertical.className = 'vispanel background vertical';
	  this.dom.backgroundHorizontal.className = 'vispanel background horizontal';
	  this.dom.centerContainer.className = 'vispanel center';
	  this.dom.leftContainer.className = 'vispanel left';
	  this.dom.rightContainer.className = 'vispanel right';
	  this.dom.top.className = 'vispanel top';
	  this.dom.bottom.className = 'vispanel bottom';
	  this.dom.left.className = 'content';
	  this.dom.center.className = 'content';
	  this.dom.right.className = 'content';
	  this.dom.shadowTop.className = 'shadow top';
	  this.dom.shadowBottom.className = 'shadow bottom';
	  this.dom.shadowTopLeft.className = 'shadow top';
	  this.dom.shadowBottomLeft.className = 'shadow bottom';
	  this.dom.shadowTopRight.className = 'shadow top';
	  this.dom.shadowBottomRight.className = 'shadow bottom';

	  this.dom.root.appendChild(this.dom.background);
	  this.dom.root.appendChild(this.dom.backgroundVertical);
	  this.dom.root.appendChild(this.dom.backgroundHorizontal);
	  this.dom.root.appendChild(this.dom.centerContainer);
	  this.dom.root.appendChild(this.dom.leftContainer);
	  this.dom.root.appendChild(this.dom.rightContainer);
	  this.dom.root.appendChild(this.dom.top);
	  this.dom.root.appendChild(this.dom.bottom);

	  this.dom.centerContainer.appendChild(this.dom.center);
	  this.dom.leftContainer.appendChild(this.dom.left);
	  this.dom.rightContainer.appendChild(this.dom.right);

	  this.dom.centerContainer.appendChild(this.dom.shadowTop);
	  this.dom.centerContainer.appendChild(this.dom.shadowBottom);
	  this.dom.leftContainer.appendChild(this.dom.shadowTopLeft);
	  this.dom.leftContainer.appendChild(this.dom.shadowBottomLeft);
	  this.dom.rightContainer.appendChild(this.dom.shadowTopRight);
	  this.dom.rightContainer.appendChild(this.dom.shadowBottomRight);

	  this.on('rangechange', this._redraw.bind(this));
	  this.on('touch', this._onTouch.bind(this));
	  this.on('pinch', this._onPinch.bind(this));
	  this.on('dragstart', this._onDragStart.bind(this));
	  this.on('drag', this._onDrag.bind(this));

	  var me = this;
	  this.on('change', function (properties) {
	    if (properties && properties.queue == true) {
	      // redraw once on next tick
	      if (!me._redrawTimer) {
	        me._redrawTimer = setTimeout(function () {
	          me._redrawTimer = null;
	          me._redraw();
	        }, 0);
	      }
	    } else {
	      // redraw immediately
	      me._redraw();
	    }
	  });

	  // create event listeners for all interesting events, these events will be
	  // emitted via emitter
	  this.hammer = Hammer(this.dom.root, {
	    preventDefault: true
	  });
	  this.listeners = {};

	  var events = ['touch', 'pinch', 'tap', 'doubletap', 'hold', 'dragstart', 'drag', 'dragend', 'mousewheel', 'DOMMouseScroll' // DOMMouseScroll is needed for Firefox
	  ];
	  events.forEach(function (event) {
	    var listener = function listener() {
	      var args = [event].concat(Array.prototype.slice.call(arguments, 0));
	      if (me.isActive()) {
	        me.emit.apply(me, args);
	      }
	    };
	    me.hammer.on(event, listener);
	    me.listeners[event] = listener;
	  });

	  // size properties of each of the panels
	  this.props = {
	    root: {},
	    background: {},
	    centerContainer: {},
	    leftContainer: {},
	    rightContainer: {},
	    center: {},
	    left: {},
	    right: {},
	    top: {},
	    bottom: {},
	    border: {},
	    scrollTop: 0,
	    scrollTopMin: 0
	  };
	  this.touch = {}; // store state information needed for touch events

	  this.redrawCount = 0;

	  // attach the root panel to the provided container
	  if (!container) throw new Error('No container provided');
	  container.appendChild(this.dom.root);
	};

	/**
	 * Set options. Options will be passed to all components loaded in the Timeline.
	 * @param {Object} [options]
	 *                           {String} orientation
	 *                              Vertical orientation for the Timeline,
	 *                              can be 'bottom' (default) or 'top'.
	 *                           {String | Number} width
	 *                              Width for the timeline, a number in pixels or
	 *                              a css string like '1000px' or '75%'. '100%' by default.
	 *                           {String | Number} height
	 *                              Fixed height for the Timeline, a number in pixels or
	 *                              a css string like '400px' or '75%'. If undefined,
	 *                              The Timeline will automatically size such that
	 *                              its contents fit.
	 *                           {String | Number} minHeight
	 *                              Minimum height for the Timeline, a number in pixels or
	 *                              a css string like '400px' or '75%'.
	 *                           {String | Number} maxHeight
	 *                              Maximum height for the Timeline, a number in pixels or
	 *                              a css string like '400px' or '75%'.
	 *                           {Number | Date | String} start
	 *                              Start date for the visible window
	 *                           {Number | Date | String} end
	 *                              End date for the visible window
	 */
	Core.prototype.setOptions = function (options) {
	  if (options) {
	    // copy the known options
	    var fields = ['width', 'height', 'minHeight', 'maxHeight', 'autoResize', 'start', 'end', 'clickToUse', 'dataAttributes', 'hiddenDates'];
	    util.selectiveExtend(fields, this.options, options);

	    if ('orientation' in options) {
	      if (typeof options.orientation === 'string') {
	        this.options.orientation = options.orientation;
	      } else if (_typeof(options.orientation) === 'object' && 'axis' in options.orientation) {
	        this.options.orientation = options.orientation.axis;
	      }
	    }

	    if (this.options.orientation === 'both') {
	      if (!this.timeAxis2) {
	        var timeAxis2 = this.timeAxis2 = new TimeAxis(this.body);
	        timeAxis2.setOptions = function (options) {
	          var _options = options ? util.extend({}, options) : {};
	          _options.orientation = 'top'; // override the orientation option, always top
	          TimeAxis.prototype.setOptions.call(timeAxis2, _options);
	        };
	        this.components.push(timeAxis2);
	      }
	    } else {
	      if (this.timeAxis2) {
	        var index = this.components.indexOf(this.timeAxis2);
	        if (index !== -1) {
	          this.components.splice(index, 1);
	        }
	        this.timeAxis2.destroy();
	        this.timeAxis2 = null;
	      }
	    }

	    if ('hiddenDates' in this.options) {
	      DateUtil.convertHiddenOptions(this.body, this.options.hiddenDates);
	    }

	    if ('clickToUse' in options) {
	      if (options.clickToUse) {
	        if (!this.activator) {
	          this.activator = new Activator(this.dom.root);
	        }
	      } else {
	        if (this.activator) {
	          this.activator.destroy();
	          delete this.activator;
	        }
	      }
	    }

	    // enable/disable autoResize
	    this._initAutoResize();
	  }

	  // propagate options to all components
	  this.components.forEach(function (component) {
	    component.setOptions(options);
	  });

	  // redraw everything
	  this._redraw();
	};

	/**
	 * Returns true when the Timeline is active.
	 * @returns {boolean}
	 */
	Core.prototype.isActive = function () {
	  return !this.activator || this.activator.active;
	};

	/**
	 * Destroy the Core, clean up all DOM elements and event listeners.
	 */
	Core.prototype.destroy = function () {
	  // unbind datasets
	  this.clear();

	  // remove all event listeners
	  this.off();

	  // stop checking for changed size
	  this._stopAutoResize();

	  // remove from DOM
	  if (this.dom.root.parentNode) {
	    this.dom.root.parentNode.removeChild(this.dom.root);
	  }
	  this.dom = null;

	  // remove Activator
	  if (this.activator) {
	    this.activator.destroy();
	    delete this.activator;
	  }

	  // cleanup hammer touch events
	  for (var event in this.listeners) {
	    if (this.listeners.hasOwnProperty(event)) {
	      delete this.listeners[event];
	    }
	  }
	  this.listeners = null;
	  this.hammer = null;

	  // give all components the opportunity to cleanup
	  this.components.forEach(function (component) {
	    component.destroy();
	  });

	  this.body = null;
	};

	/**
	 * Set a custom time bar
	 * @param {Date} time
	 * @param {int} id
	 */
	Core.prototype.setCustomTime = function (time, id) {
	  if (!this.customTime) {
	    throw new Error('Cannot get custom time: Custom time bar is not enabled');
	  }

	  var barId = id || 0;

	  this.components.forEach(function (element, index, components) {
	    if (element instanceof CustomTime && element.options.id === barId) {
	      element.setCustomTime(time);
	    }
	  });
	};

	/**
	 * Retrieve the current custom time.
	 * @return {Date} customTime
	 * @param {int} id
	 */
	Core.prototype.getCustomTime = function (id) {
	  if (!this.customTime) {
	    throw new Error('Cannot get custom time: Custom time bar is not enabled');
	  }

	  var barId = id || 0,
	      customTime = this.customTime.getCustomTime();

	  this.components.forEach(function (element, index, components) {
	    if (element instanceof CustomTime && element.options.id === barId) {
	      customTime = element.getCustomTime();
	    }
	  });

	  return customTime;
	};

	/**
	 * Add custom vertical bar
	 * @param {Date | String | Number} time  A Date, unix timestamp, or
	 *                                      ISO date string. Time point where the new bar should be placed
	 * @param {Number | String} ID of the new bar
	 * @return {Number | String} ID of the new bar
	 */
	Core.prototype.addCustomTime = function (time, id) {
	  if (!this.currentTime) {
	    throw new Error('Option showCurrentTime must be true');
	  }

	  if (time === undefined) {
	    throw new Error('Time parameter for the custom bar must be provided');
	  }

	  var ts = util.convert(time, 'Date').valueOf(),
	      numIds,
	      customTime,
	      customBarId;

	  // All bar IDs are kept in 1 array, mixed types
	  // Bar with ID 0 is the default bar.
	  if (!this.customBarIds || this.customBarIds.constructor !== Array) {
	    this.customBarIds = [0];
	  }

	  // If the ID is not provided, generate one, otherwise just use it
	  if (id === undefined) {

	    numIds = this.customBarIds.filter(function (element) {
	      return util.isNumber(element);
	    });

	    customBarId = numIds.length > 0 ? Math.max.apply(null, numIds) + 1 : 1;
	  } else {

	    // Check for duplicates
	    this.customBarIds.forEach(function (element) {
	      if (element === id) {
	        throw new Error('Custom time ID already exists');
	      }
	    });

	    customBarId = id;
	  }

	  this.customBarIds.push(customBarId);

	  customTime = new CustomTime(this.body, {
	    showCustomTime: true,
	    time: ts,
	    id: customBarId
	  });

	  this.components.push(customTime);
	  this.redraw();

	  return customBarId;
	};

	/**
	 * Remove previously added custom bar
	 * @param {int} id ID of the custom bar to be removed
	 * @return {boolean} True if the bar exists and is removed, false otherwise
	 */
	Core.prototype.removeCustomTime = function (id) {

	  var me = this;

	  this.components.forEach(function (bar, index, components) {
	    if (bar instanceof CustomTime && bar.options.id === id) {
	      // Only the lines added by the user will be removed
	      if (bar.options.id !== 0) {
	        me.customBarIds.splice(me.customBarIds.indexOf(id), 1);
	        components.splice(index, 1);
	        bar.destroy();
	      }
	    }
	  });
	};

	/**
	 * Get the id's of the currently visible items.
	 * @returns {Array} The ids of the visible items
	 */
	Core.prototype.getVisibleItems = function () {
	  return this.itemSet && this.itemSet.getVisibleItems() || [];
	};

	/**
	 * Clear the Core. By Default, items, groups and options are cleared.
	 * Example usage:
	 *
	 *     timeline.clear();                // clear items, groups, and options
	 *     timeline.clear({options: true}); // clear options only
	 *
	 * @param {Object} [what]      Optionally specify what to clear. By default:
	 *                             {items: true, groups: true, options: true}
	 */
	Core.prototype.clear = function (what) {
	  // clear items
	  if (!what || what.items) {
	    this.setItems(null);
	  }

	  // clear groups
	  if (!what || what.groups) {
	    this.setGroups(null);
	  }

	  // clear options of timeline and of each of the components
	  if (!what || what.options) {
	    this.components.forEach(function (component) {
	      component.setOptions(component.defaultOptions);
	    });

	    this.setOptions(this.defaultOptions); // this will also do a redraw
	  }
	};

	/**
	 * Set Core window such that it fits all items
	 * @param {Object} [options]  Available options:
	 *                            `animate: boolean | number`
	 *                                 If true (default), the range is animated
	 *                                 smoothly to the new window.
	 *                                 If a number, the number is taken as duration
	 *                                 for the animation. Default duration is 500 ms.
	 */
	Core.prototype.fit = function (options) {
	  var range = this._getDataRange();

	  // skip range set if there is no start and end date
	  if (range.start === null && range.end === null) {
	    return;
	  }

	  var animate = options && options.animate !== undefined ? options.animate : true;
	  this.range.setRange(range.start, range.end, animate);
	};

	/**
	 * Calculate the data range of the items and applies a 5% window around it.
	 * @returns {{start: Date | null, end: Date | null}}
	 * @protected
	 */
	Core.prototype._getDataRange = function () {
	  // apply the data range as range
	  var dataRange = this.getItemRange();

	  // add 5% space on both sides
	  var start = dataRange.min;
	  var end = dataRange.max;
	  if (start != null && end != null) {
	    var interval = end.valueOf() - start.valueOf();
	    if (interval <= 0) {
	      // prevent an empty interval
	      interval = 24 * 60 * 60 * 1000; // 1 day
	    }
	    start = new Date(start.valueOf() - interval * 0.05);
	    end = new Date(end.valueOf() + interval * 0.05);
	  }

	  return {
	    start: start,
	    end: end
	  };
	};

	/**
	 * Set the visible window. Both parameters are optional, you can change only
	 * start or only end. Syntax:
	 *
	 *     TimeLine.setWindow(start, end)
	 *     TimeLine.setWindow(start, end, options)
	 *     TimeLine.setWindow(range)
	 *
	 * Where start and end can be a Date, number, or string, and range is an
	 * object with properties start and end.
	 *
	 * @param {Date | Number | String | Object} [start] Start date of visible window
	 * @param {Date | Number | String} [end]            End date of visible window
	 * @param {Object} [options]  Available options:
	 *                            `animate: boolean | number`
	 *                                 If true (default), the range is animated
	 *                                 smoothly to the new window.
	 *                                 If a number, the number is taken as duration
	 *                                 for the animation. Default duration is 500 ms.
	 */
	Core.prototype.setWindow = function (start, end, options) {
	  var animate;
	  if (arguments.length == 1) {
	    var range = arguments[0];
	    animate = range.animate !== undefined ? range.animate : true;
	    this.range.setRange(range.start, range.end, animate);
	  } else {
	    animate = options && options.animate !== undefined ? options.animate : true;
	    this.range.setRange(start, end, animate);
	  }
	};

	/**
	 * Move the window such that given time is centered on screen.
	 * @param {Date | Number | String} time
	 * @param {Object} [options]  Available options:
	 *                            `animate: boolean | number`
	 *                                 If true (default), the range is animated
	 *                                 smoothly to the new window.
	 *                                 If a number, the number is taken as duration
	 *                                 for the animation. Default duration is 500 ms.
	 */
	Core.prototype.moveTo = function (time, options) {
	  var interval = this.range.end - this.range.start;
	  var t = util.convert(time, 'Date').valueOf();

	  var start = t - interval / 2;
	  var end = t + interval / 2;
	  var animate = options && options.animate !== undefined ? options.animate : true;

	  this.range.setRange(start, end, animate);
	};

	/**
	 * Get the visible window
	 * @return {{start: Date, end: Date}}   Visible range
	 */
	Core.prototype.getWindow = function () {
	  var range = this.range.getRange();
	  return {
	    start: new Date(range.start),
	    end: new Date(range.end)
	  };
	};

	/**
	 * Force a redraw. Can be overridden by implementations of Core
	 */
	Core.prototype.redraw = function () {
	  this._redraw();
	};

	/**
	 * Redraw for internal use. Redraws all components. See also the public
	 * method redraw.
	 * @protected
	 */
	Core.prototype._redraw = function () {
	  var resized = false;
	  var options = this.options;
	  var props = this.props;
	  var dom = this.dom;

	  if (!dom) return; // when destroyed

	  DateUtil.updateHiddenDates(this.body, this.options.hiddenDates);

	  // update class names
	  if (options.orientation == 'top') {
	    util.addClassName(dom.root, 'top');
	    util.removeClassName(dom.root, 'bottom');
	  } else {
	    util.removeClassName(dom.root, 'top');
	    util.addClassName(dom.root, 'bottom');
	  }

	  // update root width and height options
	  dom.root.style.maxHeight = util.option.asSize(options.maxHeight, '');
	  dom.root.style.minHeight = util.option.asSize(options.minHeight, '');
	  dom.root.style.width = util.option.asSize(options.width, '');

	  // calculate border widths
	  props.border.left = (dom.centerContainer.offsetWidth - dom.centerContainer.clientWidth) / 2;
	  props.border.right = props.border.left;
	  props.border.top = (dom.centerContainer.offsetHeight - dom.centerContainer.clientHeight) / 2;
	  props.border.bottom = props.border.top;
	  var borderRootHeight = dom.root.offsetHeight - dom.root.clientHeight;
	  var borderRootWidth = dom.root.offsetWidth - dom.root.clientWidth;

	  // workaround for a bug in IE: the clientWidth of an element with
	  // a height:0px and overflow:hidden is not calculated and always has value 0
	  if (dom.centerContainer.clientHeight === 0) {
	    props.border.left = props.border.top;
	    props.border.right = props.border.left;
	  }
	  if (dom.root.clientHeight === 0) {
	    borderRootWidth = borderRootHeight;
	  }

	  // calculate the heights. If any of the side panels is empty, we set the height to
	  // minus the border width, such that the border will be invisible
	  props.center.height = dom.center.offsetHeight;
	  props.left.height = dom.left.offsetHeight;
	  props.right.height = dom.right.offsetHeight;
	  props.top.height = dom.top.clientHeight || -props.border.top;
	  props.bottom.height = dom.bottom.clientHeight || -props.border.bottom;

	  // TODO: compensate borders when any of the panels is empty.

	  // apply auto height
	  // TODO: only calculate autoHeight when needed (else we cause an extra reflow/repaint of the DOM)
	  var contentHeight = Math.max(props.left.height, props.center.height, props.right.height);
	  var autoHeight = props.top.height + contentHeight + props.bottom.height + borderRootHeight + props.border.top + props.border.bottom;
	  dom.root.style.height = util.option.asSize(options.height, autoHeight + 'px');

	  // calculate heights of the content panels
	  props.root.height = dom.root.offsetHeight;
	  props.background.height = props.root.height - borderRootHeight;
	  var containerHeight = props.root.height - props.top.height - props.bottom.height - borderRootHeight;
	  props.centerContainer.height = containerHeight;
	  props.leftContainer.height = containerHeight;
	  props.rightContainer.height = props.leftContainer.height;

	  // calculate the widths of the panels
	  props.root.width = dom.root.offsetWidth;
	  props.background.width = props.root.width - borderRootWidth;
	  props.left.width = dom.leftContainer.clientWidth || -props.border.left;
	  props.leftContainer.width = props.left.width;
	  props.right.width = dom.rightContainer.clientWidth || -props.border.right;
	  props.rightContainer.width = props.right.width;
	  var centerWidth = props.root.width - props.left.width - props.right.width - borderRootWidth;
	  props.center.width = centerWidth;
	  props.centerContainer.width = centerWidth;
	  props.top.width = centerWidth;
	  props.bottom.width = centerWidth;

	  // resize the panels
	  dom.background.style.height = props.background.height + 'px';
	  dom.backgroundVertical.style.height = props.background.height + 'px';
	  dom.backgroundHorizontal.style.height = props.centerContainer.height + 'px';
	  dom.centerContainer.style.height = props.centerContainer.height + 'px';
	  dom.leftContainer.style.height = props.leftContainer.height + 'px';
	  dom.rightContainer.style.height = props.rightContainer.height + 'px';

	  dom.background.style.width = props.background.width + 'px';
	  dom.backgroundVertical.style.width = props.centerContainer.width + 'px';
	  dom.backgroundHorizontal.style.width = props.background.width + 'px';
	  dom.centerContainer.style.width = props.center.width + 'px';
	  dom.top.style.width = props.top.width + 'px';
	  dom.bottom.style.width = props.bottom.width + 'px';

	  // reposition the panels
	  dom.background.style.left = '0';
	  dom.background.style.top = '0';
	  dom.backgroundVertical.style.left = props.left.width + props.border.left + 'px';
	  dom.backgroundVertical.style.top = '0';
	  dom.backgroundHorizontal.style.left = '0';
	  dom.backgroundHorizontal.style.top = props.top.height + 'px';
	  dom.centerContainer.style.left = props.left.width + 'px';
	  dom.centerContainer.style.top = props.top.height + 'px';
	  dom.leftContainer.style.left = '0';
	  dom.leftContainer.style.top = props.top.height + 'px';
	  dom.rightContainer.style.left = props.left.width + props.center.width + 'px';
	  dom.rightContainer.style.top = props.top.height + 'px';
	  dom.top.style.left = props.left.width + 'px';
	  dom.top.style.top = '0';
	  dom.bottom.style.left = props.left.width + 'px';
	  dom.bottom.style.top = props.top.height + props.centerContainer.height + 'px';

	  // update the scrollTop, feasible range for the offset can be changed
	  // when the height of the Core or of the contents of the center changed
	  this._updateScrollTop();

	  // reposition the scrollable contents
	  var offset = this.props.scrollTop;
	  if (options.orientation == 'bottom') {
	    offset += Math.max(this.props.centerContainer.height - this.props.center.height - this.props.border.top - this.props.border.bottom, 0);
	  }
	  dom.center.style.left = '0';
	  dom.center.style.top = offset + 'px';
	  dom.left.style.left = '0';
	  dom.left.style.top = offset + 'px';
	  dom.right.style.left = '0';
	  dom.right.style.top = offset + 'px';

	  // show shadows when vertical scrolling is available
	  var visibilityTop = this.props.scrollTop == 0 ? 'hidden' : '';
	  var visibilityBottom = this.props.scrollTop == this.props.scrollTopMin ? 'hidden' : '';
	  dom.shadowTop.style.visibility = visibilityTop;
	  dom.shadowBottom.style.visibility = visibilityBottom;
	  dom.shadowTopLeft.style.visibility = visibilityTop;
	  dom.shadowBottomLeft.style.visibility = visibilityBottom;
	  dom.shadowTopRight.style.visibility = visibilityTop;
	  dom.shadowBottomRight.style.visibility = visibilityBottom;

	  // redraw all components
	  this.components.forEach(function (component) {
	    resized = component.redraw() || resized;
	  });
	  if (resized) {
	    // keep repainting until all sizes are settled
	    var MAX_REDRAWS = 3; // maximum number of consecutive redraws
	    if (this.redrawCount < MAX_REDRAWS) {
	      this.redrawCount++;
	      this._redraw();
	    } else {
	      console.log('WARNING: infinite loop in redraw?');
	    }
	    this.redrawCount = 0;
	  }

	  this.emit("finishedRedraw");
	};

	// TODO: deprecated since version 1.1.0, remove some day
	Core.prototype.repaint = function () {
	  throw new Error('Function repaint is deprecated. Use redraw instead.');
	};

	/**
	 * Set a current time. This can be used for example to ensure that a client's
	 * time is synchronized with a shared server time.
	 * Only applicable when option `showCurrentTime` is true.
	 * @param {Date | String | Number} time     A Date, unix timestamp, or
	 *                                          ISO date string.
	 */
	Core.prototype.setCurrentTime = function (time) {
	  if (!this.currentTime) {
	    throw new Error('Option showCurrentTime must be true');
	  }

	  this.currentTime.setCurrentTime(time);
	};

	/**
	 * Get the current time.
	 * Only applicable when option `showCurrentTime` is true.
	 * @return {Date} Returns the current time.
	 */
	Core.prototype.getCurrentTime = function () {
	  if (!this.currentTime) {
	    throw new Error('Option showCurrentTime must be true');
	  }

	  return this.currentTime.getCurrentTime();
	};

	/**
	 * Convert a position on screen (pixels) to a datetime
	 * @param {int}     x    Position on the screen in pixels
	 * @return {Date}   time The datetime the corresponds with given position x
	 * @protected
	 */
	// TODO: move this function to Range
	Core.prototype._toTime = function (x) {
	  return DateUtil.toTime(this, x, this.props.center.width);
	};

	/**
	 * Convert a position on the global screen (pixels) to a datetime
	 * @param {int}     x    Position on the screen in pixels
	 * @return {Date}   time The datetime the corresponds with given position x
	 * @protected
	 */
	// TODO: move this function to Range
	Core.prototype._toGlobalTime = function (x) {
	  return DateUtil.toTime(this, x, this.props.root.width);
	  //var conversion = this.range.conversion(this.props.root.width);
	  //return new Date(x / conversion.scale + conversion.offset);
	};

	/**
	 * Convert a datetime (Date object) into a position on the screen
	 * @param {Date}   time A date
	 * @return {int}   x    The position on the screen in pixels which corresponds
	 *                      with the given date.
	 * @protected
	 */
	// TODO: move this function to Range
	Core.prototype._toScreen = function (time) {
	  return DateUtil.toScreen(this, time, this.props.center.width);
	};

	/**
	 * Convert a datetime (Date object) into a position on the root
	 * This is used to get the pixel density estimate for the screen, not the center panel
	 * @param {Date}   time A date
	 * @return {int}   x    The position on root in pixels which corresponds
	 *                      with the given date.
	 * @protected
	 */
	// TODO: move this function to Range
	Core.prototype._toGlobalScreen = function (time) {
	  return DateUtil.toScreen(this, time, this.props.root.width);
	  //var conversion = this.range.conversion(this.props.root.width);
	  //return (time.valueOf() - conversion.offset) * conversion.scale;
	};

	/**
	 * Initialize watching when option autoResize is true
	 * @private
	 */
	Core.prototype._initAutoResize = function () {
	  if (this.options.autoResize == true) {
	    this._startAutoResize();
	  } else {
	    this._stopAutoResize();
	  }
	};

	/**
	 * Watch for changes in the size of the container. On resize, the Panel will
	 * automatically redraw itself.
	 * @private
	 */
	Core.prototype._startAutoResize = function () {
	  var me = this;

	  this._stopAutoResize();

	  this._onResize = function () {
	    if (me.options.autoResize != true) {
	      // stop watching when the option autoResize is changed to false
	      me._stopAutoResize();
	      return;
	    }

	    if (me.dom.root) {
	      // check whether the frame is resized
	      // Note: we compare offsetWidth here, not clientWidth. For some reason,
	      // IE does not restore the clientWidth from 0 to the actual width after
	      // changing the timeline's container display style from none to visible
	      if (me.dom.root.offsetWidth != me.props.lastWidth || me.dom.root.offsetHeight != me.props.lastHeight) {
	        me.props.lastWidth = me.dom.root.offsetWidth;
	        me.props.lastHeight = me.dom.root.offsetHeight;

	        me.emit('change');
	      }
	    }
	  };

	  // add event listener to window resize
	  util.addEventListener(window, 'resize', this._onResize);

	  this.watchTimer = setInterval(this._onResize, 1000);
	};

	/**
	 * Stop watching for a resize of the frame.
	 * @private
	 */
	Core.prototype._stopAutoResize = function () {
	  if (this.watchTimer) {
	    clearInterval(this.watchTimer);
	    this.watchTimer = undefined;
	  }

	  // remove event listener on window.resize
	  util.removeEventListener(window, 'resize', this._onResize);
	  this._onResize = null;
	};

	/**
	 * Start moving the timeline vertically
	 * @param {Event} event
	 * @private
	 */
	Core.prototype._onTouch = function (event) {
	  this.touch.allowDragging = true;
	};

	/**
	 * Start moving the timeline vertically
	 * @param {Event} event
	 * @private
	 */
	Core.prototype._onPinch = function (event) {
	  this.touch.allowDragging = false;
	};

	/**
	 * Start moving the timeline vertically
	 * @param {Event} event
	 * @private
	 */
	Core.prototype._onDragStart = function (event) {
	  this.touch.initialScrollTop = this.props.scrollTop;
	};

	/**
	 * Move the timeline vertically
	 * @param {Event} event
	 * @private
	 */
	Core.prototype._onDrag = function (event) {
	  // refuse to drag when we where pinching to prevent the timeline make a jump
	  // when releasing the fingers in opposite order from the touch screen
	  if (!this.touch.allowDragging) return;

	  var delta = event.gesture.deltaY;

	  var oldScrollTop = this._getScrollTop();
	  var newScrollTop = this._setScrollTop(this.touch.initialScrollTop + delta);

	  if (newScrollTop != oldScrollTop) {
	    this._redraw(); // TODO: this causes two redraws when dragging, the other is triggered by rangechange already
	    this.emit("verticalDrag");
	  }
	};

	/**
	 * Apply a scrollTop
	 * @param {Number} scrollTop
	 * @returns {Number} scrollTop  Returns the applied scrollTop
	 * @private
	 */
	Core.prototype._setScrollTop = function (scrollTop) {
	  this.props.scrollTop = scrollTop;
	  this._updateScrollTop();
	  return this.props.scrollTop;
	};

	/**
	 * Update the current scrollTop when the height of  the containers has been changed
	 * @returns {Number} scrollTop  Returns the applied scrollTop
	 * @private
	 */
	Core.prototype._updateScrollTop = function () {
	  // recalculate the scrollTopMin
	  var scrollTopMin = Math.min(this.props.centerContainer.height - this.props.center.height, 0); // is negative or zero
	  if (scrollTopMin != this.props.scrollTopMin) {
	    // in case of bottom orientation, change the scrollTop such that the contents
	    // do not move relative to the time axis at the bottom
	    if (this.options.orientation == 'bottom') {
	      this.props.scrollTop += scrollTopMin - this.props.scrollTopMin;
	    }
	    this.props.scrollTopMin = scrollTopMin;
	  }

	  // limit the scrollTop to the feasible scroll range
	  if (this.props.scrollTop > 0) this.props.scrollTop = 0;
	  if (this.props.scrollTop < scrollTopMin) this.props.scrollTop = scrollTopMin;

	  return this.props.scrollTop;
	};

	/**
	 * Get the current scrollTop
	 * @returns {number} scrollTop
	 * @private
	 */
	Core.prototype._getScrollTop = function () {
	  return this.props.scrollTop;
	};

	module.exports = Core;

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var Hammer = __webpack_require__(297);
	var util = __webpack_require__(175);
	var DataSet = __webpack_require__(285);
	var DataView = __webpack_require__(287);
	var TimeStep = __webpack_require__(305);
	var Component = __webpack_require__(301);
	var Group = __webpack_require__(306);
	var BackgroundGroup = __webpack_require__(310);
	var BoxItem = __webpack_require__(311);
	var PointItem = __webpack_require__(312);
	var RangeItem = __webpack_require__(308);
	var BackgroundItem = __webpack_require__(313);

	var UNGROUPED = '__ungrouped__'; // reserved group id for ungrouped items
	var BACKGROUND = '__background__'; // reserved group id for background items without group

	/**
	 * An ItemSet holds a set of items and ranges which can be displayed in a
	 * range. The width is determined by the parent of the ItemSet, and the height
	 * is determined by the size of the items.
	 * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} body
	 * @param {Object} [options]      See ItemSet.setOptions for the available options.
	 * @constructor ItemSet
	 * @extends Component
	 */
	function ItemSet(body, options) {
	  this.body = body;

	  this.defaultOptions = {
	    type: null, // 'box', 'point', 'range', 'background'
	    orientation: 'bottom', // item orientation: 'top' or 'bottom'
	    align: 'auto', // alignment of box items
	    stack: true,
	    groupOrder: null,

	    selectable: true,
	    editable: {
	      updateTime: false,
	      updateGroup: false,
	      add: false,
	      remove: false
	    },

	    snap: TimeStep.snap,

	    onAdd: function onAdd(item, callback) {
	      callback(item);
	    },
	    onUpdate: function onUpdate(item, callback) {
	      callback(item);
	    },
	    onMove: function onMove(item, callback) {
	      callback(item);
	    },
	    onRemove: function onRemove(item, callback) {
	      callback(item);
	    },
	    onMoving: function onMoving(item, callback) {
	      callback(item);
	    },

	    margin: {
	      item: {
	        horizontal: 10,
	        vertical: 10
	      },
	      axis: 20
	    },
	    padding: 5
	  };

	  // options is shared by this ItemSet and all its items
	  this.options = util.extend({}, this.defaultOptions);

	  // options for getting items from the DataSet with the correct type
	  this.itemOptions = {
	    type: { start: 'Date', end: 'Date' }
	  };

	  this.conversion = {
	    toScreen: body.util.toScreen,
	    toTime: body.util.toTime
	  };
	  this.dom = {};
	  this.props = {};
	  this.hammer = null;

	  var me = this;
	  this.itemsData = null; // DataSet
	  this.groupsData = null; // DataSet

	  // listeners for the DataSet of the items
	  this.itemListeners = {
	    'add': function add(event, params, senderId) {
	      me._onAdd(params.items);
	    },
	    'update': function update(event, params, senderId) {
	      me._onUpdate(params.items);
	    },
	    'remove': function remove(event, params, senderId) {
	      me._onRemove(params.items);
	    }
	  };

	  // listeners for the DataSet of the groups
	  this.groupListeners = {
	    'add': function add(event, params, senderId) {
	      me._onAddGroups(params.items);
	    },
	    'update': function update(event, params, senderId) {
	      me._onUpdateGroups(params.items);
	    },
	    'remove': function remove(event, params, senderId) {
	      me._onRemoveGroups(params.items);
	    }
	  };

	  this.items = {}; // object with an Item for every data item
	  this.groups = {}; // Group object for every group
	  this.groupIds = [];

	  this.selection = []; // list with the ids of all selected nodes
	  this.stackDirty = true; // if true, all items will be restacked on next redraw

	  this.touchParams = {}; // stores properties while dragging
	  // create the HTML DOM

	  this._create();

	  this.setOptions(options);
	}

	ItemSet.prototype = new Component();

	// available item types will be registered here
	ItemSet.types = {
	  background: BackgroundItem,
	  box: BoxItem,
	  range: RangeItem,
	  point: PointItem
	};

	/**
	 * Create the HTML DOM for the ItemSet
	 */
	ItemSet.prototype._create = function () {
	  var frame = document.createElement('div');
	  frame.className = 'itemset';
	  frame['timeline-itemset'] = this;
	  this.dom.frame = frame;

	  // create background panel
	  var background = document.createElement('div');
	  background.className = 'background';
	  frame.appendChild(background);
	  this.dom.background = background;

	  // create foreground panel
	  var foreground = document.createElement('div');
	  foreground.className = 'foreground';
	  frame.appendChild(foreground);
	  this.dom.foreground = foreground;

	  // create axis panel
	  var axis = document.createElement('div');
	  axis.className = 'axis';
	  this.dom.axis = axis;

	  // create labelset
	  var labelSet = document.createElement('div');
	  labelSet.className = 'labelset';
	  this.dom.labelSet = labelSet;

	  // create ungrouped Group
	  this._updateUngrouped();

	  // create background Group
	  var backgroundGroup = new BackgroundGroup(BACKGROUND, null, this);
	  backgroundGroup.show();
	  this.groups[BACKGROUND] = backgroundGroup;

	  // attach event listeners
	  // Note: we bind to the centerContainer for the case where the height
	  //       of the center container is larger than of the ItemSet, so we
	  //       can click in the empty area to create a new item or deselect an item.
	  this.hammer = Hammer(this.body.dom.centerContainer, {
	    preventDefault: true
	  });

	  // drag items when selected
	  this.hammer.on('touch', this._onTouch.bind(this));
	  this.hammer.on('dragstart', this._onDragStart.bind(this));
	  this.hammer.on('drag', this._onDrag.bind(this));
	  this.hammer.on('dragend', this._onDragEnd.bind(this));

	  // single select (or unselect) when tapping an item
	  this.hammer.on('tap', this._onSelectItem.bind(this));

	  // multi select when holding mouse/touch, or on ctrl+click
	  this.hammer.on('hold', this._onMultiSelectItem.bind(this));

	  // add item on doubletap
	  this.hammer.on('doubletap', this._onAddItem.bind(this));

	  // attach to the DOM
	  this.show();
	};

	/**
	 * Set options for the ItemSet. Existing options will be extended/overwritten.
	 * @param {Object} [options] The following options are available:
	 *                           {String} type
	 *                              Default type for the items. Choose from 'box'
	 *                              (default), 'point', 'range', or 'background'.
	 *                              The default style can be overwritten by
	 *                              individual items.
	 *                           {String} align
	 *                              Alignment for the items, only applicable for
	 *                              BoxItem. Choose 'center' (default), 'left', or
	 *                              'right'.
	 *                           {String} orientation
	 *                              Orientation of the item set. Choose 'top' or
	 *                              'bottom' (default).
	 *                           {Function} groupOrder
	 *                              A sorting function for ordering groups
	 *                           {Boolean} stack
	 *                              If true (deafult), items will be stacked on
	 *                              top of each other.
	 *                           {Number} margin.axis
	 *                              Margin between the axis and the items in pixels.
	 *                              Default is 20.
	 *                           {Number} margin.item.horizontal
	 *                              Horizontal margin between items in pixels.
	 *                              Default is 10.
	 *                           {Number} margin.item.vertical
	 *                              Vertical Margin between items in pixels.
	 *                              Default is 10.
	 *                           {Number} margin.item
	 *                              Margin between items in pixels in both horizontal
	 *                              and vertical direction. Default is 10.
	 *                           {Number} margin
	 *                              Set margin for both axis and items in pixels.
	 *                           {Number} padding
	 *                              Padding of the contents of an item in pixels.
	 *                              Must correspond with the items css. Default is 5.
	 *                           {Boolean} selectable
	 *                              If true (default), items can be selected.
	 *                           {Boolean} editable
	 *                              Set all editable options to true or false
	 *                           {Boolean} editable.updateTime
	 *                              Allow dragging an item to an other moment in time
	 *                           {Boolean} editable.updateGroup
	 *                              Allow dragging an item to an other group
	 *                           {Boolean} editable.add
	 *                              Allow creating new items on double tap
	 *                           {Boolean} editable.remove
	 *                              Allow removing items by clicking the delete button
	 *                              top right of a selected item.
	 *                           {Function(item: Item, callback: Function)} onAdd
	 *                              Callback function triggered when an item is about to be added:
	 *                              when the user double taps an empty space in the Timeline.
	 *                           {Function(item: Item, callback: Function)} onUpdate
	 *                              Callback function fired when an item is about to be updated.
	 *                              This function typically has to show a dialog where the user
	 *                              change the item. If not implemented, nothing happens.
	 *                           {Function(item: Item, callback: Function)} onMove
	 *                              Fired when an item has been moved. If not implemented,
	 *                              the move action will be accepted.
	 *                           {Function(item: Item, callback: Function)} onRemove
	 *                              Fired when an item is about to be deleted.
	 *                              If not implemented, the item will be always removed.
	 */
	ItemSet.prototype.setOptions = function (options) {
	  if (options) {
	    // copy all options that we know
	    var fields = ['type', 'align', 'order', 'padding', 'stack', 'selectable', 'groupOrder', 'dataAttributes', 'template', 'hide', 'snap'];
	    util.selectiveExtend(fields, this.options, options);

	    if ('orientation' in options) {
	      if (typeof options.orientation === 'string') {
	        this.options.orientation = options.orientation;
	      } else if (_typeof(options.orientation) === 'object' && 'item' in options.orientation) {
	        this.options.orientation = options.orientation.item;
	      }
	    }

	    if ('margin' in options) {
	      if (typeof options.margin === 'number') {
	        this.options.margin.axis = options.margin;
	        this.options.margin.item.horizontal = options.margin;
	        this.options.margin.item.vertical = options.margin;
	      } else if (_typeof(options.margin) === 'object') {
	        util.selectiveExtend(['axis'], this.options.margin, options.margin);
	        if ('item' in options.margin) {
	          if (typeof options.margin.item === 'number') {
	            this.options.margin.item.horizontal = options.margin.item;
	            this.options.margin.item.vertical = options.margin.item;
	          } else if (_typeof(options.margin.item) === 'object') {
	            util.selectiveExtend(['horizontal', 'vertical'], this.options.margin.item, options.margin.item);
	          }
	        }
	      }
	    }

	    if ('editable' in options) {
	      if (typeof options.editable === 'boolean') {
	        this.options.editable.updateTime = options.editable;
	        this.options.editable.updateGroup = options.editable;
	        this.options.editable.add = options.editable;
	        this.options.editable.remove = options.editable;
	      } else if (_typeof(options.editable) === 'object') {
	        util.selectiveExtend(['updateTime', 'updateGroup', 'add', 'remove'], this.options.editable, options.editable);
	      }
	    }

	    // callback functions
	    var addCallback = function (name) {
	      var fn = options[name];
	      if (fn) {
	        if (!(fn instanceof Function)) {
	          throw new Error('option ' + name + ' must be a function ' + name + '(item, callback)');
	        }
	        this.options[name] = fn;
	      }
	    }.bind(this);
	    ['onAdd', 'onUpdate', 'onRemove', 'onMove', 'onMoving'].forEach(addCallback);

	    // force the itemSet to refresh: options like orientation and margins may be changed
	    this.markDirty();
	  }
	};

	/**
	 * Mark the ItemSet dirty so it will refresh everything with next redraw.
	 * Optionally, all items can be marked as dirty and be refreshed.
	 * @param {{refreshItems: boolean}} [options]
	 */
	ItemSet.prototype.markDirty = function (options) {
	  this.groupIds = [];
	  this.stackDirty = true;

	  if (options && options.refreshItems) {
	    util.forEach(this.items, function (item) {
	      item.dirty = true;
	      if (item.displayed) item.redraw();
	    });
	  }
	};

	/**
	 * Destroy the ItemSet
	 */
	ItemSet.prototype.destroy = function () {
	  this.hide();
	  this.setItems(null);
	  this.setGroups(null);

	  this.hammer = null;

	  this.body = null;
	  this.conversion = null;
	};

	/**
	 * Hide the component from the DOM
	 */
	ItemSet.prototype.hide = function () {
	  // remove the frame containing the items
	  if (this.dom.frame.parentNode) {
	    this.dom.frame.parentNode.removeChild(this.dom.frame);
	  }

	  // remove the axis with dots
	  if (this.dom.axis.parentNode) {
	    this.dom.axis.parentNode.removeChild(this.dom.axis);
	  }

	  // remove the labelset containing all group labels
	  if (this.dom.labelSet.parentNode) {
	    this.dom.labelSet.parentNode.removeChild(this.dom.labelSet);
	  }
	};

	/**
	 * Show the component in the DOM (when not already visible).
	 * @return {Boolean} changed
	 */
	ItemSet.prototype.show = function () {
	  // show frame containing the items
	  if (!this.dom.frame.parentNode) {
	    this.body.dom.center.appendChild(this.dom.frame);
	  }

	  // show axis with dots
	  if (!this.dom.axis.parentNode) {
	    this.body.dom.backgroundVertical.appendChild(this.dom.axis);
	  }

	  // show labelset containing labels
	  if (!this.dom.labelSet.parentNode) {
	    this.body.dom.left.appendChild(this.dom.labelSet);
	  }
	};

	/**
	 * Set selected items by their id. Replaces the current selection
	 * Unknown id's are silently ignored.
	 * @param {string[] | string} [ids] An array with zero or more id's of the items to be
	 *                                  selected, or a single item id. If ids is undefined
	 *                                  or an empty array, all items will be unselected.
	 */
	ItemSet.prototype.setSelection = function (ids) {
	  var i, ii, id, item;

	  if (ids == undefined) ids = [];
	  if (!Array.isArray(ids)) ids = [ids];

	  // unselect currently selected items
	  for (i = 0, ii = this.selection.length; i < ii; i++) {
	    id = this.selection[i];
	    item = this.items[id];
	    if (item) item.unselect();
	  }

	  // select items
	  this.selection = [];
	  for (i = 0, ii = ids.length; i < ii; i++) {
	    id = ids[i];
	    item = this.items[id];
	    if (item) {
	      this.selection.push(id);
	      item.select();
	    }
	  }
	};

	/**
	 * Get the selected items by their id
	 * @return {Array} ids  The ids of the selected items
	 */
	ItemSet.prototype.getSelection = function () {
	  return this.selection.concat([]);
	};

	/**
	 * Get the id's of the currently visible items.
	 * @returns {Array} The ids of the visible items
	 */
	ItemSet.prototype.getVisibleItems = function () {
	  var range = this.body.range.getRange();
	  var left = this.body.util.toScreen(range.start);
	  var right = this.body.util.toScreen(range.end);

	  var ids = [];
	  for (var groupId in this.groups) {
	    if (this.groups.hasOwnProperty(groupId)) {
	      var group = this.groups[groupId];
	      var rawVisibleItems = group.visibleItems;

	      // filter the "raw" set with visibleItems into a set which is really
	      // visible by pixels
	      for (var i = 0; i < rawVisibleItems.length; i++) {
	        var item = rawVisibleItems[i];
	        // TODO: also check whether visible vertically
	        if (item.left < right && item.left + item.width > left) {
	          ids.push(item.id);
	        }
	      }
	    }
	  }

	  return ids;
	};

	/**
	 * Deselect a selected item
	 * @param {String | Number} id
	 * @private
	 */
	ItemSet.prototype._deselect = function (id) {
	  var selection = this.selection;
	  for (var i = 0, ii = selection.length; i < ii; i++) {
	    if (selection[i] == id) {
	      // non-strict comparison!
	      selection.splice(i, 1);
	      break;
	    }
	  }
	};

	/**
	 * Repaint the component
	 * @return {boolean} Returns true if the component is resized
	 */
	ItemSet.prototype.redraw = function () {
	  var margin = this.options.margin,
	      range = this.body.range,
	      asSize = util.option.asSize,
	      options = this.options,
	      orientation = options.orientation,
	      resized = false,
	      frame = this.dom.frame,
	      editable = options.editable.updateTime || options.editable.updateGroup;

	  // recalculate absolute position (before redrawing groups)
	  this.props.top = this.body.domProps.top.height + this.body.domProps.border.top;
	  this.props.left = this.body.domProps.left.width + this.body.domProps.border.left;

	  // update class name
	  frame.className = 'itemset' + (editable ? ' editable' : '');

	  // reorder the groups (if needed)
	  resized = this._orderGroups() || resized;

	  // check whether zoomed (in that case we need to re-stack everything)
	  // TODO: would be nicer to get this as a trigger from Range
	  var visibleInterval = range.end - range.start;
	  var zoomed = visibleInterval != this.lastVisibleInterval || this.props.width != this.props.lastWidth;
	  if (zoomed) this.stackDirty = true;
	  this.lastVisibleInterval = visibleInterval;
	  this.props.lastWidth = this.props.width;

	  var restack = this.stackDirty;
	  var firstGroup = this._firstGroup();
	  var firstMargin = {
	    item: margin.item,
	    axis: margin.axis
	  };
	  var nonFirstMargin = {
	    item: margin.item,
	    axis: margin.item.vertical / 2
	  };
	  var height = 0;
	  var minHeight = margin.axis + margin.item.vertical;

	  // redraw the background group
	  this.groups[BACKGROUND].redraw(range, nonFirstMargin, restack);

	  // redraw all regular groups
	  util.forEach(this.groups, function (group) {
	    var groupMargin = group == firstGroup ? firstMargin : nonFirstMargin;
	    var groupResized = group.redraw(range, groupMargin, restack);
	    resized = groupResized || resized;
	    height += group.height;
	  });
	  height = Math.max(height, minHeight);
	  this.stackDirty = false;

	  // update frame height
	  frame.style.height = asSize(height);

	  // calculate actual size
	  this.props.width = frame.offsetWidth;
	  this.props.height = height;

	  // reposition axis
	  this.dom.axis.style.top = asSize(orientation == 'top' ? this.body.domProps.top.height + this.body.domProps.border.top : this.body.domProps.top.height + this.body.domProps.centerContainer.height);
	  this.dom.axis.style.left = '0';

	  // check if this component is resized
	  resized = this._isResized() || resized;

	  return resized;
	};

	/**
	 * Get the first group, aligned with the axis
	 * @return {Group | null} firstGroup
	 * @private
	 */
	ItemSet.prototype._firstGroup = function () {
	  var firstGroupIndex = this.options.orientation == 'top' ? 0 : this.groupIds.length - 1;
	  var firstGroupId = this.groupIds[firstGroupIndex];
	  var firstGroup = this.groups[firstGroupId] || this.groups[UNGROUPED];

	  return firstGroup || null;
	};

	/**
	 * Create or delete the group holding all ungrouped items. This group is used when
	 * there are no groups specified.
	 * @protected
	 */
	ItemSet.prototype._updateUngrouped = function () {
	  var ungrouped = this.groups[UNGROUPED];
	  var background = this.groups[BACKGROUND];
	  var item, itemId;

	  if (this.groupsData) {
	    // remove the group holding all ungrouped items
	    if (ungrouped) {
	      ungrouped.hide();
	      delete this.groups[UNGROUPED];

	      for (itemId in this.items) {
	        if (this.items.hasOwnProperty(itemId)) {
	          item = this.items[itemId];
	          item.parent && item.parent.remove(item);
	          var groupId = this._getGroupId(item.data);
	          var group = this.groups[groupId];
	          group && group.add(item) || item.hide();
	        }
	      }
	    }
	  } else {
	    // create a group holding all (unfiltered) items
	    if (!ungrouped) {
	      var id = null;
	      var data = null;
	      ungrouped = new Group(id, data, this);
	      this.groups[UNGROUPED] = ungrouped;

	      for (itemId in this.items) {
	        if (this.items.hasOwnProperty(itemId)) {
	          item = this.items[itemId];
	          ungrouped.add(item);
	        }
	      }

	      ungrouped.show();
	    }
	  }
	};

	/**
	 * Get the element for the labelset
	 * @return {HTMLElement} labelSet
	 */
	ItemSet.prototype.getLabelSet = function () {
	  return this.dom.labelSet;
	};

	/**
	 * Set items
	 * @param {vis.DataSet | null} items
	 */
	ItemSet.prototype.setItems = function (items) {
	  var me = this,
	      ids,
	      oldItemsData = this.itemsData;

	  // replace the dataset
	  if (!items) {
	    this.itemsData = null;
	  } else if (items instanceof DataSet || items instanceof DataView) {
	    this.itemsData = items;
	  } else {
	    throw new TypeError('Data must be an instance of DataSet or DataView');
	  }

	  if (oldItemsData) {
	    // unsubscribe from old dataset
	    util.forEach(this.itemListeners, function (callback, event) {
	      oldItemsData.off(event, callback);
	    });

	    // remove all drawn items
	    ids = oldItemsData.getIds();
	    this._onRemove(ids);
	  }

	  if (this.itemsData) {
	    // subscribe to new dataset
	    var id = this.id;
	    util.forEach(this.itemListeners, function (callback, event) {
	      me.itemsData.on(event, callback, id);
	    });

	    // add all new items
	    ids = this.itemsData.getIds();
	    this._onAdd(ids);

	    // update the group holding all ungrouped items
	    this._updateUngrouped();
	  }
	};

	/**
	 * Get the current items
	 * @returns {vis.DataSet | null}
	 */
	ItemSet.prototype.getItems = function () {
	  return this.itemsData;
	};

	/**
	 * Set groups
	 * @param {vis.DataSet} groups
	 */
	ItemSet.prototype.setGroups = function (groups) {
	  var me = this,
	      ids;

	  // unsubscribe from current dataset
	  if (this.groupsData) {
	    util.forEach(this.groupListeners, function (callback, event) {
	      me.groupsData.unsubscribe(event, callback);
	    });

	    // remove all drawn groups
	    ids = this.groupsData.getIds();
	    this.groupsData = null;
	    this._onRemoveGroups(ids); // note: this will cause a redraw
	  }

	  // replace the dataset
	  if (!groups) {
	    this.groupsData = null;
	  } else if (groups instanceof DataSet || groups instanceof DataView) {
	    this.groupsData = groups;
	  } else {
	    throw new TypeError('Data must be an instance of DataSet or DataView');
	  }

	  if (this.groupsData) {
	    // subscribe to new dataset
	    var id = this.id;
	    util.forEach(this.groupListeners, function (callback, event) {
	      me.groupsData.on(event, callback, id);
	    });

	    // draw all ms
	    ids = this.groupsData.getIds();
	    this._onAddGroups(ids);
	  }

	  // update the group holding all ungrouped items
	  this._updateUngrouped();

	  // update the order of all items in each group
	  this._order();

	  this.body.emitter.emit('change', { queue: true });
	};

	/**
	 * Get the current groups
	 * @returns {vis.DataSet | null} groups
	 */
	ItemSet.prototype.getGroups = function () {
	  return this.groupsData;
	};

	/**
	 * Remove an item by its id
	 * @param {String | Number} id
	 */
	ItemSet.prototype.removeItem = function (id) {
	  var item = this.itemsData.get(id),
	      dataset = this.itemsData.getDataSet();

	  if (item) {
	    // confirm deletion
	    this.options.onRemove(item, function (item) {
	      if (item) {
	        // remove by id here, it is possible that an item has no id defined
	        // itself, so better not delete by the item itself
	        dataset.remove(id);
	      }
	    });
	  }
	};

	/**
	 * Get the time of an item based on it's data and options.type
	 * @param {Object} itemData
	 * @returns {string} Returns the type
	 * @private
	 */
	ItemSet.prototype._getType = function (itemData) {
	  return itemData.type || this.options.type || (itemData.end ? 'range' : 'box');
	};

	/**
	 * Get the group id for an item
	 * @param {Object} itemData
	 * @returns {string} Returns the groupId
	 * @private
	 */
	ItemSet.prototype._getGroupId = function (itemData) {
	  var type = this._getType(itemData);
	  if (type == 'background' && itemData.group == undefined) {
	    return BACKGROUND;
	  } else {
	    return this.groupsData ? itemData.group : UNGROUPED;
	  }
	};

	/**
	 * Handle updated items
	 * @param {Number[]} ids
	 * @protected
	 */
	ItemSet.prototype._onUpdate = function (ids) {
	  var me = this;

	  ids.forEach(function (id) {
	    var itemData = me.itemsData.get(id, me.itemOptions);
	    var item = me.items[id];
	    var type = me._getType(itemData);

	    var constructor = ItemSet.types[type];

	    if (item) {
	      // update item
	      if (!constructor || !(item instanceof constructor)) {
	        // item type has changed, delete the item and recreate it
	        me._removeItem(item);
	        item = null;
	      } else {
	        me._updateItem(item, itemData);
	      }
	    }

	    if (!item) {
	      // create item
	      if (constructor) {
	        item = new constructor(itemData, me.conversion, me.options);
	        item.id = id; // TODO: not so nice setting id afterwards
	        me._addItem(item);
	      } else if (type == 'rangeoverflow') {
	        // TODO: deprecated since version 2.1.0 (or 3.0.0?). cleanup some day
	        throw new TypeError('Item type "rangeoverflow" is deprecated. Use css styling instead: ' + '.vis.timeline .item.range .content {overflow: visible;}');
	      } else {
	        throw new TypeError('Unknown item type "' + type + '"');
	      }
	    }
	  });

	  this._order();
	  this.stackDirty = true; // force re-stacking of all items next redraw
	  this.body.emitter.emit('change', { queue: true });
	};

	/**
	 * Handle added items
	 * @param {Number[]} ids
	 * @protected
	 */
	ItemSet.prototype._onAdd = ItemSet.prototype._onUpdate;

	/**
	 * Handle removed items
	 * @param {Number[]} ids
	 * @protected
	 */
	ItemSet.prototype._onRemove = function (ids) {
	  var count = 0;
	  var me = this;
	  ids.forEach(function (id) {
	    var item = me.items[id];
	    if (item) {
	      count++;
	      me._removeItem(item);
	    }
	  });

	  if (count) {
	    // update order
	    this._order();
	    this.stackDirty = true; // force re-stacking of all items next redraw
	    this.body.emitter.emit('change', { queue: true });
	  }
	};

	/**
	 * Update the order of item in all groups
	 * @private
	 */
	ItemSet.prototype._order = function () {
	  // reorder the items in all groups
	  // TODO: optimization: only reorder groups affected by the changed items
	  util.forEach(this.groups, function (group) {
	    group.order();
	  });
	};

	/**
	 * Handle updated groups
	 * @param {Number[]} ids
	 * @private
	 */
	ItemSet.prototype._onUpdateGroups = function (ids) {
	  this._onAddGroups(ids);
	};

	/**
	 * Handle changed groups (added or updated)
	 * @param {Number[]} ids
	 * @private
	 */
	ItemSet.prototype._onAddGroups = function (ids) {
	  var me = this;

	  ids.forEach(function (id) {
	    var groupData = me.groupsData.get(id);
	    var group = me.groups[id];

	    if (!group) {
	      // check for reserved ids
	      if (id == UNGROUPED || id == BACKGROUND) {
	        throw new Error('Illegal group id. ' + id + ' is a reserved id.');
	      }

	      var groupOptions = Object.create(me.options);
	      util.extend(groupOptions, {
	        height: null
	      });

	      group = new Group(id, groupData, me);
	      me.groups[id] = group;

	      // add items with this groupId to the new group
	      for (var itemId in me.items) {
	        if (me.items.hasOwnProperty(itemId)) {
	          var item = me.items[itemId];
	          if (item.data.group == id) {
	            group.add(item);
	          }
	        }
	      }

	      group.order();
	      group.show();
	    } else {
	      // update group
	      group.setData(groupData);
	    }
	  });

	  this.body.emitter.emit('change', { queue: true });
	};

	/**
	 * Handle removed groups
	 * @param {Number[]} ids
	 * @private
	 */
	ItemSet.prototype._onRemoveGroups = function (ids) {
	  var groups = this.groups;
	  ids.forEach(function (id) {
	    var group = groups[id];

	    if (group) {
	      group.hide();
	      delete groups[id];
	    }
	  });

	  this.markDirty();

	  this.body.emitter.emit('change', { queue: true });
	};

	/**
	 * Reorder the groups if needed
	 * @return {boolean} changed
	 * @private
	 */
	ItemSet.prototype._orderGroups = function () {
	  if (this.groupsData) {
	    // reorder the groups
	    var groupIds = this.groupsData.getIds({
	      order: this.options.groupOrder
	    });

	    var changed = !util.equalArray(groupIds, this.groupIds);
	    if (changed) {
	      // hide all groups, removes them from the DOM
	      var groups = this.groups;
	      groupIds.forEach(function (groupId) {
	        groups[groupId].hide();
	      });

	      // show the groups again, attach them to the DOM in correct order
	      groupIds.forEach(function (groupId) {
	        groups[groupId].show();
	      });

	      this.groupIds = groupIds;
	    }

	    return changed;
	  } else {
	    return false;
	  }
	};

	/**
	 * Add a new item
	 * @param {Item} item
	 * @private
	 */
	ItemSet.prototype._addItem = function (item) {
	  this.items[item.id] = item;

	  // add to group
	  var groupId = this._getGroupId(item.data);
	  var group = this.groups[groupId];
	  if (group) group.add(item);
	};

	/**
	 * Update an existing item
	 * @param {Item} item
	 * @param {Object} itemData
	 * @private
	 */
	ItemSet.prototype._updateItem = function (item, itemData) {
	  var oldGroupId = item.data.group;

	  // update the items data (will redraw the item when displayed)
	  item.setData(itemData);

	  // update group
	  if (oldGroupId != item.data.group) {
	    var oldGroup = this.groups[oldGroupId];
	    if (oldGroup) oldGroup.remove(item);

	    var groupId = this._getGroupId(item.data);
	    var group = this.groups[groupId];
	    if (group) group.add(item);
	  }
	};

	/**
	 * Delete an item from the ItemSet: remove it from the DOM, from the map
	 * with items, and from the map with visible items, and from the selection
	 * @param {Item} item
	 * @private
	 */
	ItemSet.prototype._removeItem = function (item) {
	  // remove from DOM
	  item.hide();

	  // remove from items
	  delete this.items[item.id];

	  // remove from selection
	  var index = this.selection.indexOf(item.id);
	  if (index != -1) this.selection.splice(index, 1);

	  // remove from group
	  item.parent && item.parent.remove(item);
	};

	/**
	 * Create an array containing all items being a range (having an end date)
	 * @param array
	 * @returns {Array}
	 * @private
	 */
	ItemSet.prototype._constructByEndArray = function (array) {
	  var endArray = [];

	  for (var i = 0; i < array.length; i++) {
	    if (array[i] instanceof RangeItem) {
	      endArray.push(array[i]);
	    }
	  }
	  return endArray;
	};

	/**
	 * Register the clicked item on touch, before dragStart is initiated.
	 *
	 * dragStart is initiated from a mousemove event, which can have left the item
	 * already resulting in an item == null
	 *
	 * @param {Event} event
	 * @private
	 */
	ItemSet.prototype._onTouch = function (event) {
	  // store the touched item, used in _onDragStart
	  this.touchParams.item = this.itemFromTarget(event);
	};

	/**
	 * Start dragging the selected events
	 * @param {Event} event
	 * @private
	 */
	ItemSet.prototype._onDragStart = function (event) {
	  if (!this.options.editable.updateTime && !this.options.editable.updateGroup) {
	    return;
	  }

	  var item = this.touchParams.item || null;
	  var me = this;
	  var props;

	  if (item && item.selected) {
	    var dragLeftItem = event.target.dragLeftItem;
	    var dragRightItem = event.target.dragRightItem;

	    if (dragLeftItem) {
	      props = {
	        item: dragLeftItem,
	        initialX: event.gesture.center.pageX,
	        dragLeft: true,
	        data: util.extend({}, item.data) // clone the items data
	      };

	      this.touchParams.itemProps = [props];
	    } else if (dragRightItem) {
	      props = {
	        item: dragRightItem,
	        initialX: event.gesture.center.pageX,
	        dragRight: true,
	        data: util.extend({}, item.data) // clone the items data
	      };

	      this.touchParams.itemProps = [props];
	    } else {
	      this.touchParams.itemProps = this.getSelection().map(function (id) {
	        var item = me.items[id];
	        var props = {
	          item: item,
	          initialX: event.gesture.center.pageX,
	          data: util.extend({}, item.data) // clone the items data
	        };

	        return props;
	      });
	    }

	    event.stopPropagation();
	  } else if (this.options.editable.add && event.gesture.srcEvent.ctrlKey) {
	    // create a new range item when dragging with ctrl key down
	    this._onDragStartAddItem(event);
	  }
	};

	/**
	 * Start creating a new range item by dragging.
	 * @param {Event} event
	 * @private
	 */
	ItemSet.prototype._onDragStartAddItem = function (event) {
	  var snap = this.options.snap || null;
	  var xAbs = util.getAbsoluteLeft(this.dom.frame);
	  var x = event.gesture.center.pageX - xAbs - 10; // minus 10 to compensate for the drag starting as soon as you've moved 10px
	  var time = this.body.util.toTime(x);
	  var scale = this.body.util.getScale();
	  var step = this.body.util.getStep();
	  var start = snap ? snap(time, scale, step) : start;
	  var end = start;

	  var itemData = {
	    type: 'range',
	    start: start,
	    end: end,
	    content: 'new item'
	  };

	  var id = util.randomUUID();
	  itemData[this.itemsData._fieldId] = id;

	  var group = this.groupFromTarget(event);
	  if (group) {
	    itemData.group = group.groupId;
	  }

	  var newItem = new RangeItem(itemData, this.conversion, this.options);
	  newItem.id = id; // TODO: not so nice setting id afterwards
	  newItem.data = itemData;
	  this._addItem(newItem);

	  var props = {
	    item: newItem,
	    dragRight: true,
	    initialX: event.gesture.center.pageX,
	    data: util.extend({}, itemData)
	  };
	  this.touchParams.itemProps = [props];

	  event.stopPropagation();
	};

	/**
	 * Drag selected items
	 * @param {Event} event
	 * @private
	 */
	ItemSet.prototype._onDrag = function (event) {
	  event.preventDefault();

	  if (this.touchParams.itemProps) {
	    event.stopPropagation();

	    var me = this;
	    var snap = this.options.snap || null;
	    var xOffset = this.body.dom.root.offsetLeft + this.body.domProps.left.width;
	    var scale = this.body.util.getScale();
	    var step = this.body.util.getStep();

	    // move
	    this.touchParams.itemProps.forEach(function (props) {
	      var current = me.body.util.toTime(event.gesture.center.pageX - xOffset);
	      var initial = me.body.util.toTime(props.initialX - xOffset);
	      var offset = current - initial;

	      var itemData = util.extend({}, props.item.data); // clone the data

	      if (me.options.editable.updateTime) {
	        if (props.dragLeft) {
	          // drag left side of a range item
	          if (itemData.start != undefined) {
	            var initialStart = util.convert(props.data.start, 'Date');
	            var start = new Date(initialStart.valueOf() + offset);
	            itemData.start = snap ? snap(start, scale, step) : start;
	          }
	        } else if (props.dragRight) {
	          // drag right side of a range item
	          if (itemData.end != undefined) {
	            var initialEnd = util.convert(props.data.end, 'Date');
	            var end = new Date(initialEnd.valueOf() + offset);
	            itemData.end = snap ? snap(end, scale, step) : end;
	          }
	        } else {
	          // drag both start and end
	          if (itemData.start != undefined) {
	            var initialStart = util.convert(props.data.start, 'Date').valueOf();
	            var start = new Date(initialStart + offset);

	            if (itemData.end != undefined) {
	              var initialEnd = util.convert(props.data.end, 'Date');
	              var duration = initialEnd.valueOf() - initialStart.valueOf();

	              itemData.start = snap ? snap(start, scale, step) : start;
	              itemData.end = new Date(itemData.start.valueOf() + duration);
	            } else {
	              itemData.start = snap ? snap(start, scale, step) : start;
	            }
	          }
	        }
	      }

	      if (me.options.editable.updateGroup && !props.dragLeft && !props.dragRight) {
	        if (itemData.group != undefined) {
	          // drag from one group to another
	          var group = me.groupFromTarget(event);
	          if (group) {
	            itemData.group = group.groupId;
	          }
	        }
	      }

	      // confirm moving the item
	      me.options.onMoving(itemData, function (itemData) {
	        if (itemData) {
	          props.item.setData(itemData);
	        }
	      });
	    });

	    this.stackDirty = true; // force re-stacking of all items next redraw
	    this.body.emitter.emit('change');
	  }
	};

	/**
	 * Move an item to another group
	 * @param {Item} item
	 * @param {String | Number} groupId
	 * @private
	 */
	ItemSet.prototype._moveToGroup = function (item, groupId) {
	  var group = this.groups[groupId];
	  if (group && group.groupId != item.data.group) {
	    var oldGroup = item.parent;
	    oldGroup.remove(item);
	    oldGroup.order();
	    group.add(item);
	    group.order();

	    item.data.group = group.groupId;
	  }
	};

	/**
	 * End of dragging selected items
	 * @param {Event} event
	 * @private
	 */
	ItemSet.prototype._onDragEnd = function (event) {
	  event.preventDefault();

	  if (this.touchParams.itemProps) {
	    event.stopPropagation();

	    // prepare a change set for the changed items
	    var changes = [];
	    var me = this;
	    var dataset = this.itemsData.getDataSet();

	    var itemProps = this.touchParams.itemProps;
	    this.touchParams.itemProps = null;
	    itemProps.forEach(function (props) {
	      var id = props.item.id;
	      var exists = me.itemsData.get(id, me.itemOptions) != null;

	      if (!exists) {
	        // add a new item
	        me.options.onAdd(props.item.data, function (itemData) {
	          me._removeItem(props.item); // remove temporary item
	          if (itemData) {
	            me.itemsData.getDataSet().add(itemData);
	          }

	          // force re-stacking of all items next redraw
	          me.stackDirty = true;
	          me.body.emitter.emit('change');
	        });
	      } else {
	        // update existing item
	        var itemData = util.extend({}, props.item.data); // clone the data
	        me.options.onMove(itemData, function (itemData) {
	          if (itemData) {
	            // apply changes
	            itemData[dataset._fieldId] = id; // ensure the item contains its id (can be undefined)
	            changes.push(itemData);
	          } else {
	            // restore original values
	            props.item.setData(props.data);

	            me.stackDirty = true; // force re-stacking of all items next redraw
	            me.body.emitter.emit('change');
	          }
	        });
	      }
	    });

	    // apply the changes to the data (if there are changes)
	    if (changes.length) {
	      dataset.update(changes);
	    }
	  }
	};

	/**
	 * Handle selecting/deselecting an item when tapping it
	 * @param {Event} event
	 * @private
	 */
	ItemSet.prototype._onSelectItem = function (event) {
	  if (!this.options.selectable) return;

	  var ctrlKey = event.gesture.srcEvent && event.gesture.srcEvent.ctrlKey;
	  var shiftKey = event.gesture.srcEvent && event.gesture.srcEvent.shiftKey;
	  if (ctrlKey || shiftKey) {
	    this._onMultiSelectItem(event);
	    return;
	  }

	  var oldSelection = this.getSelection();

	  var item = this.itemFromTarget(event);
	  var selection = item ? [item.id] : [];
	  this.setSelection(selection);

	  var newSelection = this.getSelection();

	  // emit a select event,
	  // except when old selection is empty and new selection is still empty
	  if (newSelection.length > 0 || oldSelection.length > 0) {
	    this.body.emitter.emit('select', {
	      items: newSelection
	    });
	  }
	};

	/**
	 * Handle creation and updates of an item on double tap
	 * @param event
	 * @private
	 */
	ItemSet.prototype._onAddItem = function (event) {
	  if (!this.options.selectable) return;
	  if (!this.options.editable.add) return;

	  var me = this,
	      snap = this.options.snap || null,
	      item = this.itemFromTarget(event);

	  if (item) {
	    // update item

	    // execute async handler to update the item (or cancel it)
	    var itemData = me.itemsData.get(item.id); // get a clone of the data from the dataset
	    this.options.onUpdate(itemData, function (itemData) {
	      if (itemData) {
	        me.itemsData.getDataSet().update(itemData);
	      }
	    });
	  } else {
	    // add item
	    var xAbs = util.getAbsoluteLeft(this.dom.frame);
	    var x = event.gesture.center.pageX - xAbs;
	    var start = this.body.util.toTime(x);
	    var scale = this.body.util.getScale();
	    var step = this.body.util.getStep();

	    var newItem = {
	      start: snap ? snap(start, scale, step) : start,
	      content: 'new item'
	    };

	    // when default type is a range, add a default end date to the new item
	    if (this.options.type === 'range') {
	      var end = this.body.util.toTime(x + this.props.width / 5);
	      newItem.end = snap ? snap(end, scale, step) : end;
	    }

	    newItem[this.itemsData._fieldId] = util.randomUUID();

	    var group = this.groupFromTarget(event);
	    if (group) {
	      newItem.group = group.groupId;
	    }

	    // execute async handler to customize (or cancel) adding an item
	    this.options.onAdd(newItem, function (item) {
	      if (item) {
	        me.itemsData.getDataSet().add(item);
	        // TODO: need to trigger a redraw?
	      }
	    });
	  }
	};

	/**
	 * Handle selecting/deselecting multiple items when holding an item
	 * @param {Event} event
	 * @private
	 */
	ItemSet.prototype._onMultiSelectItem = function (event) {
	  if (!this.options.selectable) return;

	  var selection,
	      item = this.itemFromTarget(event);

	  if (item) {
	    // multi select items
	    selection = this.getSelection(); // current selection

	    var shiftKey = event.gesture.touches[0] && event.gesture.touches[0].shiftKey || false;
	    if (shiftKey) {
	      // select all items between the old selection and the tapped item

	      // determine the selection range
	      selection.push(item.id);
	      var range = ItemSet._getItemRange(this.itemsData.get(selection, this.itemOptions));

	      // select all items within the selection range
	      selection = [];
	      for (var id in this.items) {
	        if (this.items.hasOwnProperty(id)) {
	          var _item = this.items[id];
	          var start = _item.data.start;
	          var end = _item.data.end !== undefined ? _item.data.end : start;

	          if (start >= range.min && end <= range.max && !(_item instanceof BackgroundItem)) {
	            selection.push(_item.id); // do not use id but item.id, id itself is stringified
	          }
	        }
	      }
	    } else {
	      // add/remove this item from the current selection
	      var index = selection.indexOf(item.id);
	      if (index == -1) {
	        // item is not yet selected -> select it
	        selection.push(item.id);
	      } else {
	        // item is already selected -> deselect it
	        selection.splice(index, 1);
	      }
	    }

	    this.setSelection(selection);

	    this.body.emitter.emit('select', {
	      items: this.getSelection()
	    });
	  }
	};

	/**
	 * Calculate the time range of a list of items
	 * @param {Array.<Object>} itemsData
	 * @return {{min: Date, max: Date}} Returns the range of the provided items
	 * @private
	 */
	ItemSet._getItemRange = function (itemsData) {
	  var max = null;
	  var min = null;

	  itemsData.forEach(function (data) {
	    if (min == null || data.start < min) {
	      min = data.start;
	    }

	    if (data.end != undefined) {
	      if (max == null || data.end > max) {
	        max = data.end;
	      }
	    } else {
	      if (max == null || data.start > max) {
	        max = data.start;
	      }
	    }
	  });

	  return {
	    min: min,
	    max: max
	  };
	};

	/**
	 * Find an item from an event target:
	 * searches for the attribute 'timeline-item' in the event target's element tree
	 * @param {Event} event
	 * @return {Item | null} item
	 */
	ItemSet.prototype.itemFromTarget = function (event) {
	  var target = event.target;
	  while (target) {
	    if (target.hasOwnProperty('timeline-item')) {
	      return target['timeline-item'];
	    }
	    target = target.parentNode;
	  }

	  return null;
	};

	/**
	 * Find the Group from an event target:
	 * searches for the attribute 'timeline-group' in the event target's element tree
	 * @param {Event} event
	 * @return {Group | null} group
	 */
	ItemSet.prototype.groupFromTarget = function (event) {
	  var pageY = event.gesture ? event.gesture.center.pageY : event.pageY;
	  for (var i = 0; i < this.groupIds.length; i++) {
	    var groupId = this.groupIds[i];
	    var group = this.groups[groupId];
	    var foreground = group.dom.foreground;
	    var top = util.getAbsoluteTop(foreground);
	    if (pageY > top && pageY < top + foreground.offsetHeight) {
	      return group;
	    }

	    if (this.options.orientation === 'top') {
	      if (i === this.groupIds.length - 1 && pageY > top) {
	        return group;
	      }
	    } else {
	      if (i === 0 && pageY < top + foreground.offset) {
	        return group;
	      }
	    }
	  }

	  return null;
	};

	/**
	 * Find the ItemSet from an event target:
	 * searches for the attribute 'timeline-itemset' in the event target's element tree
	 * @param {Event} event
	 * @return {ItemSet | null} item
	 */
	ItemSet.itemSetFromTarget = function (event) {
	  var target = event.target;
	  while (target) {
	    if (target.hasOwnProperty('timeline-itemset')) {
	      return target['timeline-itemset'];
	    }
	    target = target.parentNode;
	  }

	  return null;
	};

	module.exports = ItemSet;

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var moment = __webpack_require__(176);
	var DateUtil = __webpack_require__(302);
	var util = __webpack_require__(175);

	/**
	 * @constructor  TimeStep
	 * The class TimeStep is an iterator for dates. You provide a start date and an
	 * end date. The class itself determines the best scale (step size) based on the
	 * provided start Date, end Date, and minimumStep.
	 *
	 * If minimumStep is provided, the step size is chosen as close as possible
	 * to the minimumStep but larger than minimumStep. If minimumStep is not
	 * provided, the scale is set to 1 DAY.
	 * The minimumStep should correspond with the onscreen size of about 6 characters
	 *
	 * Alternatively, you can set a scale by hand.
	 * After creation, you can initialize the class by executing first(). Then you
	 * can iterate from the start date to the end date via next(). You can check if
	 * the end date is reached with the function hasNext(). After each step, you can
	 * retrieve the current date via getCurrent().
	 * The TimeStep has scales ranging from milliseconds, seconds, minutes, hours,
	 * days, to years.
	 *
	 * Version: 1.2
	 *
	 * @param {Date} [start]         The start date, for example new Date(2010, 9, 21)
	 *                               or new Date(2010, 9, 21, 23, 45, 00)
	 * @param {Date} [end]           The end date
	 * @param {Number} [minimumStep] Optional. Minimum step size in milliseconds
	 */
	function TimeStep(start, end, minimumStep, hiddenDates) {
	  // variables
	  this.current = new Date();
	  this._start = new Date();
	  this._end = new Date();

	  this.autoScale = true;
	  this.scale = 'day';
	  this.step = 1;

	  // initialize the range
	  this.setRange(start, end, minimumStep);

	  // hidden Dates options
	  this.switchedDay = false;
	  this.switchedMonth = false;
	  this.switchedYear = false;
	  this.hiddenDates = hiddenDates;
	  if (hiddenDates === undefined) {
	    this.hiddenDates = [];
	  }

	  this.format = TimeStep.FORMAT; // default formatting
	}

	// Time formatting
	TimeStep.FORMAT = {
	  minorLabels: {
	    millisecond: 'SSS',
	    second: 's',
	    minute: 'HH:mm',
	    hour: 'HH:mm',
	    weekday: 'ddd D',
	    day: 'D',
	    month: 'MMM',
	    year: 'YYYY'
	  },
	  majorLabels: {
	    millisecond: 'HH:mm:ss',
	    second: 'D MMMM HH:mm',
	    minute: 'ddd D MMMM',
	    hour: 'ddd D MMMM',
	    weekday: 'MMMM YYYY',
	    day: 'MMMM YYYY',
	    month: 'YYYY',
	    year: ''
	  }
	};

	/**
	 * Set custom formatting for the minor an major labels of the TimeStep.
	 * Both `minorLabels` and `majorLabels` are an Object with properties:
	 * 'millisecond, 'second, 'minute', 'hour', 'weekday, 'day, 'month, 'year'.
	 * @param {{minorLabels: Object, majorLabels: Object}} format
	 */
	TimeStep.prototype.setFormat = function (format) {
	  var defaultFormat = util.deepExtend({}, TimeStep.FORMAT);
	  this.format = util.deepExtend(defaultFormat, format);
	};

	/**
	 * Set a new range
	 * If minimumStep is provided, the step size is chosen as close as possible
	 * to the minimumStep but larger than minimumStep. If minimumStep is not
	 * provided, the scale is set to 1 DAY.
	 * The minimumStep should correspond with the onscreen size of about 6 characters
	 * @param {Date} [start]      The start date and time.
	 * @param {Date} [end]        The end date and time.
	 * @param {int} [minimumStep] Optional. Minimum step size in milliseconds
	 */
	TimeStep.prototype.setRange = function (start, end, minimumStep) {
	  if (!(start instanceof Date) || !(end instanceof Date)) {
	    throw "No legal start or end date in method setRange";
	  }

	  this._start = start != undefined ? new Date(start.valueOf()) : new Date();
	  this._end = end != undefined ? new Date(end.valueOf()) : new Date();

	  if (this.autoScale) {
	    this.setMinimumStep(minimumStep);
	  }
	};

	/**
	 * Set the range iterator to the start date.
	 */
	TimeStep.prototype.first = function () {
	  this.current = new Date(this._start.valueOf());
	  this.roundToMinor();
	};

	/**
	 * Round the current date to the first minor date value
	 * This must be executed once when the current date is set to start Date
	 */
	TimeStep.prototype.roundToMinor = function () {
	  // round to floor
	  // IMPORTANT: we have no breaks in this switch! (this is no bug)
	  // noinspection FallThroughInSwitchStatementJS
	  switch (this.scale) {
	    case 'year':
	      this.current.setFullYear(this.step * Math.floor(this.current.getFullYear() / this.step));
	      this.current.setMonth(0);
	    case 'month':
	      this.current.setDate(1);
	    case 'day': // intentional fall through
	    case 'weekday':
	      this.current.setHours(0);
	    case 'hour':
	      this.current.setMinutes(0);
	    case 'minute':
	      this.current.setSeconds(0);
	    case 'second':
	      this.current.setMilliseconds(0);
	    //case 'millisecond': // nothing to do for milliseconds
	  }

	  if (this.step != 1) {
	    // round down to the first minor value that is a multiple of the current step size
	    switch (this.scale) {
	      case 'millisecond':
	        this.current.setMilliseconds(this.current.getMilliseconds() - this.current.getMilliseconds() % this.step);break;
	      case 'second':
	        this.current.setSeconds(this.current.getSeconds() - this.current.getSeconds() % this.step);break;
	      case 'minute':
	        this.current.setMinutes(this.current.getMinutes() - this.current.getMinutes() % this.step);break;
	      case 'hour':
	        this.current.setHours(this.current.getHours() - this.current.getHours() % this.step);break;
	      case 'weekday': // intentional fall through
	      case 'day':
	        this.current.setDate(this.current.getDate() - 1 - (this.current.getDate() - 1) % this.step + 1);break;
	      case 'month':
	        this.current.setMonth(this.current.getMonth() - this.current.getMonth() % this.step);break;
	      case 'year':
	        this.current.setFullYear(this.current.getFullYear() - this.current.getFullYear() % this.step);break;
	      default:
	        break;
	    }
	  }
	};

	/**
	 * Check if the there is a next step
	 * @return {boolean}  true if the current date has not passed the end date
	 */
	TimeStep.prototype.hasNext = function () {
	  return this.current.valueOf() <= this._end.valueOf();
	};

	/**
	 * Do the next step
	 */
	TimeStep.prototype.next = function () {
	  var prev = this.current.valueOf();

	  // Two cases, needed to prevent issues with switching daylight savings
	  // (end of March and end of October)
	  if (this.current.getMonth() < 6) {
	    switch (this.scale) {
	      case 'millisecond':

	        this.current = new Date(this.current.valueOf() + this.step);break;
	      case 'second':
	        this.current = new Date(this.current.valueOf() + this.step * 1000);break;
	      case 'minute':
	        this.current = new Date(this.current.valueOf() + this.step * 1000 * 60);break;
	      case 'hour':
	        this.current = new Date(this.current.valueOf() + this.step * 1000 * 60 * 60);
	        // in case of skipping an hour for daylight savings, adjust the hour again (else you get: 0h 5h 9h ... instead of 0h 4h 8h ...)
	        var h = this.current.getHours();
	        this.current.setHours(h - h % this.step);
	        break;
	      case 'weekday': // intentional fall through
	      case 'day':
	        this.current.setDate(this.current.getDate() + this.step);break;
	      case 'month':
	        this.current.setMonth(this.current.getMonth() + this.step);break;
	      case 'year':
	        this.current.setFullYear(this.current.getFullYear() + this.step);break;
	      default:
	        break;
	    }
	  } else {
	    switch (this.scale) {
	      case 'millisecond':
	        this.current = new Date(this.current.valueOf() + this.step);break;
	      case 'second':
	        this.current.setSeconds(this.current.getSeconds() + this.step);break;
	      case 'minute':
	        this.current.setMinutes(this.current.getMinutes() + this.step);break;
	      case 'hour':
	        this.current.setHours(this.current.getHours() + this.step);break;
	      case 'weekday': // intentional fall through
	      case 'day':
	        this.current.setDate(this.current.getDate() + this.step);break;
	      case 'month':
	        this.current.setMonth(this.current.getMonth() + this.step);break;
	      case 'year':
	        this.current.setFullYear(this.current.getFullYear() + this.step);break;
	      default:
	        break;
	    }
	  }

	  if (this.step != 1) {
	    // round down to the correct major value
	    switch (this.scale) {
	      case 'millisecond':
	        if (this.current.getMilliseconds() < this.step) this.current.setMilliseconds(0);break;
	      case 'second':
	        if (this.current.getSeconds() < this.step) this.current.setSeconds(0);break;
	      case 'minute':
	        if (this.current.getMinutes() < this.step) this.current.setMinutes(0);break;
	      case 'hour':
	        if (this.current.getHours() < this.step) this.current.setHours(0);break;
	      case 'weekday': // intentional fall through
	      case 'day':
	        if (this.current.getDate() < this.step + 1) this.current.setDate(1);break;
	      case 'month':
	        if (this.current.getMonth() < this.step) this.current.setMonth(0);break;
	      case 'year':
	        break; // nothing to do for year
	      default:
	        break;
	    }
	  }

	  // safety mechanism: if current time is still unchanged, move to the end
	  if (this.current.valueOf() == prev) {
	    this.current = new Date(this._end.valueOf());
	  }

	  DateUtil.stepOverHiddenDates(this, prev);
	};

	/**
	 * Get the current datetime
	 * @return {Date}  current The current date
	 */
	TimeStep.prototype.getCurrent = function () {
	  return this.current;
	};

	/**
	 * Set a custom scale. Autoscaling will be disabled.
	 * For example setScale('minute', 5) will result
	 * in minor steps of 5 minutes, and major steps of an hour.
	 *
	 * @param {{scale: string, step: number}} params
	 *                               An object containing two properties:
	 *                               - A string 'scale'. Choose from 'millisecond', 'second',
	 *                                 'minute', 'hour', 'weekday, 'day, 'month, 'year'.
	 *                               - A number 'step'. A step size, by default 1.
	 *                                 Choose for example 1, 2, 5, or 10.
	 */
	TimeStep.prototype.setScale = function (params) {
	  if (params && typeof params.scale == 'string') {
	    this.scale = params.scale;
	    this.step = params.step > 0 ? params.step : 1;
	    this.autoScale = false;
	  }
	};

	/**
	 * Enable or disable autoscaling
	 * @param {boolean} enable  If true, autoascaling is set true
	 */
	TimeStep.prototype.setAutoScale = function (enable) {
	  this.autoScale = enable;
	};

	/**
	 * Automatically determine the scale that bests fits the provided minimum step
	 * @param {Number} [minimumStep]  The minimum step size in milliseconds
	 */
	TimeStep.prototype.setMinimumStep = function (minimumStep) {
	  if (minimumStep == undefined) {
	    return;
	  }

	  //var b = asc + ds;

	  var stepYear = 1000 * 60 * 60 * 24 * 30 * 12;
	  var stepMonth = 1000 * 60 * 60 * 24 * 30;
	  var stepDay = 1000 * 60 * 60 * 24;
	  var stepHour = 1000 * 60 * 60;
	  var stepMinute = 1000 * 60;
	  var stepSecond = 1000;
	  var stepMillisecond = 1;

	  // find the smallest step that is larger than the provided minimumStep
	  if (stepYear * 1000 > minimumStep) {
	    this.scale = 'year';this.step = 1000;
	  }
	  if (stepYear * 500 > minimumStep) {
	    this.scale = 'year';this.step = 500;
	  }
	  if (stepYear * 100 > minimumStep) {
	    this.scale = 'year';this.step = 100;
	  }
	  if (stepYear * 50 > minimumStep) {
	    this.scale = 'year';this.step = 50;
	  }
	  if (stepYear * 10 > minimumStep) {
	    this.scale = 'year';this.step = 10;
	  }
	  if (stepYear * 5 > minimumStep) {
	    this.scale = 'year';this.step = 5;
	  }
	  if (stepYear > minimumStep) {
	    this.scale = 'year';this.step = 1;
	  }
	  if (stepMonth * 3 > minimumStep) {
	    this.scale = 'month';this.step = 3;
	  }
	  if (stepMonth > minimumStep) {
	    this.scale = 'month';this.step = 1;
	  }
	  if (stepDay * 5 > minimumStep) {
	    this.scale = 'day';this.step = 5;
	  }
	  if (stepDay * 2 > minimumStep) {
	    this.scale = 'day';this.step = 2;
	  }
	  if (stepDay > minimumStep) {
	    this.scale = 'day';this.step = 1;
	  }
	  if (stepDay / 2 > minimumStep) {
	    this.scale = 'weekday';this.step = 1;
	  }
	  if (stepHour * 4 > minimumStep) {
	    this.scale = 'hour';this.step = 4;
	  }
	  if (stepHour > minimumStep) {
	    this.scale = 'hour';this.step = 1;
	  }
	  if (stepMinute * 15 > minimumStep) {
	    this.scale = 'minute';this.step = 15;
	  }
	  if (stepMinute * 10 > minimumStep) {
	    this.scale = 'minute';this.step = 10;
	  }
	  if (stepMinute * 5 > minimumStep) {
	    this.scale = 'minute';this.step = 5;
	  }
	  if (stepMinute > minimumStep) {
	    this.scale = 'minute';this.step = 1;
	  }
	  if (stepSecond * 15 > minimumStep) {
	    this.scale = 'second';this.step = 15;
	  }
	  if (stepSecond * 10 > minimumStep) {
	    this.scale = 'second';this.step = 10;
	  }
	  if (stepSecond * 5 > minimumStep) {
	    this.scale = 'second';this.step = 5;
	  }
	  if (stepSecond > minimumStep) {
	    this.scale = 'second';this.step = 1;
	  }
	  if (stepMillisecond * 200 > minimumStep) {
	    this.scale = 'millisecond';this.step = 200;
	  }
	  if (stepMillisecond * 100 > minimumStep) {
	    this.scale = 'millisecond';this.step = 100;
	  }
	  if (stepMillisecond * 50 > minimumStep) {
	    this.scale = 'millisecond';this.step = 50;
	  }
	  if (stepMillisecond * 10 > minimumStep) {
	    this.scale = 'millisecond';this.step = 10;
	  }
	  if (stepMillisecond * 5 > minimumStep) {
	    this.scale = 'millisecond';this.step = 5;
	  }
	  if (stepMillisecond > minimumStep) {
	    this.scale = 'millisecond';this.step = 1;
	  }
	};

	/**
	 * Snap a date to a rounded value.
	 * The snap intervals are dependent on the current scale and step.
	 * Static function
	 * @param {Date} date    the date to be snapped.
	 * @param {string} scale Current scale, can be 'millisecond', 'second',
	 *                       'minute', 'hour', 'weekday, 'day, 'month, 'year'.
	 * @param {number} step  Current step (1, 2, 4, 5, ...
	 * @return {Date} snappedDate
	 */
	TimeStep.snap = function (date, scale, step) {
	  var clone = new Date(date.valueOf());

	  if (scale == 'year') {
	    var year = clone.getFullYear() + Math.round(clone.getMonth() / 12);
	    clone.setFullYear(Math.round(year / step) * step);
	    clone.setMonth(0);
	    clone.setDate(0);
	    clone.setHours(0);
	    clone.setMinutes(0);
	    clone.setSeconds(0);
	    clone.setMilliseconds(0);
	  } else if (scale == 'month') {
	    if (clone.getDate() > 15) {
	      clone.setDate(1);
	      clone.setMonth(clone.getMonth() + 1);
	      // important: first set Date to 1, after that change the month.
	    } else {
	      clone.setDate(1);
	    }

	    clone.setHours(0);
	    clone.setMinutes(0);
	    clone.setSeconds(0);
	    clone.setMilliseconds(0);
	  } else if (scale == 'day') {
	    //noinspection FallthroughInSwitchStatementJS
	    switch (step) {
	      case 5:
	      case 2:
	        clone.setHours(Math.round(clone.getHours() / 24) * 24);break;
	      default:
	        clone.setHours(Math.round(clone.getHours() / 12) * 12);break;
	    }
	    clone.setMinutes(0);
	    clone.setSeconds(0);
	    clone.setMilliseconds(0);
	  } else if (scale == 'weekday') {
	    //noinspection FallthroughInSwitchStatementJS
	    switch (step) {
	      case 5:
	      case 2:
	        clone.setHours(Math.round(clone.getHours() / 12) * 12);break;
	      default:
	        clone.setHours(Math.round(clone.getHours() / 6) * 6);break;
	    }
	    clone.setMinutes(0);
	    clone.setSeconds(0);
	    clone.setMilliseconds(0);
	  } else if (scale == 'hour') {
	    switch (step) {
	      case 4:
	        clone.setMinutes(Math.round(clone.getMinutes() / 60) * 60);break;
	      default:
	        clone.setMinutes(Math.round(clone.getMinutes() / 30) * 30);break;
	    }
	    clone.setSeconds(0);
	    clone.setMilliseconds(0);
	  } else if (scale == 'minute') {
	    //noinspection FallthroughInSwitchStatementJS
	    switch (step) {
	      case 15:
	      case 10:
	        clone.setMinutes(Math.round(clone.getMinutes() / 5) * 5);
	        clone.setSeconds(0);
	        break;
	      case 5:
	        clone.setSeconds(Math.round(clone.getSeconds() / 60) * 60);break;
	      default:
	        clone.setSeconds(Math.round(clone.getSeconds() / 30) * 30);break;
	    }
	    clone.setMilliseconds(0);
	  } else if (scale == 'second') {
	    //noinspection FallthroughInSwitchStatementJS
	    switch (step) {
	      case 15:
	      case 10:
	        clone.setSeconds(Math.round(clone.getSeconds() / 5) * 5);
	        clone.setMilliseconds(0);
	        break;
	      case 5:
	        clone.setMilliseconds(Math.round(clone.getMilliseconds() / 1000) * 1000);break;
	      default:
	        clone.setMilliseconds(Math.round(clone.getMilliseconds() / 500) * 500);break;
	    }
	  } else if (scale == 'millisecond') {
	    var _step = step > 5 ? step / 2 : 1;
	    clone.setMilliseconds(Math.round(clone.getMilliseconds() / _step) * _step);
	  }

	  return clone;
	};

	/**
	 * Check if the current value is a major value (for example when the step
	 * is DAY, a major value is each first day of the MONTH)
	 * @return {boolean} true if current date is major, else false.
	 */
	TimeStep.prototype.isMajor = function () {
	  if (this.switchedYear == true) {
	    this.switchedYear = false;
	    switch (this.scale) {
	      case 'year':
	      case 'month':
	      case 'weekday':
	      case 'day':
	      case 'hour':
	      case 'minute':
	      case 'second':
	      case 'millisecond':
	        return true;
	      default:
	        return false;
	    }
	  } else if (this.switchedMonth == true) {
	    this.switchedMonth = false;
	    switch (this.scale) {
	      case 'weekday':
	      case 'day':
	      case 'hour':
	      case 'minute':
	      case 'second':
	      case 'millisecond':
	        return true;
	      default:
	        return false;
	    }
	  } else if (this.switchedDay == true) {
	    this.switchedDay = false;
	    switch (this.scale) {
	      case 'millisecond':
	      case 'second':
	      case 'minute':
	      case 'hour':
	        return true;
	      default:
	        return false;
	    }
	  }

	  switch (this.scale) {
	    case 'millisecond':
	      return this.current.getMilliseconds() == 0;
	    case 'second':
	      return this.current.getSeconds() == 0;
	    case 'minute':
	      return this.current.getHours() == 0 && this.current.getMinutes() == 0;
	    case 'hour':
	      return this.current.getHours() == 0;
	    case 'weekday': // intentional fall through
	    case 'day':
	      return this.current.getDate() == 1;
	    case 'month':
	      return this.current.getMonth() == 0;
	    case 'year':
	      return false;
	    default:
	      return false;
	  }
	};

	/**
	 * Returns formatted text for the minor axislabel, depending on the current
	 * date and the scale. For example when scale is MINUTE, the current time is
	 * formatted as "hh:mm".
	 * @param {Date} [date] custom date. if not provided, current date is taken
	 */
	TimeStep.prototype.getLabelMinor = function (date) {
	  if (date == undefined) {
	    date = this.current;
	  }

	  var format = this.format.minorLabels[this.scale];
	  return format && format.length > 0 ? moment(date).format(format) : '';
	};

	/**
	 * Returns formatted text for the major axis label, depending on the current
	 * date and the scale. For example when scale is MINUTE, the major scale is
	 * hours, and the hour will be formatted as "hh".
	 * @param {Date} [date] custom date. if not provided, current date is taken
	 */
	TimeStep.prototype.getLabelMajor = function (date) {
	  if (date == undefined) {
	    date = this.current;
	  }

	  var format = this.format.majorLabels[this.scale];
	  return format && format.length > 0 ? moment(date).format(format) : '';
	};

	TimeStep.prototype.getClassName = function () {
	  var m = moment(this.current);
	  var date = m.locale ? m.locale('en') : m.lang('en'); // old versions of moment have .lang() function
	  var step = this.step;

	  function even(value) {
	    return value / step % 2 == 0 ? ' even' : ' odd';
	  }

	  function today(date) {
	    if (date.isSame(new Date(), 'day')) {
	      return ' today';
	    }
	    if (date.isSame(moment().add(1, 'day'), 'day')) {
	      return ' tomorrow';
	    }
	    if (date.isSame(moment().add(-1, 'day'), 'day')) {
	      return ' yesterday';
	    }
	    return '';
	  }

	  function currentWeek(date) {
	    return date.isSame(new Date(), 'week') ? ' current-week' : '';
	  }

	  function currentMonth(date) {
	    return date.isSame(new Date(), 'month') ? ' current-month' : '';
	  }

	  function currentYear(date) {
	    return date.isSame(new Date(), 'year') ? ' current-year' : '';
	  }

	  switch (this.scale) {
	    case 'millisecond':
	      return even(date.milliseconds()).trim();

	    case 'second':
	      return even(date.seconds()).trim();

	    case 'minute':
	      return even(date.minutes()).trim();

	    case 'hour':
	      var hours = date.hours();
	      if (this.step == 4) {
	        hours = hours + '-' + (hours + 4);
	      }
	      return hours + 'h' + today(date) + even(date.hours());

	    case 'weekday':
	      return date.format('dddd').toLowerCase() + today(date) + currentWeek(date) + even(date.date());

	    case 'day':
	      var day = date.date();
	      var month = date.format('MMMM').toLowerCase();
	      return 'day' + day + ' ' + month + currentMonth(date) + even(day - 1);

	    case 'month':
	      return date.format('MMMM').toLowerCase() + currentMonth(date) + even(date.month());

	    case 'year':
	      var year = date.year();
	      return 'year' + year + currentYear(date) + even(year);

	    default:
	      return '';
	  }
	};

	module.exports = TimeStep;

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(175);
	var stack = __webpack_require__(307);
	var RangeItem = __webpack_require__(308);

	/**
	 * @constructor Group
	 * @param {Number | String} groupId
	 * @param {Object} data
	 * @param {ItemSet} itemSet
	 */
	function Group(groupId, data, itemSet) {
	  this.groupId = groupId;
	  this.subgroups = {};
	  this.subgroupIndex = 0;
	  this.subgroupOrderer = data && data.subgroupOrder;
	  this.itemSet = itemSet;

	  this.dom = {};
	  this.props = {
	    label: {
	      width: 0,
	      height: 0
	    }
	  };
	  this.className = null;

	  this.items = {}; // items filtered by groupId of this group
	  this.visibleItems = []; // items currently visible in window
	  this.orderedItems = {
	    byStart: [],
	    byEnd: []
	  };
	  this.checkRangedItems = false; // needed to refresh the ranged items if the window is programatically changed with NO overlap.
	  var me = this;
	  this.itemSet.body.emitter.on("checkRangedItems", function () {
	    me.checkRangedItems = true;
	  });

	  this._create();

	  this.setData(data);
	}

	/**
	 * Create DOM elements for the group
	 * @private
	 */
	Group.prototype._create = function () {
	  var label = document.createElement('div');
	  label.className = 'vlabel';
	  this.dom.label = label;

	  var inner = document.createElement('div');
	  inner.className = 'inner';
	  label.appendChild(inner);
	  this.dom.inner = inner;

	  var foreground = document.createElement('div');
	  foreground.className = 'group';
	  foreground['timeline-group'] = this;
	  this.dom.foreground = foreground;

	  this.dom.background = document.createElement('div');
	  this.dom.background.className = 'group';

	  this.dom.axis = document.createElement('div');
	  this.dom.axis.className = 'group';

	  // create a hidden marker to detect when the Timelines container is attached
	  // to the DOM, or the style of a parent of the Timeline is changed from
	  // display:none is changed to visible.
	  this.dom.marker = document.createElement('div');
	  this.dom.marker.style.visibility = 'hidden'; // TODO: ask jos why this is not none?
	  this.dom.marker.innerHTML = '?';
	  this.dom.background.appendChild(this.dom.marker);
	};

	/**
	 * Set the group data for this group
	 * @param {Object} data   Group data, can contain properties content and className
	 */
	Group.prototype.setData = function (data) {
	  // update contents
	  var content = data && data.content;
	  if (content instanceof Element) {
	    this.dom.inner.appendChild(content);
	  } else if (content !== undefined && content !== null) {
	    this.dom.inner.innerHTML = content;
	  } else {
	    this.dom.inner.innerHTML = this.groupId || ''; // groupId can be null
	  }

	  // update title
	  this.dom.label.title = data && data.title || '';

	  if (!this.dom.inner.firstChild) {
	    util.addClassName(this.dom.inner, 'hidden');
	  } else {
	    util.removeClassName(this.dom.inner, 'hidden');
	  }

	  // update className
	  var className = data && data.className || null;
	  if (className != this.className) {
	    if (this.className) {
	      util.removeClassName(this.dom.label, this.className);
	      util.removeClassName(this.dom.foreground, this.className);
	      util.removeClassName(this.dom.background, this.className);
	      util.removeClassName(this.dom.axis, this.className);
	    }
	    util.addClassName(this.dom.label, className);
	    util.addClassName(this.dom.foreground, className);
	    util.addClassName(this.dom.background, className);
	    util.addClassName(this.dom.axis, className);
	    this.className = className;
	  }

	  // update style
	  if (this.style) {
	    util.removeCssText(this.dom.label, this.style);
	    this.style = null;
	  }
	  if (data && data.style) {
	    util.addCssText(this.dom.label, data.style);
	    this.style = data.style;
	  }
	};

	/**
	 * Get the width of the group label
	 * @return {number} width
	 */
	Group.prototype.getLabelWidth = function () {
	  return this.props.label.width;
	};

	/**
	 * Repaint this group
	 * @param {{start: number, end: number}} range
	 * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin
	 * @param {boolean} [restack=false]  Force restacking of all items
	 * @return {boolean} Returns true if the group is resized
	 */
	Group.prototype.redraw = function (range, margin, restack) {
	  var resized = false;

	  // force recalculation of the height of the items when the marker height changed
	  // (due to the Timeline being attached to the DOM or changed from display:none to visible)
	  var markerHeight = this.dom.marker.clientHeight;
	  if (markerHeight != this.lastMarkerHeight) {
	    this.lastMarkerHeight = markerHeight;

	    util.forEach(this.items, function (item) {
	      item.dirty = true;
	      if (item.displayed) item.redraw();
	    });

	    restack = true;
	  }

	  // reposition visible items vertically
	  if (typeof this.itemSet.options.order === 'function') {
	    // a custom order function

	    if (restack) {
	      // brute force restack of all items

	      // show all items
	      var me = this;
	      var limitSize = false;
	      util.forEach(this.items, function (item) {
	        if (!item.displayed) {
	          item.redraw();
	          me.visibleItems.push(item);
	        }
	        item.repositionX(limitSize);
	      });

	      // order all items and force a restacking
	      var customOrderedItems = this.orderedItems.byStart.slice().sort(function (a, b) {
	        return me.itemSet.options.order(a.data, b.data);
	      });
	      stack.stack(customOrderedItems, margin, true /* restack=true */);
	    }

	    this.visibleItems = this._updateVisibleItems(this.orderedItems, this.visibleItems, range);
	  } else {
	    // no custom order function, lazy stacking
	    this.visibleItems = this._updateVisibleItems(this.orderedItems, this.visibleItems, range);

	    if (this.itemSet.options.stack) {
	      // TODO: ugly way to access options...
	      stack.stack(this.visibleItems, margin, restack);
	    } else {
	      // no stacking
	      stack.nostack(this.visibleItems, margin, this.subgroups);
	    }
	  }

	  // recalculate the height of the group
	  var height = this._calculateHeight(margin);

	  // calculate actual size and position
	  var foreground = this.dom.foreground;
	  this.top = foreground.offsetTop;
	  this.left = foreground.offsetLeft;
	  this.width = foreground.offsetWidth;
	  resized = util.updateProperty(this, 'height', height) || resized;

	  // recalculate size of label
	  resized = util.updateProperty(this.props.label, 'width', this.dom.inner.clientWidth) || resized;
	  resized = util.updateProperty(this.props.label, 'height', this.dom.inner.clientHeight) || resized;

	  // apply new height
	  this.dom.background.style.height = height + 'px';
	  this.dom.foreground.style.height = height + 'px';
	  this.dom.label.style.height = height + 'px';

	  // update vertical position of items after they are re-stacked and the height of the group is calculated
	  for (var i = 0, ii = this.visibleItems.length; i < ii; i++) {
	    var item = this.visibleItems[i];
	    item.repositionY(margin);
	  }

	  return resized;
	};

	/**
	 * recalculate the height of the group
	 * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin
	 * @returns {number} Returns the height
	 * @private
	 */
	Group.prototype._calculateHeight = function (margin) {
	  // recalculate the height of the group
	  var height;
	  var visibleItems = this.visibleItems;
	  //var visibleSubgroups = [];
	  //this.visibleSubgroups = 0;
	  this.resetSubgroups();
	  var me = this;
	  if (visibleItems.length) {
	    var min = visibleItems[0].top;
	    var max = visibleItems[0].top + visibleItems[0].height;
	    util.forEach(visibleItems, function (item) {
	      min = Math.min(min, item.top);
	      max = Math.max(max, item.top + item.height);
	      if (item.data.subgroup !== undefined) {
	        me.subgroups[item.data.subgroup].height = Math.max(me.subgroups[item.data.subgroup].height, item.height);
	        me.subgroups[item.data.subgroup].visible = true;
	        //if (visibleSubgroups.indexOf(item.data.subgroup) == -1){
	        //  visibleSubgroups.push(item.data.subgroup);
	        //  me.visibleSubgroups += 1;
	        //}
	      }
	    });
	    if (min > margin.axis) {
	      // there is an empty gap between the lowest item and the axis
	      var offset = min - margin.axis;
	      max -= offset;
	      util.forEach(visibleItems, function (item) {
	        item.top -= offset;
	      });
	    }
	    height = max + margin.item.vertical / 2;
	  } else {
	    height = 0;
	  }
	  height = Math.max(height, this.props.label.height);

	  return height;
	};

	/**
	 * Show this group: attach to the DOM
	 */
	Group.prototype.show = function () {
	  if (!this.dom.label.parentNode) {
	    this.itemSet.dom.labelSet.appendChild(this.dom.label);
	  }

	  if (!this.dom.foreground.parentNode) {
	    this.itemSet.dom.foreground.appendChild(this.dom.foreground);
	  }

	  if (!this.dom.background.parentNode) {
	    this.itemSet.dom.background.appendChild(this.dom.background);
	  }

	  if (!this.dom.axis.parentNode) {
	    this.itemSet.dom.axis.appendChild(this.dom.axis);
	  }
	};

	/**
	 * Hide this group: remove from the DOM
	 */
	Group.prototype.hide = function () {
	  var label = this.dom.label;
	  if (label.parentNode) {
	    label.parentNode.removeChild(label);
	  }

	  var foreground = this.dom.foreground;
	  if (foreground.parentNode) {
	    foreground.parentNode.removeChild(foreground);
	  }

	  var background = this.dom.background;
	  if (background.parentNode) {
	    background.parentNode.removeChild(background);
	  }

	  var axis = this.dom.axis;
	  if (axis.parentNode) {
	    axis.parentNode.removeChild(axis);
	  }
	};

	/**
	 * Add an item to the group
	 * @param {Item} item
	 */
	Group.prototype.add = function (item) {
	  this.items[item.id] = item;
	  item.setParent(this);

	  // add to
	  if (item.data.subgroup !== undefined) {
	    if (this.subgroups[item.data.subgroup] === undefined) {
	      this.subgroups[item.data.subgroup] = { height: 0, visible: false, index: this.subgroupIndex, items: [] };
	      this.subgroupIndex++;
	    }
	    this.subgroups[item.data.subgroup].items.push(item);
	  }
	  this.orderSubgroups();

	  if (this.visibleItems.indexOf(item) == -1) {
	    var range = this.itemSet.body.range; // TODO: not nice accessing the range like this
	    this._checkIfVisible(item, this.visibleItems, range);
	  }
	};

	Group.prototype.orderSubgroups = function () {
	  if (this.subgroupOrderer !== undefined) {
	    var sortArray = [];
	    if (typeof this.subgroupOrderer == 'string') {
	      for (var subgroup in this.subgroups) {
	        sortArray.push({ subgroup: subgroup, sortField: this.subgroups[subgroup].items[0].data[this.subgroupOrderer] });
	      }
	      sortArray.sort(function (a, b) {
	        return a.sortField - b.sortField;
	      });
	    } else if (typeof this.subgroupOrderer == 'function') {
	      for (var subgroup in this.subgroups) {
	        sortArray.push(this.subgroups[subgroup].items[0].data);
	      }
	      sortArray.sort(this.subgroupOrderer);
	    }

	    if (sortArray.length > 0) {
	      for (var i = 0; i < sortArray.length; i++) {
	        this.subgroups[sortArray[i].subgroup].index = i;
	      }
	    }
	  }
	};

	Group.prototype.resetSubgroups = function () {
	  for (var subgroup in this.subgroups) {
	    if (this.subgroups.hasOwnProperty(subgroup)) {
	      this.subgroups[subgroup].visible = false;
	    }
	  }
	};

	/**
	 * Remove an item from the group
	 * @param {Item} item
	 */
	Group.prototype.remove = function (item) {
	  delete this.items[item.id];
	  item.setParent(null);

	  // remove from visible items
	  var index = this.visibleItems.indexOf(item);
	  if (index != -1) this.visibleItems.splice(index, 1);

	  // TODO: also remove from ordered items?
	};

	/**
	 * Remove an item from the corresponding DataSet
	 * @param {Item} item
	 */
	Group.prototype.removeFromDataSet = function (item) {
	  this.itemSet.removeItem(item.id);
	};

	/**
	 * Reorder the items
	 */
	Group.prototype.order = function () {
	  var array = util.toArray(this.items);
	  var startArray = [];
	  var endArray = [];

	  for (var i = 0; i < array.length; i++) {
	    if (array[i].data.end !== undefined) {
	      endArray.push(array[i]);
	    }
	    startArray.push(array[i]);
	  }
	  this.orderedItems = {
	    byStart: startArray,
	    byEnd: endArray
	  };

	  stack.orderByStart(this.orderedItems.byStart);
	  stack.orderByEnd(this.orderedItems.byEnd);
	};

	/**
	 * Update the visible items
	 * @param {{byStart: Item[], byEnd: Item[]}} orderedItems   All items ordered by start date and by end date
	 * @param {Item[]} visibleItems                             The previously visible items.
	 * @param {{start: number, end: number}} range              Visible range
	 * @return {Item[]} visibleItems                            The new visible items.
	 * @private
	 */
	Group.prototype._updateVisibleItems = function (orderedItems, oldVisibleItems, range) {
	  var visibleItems = [];
	  var visibleItemsLookup = {}; // we keep this to quickly look up if an item already exists in the list without using indexOf on visibleItems
	  var interval = (range.end - range.start) / 4;
	  var lowerBound = range.start - interval;
	  var upperBound = range.end + interval;
	  var item, i;

	  // this function is used to do the binary search.
	  var searchFunction = function searchFunction(value) {
	    if (value < lowerBound) {
	      return -1;
	    } else if (value <= upperBound) {
	      return 0;
	    } else {
	      return 1;
	    }
	  };

	  // first check if the items that were in view previously are still in view.
	  // IMPORTANT: this handles the case for the items with startdate before the window and enddate after the window!
	  // also cleans up invisible items.
	  if (oldVisibleItems.length > 0) {
	    for (i = 0; i < oldVisibleItems.length; i++) {
	      this._checkIfVisibleWithReference(oldVisibleItems[i], visibleItems, visibleItemsLookup, range);
	    }
	  }

	  // we do a binary search for the items that have only start values.
	  var initialPosByStart = util.binarySearchCustom(orderedItems.byStart, searchFunction, 'data', 'start');

	  // trace the visible items from the inital start pos both ways until an invisible item is found, we only look at the start values.
	  this._traceVisible(initialPosByStart, orderedItems.byStart, visibleItems, visibleItemsLookup, function (item) {
	    return item.data.start < lowerBound || item.data.start > upperBound;
	  });

	  // if the window has changed programmatically without overlapping the old window, the ranged items with start < lowerBound and end > upperbound are not shown.
	  // We therefore have to brute force check all items in the byEnd list
	  if (this.checkRangedItems == true) {
	    this.checkRangedItems = false;
	    for (i = 0; i < orderedItems.byEnd.length; i++) {
	      this._checkIfVisibleWithReference(orderedItems.byEnd[i], visibleItems, visibleItemsLookup, range);
	    }
	  } else {
	    // we do a binary search for the items that have defined end times.
	    var initialPosByEnd = util.binarySearchCustom(orderedItems.byEnd, searchFunction, 'data', 'end');

	    // trace the visible items from the inital start pos both ways until an invisible item is found, we only look at the end values.
	    this._traceVisible(initialPosByEnd, orderedItems.byEnd, visibleItems, visibleItemsLookup, function (item) {
	      return item.data.end < lowerBound || item.data.end > upperBound;
	    });
	  }

	  // finally, we reposition all the visible items.
	  for (i = 0; i < visibleItems.length; i++) {
	    item = visibleItems[i];
	    if (!item.displayed) item.show();
	    // reposition item horizontally
	    item.repositionX();
	  }

	  // debug
	  //console.log("new line")
	  //if (this.groupId == null) {
	  //  for (i = 0; i < orderedItems.byStart.length; i++) {
	  //    item = orderedItems.byStart[i].data;
	  //    console.log('start',i,initialPosByStart, item.start.valueOf(), item.content, item.start >= lowerBound && item.start <= upperBound,i == initialPosByStart ? "<------------------- HEREEEE" : "")
	  //  }
	  //  for (i = 0; i < orderedItems.byEnd.length; i++) {
	  //    item = orderedItems.byEnd[i].data;
	  //    console.log('rangeEnd',i,initialPosByEnd, item.end.valueOf(), item.content, item.end >= range.start && item.end <= range.end,i == initialPosByEnd ? "<------------------- HEREEEE" : "")
	  //  }
	  //}

	  return visibleItems;
	};

	Group.prototype._traceVisible = function (initialPos, items, visibleItems, visibleItemsLookup, breakCondition) {
	  var item;
	  var i;

	  if (initialPos != -1) {
	    for (i = initialPos; i >= 0; i--) {
	      item = items[i];
	      if (breakCondition(item)) {
	        break;
	      } else {
	        if (visibleItemsLookup[item.id] === undefined) {
	          visibleItemsLookup[item.id] = true;
	          visibleItems.push(item);
	        }
	      }
	    }

	    for (i = initialPos + 1; i < items.length; i++) {
	      item = items[i];
	      if (breakCondition(item)) {
	        break;
	      } else {
	        if (visibleItemsLookup[item.id] === undefined) {
	          visibleItemsLookup[item.id] = true;
	          visibleItems.push(item);
	        }
	      }
	    }
	  }
	};

	/**
	 * this function is very similar to the _checkIfInvisible() but it does not
	 * return booleans, hides the item if it should not be seen and always adds to
	 * the visibleItems.
	 * this one is for brute forcing and hiding.
	 *
	 * @param {Item} item
	 * @param {Array} visibleItems
	 * @param {{start:number, end:number}} range
	 * @private
	 */
	Group.prototype._checkIfVisible = function (item, visibleItems, range) {
	  if (item.isVisible(range)) {
	    if (!item.displayed) item.show();
	    // reposition item horizontally
	    item.repositionX();
	    visibleItems.push(item);
	  } else {
	    if (item.displayed) item.hide();
	  }
	};

	/**
	 * this function is very similar to the _checkIfInvisible() but it does not
	 * return booleans, hides the item if it should not be seen and always adds to
	 * the visibleItems.
	 * this one is for brute forcing and hiding.
	 *
	 * @param {Item} item
	 * @param {Array} visibleItems
	 * @param {{start:number, end:number}} range
	 * @private
	 */
	Group.prototype._checkIfVisibleWithReference = function (item, visibleItems, visibleItemsLookup, range) {
	  if (item.isVisible(range)) {
	    if (visibleItemsLookup[item.id] === undefined) {
	      visibleItemsLookup[item.id] = true;
	      visibleItems.push(item);
	    }
	  } else {
	    if (item.displayed) item.hide();
	  }
	};

	module.exports = Group;

/***/ },
/* 307 */
/***/ function(module, exports) {

	'use strict';

	// Utility functions for ordering and stacking of items
	var EPSILON = 0.001; // used when checking collisions, to prevent round-off errors

	/**
	 * Order items by their start data
	 * @param {Item[]} items
	 */
	exports.orderByStart = function (items) {
	  items.sort(function (a, b) {
	    return a.data.start - b.data.start;
	  });
	};

	/**
	 * Order items by their end date. If they have no end date, their start date
	 * is used.
	 * @param {Item[]} items
	 */
	exports.orderByEnd = function (items) {
	  items.sort(function (a, b) {
	    var aTime = 'end' in a.data ? a.data.end : a.data.start,
	        bTime = 'end' in b.data ? b.data.end : b.data.start;

	    return aTime - bTime;
	  });
	};

	/**
	 * Adjust vertical positions of the items such that they don't overlap each
	 * other.
	 * @param {Item[]} items
	 *            All visible items
	 * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin
	 *            Margins between items and between items and the axis.
	 * @param {boolean} [force=false]
	 *            If true, all items will be repositioned. If false (default), only
	 *            items having a top===null will be re-stacked
	 */
	exports.stack = function (items, margin, force) {
	  var i, iMax;

	  if (force) {
	    // reset top position of all items
	    for (i = 0, iMax = items.length; i < iMax; i++) {
	      items[i].top = null;
	    }
	  }

	  // calculate new, non-overlapping positions
	  for (i = 0, iMax = items.length; i < iMax; i++) {
	    var item = items[i];
	    if (item.stack && item.top === null) {
	      // initialize top position
	      item.top = margin.axis;

	      do {
	        // TODO: optimize checking for overlap. when there is a gap without items,
	        //       you only need to check for items from the next item on, not from zero
	        var collidingItem = null;
	        for (var j = 0, jj = items.length; j < jj; j++) {
	          var other = items[j];
	          if (other.top !== null && other !== item && other.stack && exports.collision(item, other, margin.item)) {
	            collidingItem = other;
	            break;
	          }
	        }

	        if (collidingItem != null) {
	          // There is a collision. Reposition the items above the colliding element
	          item.top = collidingItem.top + collidingItem.height + margin.item.vertical;
	        }
	      } while (collidingItem);
	    }
	  }
	};

	/**
	 * Adjust vertical positions of the items without stacking them
	 * @param {Item[]} items
	 *            All visible items
	 * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin
	 *            Margins between items and between items and the axis.
	 */
	exports.nostack = function (items, margin, subgroups) {
	  var i, iMax, newTop;

	  // reset top position of all items
	  for (i = 0, iMax = items.length; i < iMax; i++) {
	    if (items[i].data.subgroup !== undefined) {
	      newTop = margin.axis;
	      for (var subgroup in subgroups) {
	        if (subgroups.hasOwnProperty(subgroup)) {
	          if (subgroups[subgroup].visible == true && subgroups[subgroup].index < subgroups[items[i].data.subgroup].index) {
	            newTop += subgroups[subgroup].height + margin.item.vertical;
	          }
	        }
	      }
	      items[i].top = newTop;
	    } else {
	      items[i].top = margin.axis;
	    }
	  }
	};

	/**
	 * Test if the two provided items collide
	 * The items must have parameters left, width, top, and height.
	 * @param {Item} a          The first item
	 * @param {Item} b          The second item
	 * @param {{horizontal: number, vertical: number}} margin
	 *                          An object containing a horizontal and vertical
	 *                          minimum required margin.
	 * @return {boolean}        true if a and b collide, else false
	 */
	exports.collision = function (a, b, margin) {
	  return a.left - margin.horizontal + EPSILON < b.left + b.width && a.left + a.width + margin.horizontal - EPSILON > b.left && a.top - margin.vertical + EPSILON < b.top + b.height && a.top + a.height + margin.vertical - EPSILON > b.top;
	};

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Hammer = __webpack_require__(297);
	var Item = __webpack_require__(309);

	/**
	 * @constructor RangeItem
	 * @extends Item
	 * @param {Object} data             Object containing parameters start, end
	 *                                  content, className.
	 * @param {{toScreen: function, toTime: function}} conversion
	 *                                  Conversion functions from time to screen and vice versa
	 * @param {Object} [options]        Configuration options
	 *                                  // TODO: describe options
	 */
	function RangeItem(data, conversion, options) {
	  this.props = {
	    content: {
	      width: 0
	    }
	  };
	  this.overflow = false; // if contents can overflow (css styling), this flag is set to true

	  // validate data
	  if (data) {
	    if (data.start == undefined) {
	      throw new Error('Property "start" missing in item ' + data.id);
	    }
	    if (data.end == undefined) {
	      throw new Error('Property "end" missing in item ' + data.id);
	    }
	  }

	  Item.call(this, data, conversion, options);
	}

	RangeItem.prototype = new Item(null, null, null);

	RangeItem.prototype.baseClassName = 'item range';

	/**
	 * Check whether this item is visible inside given range
	 * @returns {{start: Number, end: Number}} range with a timestamp for start and end
	 * @returns {boolean} True if visible
	 */
	RangeItem.prototype.isVisible = function (range) {
	  // determine visibility
	  return this.data.start < range.end && this.data.end > range.start;
	};

	/**
	 * Repaint the item
	 */
	RangeItem.prototype.redraw = function () {
	  var dom = this.dom;
	  if (!dom) {
	    // create DOM
	    this.dom = {};
	    dom = this.dom;

	    // background box
	    dom.box = document.createElement('div');
	    // className is updated in redraw()

	    // contents box
	    dom.content = document.createElement('div');
	    dom.content.className = 'content';
	    dom.box.appendChild(dom.content);

	    // attach this item as attribute
	    dom.box['timeline-item'] = this;

	    this.dirty = true;
	  }

	  // append DOM to parent DOM
	  if (!this.parent) {
	    throw new Error('Cannot redraw item: no parent attached');
	  }
	  if (!dom.box.parentNode) {
	    var foreground = this.parent.dom.foreground;
	    if (!foreground) {
	      throw new Error('Cannot redraw item: parent has no foreground container element');
	    }
	    foreground.appendChild(dom.box);
	  }
	  this.displayed = true;

	  // Update DOM when item is marked dirty. An item is marked dirty when:
	  // - the item is not yet rendered
	  // - the item's data is changed
	  // - the item is selected/deselected
	  if (this.dirty) {
	    this._updateContents(this.dom.content);
	    this._updateTitle(this.dom.box);
	    this._updateDataAttributes(this.dom.box);
	    this._updateStyle(this.dom.box);

	    // update class
	    var className = (this.data.className ? ' ' + this.data.className : '') + (this.selected ? ' selected' : '');
	    dom.box.className = this.baseClassName + className;

	    // determine from css whether this box has overflow
	    this.overflow = window.getComputedStyle(dom.content).overflow !== 'hidden';

	    // recalculate size
	    // turn off max-width to be able to calculate the real width
	    // this causes an extra browser repaint/reflow, but so be it
	    this.dom.content.style.maxWidth = 'none';
	    this.props.content.width = this.dom.content.offsetWidth;
	    this.height = this.dom.box.offsetHeight;
	    this.dom.content.style.maxWidth = '';

	    this.dirty = false;
	  }

	  this._repaintDeleteButton(dom.box);
	  this._repaintDragLeft();
	  this._repaintDragRight();
	};

	/**
	 * Show the item in the DOM (when not already visible). The items DOM will
	 * be created when needed.
	 */
	RangeItem.prototype.show = function () {
	  if (!this.displayed) {
	    this.redraw();
	  }
	};

	/**
	 * Hide the item from the DOM (when visible)
	 * @return {Boolean} changed
	 */
	RangeItem.prototype.hide = function () {
	  if (this.displayed) {
	    var box = this.dom.box;

	    if (box.parentNode) {
	      box.parentNode.removeChild(box);
	    }

	    this.displayed = false;
	  }
	};

	/**
	 * Reposition the item horizontally
	 * @param {boolean} [limitSize=true] If true (default), the width of the range
	 *                                   item will be limited, as the browser cannot
	 *                                   display very wide divs. This means though
	 *                                   that the applied left and width may
	 *                                   not correspond to the ranges start and end
	 * @Override
	 */
	RangeItem.prototype.repositionX = function (limitSize) {
	  var parentWidth = this.parent.width;
	  var start = this.conversion.toScreen(this.data.start);
	  var end = this.conversion.toScreen(this.data.end);
	  var contentLeft;
	  var contentWidth;

	  // limit the width of the range, as browsers cannot draw very wide divs
	  if (limitSize === undefined || limitSize === true) {
	    if (start < -parentWidth) {
	      start = -parentWidth;
	    }
	    if (end > 2 * parentWidth) {
	      end = 2 * parentWidth;
	    }
	  }
	  var boxWidth = Math.max(end - start, 1);

	  if (this.overflow) {
	    this.left = start;
	    this.width = boxWidth + this.props.content.width;
	    contentWidth = this.props.content.width;

	    // Note: The calculation of width is an optimistic calculation, giving
	    //       a width which will not change when moving the Timeline
	    //       So no re-stacking needed, which is nicer for the eye;
	  } else {
	    this.left = start;
	    this.width = boxWidth;
	    contentWidth = Math.min(end - start - 2 * this.options.padding, this.props.content.width);
	  }

	  this.dom.box.style.left = this.left + 'px';
	  this.dom.box.style.width = boxWidth + 'px';

	  switch (this.options.align) {
	    case 'left':
	      this.dom.content.style.left = '0';
	      break;

	    case 'right':
	      this.dom.content.style.left = Math.max(boxWidth - contentWidth - 2 * this.options.padding, 0) + 'px';
	      break;

	    case 'center':
	      this.dom.content.style.left = Math.max((boxWidth - contentWidth - 2 * this.options.padding) / 2, 0) + 'px';
	      break;

	    default:
	      // 'auto'
	      // when range exceeds left of the window, position the contents at the left of the visible area
	      if (this.overflow) {
	        if (end > 0) {
	          contentLeft = Math.max(-start, 0);
	        } else {
	          contentLeft = -contentWidth; // ensure it's not visible anymore
	        }
	      } else {
	        if (start < 0) {
	          contentLeft = Math.min(-start, end - start - contentWidth - 2 * this.options.padding);
	          // TODO: remove the need for options.padding. it's terrible.
	        } else {
	          contentLeft = 0;
	        }
	      }
	      this.dom.content.style.left = contentLeft + 'px';
	  }
	};

	/**
	 * Reposition the item vertically
	 * @Override
	 */
	RangeItem.prototype.repositionY = function () {
	  var orientation = this.options.orientation,
	      box = this.dom.box;

	  if (orientation == 'top') {
	    box.style.top = this.top + 'px';
	  } else {
	    box.style.top = this.parent.height - this.top - this.height + 'px';
	  }
	};

	/**
	 * Repaint a drag area on the left side of the range when the range is selected
	 * @protected
	 */
	RangeItem.prototype._repaintDragLeft = function () {
	  if (this.selected && this.options.editable.updateTime && !this.dom.dragLeft) {
	    // create and show drag area
	    var dragLeft = document.createElement('div');
	    dragLeft.className = 'drag-left';
	    dragLeft.dragLeftItem = this;

	    // TODO: this should be redundant?
	    Hammer(dragLeft, {
	      preventDefault: true
	    }).on('drag', function () {
	      //console.log('drag left')
	    });

	    this.dom.box.appendChild(dragLeft);
	    this.dom.dragLeft = dragLeft;
	  } else if (!this.selected && this.dom.dragLeft) {
	    // delete drag area
	    if (this.dom.dragLeft.parentNode) {
	      this.dom.dragLeft.parentNode.removeChild(this.dom.dragLeft);
	    }
	    this.dom.dragLeft = null;
	  }
	};

	/**
	 * Repaint a drag area on the right side of the range when the range is selected
	 * @protected
	 */
	RangeItem.prototype._repaintDragRight = function () {
	  if (this.selected && this.options.editable.updateTime && !this.dom.dragRight) {
	    // create and show drag area
	    var dragRight = document.createElement('div');
	    dragRight.className = 'drag-right';
	    dragRight.dragRightItem = this;

	    // TODO: this should be redundant?
	    Hammer(dragRight, {
	      preventDefault: true
	    }).on('drag', function () {
	      //console.log('drag right')
	    });

	    this.dom.box.appendChild(dragRight);
	    this.dom.dragRight = dragRight;
	  } else if (!this.selected && this.dom.dragRight) {
	    // delete drag area
	    if (this.dom.dragRight.parentNode) {
	      this.dom.dragRight.parentNode.removeChild(this.dom.dragRight);
	    }
	    this.dom.dragRight = null;
	  }
	};

	module.exports = RangeItem;

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Hammer = __webpack_require__(297);
	var util = __webpack_require__(175);

	/**
	 * @constructor Item
	 * @param {Object} data             Object containing (optional) parameters type,
	 *                                  start, end, content, group, className.
	 * @param {{toScreen: function, toTime: function}} conversion
	 *                                  Conversion functions from time to screen and vice versa
	 * @param {Object} options          Configuration options
	 *                                  // TODO: describe available options
	 */
	function Item(data, conversion, options) {
	  this.id = null;
	  this.parent = null;
	  this.data = data;
	  this.dom = null;
	  this.conversion = conversion || {};
	  this.options = options || {};

	  this.selected = false;
	  this.displayed = false;
	  this.dirty = true;

	  this.top = null;
	  this.left = null;
	  this.width = null;
	  this.height = null;
	}

	Item.prototype.stack = true;

	/**
	 * Select current item
	 */
	Item.prototype.select = function () {
	  this.selected = true;
	  this.dirty = true;
	  if (this.displayed) this.redraw();
	};

	/**
	 * Unselect current item
	 */
	Item.prototype.unselect = function () {
	  this.selected = false;
	  this.dirty = true;
	  if (this.displayed) this.redraw();
	};

	/**
	 * Set data for the item. Existing data will be updated. The id should not
	 * be changed. When the item is displayed, it will be redrawn immediately.
	 * @param {Object} data
	 */
	Item.prototype.setData = function (data) {
	  var groupChanged = data.group != undefined && this.data.group != data.group;
	  if (groupChanged) {
	    this.parent.itemSet._moveToGroup(this, data.group);
	  }

	  this.data = data;
	  this.dirty = true;
	  if (this.displayed) this.redraw();
	};

	/**
	 * Set a parent for the item
	 * @param {ItemSet | Group} parent
	 */
	Item.prototype.setParent = function (parent) {
	  if (this.displayed) {
	    this.hide();
	    this.parent = parent;
	    if (this.parent) {
	      this.show();
	    }
	  } else {
	    this.parent = parent;
	  }
	};

	/**
	 * Check whether this item is visible inside given range
	 * @returns {{start: Number, end: Number}} range with a timestamp for start and end
	 * @returns {boolean} True if visible
	 */
	Item.prototype.isVisible = function (range) {
	  // Should be implemented by Item implementations
	  return false;
	};

	/**
	 * Show the Item in the DOM (when not already visible)
	 * @return {Boolean} changed
	 */
	Item.prototype.show = function () {
	  return false;
	};

	/**
	 * Hide the Item from the DOM (when visible)
	 * @return {Boolean} changed
	 */
	Item.prototype.hide = function () {
	  return false;
	};

	/**
	 * Repaint the item
	 */
	Item.prototype.redraw = function () {
	  // should be implemented by the item
	};

	/**
	 * Reposition the Item horizontally
	 */
	Item.prototype.repositionX = function () {
	  // should be implemented by the item
	};

	/**
	 * Reposition the Item vertically
	 */
	Item.prototype.repositionY = function () {
	  // should be implemented by the item
	};

	/**
	 * Repaint a delete button on the top right of the item when the item is selected
	 * @param {HTMLElement} anchor
	 * @protected
	 */
	Item.prototype._repaintDeleteButton = function (anchor) {
	  if (this.selected && this.options.editable.remove && !this.dom.deleteButton) {
	    // create and show button
	    var me = this;

	    var deleteButton = document.createElement('div');
	    deleteButton.className = 'delete';
	    deleteButton.title = 'Delete this item';

	    Hammer(deleteButton, {
	      preventDefault: true
	    }).on('tap', function (event) {
	      event.preventDefault();
	      event.stopPropagation();
	      me.parent.removeFromDataSet(me);
	    });

	    anchor.appendChild(deleteButton);
	    this.dom.deleteButton = deleteButton;
	  } else if (!this.selected && this.dom.deleteButton) {
	    // remove button
	    if (this.dom.deleteButton.parentNode) {
	      this.dom.deleteButton.parentNode.removeChild(this.dom.deleteButton);
	    }
	    this.dom.deleteButton = null;
	  }
	};

	/**
	 * Set HTML contents for the item
	 * @param {Element} element   HTML element to fill with the contents
	 * @private
	 */
	Item.prototype._updateContents = function (element) {
	  var content;
	  if (this.options.template) {
	    var itemData = this.parent.itemSet.itemsData.get(this.id); // get a clone of the data from the dataset
	    content = this.options.template(itemData);
	  } else {
	    content = this.data.content;
	  }

	  if (content !== this.content) {
	    // only replace the content when changed
	    if (content instanceof Element) {
	      element.innerHTML = '';
	      element.appendChild(content);
	    } else if (content != undefined) {
	      element.innerHTML = content;
	    } else {
	      if (!(this.data.type == 'background' && this.data.content === undefined)) {
	        throw new Error('Property "content" missing in item ' + this.id);
	      }
	    }

	    this.content = content;
	  }
	};

	/**
	 * Set HTML contents for the item
	 * @param {Element} element   HTML element to fill with the contents
	 * @private
	 */
	Item.prototype._updateTitle = function (element) {
	  if (this.data.title != null) {
	    element.title = this.data.title || '';
	  } else {
	    element.removeAttribute('title');
	  }
	};

	/**
	 * Process dataAttributes timeline option and set as data- attributes on dom.content
	 * @param {Element} element   HTML element to which the attributes will be attached
	 * @private
	 */
	Item.prototype._updateDataAttributes = function (element) {
	  if (this.options.dataAttributes && this.options.dataAttributes.length > 0) {
	    var attributes = [];

	    if (Array.isArray(this.options.dataAttributes)) {
	      attributes = this.options.dataAttributes;
	    } else if (this.options.dataAttributes == 'all') {
	      attributes = Object.keys(this.data);
	    } else {
	      return;
	    }

	    for (var i = 0; i < attributes.length; i++) {
	      var name = attributes[i];
	      var value = this.data[name];

	      if (value != null) {
	        element.setAttribute('data-' + name, value);
	      } else {
	        element.removeAttribute('data-' + name);
	      }
	    }
	  }
	};

	/**
	 * Update custom styles of the element
	 * @param element
	 * @private
	 */
	Item.prototype._updateStyle = function (element) {
	  // remove old styles
	  if (this.style) {
	    util.removeCssText(element, this.style);
	    this.style = null;
	  }

	  // append new styles
	  if (this.data.style) {
	    util.addCssText(element, this.data.style);
	    this.style = this.data.style;
	  }
	};

	module.exports = Item;

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(175);
	var Group = __webpack_require__(306);

	/**
	 * @constructor BackgroundGroup
	 * @param {Number | String} groupId
	 * @param {Object} data
	 * @param {ItemSet} itemSet
	 */
	function BackgroundGroup(groupId, data, itemSet) {
	  Group.call(this, groupId, data, itemSet);

	  this.width = 0;
	  this.height = 0;
	  this.top = 0;
	  this.left = 0;
	}

	BackgroundGroup.prototype = Object.create(Group.prototype);

	/**
	 * Repaint this group
	 * @param {{start: number, end: number}} range
	 * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin
	 * @param {boolean} [restack=false]  Force restacking of all items
	 * @return {boolean} Returns true if the group is resized
	 */
	BackgroundGroup.prototype.redraw = function (range, margin, restack) {
	  var resized = false;

	  this.visibleItems = this._updateVisibleItems(this.orderedItems, this.visibleItems, range);

	  // calculate actual size
	  this.width = this.dom.background.offsetWidth;

	  // apply new height (just always zero for BackgroundGroup
	  this.dom.background.style.height = '0';

	  // update vertical position of items after they are re-stacked and the height of the group is calculated
	  for (var i = 0, ii = this.visibleItems.length; i < ii; i++) {
	    var item = this.visibleItems[i];
	    item.repositionY(margin);
	  }

	  return resized;
	};

	/**
	 * Show this group: attach to the DOM
	 */
	BackgroundGroup.prototype.show = function () {
	  if (!this.dom.background.parentNode) {
	    this.itemSet.dom.background.appendChild(this.dom.background);
	  }
	};

	module.exports = BackgroundGroup;

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Item = __webpack_require__(309);
	var util = __webpack_require__(175);

	/**
	 * @constructor BoxItem
	 * @extends Item
	 * @param {Object} data             Object containing parameters start
	 *                                  content, className.
	 * @param {{toScreen: function, toTime: function}} conversion
	 *                                  Conversion functions from time to screen and vice versa
	 * @param {Object} [options]        Configuration options
	 *                                  // TODO: describe available options
	 */
	function BoxItem(data, conversion, options) {
	  this.props = {
	    dot: {
	      width: 0,
	      height: 0
	    },
	    line: {
	      width: 0,
	      height: 0
	    }
	  };

	  // validate data
	  if (data) {
	    if (data.start == undefined) {
	      throw new Error('Property "start" missing in item ' + data);
	    }
	  }

	  Item.call(this, data, conversion, options);
	}

	BoxItem.prototype = new Item(null, null, null);

	/**
	 * Check whether this item is visible inside given range
	 * @returns {{start: Number, end: Number}} range with a timestamp for start and end
	 * @returns {boolean} True if visible
	 */
	BoxItem.prototype.isVisible = function (range) {
	  // determine visibility
	  // TODO: account for the real width of the item. Right now we just add 1/4 to the window
	  var interval = (range.end - range.start) / 4;
	  return this.data.start > range.start - interval && this.data.start < range.end + interval;
	};

	/**
	 * Repaint the item
	 */
	BoxItem.prototype.redraw = function () {
	  var dom = this.dom;
	  if (!dom) {
	    // create DOM
	    this.dom = {};
	    dom = this.dom;

	    // create main box
	    dom.box = document.createElement('DIV');

	    // contents box (inside the background box). used for making margins
	    dom.content = document.createElement('DIV');
	    dom.content.className = 'content';
	    dom.box.appendChild(dom.content);

	    // line to axis
	    dom.line = document.createElement('DIV');
	    dom.line.className = 'line';

	    // dot on axis
	    dom.dot = document.createElement('DIV');
	    dom.dot.className = 'dot';

	    // attach this item as attribute
	    dom.box['timeline-item'] = this;

	    this.dirty = true;
	  }

	  // append DOM to parent DOM
	  if (!this.parent) {
	    throw new Error('Cannot redraw item: no parent attached');
	  }
	  if (!dom.box.parentNode) {
	    var foreground = this.parent.dom.foreground;
	    if (!foreground) throw new Error('Cannot redraw item: parent has no foreground container element');
	    foreground.appendChild(dom.box);
	  }
	  if (!dom.line.parentNode) {
	    var background = this.parent.dom.background;
	    if (!background) throw new Error('Cannot redraw item: parent has no background container element');
	    background.appendChild(dom.line);
	  }
	  if (!dom.dot.parentNode) {
	    var axis = this.parent.dom.axis;
	    if (!background) throw new Error('Cannot redraw item: parent has no axis container element');
	    axis.appendChild(dom.dot);
	  }
	  this.displayed = true;

	  // Update DOM when item is marked dirty. An item is marked dirty when:
	  // - the item is not yet rendered
	  // - the item's data is changed
	  // - the item is selected/deselected
	  if (this.dirty) {
	    this._updateContents(this.dom.content);
	    this._updateTitle(this.dom.box);
	    this._updateDataAttributes(this.dom.box);
	    this._updateStyle(this.dom.box);

	    // update class
	    var className = (this.data.className ? ' ' + this.data.className : '') + (this.selected ? ' selected' : '');
	    dom.box.className = 'item box' + className;
	    dom.line.className = 'item line' + className;
	    dom.dot.className = 'item dot' + className;

	    // recalculate size
	    this.props.dot.height = dom.dot.offsetHeight;
	    this.props.dot.width = dom.dot.offsetWidth;
	    this.props.line.width = dom.line.offsetWidth;
	    this.width = dom.box.offsetWidth;
	    this.height = dom.box.offsetHeight;

	    this.dirty = false;
	  }

	  this._repaintDeleteButton(dom.box);
	};

	/**
	 * Show the item in the DOM (when not already displayed). The items DOM will
	 * be created when needed.
	 */
	BoxItem.prototype.show = function () {
	  if (!this.displayed) {
	    this.redraw();
	  }
	};

	/**
	 * Hide the item from the DOM (when visible)
	 */
	BoxItem.prototype.hide = function () {
	  if (this.displayed) {
	    var dom = this.dom;

	    if (dom.box.parentNode) dom.box.parentNode.removeChild(dom.box);
	    if (dom.line.parentNode) dom.line.parentNode.removeChild(dom.line);
	    if (dom.dot.parentNode) dom.dot.parentNode.removeChild(dom.dot);

	    this.displayed = false;
	  }
	};

	/**
	 * Reposition the item horizontally
	 * @Override
	 */
	BoxItem.prototype.repositionX = function () {
	  var start = this.conversion.toScreen(this.data.start);
	  var align = this.options.align;
	  var left;

	  // calculate left position of the box
	  if (align == 'right') {
	    this.left = start - this.width;
	  } else if (align == 'left') {
	    this.left = start;
	  } else {
	    // default or 'center'
	    this.left = start - this.width / 2;
	  }

	  // reposition box
	  this.dom.box.style.left = this.left + 'px';

	  // reposition line
	  this.dom.line.style.left = start - this.props.line.width / 2 + 'px';

	  // reposition dot
	  this.dom.dot.style.left = start - this.props.dot.width / 2 + 'px';
	};

	/**
	 * Reposition the item vertically
	 * @Override
	 */
	BoxItem.prototype.repositionY = function () {
	  var orientation = this.options.orientation;
	  var box = this.dom.box;
	  var line = this.dom.line;
	  var dot = this.dom.dot;

	  if (orientation == 'top') {
	    box.style.top = (this.top || 0) + 'px';

	    line.style.top = '0';
	    line.style.height = this.parent.top + this.top + 1 + 'px';
	    line.style.bottom = '';
	  } else {
	    // orientation 'bottom'
	    var itemSetHeight = this.parent.itemSet.props.height; // TODO: this is nasty
	    var lineHeight = itemSetHeight - this.parent.top - this.parent.height + this.top;

	    box.style.top = (this.parent.height - this.top - this.height || 0) + 'px';
	    line.style.top = itemSetHeight - lineHeight + 'px';
	    line.style.bottom = '0';
	  }

	  dot.style.top = -this.props.dot.height / 2 + 'px';
	};

	module.exports = BoxItem;

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Item = __webpack_require__(309);

	/**
	 * @constructor PointItem
	 * @extends Item
	 * @param {Object} data             Object containing parameters start
	 *                                  content, className.
	 * @param {{toScreen: function, toTime: function}} conversion
	 *                                  Conversion functions from time to screen and vice versa
	 * @param {Object} [options]        Configuration options
	 *                                  // TODO: describe available options
	 */
	function PointItem(data, conversion, options) {
	  this.props = {
	    dot: {
	      top: 0,
	      width: 0,
	      height: 0
	    },
	    content: {
	      height: 0,
	      marginLeft: 0
	    }
	  };

	  // validate data
	  if (data) {
	    if (data.start == undefined) {
	      throw new Error('Property "start" missing in item ' + data);
	    }
	  }

	  Item.call(this, data, conversion, options);
	}

	PointItem.prototype = new Item(null, null, null);

	/**
	 * Check whether this item is visible inside given range
	 * @returns {{start: Number, end: Number}} range with a timestamp for start and end
	 * @returns {boolean} True if visible
	 */
	PointItem.prototype.isVisible = function (range) {
	  // determine visibility
	  // TODO: account for the real width of the item. Right now we just add 1/4 to the window
	  var interval = (range.end - range.start) / 4;
	  return this.data.start > range.start - interval && this.data.start < range.end + interval;
	};

	/**
	 * Repaint the item
	 */
	PointItem.prototype.redraw = function () {
	  var dom = this.dom;
	  if (!dom) {
	    // create DOM
	    this.dom = {};
	    dom = this.dom;

	    // background box
	    dom.point = document.createElement('div');
	    // className is updated in redraw()

	    // contents box, right from the dot
	    dom.content = document.createElement('div');
	    dom.content.className = 'content';
	    dom.point.appendChild(dom.content);

	    // dot at start
	    dom.dot = document.createElement('div');
	    dom.point.appendChild(dom.dot);

	    // attach this item as attribute
	    dom.point['timeline-item'] = this;

	    this.dirty = true;
	  }

	  // append DOM to parent DOM
	  if (!this.parent) {
	    throw new Error('Cannot redraw item: no parent attached');
	  }
	  if (!dom.point.parentNode) {
	    var foreground = this.parent.dom.foreground;
	    if (!foreground) {
	      throw new Error('Cannot redraw item: parent has no foreground container element');
	    }
	    foreground.appendChild(dom.point);
	  }
	  this.displayed = true;

	  // Update DOM when item is marked dirty. An item is marked dirty when:
	  // - the item is not yet rendered
	  // - the item's data is changed
	  // - the item is selected/deselected
	  if (this.dirty) {
	    this._updateContents(this.dom.content);
	    this._updateTitle(this.dom.point);
	    this._updateDataAttributes(this.dom.point);
	    this._updateStyle(this.dom.point);

	    // update class
	    var className = (this.data.className ? ' ' + this.data.className : '') + (this.selected ? ' selected' : '');
	    dom.point.className = 'item point' + className;
	    dom.dot.className = 'item dot' + className;

	    // recalculate size
	    this.width = dom.point.offsetWidth;
	    this.height = dom.point.offsetHeight;
	    this.props.dot.width = dom.dot.offsetWidth;
	    this.props.dot.height = dom.dot.offsetHeight;
	    this.props.content.height = dom.content.offsetHeight;

	    // resize contents
	    dom.content.style.marginLeft = 2 * this.props.dot.width + 'px';
	    //dom.content.style.marginRight = ... + 'px'; // TODO: margin right

	    dom.dot.style.top = (this.height - this.props.dot.height) / 2 + 'px';
	    dom.dot.style.left = this.props.dot.width / 2 + 'px';

	    this.dirty = false;
	  }

	  this._repaintDeleteButton(dom.point);
	};

	/**
	 * Show the item in the DOM (when not already visible). The items DOM will
	 * be created when needed.
	 */
	PointItem.prototype.show = function () {
	  if (!this.displayed) {
	    this.redraw();
	  }
	};

	/**
	 * Hide the item from the DOM (when visible)
	 */
	PointItem.prototype.hide = function () {
	  if (this.displayed) {
	    if (this.dom.point.parentNode) {
	      this.dom.point.parentNode.removeChild(this.dom.point);
	    }

	    this.displayed = false;
	  }
	};

	/**
	 * Reposition the item horizontally
	 * @Override
	 */
	PointItem.prototype.repositionX = function () {
	  var start = this.conversion.toScreen(this.data.start);

	  this.left = start - this.props.dot.width;

	  // reposition point
	  this.dom.point.style.left = this.left + 'px';
	};

	/**
	 * Reposition the item vertically
	 * @Override
	 */
	PointItem.prototype.repositionY = function () {
	  var orientation = this.options.orientation,
	      point = this.dom.point;

	  if (orientation == 'top') {
	    point.style.top = this.top + 'px';
	  } else {
	    point.style.top = this.parent.height - this.top - this.height + 'px';
	  }
	};

	module.exports = PointItem;

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Hammer = __webpack_require__(297);
	var Item = __webpack_require__(309);
	var BackgroundGroup = __webpack_require__(310);
	var RangeItem = __webpack_require__(308);

	/**
	 * @constructor BackgroundItem
	 * @extends Item
	 * @param {Object} data             Object containing parameters start, end
	 *                                  content, className.
	 * @param {{toScreen: function, toTime: function}} conversion
	 *                                  Conversion functions from time to screen and vice versa
	 * @param {Object} [options]        Configuration options
	 *                                  // TODO: describe options
	 */
	// TODO: implement support for the BackgroundItem just having a start, then being displayed as a sort of an annotation
	function BackgroundItem(data, conversion, options) {
	  this.props = {
	    content: {
	      width: 0
	    }
	  };
	  this.overflow = false; // if contents can overflow (css styling), this flag is set to true

	  // validate data
	  if (data) {
	    if (data.start == undefined) {
	      throw new Error('Property "start" missing in item ' + data.id);
	    }
	    if (data.end == undefined) {
	      throw new Error('Property "end" missing in item ' + data.id);
	    }
	  }

	  Item.call(this, data, conversion, options);

	  this.emptyContent = false;
	}

	BackgroundItem.prototype = new Item(null, null, null);

	BackgroundItem.prototype.baseClassName = 'item background';
	BackgroundItem.prototype.stack = false;

	/**
	 * Check whether this item is visible inside given range
	 * @returns {{start: Number, end: Number}} range with a timestamp for start and end
	 * @returns {boolean} True if visible
	 */
	BackgroundItem.prototype.isVisible = function (range) {
	  // determine visibility
	  return this.data.start < range.end && this.data.end > range.start;
	};

	/**
	 * Repaint the item
	 */
	BackgroundItem.prototype.redraw = function () {
	  var dom = this.dom;
	  if (!dom) {
	    // create DOM
	    this.dom = {};
	    dom = this.dom;

	    // background box
	    dom.box = document.createElement('div');
	    // className is updated in redraw()

	    // contents box
	    dom.content = document.createElement('div');
	    dom.content.className = 'content';
	    dom.box.appendChild(dom.content);

	    // Note: we do NOT attach this item as attribute to the DOM,
	    //       such that background items cannot be selected
	    //dom.box['timeline-item'] = this;

	    this.dirty = true;
	  }

	  // append DOM to parent DOM
	  if (!this.parent) {
	    throw new Error('Cannot redraw item: no parent attached');
	  }
	  if (!dom.box.parentNode) {
	    var background = this.parent.dom.background;
	    if (!background) {
	      throw new Error('Cannot redraw item: parent has no background container element');
	    }
	    background.appendChild(dom.box);
	  }
	  this.displayed = true;

	  // Update DOM when item is marked dirty. An item is marked dirty when:
	  // - the item is not yet rendered
	  // - the item's data is changed
	  // - the item is selected/deselected
	  if (this.dirty) {
	    this._updateContents(this.dom.content);
	    this._updateTitle(this.dom.content);
	    this._updateDataAttributes(this.dom.content);
	    this._updateStyle(this.dom.box);

	    // update class
	    var className = (this.data.className ? ' ' + this.data.className : '') + (this.selected ? ' selected' : '');
	    dom.box.className = this.baseClassName + className;

	    // determine from css whether this box has overflow
	    this.overflow = window.getComputedStyle(dom.content).overflow !== 'hidden';

	    // recalculate size
	    this.props.content.width = this.dom.content.offsetWidth;
	    this.height = 0; // set height zero, so this item will be ignored when stacking items

	    this.dirty = false;
	  }
	};

	/**
	 * Show the item in the DOM (when not already visible). The items DOM will
	 * be created when needed.
	 */
	BackgroundItem.prototype.show = RangeItem.prototype.show;

	/**
	 * Hide the item from the DOM (when visible)
	 * @return {Boolean} changed
	 */
	BackgroundItem.prototype.hide = RangeItem.prototype.hide;

	/**
	 * Reposition the item horizontally
	 * @Override
	 */
	BackgroundItem.prototype.repositionX = RangeItem.prototype.repositionX;

	/**
	 * Reposition the item vertically
	 * @Override
	 */
	BackgroundItem.prototype.repositionY = function (margin) {
	  var onTop = this.options.orientation === 'top';
	  this.dom.content.style.top = onTop ? '' : '0';
	  this.dom.content.style.bottom = onTop ? '0' : '';
	  var height;

	  // special positioning for subgroups
	  if (this.data.subgroup !== undefined) {
	    // TODO: instead of calculating the top position of the subgroups here for every BackgroundItem, calculate the top of the subgroup once in Itemset

	    var itemSubgroup = this.data.subgroup;
	    var subgroups = this.parent.subgroups;
	    var subgroupIndex = subgroups[itemSubgroup].index;
	    // if the orientation is top, we need to take the difference in height into account.
	    if (onTop == true) {
	      // the first subgroup will have to account for the distance from the top to the first item.
	      height = this.parent.subgroups[itemSubgroup].height + margin.item.vertical;
	      height += subgroupIndex == 0 ? margin.axis - 0.5 * margin.item.vertical : 0;
	      var newTop = this.parent.top;
	      for (var subgroup in subgroups) {
	        if (subgroups.hasOwnProperty(subgroup)) {
	          if (subgroups[subgroup].visible == true && subgroups[subgroup].index < subgroupIndex) {
	            newTop += subgroups[subgroup].height + margin.item.vertical;
	          }
	        }
	      }

	      // the others will have to be offset downwards with this same distance.
	      newTop += subgroupIndex != 0 ? margin.axis - 0.5 * margin.item.vertical : 0;
	      this.dom.box.style.top = newTop + 'px';
	      this.dom.box.style.bottom = '';
	    }
	    // and when the orientation is bottom:
	    else {
	        var newTop = this.parent.top;
	        var totalHeight = 0;
	        for (var subgroup in subgroups) {
	          if (subgroups.hasOwnProperty(subgroup)) {
	            if (subgroups[subgroup].visible == true) {
	              var newHeight = subgroups[subgroup].height + margin.item.vertical;
	              totalHeight += newHeight;
	              if (subgroups[subgroup].index > subgroupIndex) {
	                newTop += newHeight;
	              }
	            }
	          }
	        }
	        height = this.parent.subgroups[itemSubgroup].height + margin.item.vertical;
	        this.dom.box.style.top = this.parent.height - totalHeight + newTop + 'px';
	        this.dom.box.style.bottom = '';
	      }
	  }
	  // and in the case of no subgroups:
	  else {
	      // we want backgrounds with groups to only show in groups.
	      if (this.parent instanceof BackgroundGroup) {
	        // if the item is not in a group:
	        height = Math.max(this.parent.height, this.parent.itemSet.body.domProps.center.height, this.parent.itemSet.body.domProps.centerContainer.height);
	        this.dom.box.style.top = onTop ? '0' : '';
	        this.dom.box.style.bottom = onTop ? '' : '0';
	      } else {
	        height = this.parent.height;
	        // same alignment for items when orientation is top or bottom
	        this.dom.box.style.top = this.parent.top + 'px';
	        this.dom.box.style.bottom = '';
	      }
	    }
	  this.dom.box.style.height = height + 'px';
	};

	module.exports = BackgroundItem;

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var util = __webpack_require__(175);
	var Component = __webpack_require__(301);
	var TimeStep = __webpack_require__(305);
	var DateUtil = __webpack_require__(302);
	var moment = __webpack_require__(176);

	/**
	 * A horizontal time axis
	 * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} body
	 * @param {Object} [options]        See TimeAxis.setOptions for the available
	 *                                  options.
	 * @constructor TimeAxis
	 * @extends Component
	 */
	function TimeAxis(body, options) {
	  this.dom = {
	    foreground: null,
	    lines: [],
	    majorTexts: [],
	    minorTexts: [],
	    redundant: {
	      lines: [],
	      majorTexts: [],
	      minorTexts: []
	    }
	  };
	  this.props = {
	    range: {
	      start: 0,
	      end: 0,
	      minimumStep: 0
	    },
	    lineTop: 0
	  };

	  this.defaultOptions = {
	    orientation: 'bottom', // axis orientation: 'top' or 'bottom'
	    showMinorLabels: true,
	    showMajorLabels: true,
	    format: null,
	    timeAxis: null
	  };
	  this.options = util.extend({}, this.defaultOptions);

	  this.body = body;

	  // create the HTML DOM
	  this._create();

	  this.setOptions(options);
	}

	TimeAxis.prototype = new Component();

	/**
	 * Set options for the TimeAxis.
	 * Parameters will be merged in current options.
	 * @param {Object} options  Available options:
	 *                          {string} [orientation]
	 *                          {boolean} [showMinorLabels]
	 *                          {boolean} [showMajorLabels]
	 */
	TimeAxis.prototype.setOptions = function (options) {
	  if (options) {
	    // copy all options that we know
	    util.selectiveExtend(['showMinorLabels', 'showMajorLabels', 'hiddenDates', 'format', 'timeAxis'], this.options, options);

	    if ('orientation' in options) {
	      if (typeof options.orientation === 'string') {
	        this.options.orientation = options.orientation;
	      } else if (_typeof(options.orientation) === 'object' && 'axis' in options.orientation) {
	        this.options.orientation = options.orientation.axis;
	      }
	    }

	    // apply locale to moment.js
	    // TODO: not so nice, this is applied globally to moment.js
	    if ('locale' in options) {
	      if (typeof moment.locale === 'function') {
	        // moment.js 2.8.1+
	        moment.locale(options.locale);
	      } else {
	        moment.lang(options.locale);
	      }
	    }
	  }
	};

	/**
	 * Create the HTML DOM for the TimeAxis
	 */
	TimeAxis.prototype._create = function () {
	  this.dom.foreground = document.createElement('div');
	  this.dom.background = document.createElement('div');

	  this.dom.foreground.className = 'timeaxis foreground';
	  this.dom.background.className = 'timeaxis background';
	};

	/**
	 * Destroy the TimeAxis
	 */
	TimeAxis.prototype.destroy = function () {
	  // remove from DOM
	  if (this.dom.foreground.parentNode) {
	    this.dom.foreground.parentNode.removeChild(this.dom.foreground);
	  }
	  if (this.dom.background.parentNode) {
	    this.dom.background.parentNode.removeChild(this.dom.background);
	  }

	  this.body = null;
	};

	/**
	 * Repaint the component
	 * @return {boolean} Returns true if the component is resized
	 */
	TimeAxis.prototype.redraw = function () {
	  var options = this.options;
	  var props = this.props;
	  var foreground = this.dom.foreground;
	  var background = this.dom.background;

	  // determine the correct parent DOM element (depending on option orientation)
	  var parent = options.orientation == 'top' ? this.body.dom.top : this.body.dom.bottom;
	  var parentChanged = foreground.parentNode !== parent;

	  // calculate character width and height
	  this._calculateCharSize();

	  // TODO: recalculate sizes only needed when parent is resized or options is changed
	  var showMinorLabels = this.options.showMinorLabels;
	  var showMajorLabels = this.options.showMajorLabels;

	  // determine the width and height of the elemens for the axis
	  props.minorLabelHeight = showMinorLabels ? props.minorCharHeight : 0;
	  props.majorLabelHeight = showMajorLabels ? props.majorCharHeight : 0;
	  props.height = props.minorLabelHeight + props.majorLabelHeight;
	  props.width = foreground.offsetWidth;

	  props.minorLineHeight = this.body.domProps.root.height - props.majorLabelHeight - (options.orientation == 'top' ? this.body.domProps.bottom.height : this.body.domProps.top.height);
	  props.minorLineWidth = 1; // TODO: really calculate width
	  props.majorLineHeight = props.minorLineHeight + props.majorLabelHeight;
	  props.majorLineWidth = 1; // TODO: really calculate width

	  //  take foreground and background offline while updating (is almost twice as fast)
	  var foregroundNextSibling = foreground.nextSibling;
	  var backgroundNextSibling = background.nextSibling;
	  foreground.parentNode && foreground.parentNode.removeChild(foreground);
	  background.parentNode && background.parentNode.removeChild(background);

	  foreground.style.height = this.props.height + 'px';

	  this._repaintLabels();

	  // put DOM online again (at the same place)
	  if (foregroundNextSibling) {
	    parent.insertBefore(foreground, foregroundNextSibling);
	  } else {
	    parent.appendChild(foreground);
	  }
	  if (backgroundNextSibling) {
	    this.body.dom.backgroundVertical.insertBefore(background, backgroundNextSibling);
	  } else {
	    this.body.dom.backgroundVertical.appendChild(background);
	  }

	  return this._isResized() || parentChanged;
	};

	/**
	 * Repaint major and minor text labels and vertical grid lines
	 * @private
	 */
	TimeAxis.prototype._repaintLabels = function () {
	  var orientation = this.options.orientation;

	  // calculate range and step (step such that we have space for 7 characters per label)
	  var start = util.convert(this.body.range.start, 'Number');
	  var end = util.convert(this.body.range.end, 'Number');
	  var timeLabelsize = this.body.util.toTime((this.props.minorCharWidth || 10) * 7).valueOf();
	  var minimumStep = timeLabelsize - DateUtil.getHiddenDurationBefore(this.body.hiddenDates, this.body.range, timeLabelsize);
	  minimumStep -= this.body.util.toTime(0).valueOf();

	  var step = new TimeStep(new Date(start), new Date(end), minimumStep, this.body.hiddenDates);
	  if (this.options.format) {
	    step.setFormat(this.options.format);
	  }
	  if (this.options.timeAxis) {
	    step.setScale(this.options.timeAxis);
	  }
	  this.step = step;

	  // Move all DOM elements to a "redundant" list, where they
	  // can be picked for re-use, and clear the lists with lines and texts.
	  // At the end of the function _repaintLabels, left over elements will be cleaned up
	  var dom = this.dom;
	  dom.redundant.lines = dom.lines;
	  dom.redundant.majorTexts = dom.majorTexts;
	  dom.redundant.minorTexts = dom.minorTexts;
	  dom.lines = [];
	  dom.majorTexts = [];
	  dom.minorTexts = [];

	  var cur;
	  var x = 0;
	  var isMajor;
	  var xPrev = 0;
	  var width = 0;
	  var prevLine;
	  var xFirstMajorLabel = undefined;
	  var max = 0;
	  var className;

	  step.first();
	  while (step.hasNext() && max < 1000) {
	    max++;

	    cur = step.getCurrent();
	    isMajor = step.isMajor();
	    className = step.getClassName();

	    xPrev = x;
	    x = this.body.util.toScreen(cur);
	    width = x - xPrev;
	    if (prevLine) {
	      prevLine.style.width = width + 'px';
	    }

	    if (this.options.showMinorLabels) {
	      this._repaintMinorText(x, step.getLabelMinor(), orientation, className);
	    }

	    if (isMajor && this.options.showMajorLabels) {
	      if (x > 0) {
	        if (xFirstMajorLabel == undefined) {
	          xFirstMajorLabel = x;
	        }
	        this._repaintMajorText(x, step.getLabelMajor(), orientation, className);
	      }
	      prevLine = this._repaintMajorLine(x, orientation, className);
	    } else {
	      prevLine = this._repaintMinorLine(x, orientation, className);
	    }

	    step.next();
	  }

	  // create a major label on the left when needed
	  if (this.options.showMajorLabels) {
	    var leftTime = this.body.util.toTime(0),
	        leftText = step.getLabelMajor(leftTime),
	        widthText = leftText.length * (this.props.majorCharWidth || 10) + 10; // upper bound estimation

	    if (xFirstMajorLabel == undefined || widthText < xFirstMajorLabel) {
	      this._repaintMajorText(0, leftText, orientation, className);
	    }
	  }

	  // Cleanup leftover DOM elements from the redundant list
	  util.forEach(this.dom.redundant, function (arr) {
	    while (arr.length) {
	      var elem = arr.pop();
	      if (elem && elem.parentNode) {
	        elem.parentNode.removeChild(elem);
	      }
	    }
	  });
	};

	/**
	 * Create a minor label for the axis at position x
	 * @param {Number} x
	 * @param {String} text
	 * @param {String} orientation   "top" or "bottom" (default)
	 * @param {String} className
	 * @private
	 */
	TimeAxis.prototype._repaintMinorText = function (x, text, orientation, className) {
	  // reuse redundant label
	  var label = this.dom.redundant.minorTexts.shift();

	  if (!label) {
	    // create new label
	    var content = document.createTextNode('');
	    label = document.createElement('div');
	    label.appendChild(content);
	    this.dom.foreground.appendChild(label);
	  }
	  this.dom.minorTexts.push(label);

	  label.childNodes[0].nodeValue = text;

	  label.style.top = orientation == 'top' ? this.props.majorLabelHeight + 'px' : '0';
	  label.style.left = x + 'px';
	  label.className = 'text minor ' + className;
	  //label.title = title;  // TODO: this is a heavy operation
	};

	/**
	 * Create a Major label for the axis at position x
	 * @param {Number} x
	 * @param {String} text
	 * @param {String} orientation   "top" or "bottom" (default)
	 * @param {String} className
	 * @private
	 */
	TimeAxis.prototype._repaintMajorText = function (x, text, orientation, className) {
	  // reuse redundant label
	  var label = this.dom.redundant.majorTexts.shift();

	  if (!label) {
	    // create label
	    var content = document.createTextNode(text);
	    label = document.createElement('div');
	    label.appendChild(content);
	    this.dom.foreground.appendChild(label);
	  }
	  this.dom.majorTexts.push(label);

	  label.childNodes[0].nodeValue = text;
	  label.className = 'text major ' + className;
	  //label.title = title; // TODO: this is a heavy operation

	  label.style.top = orientation == 'top' ? '0' : this.props.minorLabelHeight + 'px';
	  label.style.left = x + 'px';
	};

	/**
	 * Create a minor line for the axis at position x
	 * @param {Number} x
	 * @param {String} orientation   "top" or "bottom" (default)
	 * @param {String} className
	 * @return {Element} Returns the created line
	 * @private
	 */
	TimeAxis.prototype._repaintMinorLine = function (x, orientation, className) {
	  // reuse redundant line
	  var line = this.dom.redundant.lines.shift();
	  if (!line) {
	    // create vertical line
	    line = document.createElement('div');
	    this.dom.background.appendChild(line);
	  }
	  this.dom.lines.push(line);

	  var props = this.props;
	  if (orientation == 'top') {
	    line.style.top = props.majorLabelHeight + 'px';
	  } else {
	    line.style.top = this.body.domProps.top.height + 'px';
	  }
	  line.style.height = props.minorLineHeight + 'px';
	  line.style.left = x - props.minorLineWidth / 2 + 'px';

	  line.className = 'grid vertical minor ' + className;

	  return line;
	};

	/**
	 * Create a Major line for the axis at position x
	 * @param {Number} x
	 * @param {String} orientation   "top" or "bottom" (default)
	 * @param {String} className
	 * @return {Element} Returns the created line
	 * @private
	 */
	TimeAxis.prototype._repaintMajorLine = function (x, orientation, className) {
	  // reuse redundant line
	  var line = this.dom.redundant.lines.shift();
	  if (!line) {
	    // create vertical line
	    line = document.createElement('div');
	    this.dom.background.appendChild(line);
	  }
	  this.dom.lines.push(line);

	  var props = this.props;
	  if (orientation == 'top') {
	    line.style.top = '0';
	  } else {
	    line.style.top = this.body.domProps.top.height + 'px';
	  }
	  line.style.left = x - props.majorLineWidth / 2 + 'px';
	  line.style.height = props.majorLineHeight + 'px';

	  line.className = 'grid vertical major ' + className;

	  return line;
	};

	/**
	 * Determine the size of text on the axis (both major and minor axis).
	 * The size is calculated only once and then cached in this.props.
	 * @private
	 */
	TimeAxis.prototype._calculateCharSize = function () {
	  // Note: We calculate char size with every redraw. Size may change, for
	  // example when any of the timelines parents had display:none for example.

	  // determine the char width and height on the minor axis
	  if (!this.dom.measureCharMinor) {
	    this.dom.measureCharMinor = document.createElement('DIV');
	    this.dom.measureCharMinor.className = 'text minor measure';
	    this.dom.measureCharMinor.style.position = 'absolute';

	    this.dom.measureCharMinor.appendChild(document.createTextNode('0'));
	    this.dom.foreground.appendChild(this.dom.measureCharMinor);
	  }
	  this.props.minorCharHeight = this.dom.measureCharMinor.clientHeight;
	  this.props.minorCharWidth = this.dom.measureCharMinor.clientWidth;

	  // determine the char width and height on the major axis
	  if (!this.dom.measureCharMajor) {
	    this.dom.measureCharMajor = document.createElement('DIV');
	    this.dom.measureCharMajor.className = 'text major measure';
	    this.dom.measureCharMajor.style.position = 'absolute';

	    this.dom.measureCharMajor.appendChild(document.createTextNode('0'));
	    this.dom.foreground.appendChild(this.dom.measureCharMajor);
	  }
	  this.props.majorCharHeight = this.dom.measureCharMajor.clientHeight;
	  this.props.majorCharWidth = this.dom.measureCharMajor.clientWidth;
	};

	module.exports = TimeAxis;

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var keycharm = __webpack_require__(316);
	var Emitter = __webpack_require__(289);
	var Hammer = __webpack_require__(297);
	var util = __webpack_require__(175);

	/**
	 * Turn an element into an clickToUse element.
	 * When not active, the element has a transparent overlay. When the overlay is
	 * clicked, the mode is changed to active.
	 * When active, the element is displayed with a blue border around it, and
	 * the interactive contents of the element can be used. When clicked outside
	 * the element, the elements mode is changed to inactive.
	 * @param {Element} container
	 * @constructor
	 */
	function Activator(container) {
	  this.active = false;

	  this.dom = {
	    container: container
	  };

	  this.dom.overlay = document.createElement('div');
	  this.dom.overlay.className = 'overlay';

	  this.dom.container.appendChild(this.dom.overlay);

	  this.hammer = Hammer(this.dom.overlay, { prevent_default: false });
	  this.hammer.on('tap', this._onTapOverlay.bind(this));

	  // block all touch events (except tap)
	  var me = this;
	  var events = ['touch', 'pinch', 'doubletap', 'hold', 'dragstart', 'drag', 'dragend', 'mousewheel', 'DOMMouseScroll' // DOMMouseScroll is needed for Firefox
	  ];
	  events.forEach(function (event) {
	    me.hammer.on(event, function (event) {
	      event.stopPropagation();
	    });
	  });

	  // attach a tap event to the window, in order to deactivate when clicking outside the timeline
	  this.windowHammer = Hammer(window, { prevent_default: false });
	  this.windowHammer.on('tap', function (event) {
	    // deactivate when clicked outside the container
	    if (!_hasParent(event.target, container)) {
	      me.deactivate();
	    }
	  });

	  if (this.keycharm !== undefined) {
	    this.keycharm.destroy();
	  }
	  this.keycharm = keycharm();

	  // keycharm listener only bounded when active)
	  this.escListener = this.deactivate.bind(this);
	}

	// turn into an event emitter
	Emitter(Activator.prototype);

	// The currently active activator
	Activator.current = null;

	/**
	 * Destroy the activator. Cleans up all created DOM and event listeners
	 */
	Activator.prototype.destroy = function () {
	  this.deactivate();

	  // remove dom
	  this.dom.overlay.parentNode.removeChild(this.dom.overlay);

	  // cleanup hammer instances
	  this.hammer = null;
	  this.windowHammer = null;
	  // FIXME: cleaning up hammer instances doesn't work (Timeline not removed from memory)
	};

	/**
	 * Activate the element
	 * Overlay is hidden, element is decorated with a blue shadow border
	 */
	Activator.prototype.activate = function () {
	  // we allow only one active activator at a time
	  if (Activator.current) {
	    Activator.current.deactivate();
	  }
	  Activator.current = this;

	  this.active = true;
	  this.dom.overlay.style.display = 'none';
	  util.addClassName(this.dom.container, 'vis-active');

	  this.emit('change');
	  this.emit('activate');

	  // ugly hack: bind ESC after emitting the events, as the Network rebinds all
	  // keyboard events on a 'change' event
	  this.keycharm.bind('esc', this.escListener);
	};

	/**
	 * Deactivate the element
	 * Overlay is displayed on top of the element
	 */
	Activator.prototype.deactivate = function () {
	  this.active = false;
	  this.dom.overlay.style.display = '';
	  util.removeClassName(this.dom.container, 'vis-active');
	  this.keycharm.unbind('esc', this.escListener);

	  this.emit('change');
	  this.emit('deactivate');
	};

	/**
	 * Handle a tap event: activate the container
	 * @param event
	 * @private
	 */
	Activator.prototype._onTapOverlay = function (event) {
	  // activate the container
	  this.activate();
	  event.stopPropagation();
	};

	/**
	 * Test whether the element has the requested parent element somewhere in
	 * its chain of parent nodes.
	 * @param {HTMLElement} element
	 * @param {HTMLElement} parent
	 * @returns {boolean} Returns true when the parent is found somewhere in the
	 *                    chain of parent nodes.
	 * @private
	 */
	function _hasParent(element, parent) {
	  while (element) {
	    if (element === parent) {
	      return true;
	    }
	    element = element.parentNode;
	  }
	  return false;
	}

	module.exports = Activator;

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;"use strict";
	/**
	 * Created by Alex on 11/6/2014.
	 */

	// https://github.com/umdjs/umd/blob/master/returnExports.js#L40-L60
	// if the module has no dependencies, the above pattern can be simplified to

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	(function (root, factory) {
	  if (true) {
	    // AMD. Register as an anonymous module.
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {
	    // Node. Does not work with strict CommonJS, but
	    // only CommonJS-like environments that support module.exports,
	    // like Node.
	    module.exports = factory();
	  } else {
	    // Browser globals (root is window)
	    root.keycharm = factory();
	  }
	})(undefined, function () {

	  function keycharm(options) {
	    var preventDefault = options && options.preventDefault || false;

	    var container = options && options.container || window;

	    var _exportFunctions = {};
	    var _bound = { keydown: {}, keyup: {} };
	    var _keys = {};
	    var i;

	    // a - z
	    for (i = 97; i <= 122; i++) {
	      _keys[String.fromCharCode(i)] = { code: 65 + (i - 97), shift: false };
	    }
	    // A - Z
	    for (i = 65; i <= 90; i++) {
	      _keys[String.fromCharCode(i)] = { code: i, shift: true };
	    }
	    // 0 - 9
	    for (i = 0; i <= 9; i++) {
	      _keys['' + i] = { code: 48 + i, shift: false };
	    }
	    // F1 - F12
	    for (i = 1; i <= 12; i++) {
	      _keys['F' + i] = { code: 111 + i, shift: false };
	    }
	    // num0 - num9
	    for (i = 0; i <= 9; i++) {
	      _keys['num' + i] = { code: 96 + i, shift: false };
	    }

	    // numpad misc
	    _keys['num*'] = { code: 106, shift: false };
	    _keys['num+'] = { code: 107, shift: false };
	    _keys['num-'] = { code: 109, shift: false };
	    _keys['num/'] = { code: 111, shift: false };
	    _keys['num.'] = { code: 110, shift: false };
	    // arrows
	    _keys['left'] = { code: 37, shift: false };
	    _keys['up'] = { code: 38, shift: false };
	    _keys['right'] = { code: 39, shift: false };
	    _keys['down'] = { code: 40, shift: false };
	    // extra keys
	    _keys['space'] = { code: 32, shift: false };
	    _keys['enter'] = { code: 13, shift: false };
	    _keys['shift'] = { code: 16, shift: undefined };
	    _keys['esc'] = { code: 27, shift: false };
	    _keys['backspace'] = { code: 8, shift: false };
	    _keys['tab'] = { code: 9, shift: false };
	    _keys['ctrl'] = { code: 17, shift: false };
	    _keys['alt'] = { code: 18, shift: false };
	    _keys['delete'] = { code: 46, shift: false };
	    _keys['pageup'] = { code: 33, shift: false };
	    _keys['pagedown'] = { code: 34, shift: false };
	    // symbols
	    _keys['='] = { code: 187, shift: false };
	    _keys['-'] = { code: 189, shift: false };
	    _keys[']'] = { code: 221, shift: false };
	    _keys['['] = { code: 219, shift: false };

	    var down = function down(event) {
	      handleEvent(event, 'keydown');
	    };
	    var up = function up(event) {
	      handleEvent(event, 'keyup');
	    };

	    // handle the actualy bound key with the event
	    var handleEvent = function handleEvent(event, type) {
	      if (_bound[type][event.keyCode] !== undefined) {
	        var bound = _bound[type][event.keyCode];
	        for (var i = 0; i < bound.length; i++) {
	          if (bound[i].shift === undefined) {
	            bound[i].fn(event);
	          } else if (bound[i].shift == true && event.shiftKey == true) {
	            bound[i].fn(event);
	          } else if (bound[i].shift == false && event.shiftKey == false) {
	            bound[i].fn(event);
	          }
	        }

	        if (preventDefault == true) {
	          event.preventDefault();
	        }
	      }
	    };

	    // bind a key to a callback
	    _exportFunctions.bind = function (key, callback, type) {
	      if (type === undefined) {
	        type = 'keydown';
	      }
	      if (_keys[key] === undefined) {
	        throw new Error("unsupported key: " + key);
	      }
	      if (_bound[type][_keys[key].code] === undefined) {
	        _bound[type][_keys[key].code] = [];
	      }
	      _bound[type][_keys[key].code].push({ fn: callback, shift: _keys[key].shift });
	    };

	    // bind all keys to a call back (demo purposes)
	    _exportFunctions.bindAll = function (callback, type) {
	      if (type === undefined) {
	        type = 'keydown';
	      }
	      for (var key in _keys) {
	        if (_keys.hasOwnProperty(key)) {
	          _exportFunctions.bind(key, callback, type);
	        }
	      }
	    };

	    // get the key label from an event
	    _exportFunctions.getKey = function (event) {
	      for (var key in _keys) {
	        if (_keys.hasOwnProperty(key)) {
	          if (event.shiftKey == true && _keys[key].shift == true && event.keyCode == _keys[key].code) {
	            return key;
	          } else if (event.shiftKey == false && _keys[key].shift == false && event.keyCode == _keys[key].code) {
	            return key;
	          } else if (event.keyCode == _keys[key].code && key == 'shift') {
	            return key;
	          }
	        }
	      }
	      return "unknown key, currently not supported";
	    };

	    // unbind either a specific callback from a key or all of them (by leaving callback undefined)
	    _exportFunctions.unbind = function (key, callback, type) {
	      if (type === undefined) {
	        type = 'keydown';
	      }
	      if (_keys[key] === undefined) {
	        throw new Error("unsupported key: " + key);
	      }
	      if (callback !== undefined) {
	        var newBindings = [];
	        var bound = _bound[type][_keys[key].code];
	        if (bound !== undefined) {
	          for (var i = 0; i < bound.length; i++) {
	            if (!(bound[i].fn == callback && bound[i].shift == _keys[key].shift)) {
	              newBindings.push(_bound[type][_keys[key].code][i]);
	            }
	          }
	        }
	        _bound[type][_keys[key].code] = newBindings;
	      } else {
	        _bound[type][_keys[key].code] = [];
	      }
	    };

	    // reset all bound variables.
	    _exportFunctions.reset = function () {
	      _bound = { keydown: {}, keyup: {} };
	    };

	    // unbind all listeners and reset all variables.
	    _exportFunctions.destroy = function () {
	      _bound = { keydown: {}, keyup: {} };
	      container.removeEventListener('keydown', down, true);
	      container.removeEventListener('keyup', up, true);
	    };

	    // create listeners.
	    container.addEventListener('keydown', down, true);
	    container.addEventListener('keyup', up, true);

	    // return the public functions.
	    return _exportFunctions;
	  }

	  return keycharm;
	});

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Hammer = __webpack_require__(297);
	var util = __webpack_require__(175);
	var Component = __webpack_require__(301);
	var moment = __webpack_require__(176);
	var locales = __webpack_require__(318);

	/**
	 * A custom time bar
	 * @param {{range: Range, dom: Object}} body
	 * @param {Object} [options]        Available parameters:
	 *                                  {Boolean} [showCustomTime]
	 * @constructor CustomTime
	 * @extends Component
	 */

	function CustomTime(body, options) {
	  this.body = body;

	  // default options
	  this.defaultOptions = {
	    showCustomTime: false,
	    locales: locales,
	    locale: 'en',
	    id: 0
	  };
	  this.options = util.extend({}, this.defaultOptions);

	  if (options && options.time) {
	    this.customTime = options.time;
	  } else {
	    this.customTime = new Date();
	  }

	  this.eventParams = {}; // stores state parameters while dragging the bar

	  // create the DOM
	  this._create();

	  this.setOptions(options);
	}

	CustomTime.prototype = new Component();

	/**
	 * Set options for the component. Options will be merged in current options.
	 * @param {Object} options  Available parameters:
	 *                          {boolean} [showCustomTime]
	 */
	CustomTime.prototype.setOptions = function (options) {
	  if (options) {
	    // copy all options that we know
	    util.selectiveExtend(['showCustomTime', 'locale', 'locales', 'id'], this.options, options);

	    // Triggered by addCustomTimeBar, redraw to add new bar
	    if (this.options.id) {
	      this.redraw();
	    }
	  }
	};

	/**
	 * Create the DOM for the custom time
	 * @private
	 */
	CustomTime.prototype._create = function () {
	  var bar = document.createElement('div');
	  bar.className = 'customtime';
	  bar.style.position = 'absolute';
	  bar.style.top = '0px';
	  bar.style.height = '100%';
	  this.bar = bar;

	  var drag = document.createElement('div');
	  drag.style.position = 'relative';
	  drag.style.top = '0px';
	  drag.style.left = '-10px';
	  drag.style.height = '100%';
	  drag.style.width = '20px';
	  bar.appendChild(drag);

	  // attach event listeners
	  this.hammer = Hammer(bar, {
	    prevent_default: true
	  });
	  this.hammer.on('dragstart', this._onDragStart.bind(this));
	  this.hammer.on('drag', this._onDrag.bind(this));
	  this.hammer.on('dragend', this._onDragEnd.bind(this));
	};

	/**
	 * Destroy the CustomTime bar
	 */
	CustomTime.prototype.destroy = function () {
	  this.options.showCustomTime = false;
	  this.redraw(); // will remove the bar from the DOM

	  this.hammer.enable(false);
	  this.hammer = null;

	  this.body = null;
	};

	/**
	 * Repaint the component
	 * @return {boolean} Returns true if the component is resized
	 */
	CustomTime.prototype.redraw = function () {
	  if (this.options.showCustomTime) {
	    var parent = this.body.dom.backgroundVertical;
	    if (this.bar.parentNode != parent) {
	      // attach to the dom
	      if (this.bar.parentNode) {
	        this.bar.parentNode.removeChild(this.bar);
	      }
	      parent.appendChild(this.bar);
	    }

	    var x = this.body.util.toScreen(this.customTime);

	    var locale = this.options.locales[this.options.locale];
	    var title = locale.time + ': ' + moment(this.customTime).format('dddd, MMMM Do YYYY, H:mm:ss');
	    title = title.charAt(0).toUpperCase() + title.substring(1);

	    this.bar.style.left = x + 'px';
	    this.bar.title = title;
	  } else {
	    // remove the line from the DOM
	    if (this.bar.parentNode) {
	      this.bar.parentNode.removeChild(this.bar);
	    }
	  }

	  return false;
	};

	/**
	 * Set custom time.
	 * @param {Date | number | string} time
	 */
	CustomTime.prototype.setCustomTime = function (time) {
	  this.customTime = util.convert(time, 'Date');
	  this.redraw();
	};

	/**
	 * Retrieve the current custom time.
	 * @return {Date} customTime
	 */
	CustomTime.prototype.getCustomTime = function () {
	  return new Date(this.customTime.valueOf());
	};

	/**
	 * Start moving horizontally
	 * @param {Event} event
	 * @private
	 */
	CustomTime.prototype._onDragStart = function (event) {
	  this.eventParams.dragging = true;
	  this.eventParams.customTime = this.customTime;

	  event.stopPropagation();
	  event.preventDefault();
	};

	/**
	 * Perform moving operating.
	 * @param {Event} event
	 * @private
	 */
	CustomTime.prototype._onDrag = function (event) {
	  if (!this.eventParams.dragging) return;

	  var deltaX = event.gesture.deltaX,
	      x = this.body.util.toScreen(this.eventParams.customTime) + deltaX,
	      time = this.body.util.toTime(x);

	  this.setCustomTime(time);

	  // fire a timechange event
	  this.body.emitter.emit('timechange', {
	    id: this.options.id,
	    time: new Date(this.customTime.valueOf())
	  });

	  event.stopPropagation();
	  event.preventDefault();
	};

	/**
	 * Stop moving operating.
	 * @param {event} event
	 * @private
	 */
	CustomTime.prototype._onDragEnd = function (event) {
	  if (!this.eventParams.dragging) return;

	  // fire a timechanged event
	  this.body.emitter.emit('timechanged', {
	    id: this.options.id,
	    time: new Date(this.customTime.valueOf())
	  });

	  event.stopPropagation();
	  event.preventDefault();
	};

	module.exports = CustomTime;

/***/ },
/* 318 */
/***/ function(module, exports) {

	'use strict';

	// English
	exports['en'] = {
	  current: 'current',
	  time: 'time'
	};
	exports['en_EN'] = exports['en'];
	exports['en_US'] = exports['en'];

	// Dutch
	exports['nl'] = {
	  current: 'aangepaste',
	  time: 'tijd'
	};
	exports['nl_NL'] = exports['nl'];
	exports['nl_BE'] = exports['nl'];

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(175);
	var Component = __webpack_require__(301);
	var moment = __webpack_require__(176);
	var locales = __webpack_require__(318);

	/**
	 * A current time bar
	 * @param {{range: Range, dom: Object, domProps: Object}} body
	 * @param {Object} [options]        Available parameters:
	 *                                  {Boolean} [showCurrentTime]
	 * @constructor CurrentTime
	 * @extends Component
	 */
	function CurrentTime(body, options) {
	  this.body = body;

	  // default options
	  this.defaultOptions = {
	    showCurrentTime: true,

	    locales: locales,
	    locale: 'en'
	  };
	  this.options = util.extend({}, this.defaultOptions);
	  this.offset = 0;

	  this._create();

	  this.setOptions(options);
	}

	CurrentTime.prototype = new Component();

	/**
	 * Create the HTML DOM for the current time bar
	 * @private
	 */
	CurrentTime.prototype._create = function () {
	  var bar = document.createElement('div');
	  bar.className = 'currenttime';
	  bar.style.position = 'absolute';
	  bar.style.top = '0px';
	  bar.style.height = '100%';

	  this.bar = bar;
	};

	/**
	 * Destroy the CurrentTime bar
	 */
	CurrentTime.prototype.destroy = function () {
	  this.options.showCurrentTime = false;
	  this.redraw(); // will remove the bar from the DOM and stop refreshing

	  this.body = null;
	};

	/**
	 * Set options for the component. Options will be merged in current options.
	 * @param {Object} options  Available parameters:
	 *                          {boolean} [showCurrentTime]
	 */
	CurrentTime.prototype.setOptions = function (options) {
	  if (options) {
	    // copy all options that we know
	    util.selectiveExtend(['showCurrentTime', 'locale', 'locales'], this.options, options);
	  }
	};

	/**
	 * Repaint the component
	 * @return {boolean} Returns true if the component is resized
	 */
	CurrentTime.prototype.redraw = function () {
	  if (this.options.showCurrentTime) {
	    var parent = this.body.dom.backgroundVertical;
	    if (this.bar.parentNode != parent) {
	      // attach to the dom
	      if (this.bar.parentNode) {
	        this.bar.parentNode.removeChild(this.bar);
	      }
	      parent.appendChild(this.bar);

	      this.start();
	    }

	    var now = new Date(new Date().valueOf() + this.offset);
	    var x = this.body.util.toScreen(now);

	    var locale = this.options.locales[this.options.locale];
	    var title = locale.current + ' ' + locale.time + ': ' + moment(now).format('dddd, MMMM Do YYYY, H:mm:ss');
	    title = title.charAt(0).toUpperCase() + title.substring(1);

	    this.bar.style.left = x + 'px';
	    this.bar.title = title;
	  } else {
	    // remove the line from the DOM
	    if (this.bar.parentNode) {
	      this.bar.parentNode.removeChild(this.bar);
	    }
	    this.stop();
	  }

	  return false;
	};

	/**
	 * Start auto refreshing the current time bar
	 */
	CurrentTime.prototype.start = function () {
	  var me = this;

	  function update() {
	    me.stop();

	    // determine interval to refresh
	    var scale = me.body.range.conversion(me.body.domProps.center.width).scale;
	    var interval = 1 / scale / 10;
	    if (interval < 30) interval = 30;
	    if (interval > 1000) interval = 1000;

	    me.redraw();

	    // start a timer to adjust for the new time
	    me.currentTimeTimer = setTimeout(update, interval);
	  }

	  update();
	};

	/**
	 * Stop auto refreshing the current time bar
	 */
	CurrentTime.prototype.stop = function () {
	  if (this.currentTimeTimer !== undefined) {
	    clearTimeout(this.currentTimeTimer);
	    delete this.currentTimeTimer;
	  }
	};

	/**
	 * Set a current time. This can be used for example to ensure that a client's
	 * time is synchronized with a shared server time.
	 * @param {Date | String | Number} time     A Date, unix timestamp, or
	 *                                          ISO date string.
	 */
	CurrentTime.prototype.setCurrentTime = function (time) {
	  var t = util.convert(time, 'Date').valueOf();
	  var now = new Date().valueOf();
	  this.offset = t - now;
	  this.redraw();
	};

	/**
	 * Get the current time.
	 * @return {Date} Returns the current time.
	 */
	CurrentTime.prototype.getCurrentTime = function () {
	  return new Date(new Date().valueOf() + this.offset);
	};

	module.exports = CurrentTime;

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Emitter = __webpack_require__(289);
	var Hammer = __webpack_require__(297);
	var util = __webpack_require__(175);
	var DataSet = __webpack_require__(285);
	var DataView = __webpack_require__(287);
	var Range = __webpack_require__(299);
	var Core = __webpack_require__(303);
	var TimeAxis = __webpack_require__(314);
	var CurrentTime = __webpack_require__(319);
	var CustomTime = __webpack_require__(317);
	var LineGraph = __webpack_require__(321);

	/**
	 * Create a timeline visualization
	 * @param {HTMLElement} container
	 * @param {vis.DataSet | Array | google.visualization.DataTable} [items]
	 * @param {Object} [options]  See Graph2d.setOptions for the available options.
	 * @constructor
	 * @extends Core
	 */
	function Graph2d(container, items, groups, options) {
	  // if the third element is options, the forth is groups (optionally);
	  if (!(Array.isArray(groups) || groups instanceof DataSet) && groups instanceof Object) {
	    var forthArgument = options;
	    options = groups;
	    groups = forthArgument;
	  }

	  var me = this;
	  this.defaultOptions = {
	    start: null,
	    end: null,

	    autoResize: true,

	    orientation: 'bottom',
	    width: null,
	    height: null,
	    maxHeight: null,
	    minHeight: null
	  };
	  this.options = util.deepExtend({}, this.defaultOptions);

	  // Create the DOM, props, and emitter
	  this._create(container);

	  // all components listed here will be repainted automatically
	  this.components = [];

	  this.body = {
	    dom: this.dom,
	    domProps: this.props,
	    emitter: {
	      on: this.on.bind(this),
	      off: this.off.bind(this),
	      emit: this.emit.bind(this)
	    },
	    hiddenDates: [],
	    util: {
	      toScreen: me._toScreen.bind(me),
	      toGlobalScreen: me._toGlobalScreen.bind(me), // this refers to the root.width
	      toTime: me._toTime.bind(me),
	      toGlobalTime: me._toGlobalTime.bind(me)
	    }
	  };

	  // range
	  this.range = new Range(this.body);
	  this.components.push(this.range);
	  this.body.range = this.range;

	  // time axis
	  this.timeAxis = new TimeAxis(this.body);
	  this.components.push(this.timeAxis);
	  //this.body.util.snap = this.timeAxis.snap.bind(this.timeAxis);

	  // current time bar
	  this.currentTime = new CurrentTime(this.body);
	  this.components.push(this.currentTime);

	  // custom time bar
	  // Note: time bar will be attached in this.setOptions when selected
	  this.customTime = new CustomTime(this.body);
	  this.components.push(this.customTime);

	  // item set
	  this.linegraph = new LineGraph(this.body);
	  this.components.push(this.linegraph);

	  this.itemsData = null; // DataSet
	  this.groupsData = null; // DataSet

	  this.on('tap', function (event) {
	    me.emit('click', me.getEventProperties(event));
	  });
	  this.on('doubletap', function (event) {
	    me.emit('doubleClick', me.getEventProperties(event));
	  });
	  this.dom.root.oncontextmenu = function (event) {
	    me.emit('contextmenu', me.getEventProperties(event));
	  };

	  // apply options
	  if (options) {
	    this.setOptions(options);
	  }

	  // IMPORTANT: THIS HAPPENS BEFORE SET ITEMS!
	  if (groups) {
	    this.setGroups(groups);
	  }

	  // create itemset
	  if (items) {
	    this.setItems(items);
	  } else {
	    this._redraw();
	  }
	}

	// Extend the functionality from Core
	Graph2d.prototype = new Core();

	/**
	 * Set items
	 * @param {vis.DataSet | Array | google.visualization.DataTable | null} items
	 */
	Graph2d.prototype.setItems = function (items) {
	  var initialLoad = this.itemsData == null;

	  // convert to type DataSet when needed
	  var newDataSet;
	  if (!items) {
	    newDataSet = null;
	  } else if (items instanceof DataSet || items instanceof DataView) {
	    newDataSet = items;
	  } else {
	    // turn an array into a dataset
	    newDataSet = new DataSet(items, {
	      type: {
	        start: 'Date',
	        end: 'Date'
	      }
	    });
	  }

	  // set items
	  this.itemsData = newDataSet;
	  this.linegraph && this.linegraph.setItems(newDataSet);

	  if (initialLoad) {
	    if (this.options.start != undefined || this.options.end != undefined) {
	      var start = this.options.start != undefined ? this.options.start : null;
	      var end = this.options.end != undefined ? this.options.end : null;

	      this.setWindow(start, end, { animate: false });
	    } else {
	      this.fit({ animate: false });
	    }
	  }
	};

	/**
	 * Set groups
	 * @param {vis.DataSet | Array | google.visualization.DataTable} groups
	 */
	Graph2d.prototype.setGroups = function (groups) {
	  // convert to type DataSet when needed
	  var newDataSet;
	  if (!groups) {
	    newDataSet = null;
	  } else if (groups instanceof DataSet || groups instanceof DataView) {
	    newDataSet = groups;
	  } else {
	    // turn an array into a dataset
	    newDataSet = new DataSet(groups);
	  }

	  this.groupsData = newDataSet;
	  this.linegraph.setGroups(newDataSet);
	};

	/**
	 * Returns an object containing an SVG element with the icon of the group (size determined by iconWidth and iconHeight), the label of the group (content) and the yAxisOrientation of the group (left or right).
	 * @param groupId
	 * @param width
	 * @param height
	 */
	Graph2d.prototype.getLegend = function (groupId, width, height) {
	  if (width === undefined) {
	    width = 15;
	  }
	  if (height === undefined) {
	    height = 15;
	  }
	  if (this.linegraph.groups[groupId] !== undefined) {
	    return this.linegraph.groups[groupId].getLegend(width, height);
	  } else {
	    return "cannot find group:" + groupId;
	  }
	};

	/**
	 * This checks if the visible option of the supplied group (by ID) is true or false.
	 * @param groupId
	 * @returns {*}
	 */
	Graph2d.prototype.isGroupVisible = function (groupId) {
	  if (this.linegraph.groups[groupId] !== undefined) {
	    return this.linegraph.groups[groupId].visible && (this.linegraph.options.groups.visibility[groupId] === undefined || this.linegraph.options.groups.visibility[groupId] == true);
	  } else {
	    return false;
	  }
	};

	/**
	 * Get the data range of the item set.
	 * @returns {{min: Date, max: Date}} range  A range with a start and end Date.
	 *                                          When no minimum is found, min==null
	 *                                          When no maximum is found, max==null
	 */
	Graph2d.prototype.getItemRange = function () {
	  var min = null;
	  var max = null;

	  // calculate min from start filed
	  for (var groupId in this.linegraph.groups) {
	    if (this.linegraph.groups.hasOwnProperty(groupId)) {
	      if (this.linegraph.groups[groupId].visible == true) {
	        for (var i = 0; i < this.linegraph.groups[groupId].itemsData.length; i++) {
	          var item = this.linegraph.groups[groupId].itemsData[i];
	          var value = util.convert(item.x, 'Date').valueOf();
	          min = min == null ? value : min > value ? value : min;
	          max = max == null ? value : max < value ? value : max;
	        }
	      }
	    }
	  }

	  return {
	    min: min != null ? new Date(min) : null,
	    max: max != null ? new Date(max) : null
	  };
	};

	/**
	 * Generate Timeline related information from an event
	 * @param {Event} event
	 * @return {Object} An object with related information, like on which area
	 *                  The event happened, whether clicked on an item, etc.
	 */
	Graph2d.prototype.getEventProperties = function (event) {
	  var pageX = event.gesture ? event.gesture.center.pageX : event.pageX;
	  var pageY = event.gesture ? event.gesture.center.pageY : event.pageY;
	  var x = pageX - util.getAbsoluteLeft(this.dom.centerContainer);
	  var y = pageY - util.getAbsoluteTop(this.dom.centerContainer);
	  var time = this._toTime(x);

	  var element = util.getTarget(event);
	  var what = null;
	  if (util.hasParent(element, this.timeAxis.dom.foreground)) {
	    what = 'axis';
	  } else if (this.timeAxis2 && util.hasParent(element, this.timeAxis2.dom.foreground)) {
	    what = 'axis';
	  } else if (util.hasParent(element, this.linegraph.yAxisLeft.dom.frame)) {
	    what = 'data-axis';
	  } else if (util.hasParent(element, this.linegraph.yAxisRight.dom.frame)) {
	    what = 'data-axis';
	  } else if (util.hasParent(element, this.linegraph.legendLeft.dom.frame)) {
	    what = 'legend';
	  } else if (util.hasParent(element, this.linegraph.legendRight.dom.frame)) {
	    what = 'legend';
	  } else if (util.hasParent(element, this.customTime.bar)) {
	    what = 'custom-time';
	  } // TODO: fix for multiple custom time bars
	  else if (util.hasParent(element, this.currentTime.bar)) {
	      what = 'current-time';
	    } else if (util.hasParent(element, this.dom.center)) {
	      what = 'background';
	    }

	  var value = [];
	  var yAxisLeft = this.linegraph.yAxisLeft;
	  var yAxisRight = this.linegraph.yAxisRight;
	  if (!yAxisLeft.hidden) {
	    value.push(yAxisLeft.screenToValue(y));
	  }
	  if (!yAxisRight.hidden) {
	    value.push(yAxisRight.screenToValue(y));
	  }

	  return {
	    event: event,
	    what: what,
	    pageX: pageX,
	    pageY: pageY,
	    x: x,
	    y: y,
	    time: time,
	    value: value
	  };
	};

	module.exports = Graph2d;

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var util = __webpack_require__(175);
	var DOMutil = __webpack_require__(284);
	var DataSet = __webpack_require__(285);
	var DataView = __webpack_require__(287);
	var Component = __webpack_require__(301);
	var DataAxis = __webpack_require__(322);
	var GraphGroup = __webpack_require__(324);
	var Legend = __webpack_require__(328);
	var BarGraphFunctions = __webpack_require__(327);

	var UNGROUPED = '__ungrouped__'; // reserved group id for ungrouped items

	/**
	 * This is the constructor of the LineGraph. It requires a Timeline body and options.
	 *
	 * @param body
	 * @param options
	 * @constructor
	 */
	function LineGraph(body, options) {
	  this.id = util.randomUUID();
	  this.body = body;

	  this.defaultOptions = {
	    yAxisOrientation: 'left',
	    defaultGroup: 'default',
	    sort: true,
	    sampling: true,
	    graphHeight: '400px',
	    shaded: {
	      enabled: false,
	      orientation: 'bottom' // top, bottom
	    },
	    style: 'line', // line, bar
	    barChart: {
	      width: 50,
	      handleOverlap: 'overlap',
	      align: 'center' // left, center, right
	    },
	    catmullRom: {
	      enabled: true,
	      parametrization: 'centripetal', // uniform (alpha = 0.0), chordal (alpha = 1.0), centripetal (alpha = 0.5)
	      alpha: 0.5
	    },
	    drawPoints: {
	      enabled: true,
	      size: 6,
	      style: 'square' // square, circle
	    },
	    dataAxis: {
	      showMinorLabels: true,
	      showMajorLabels: true,
	      icons: false,
	      width: '40px',
	      visible: true,
	      alignZeros: true,
	      customRange: {
	        left: { min: undefined, max: undefined },
	        right: { min: undefined, max: undefined }
	      }
	      //, these options are not set by default, but this shows the format they will be in
	      //format: {
	      //  left: {decimals: 2},
	      //  right: {decimals: 2}
	      //},
	      //title: {
	      //  left: {
	      //    text: 'left',
	      //    style: 'color:black;'
	      //  },
	      //  right: {
	      //    text: 'right',
	      //    style: 'color:black;'
	      //  }
	      //}
	    },
	    legend: {
	      enabled: false,
	      icons: true,
	      left: {
	        visible: true,
	        position: 'top-left' // top/bottom - left,right
	      },
	      right: {
	        visible: true,
	        position: 'top-right' // top/bottom - left,right
	      }
	    },
	    groups: {
	      visibility: {}
	    }
	  };

	  // options is shared by this ItemSet and all its items
	  this.options = util.extend({}, this.defaultOptions);
	  this.dom = {};
	  this.props = {};
	  this.hammer = null;
	  this.groups = {};
	  this.abortedGraphUpdate = false;
	  this.updateSVGheight = false;
	  this.updateSVGheightOnResize = false;

	  var me = this;
	  this.itemsData = null; // DataSet
	  this.groupsData = null; // DataSet

	  // listeners for the DataSet of the items
	  this.itemListeners = {
	    'add': function add(event, params, senderId) {
	      me._onAdd(params.items);
	    },
	    'update': function update(event, params, senderId) {
	      me._onUpdate(params.items);
	    },
	    'remove': function remove(event, params, senderId) {
	      me._onRemove(params.items);
	    }
	  };

	  // listeners for the DataSet of the groups
	  this.groupListeners = {
	    'add': function add(event, params, senderId) {
	      me._onAddGroups(params.items);
	    },
	    'update': function update(event, params, senderId) {
	      me._onUpdateGroups(params.items);
	    },
	    'remove': function remove(event, params, senderId) {
	      me._onRemoveGroups(params.items);
	    }
	  };

	  this.items = {}; // object with an Item for every data item
	  this.selection = []; // list with the ids of all selected nodes
	  this.lastStart = this.body.range.start;
	  this.touchParams = {}; // stores properties while dragging

	  this.svgElements = {};
	  this.setOptions(options);
	  this.groupsUsingDefaultStyles = [0];
	  this.COUNTER = 0;
	  this.body.emitter.on('rangechanged', function () {
	    me.lastStart = me.body.range.start;
	    me.svg.style.left = util.option.asSize(-me.props.width);
	    me.redraw.call(me, true);
	  });

	  // create the HTML DOM
	  this._create();
	  this.framework = { svg: this.svg, svgElements: this.svgElements, options: this.options, groups: this.groups };
	  this.body.emitter.emit('change');
	}

	LineGraph.prototype = new Component();

	/**
	 * Create the HTML DOM for the ItemSet
	 */
	LineGraph.prototype._create = function () {
	  var frame = document.createElement('div');
	  frame.className = 'LineGraph';
	  this.dom.frame = frame;

	  // create svg element for graph drawing.
	  this.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
	  this.svg.style.position = 'relative';
	  this.svg.style.height = ('' + this.options.graphHeight).replace('px', '') + 'px';
	  this.svg.style.display = 'block';
	  frame.appendChild(this.svg);

	  // data axis
	  this.options.dataAxis.orientation = 'left';
	  this.yAxisLeft = new DataAxis(this.body, this.options.dataAxis, this.svg, this.options.groups);

	  this.options.dataAxis.orientation = 'right';
	  this.yAxisRight = new DataAxis(this.body, this.options.dataAxis, this.svg, this.options.groups);
	  delete this.options.dataAxis.orientation;

	  // legends
	  this.legendLeft = new Legend(this.body, this.options.legend, 'left', this.options.groups);
	  this.legendRight = new Legend(this.body, this.options.legend, 'right', this.options.groups);

	  this.show();
	};

	/**
	 * set the options of the LineGraph. the mergeOptions is used for subObjects that have an enabled element.
	 * @param {object} options
	 */
	LineGraph.prototype.setOptions = function (options) {
	  if (options) {
	    var fields = ['sampling', 'defaultGroup', 'height', 'graphHeight', 'yAxisOrientation', 'style', 'barChart', 'dataAxis', 'sort', 'groups'];
	    if (options.graphHeight === undefined && options.height !== undefined && this.body.domProps.centerContainer.height !== undefined) {
	      this.updateSVGheight = true;
	      this.updateSVGheightOnResize = true;
	    } else if (this.body.domProps.centerContainer.height !== undefined && options.graphHeight !== undefined) {
	      if (parseInt((options.graphHeight + '').replace("px", '')) < this.body.domProps.centerContainer.height) {
	        this.updateSVGheight = true;
	      }
	    }
	    util.selectiveDeepExtend(fields, this.options, options);
	    util.mergeOptions(this.options, options, 'catmullRom');
	    util.mergeOptions(this.options, options, 'drawPoints');
	    util.mergeOptions(this.options, options, 'shaded');
	    util.mergeOptions(this.options, options, 'legend');

	    if (options.catmullRom) {
	      if (_typeof(options.catmullRom) == 'object') {
	        if (options.catmullRom.parametrization) {
	          if (options.catmullRom.parametrization == 'uniform') {
	            this.options.catmullRom.alpha = 0;
	          } else if (options.catmullRom.parametrization == 'chordal') {
	            this.options.catmullRom.alpha = 1.0;
	          } else {
	            this.options.catmullRom.parametrization = 'centripetal';
	            this.options.catmullRom.alpha = 0.5;
	          }
	        }
	      }
	    }

	    if (this.yAxisLeft) {
	      if (options.dataAxis !== undefined) {
	        this.yAxisLeft.setOptions(this.options.dataAxis);
	        this.yAxisRight.setOptions(this.options.dataAxis);
	      }
	    }

	    if (this.legendLeft) {
	      if (options.legend !== undefined) {
	        this.legendLeft.setOptions(this.options.legend);
	        this.legendRight.setOptions(this.options.legend);
	      }
	    }

	    if (this.groups.hasOwnProperty(UNGROUPED)) {
	      this.groups[UNGROUPED].setOptions(options);
	    }
	  }

	  // this is used to redraw the graph if the visibility of the groups is changed.
	  if (this.dom.frame) {
	    this.redraw(true);
	  }
	};

	/**
	 * Hide the component from the DOM
	 */
	LineGraph.prototype.hide = function () {
	  // remove the frame containing the items
	  if (this.dom.frame.parentNode) {
	    this.dom.frame.parentNode.removeChild(this.dom.frame);
	  }
	};

	/**
	 * Show the component in the DOM (when not already visible).
	 * @return {Boolean} changed
	 */
	LineGraph.prototype.show = function () {
	  // show frame containing the items
	  if (!this.dom.frame.parentNode) {
	    this.body.dom.center.appendChild(this.dom.frame);
	  }
	};

	/**
	 * Set items
	 * @param {vis.DataSet | null} items
	 */
	LineGraph.prototype.setItems = function (items) {
	  var me = this,
	      ids,
	      oldItemsData = this.itemsData;

	  // replace the dataset
	  if (!items) {
	    this.itemsData = null;
	  } else if (items instanceof DataSet || items instanceof DataView) {
	    this.itemsData = items;
	  } else {
	    throw new TypeError('Data must be an instance of DataSet or DataView');
	  }

	  if (oldItemsData) {
	    // unsubscribe from old dataset
	    util.forEach(this.itemListeners, function (callback, event) {
	      oldItemsData.off(event, callback);
	    });

	    // remove all drawn items
	    ids = oldItemsData.getIds();
	    this._onRemove(ids);
	  }

	  if (this.itemsData) {
	    // subscribe to new dataset
	    var id = this.id;
	    util.forEach(this.itemListeners, function (callback, event) {
	      me.itemsData.on(event, callback, id);
	    });

	    // add all new items
	    ids = this.itemsData.getIds();
	    this._onAdd(ids);
	  }
	  this._updateUngrouped();
	  //this._updateGraph();
	  this.redraw(true);
	};

	/**
	 * Set groups
	 * @param {vis.DataSet} groups
	 */
	LineGraph.prototype.setGroups = function (groups) {
	  var me = this;
	  var ids;

	  // unsubscribe from current dataset
	  if (this.groupsData) {
	    util.forEach(this.groupListeners, function (callback, event) {
	      me.groupsData.unsubscribe(event, callback);
	    });

	    // remove all drawn groups
	    ids = this.groupsData.getIds();
	    this.groupsData = null;
	    this._onRemoveGroups(ids); // note: this will cause a redraw
	  }

	  // replace the dataset
	  if (!groups) {
	    this.groupsData = null;
	  } else if (groups instanceof DataSet || groups instanceof DataView) {
	    this.groupsData = groups;
	  } else {
	    throw new TypeError('Data must be an instance of DataSet or DataView');
	  }

	  if (this.groupsData) {
	    // subscribe to new dataset
	    var id = this.id;
	    util.forEach(this.groupListeners, function (callback, event) {
	      me.groupsData.on(event, callback, id);
	    });

	    // draw all ms
	    ids = this.groupsData.getIds();
	    this._onAddGroups(ids);
	  }
	  this._onUpdate();
	};

	/**
	 * Update the data
	 * @param [ids]
	 * @private
	 */
	LineGraph.prototype._onUpdate = function (ids) {
	  this._updateUngrouped();
	  this._updateAllGroupData();
	  //this._updateGraph();
	  this.redraw(true);
	};
	LineGraph.prototype._onAdd = function (ids) {
	  this._onUpdate(ids);
	};
	LineGraph.prototype._onRemove = function (ids) {
	  this._onUpdate(ids);
	};
	LineGraph.prototype._onUpdateGroups = function (groupIds) {
	  for (var i = 0; i < groupIds.length; i++) {
	    var group = this.groupsData.get(groupIds[i]);
	    this._updateGroup(group, groupIds[i]);
	  }

	  //this._updateGraph();
	  this.redraw(true);
	};
	LineGraph.prototype._onAddGroups = function (groupIds) {
	  this._onUpdateGroups(groupIds);
	};

	/**
	 * this cleans the group out off the legends and the dataaxis, updates the ungrouped and updates the graph
	 * @param {Array} groupIds
	 * @private
	 */
	LineGraph.prototype._onRemoveGroups = function (groupIds) {
	  for (var i = 0; i < groupIds.length; i++) {
	    if (this.groups.hasOwnProperty(groupIds[i])) {
	      if (this.groups[groupIds[i]].options.yAxisOrientation == 'right') {
	        this.yAxisRight.removeGroup(groupIds[i]);
	        this.legendRight.removeGroup(groupIds[i]);
	        this.legendRight.redraw();
	      } else {
	        this.yAxisLeft.removeGroup(groupIds[i]);
	        this.legendLeft.removeGroup(groupIds[i]);
	        this.legendLeft.redraw();
	      }
	      delete this.groups[groupIds[i]];
	    }
	  }
	  this._updateUngrouped();
	  //this._updateGraph();
	  this.redraw(true);
	};

	/**
	 * update a group object with the group dataset entree
	 *
	 * @param group
	 * @param groupId
	 * @private
	 */
	LineGraph.prototype._updateGroup = function (group, groupId) {
	  if (!this.groups.hasOwnProperty(groupId)) {
	    this.groups[groupId] = new GraphGroup(group, groupId, this.options, this.groupsUsingDefaultStyles);
	    if (this.groups[groupId].options.yAxisOrientation == 'right') {
	      this.yAxisRight.addGroup(groupId, this.groups[groupId]);
	      this.legendRight.addGroup(groupId, this.groups[groupId]);
	    } else {
	      this.yAxisLeft.addGroup(groupId, this.groups[groupId]);
	      this.legendLeft.addGroup(groupId, this.groups[groupId]);
	    }
	  } else {
	    this.groups[groupId].update(group);
	    if (this.groups[groupId].options.yAxisOrientation == 'right') {
	      this.yAxisRight.updateGroup(groupId, this.groups[groupId]);
	      this.legendRight.updateGroup(groupId, this.groups[groupId]);
	    } else {
	      this.yAxisLeft.updateGroup(groupId, this.groups[groupId]);
	      this.legendLeft.updateGroup(groupId, this.groups[groupId]);
	    }
	  }
	  this.legendLeft.redraw();
	  this.legendRight.redraw();
	};

	/**
	 * this updates all groups, it is used when there is an update the the itemset.
	 *
	 * @private
	 */
	LineGraph.prototype._updateAllGroupData = function () {
	  if (this.itemsData != null) {
	    var groupsContent = {};
	    var groupId;
	    for (groupId in this.groups) {
	      if (this.groups.hasOwnProperty(groupId)) {
	        groupsContent[groupId] = [];
	      }
	    }
	    for (var itemId in this.itemsData._data) {
	      if (this.itemsData._data.hasOwnProperty(itemId)) {
	        var item = this.itemsData._data[itemId];
	        if (groupsContent[item.group] === undefined) {
	          throw new Error('Cannot find referenced group. Possible reason: items added before groups? Groups need to be added before items, as items refer to groups.');
	        }
	        item.x = util.convert(item.x, 'Date');
	        groupsContent[item.group].push(item);
	      }
	    }
	    for (groupId in this.groups) {
	      if (this.groups.hasOwnProperty(groupId)) {
	        this.groups[groupId].setItems(groupsContent[groupId]);
	      }
	    }
	  }
	};

	/**
	 * Create or delete the group holding all ungrouped items. This group is used when
	 * there are no groups specified. This anonymous group is called 'graph'.
	 * @protected
	 */
	LineGraph.prototype._updateUngrouped = function () {
	  if (this.itemsData && this.itemsData != null) {
	    var ungroupedCounter = 0;
	    for (var itemId in this.itemsData._data) {
	      if (this.itemsData._data.hasOwnProperty(itemId)) {
	        var item = this.itemsData._data[itemId];
	        if (item != undefined) {
	          if (item.hasOwnProperty('group')) {
	            if (item.group === undefined) {
	              item.group = UNGROUPED;
	            }
	          } else {
	            item.group = UNGROUPED;
	          }
	          ungroupedCounter = item.group == UNGROUPED ? ungroupedCounter + 1 : ungroupedCounter;
	        }
	      }
	    }

	    if (ungroupedCounter == 0) {
	      delete this.groups[UNGROUPED];
	      this.legendLeft.removeGroup(UNGROUPED);
	      this.legendRight.removeGroup(UNGROUPED);
	      this.yAxisLeft.removeGroup(UNGROUPED);
	      this.yAxisRight.removeGroup(UNGROUPED);
	    } else {
	      var group = { id: UNGROUPED, content: this.options.defaultGroup };
	      this._updateGroup(group, UNGROUPED);
	    }
	  } else {
	    delete this.groups[UNGROUPED];
	    this.legendLeft.removeGroup(UNGROUPED);
	    this.legendRight.removeGroup(UNGROUPED);
	    this.yAxisLeft.removeGroup(UNGROUPED);
	    this.yAxisRight.removeGroup(UNGROUPED);
	  }

	  this.legendLeft.redraw();
	  this.legendRight.redraw();
	};

	/**
	 * Redraw the component, mandatory function
	 * @return {boolean} Returns true if the component is resized
	 */
	LineGraph.prototype.redraw = function (forceGraphUpdate) {
	  var resized = false;

	  // calculate actual size and position
	  this.props.width = this.dom.frame.offsetWidth;
	  this.props.height = this.body.domProps.centerContainer.height;

	  // update the graph if there is no lastWidth or with, used for the initial draw
	  if (this.lastWidth === undefined && this.props.width) {
	    forceGraphUpdate = true;
	  }

	  // check if this component is resized
	  resized = this._isResized() || resized;

	  // check whether zoomed (in that case we need to re-stack everything)
	  var visibleInterval = this.body.range.end - this.body.range.start;
	  var zoomed = visibleInterval != this.lastVisibleInterval;
	  this.lastVisibleInterval = visibleInterval;

	  // the svg element is three times as big as the width, this allows for fully dragging left and right
	  // without reloading the graph. the controls for this are bound to events in the constructor
	  if (resized == true) {
	    this.svg.style.width = util.option.asSize(3 * this.props.width);
	    this.svg.style.left = util.option.asSize(-this.props.width);

	    // if the height of the graph is set as proportional, change the height of the svg
	    if ((this.options.height + '').indexOf("%") != -1 || this.updateSVGheightOnResize == true) {
	      this.updateSVGheight = true;
	    }
	  }

	  // update the height of the graph on each redraw of the graph.
	  if (this.updateSVGheight == true) {
	    if (this.options.graphHeight != this.body.domProps.centerContainer.height + 'px') {
	      this.options.graphHeight = this.body.domProps.centerContainer.height + 'px';
	      this.svg.style.height = this.body.domProps.centerContainer.height + 'px';
	    }
	    this.updateSVGheight = false;
	  } else {
	    this.svg.style.height = ('' + this.options.graphHeight).replace('px', '') + 'px';
	  }

	  // zoomed is here to ensure that animations are shown correctly.
	  if (resized == true || zoomed == true || this.abortedGraphUpdate == true || forceGraphUpdate == true) {
	    resized = this._updateGraph() || resized;
	  } else {
	    // move the whole svg while dragging
	    if (this.lastStart != 0) {
	      var offset = this.body.range.start - this.lastStart;
	      var range = this.body.range.end - this.body.range.start;
	      if (this.props.width != 0) {
	        var rangePerPixelInv = this.props.width / range;
	        var xOffset = offset * rangePerPixelInv;
	        this.svg.style.left = -this.props.width - xOffset + 'px';
	      }
	    }
	  }

	  this.legendLeft.redraw();
	  this.legendRight.redraw();
	  return resized;
	};

	/**
	 * Update and redraw the graph.
	 *
	 */
	LineGraph.prototype._updateGraph = function () {
	  // reset the svg elements
	  DOMutil.prepareElements(this.svgElements);
	  if (this.props.width != 0 && this.itemsData != null) {
	    var group, i;
	    var preprocessedGroupData = {};
	    var processedGroupData = {};
	    var groupRanges = {};
	    var changeCalled = false;

	    // getting group Ids
	    var groupIds = [];
	    for (var groupId in this.groups) {
	      if (this.groups.hasOwnProperty(groupId)) {
	        group = this.groups[groupId];
	        if (group.visible == true && (this.options.groups.visibility[groupId] === undefined || this.options.groups.visibility[groupId] == true)) {
	          groupIds.push(groupId);
	        }
	      }
	    }
	    if (groupIds.length > 0) {
	      // this is the range of the SVG canvas
	      var minDate = this.body.util.toGlobalTime(-this.body.domProps.root.width);
	      var maxDate = this.body.util.toGlobalTime(2 * this.body.domProps.root.width);
	      var groupsData = {};
	      // fill groups data, this only loads the data we require based on the timewindow
	      this._getRelevantData(groupIds, groupsData, minDate, maxDate);

	      // apply sampling, if disabled, it will pass through this function.
	      this._applySampling(groupIds, groupsData);

	      // we transform the X coordinates to detect collisions
	      for (i = 0; i < groupIds.length; i++) {
	        preprocessedGroupData[groupIds[i]] = this._convertXcoordinates(groupsData[groupIds[i]]);
	      }

	      // now all needed data has been collected we start the processing.
	      this._getYRanges(groupIds, preprocessedGroupData, groupRanges);

	      // update the Y axis first, we use this data to draw at the correct Y points
	      // changeCalled is required to clean the SVG on a change emit.
	      changeCalled = this._updateYAxis(groupIds, groupRanges);
	      var MAX_CYCLES = 5;
	      if (changeCalled == true && this.COUNTER < MAX_CYCLES) {
	        DOMutil.cleanupElements(this.svgElements);
	        this.abortedGraphUpdate = true;
	        this.COUNTER++;
	        this.body.emitter.emit('change');
	        return true;
	      } else {
	        if (this.COUNTER > MAX_CYCLES) {
	          console.log("WARNING: there may be an infinite loop in the _updateGraph emitter cycle.");
	        }
	        this.COUNTER = 0;
	        this.abortedGraphUpdate = false;

	        // With the yAxis scaled correctly, use this to get the Y values of the points.
	        for (i = 0; i < groupIds.length; i++) {
	          group = this.groups[groupIds[i]];
	          processedGroupData[groupIds[i]] = this._convertYcoordinates(groupsData[groupIds[i]], group);
	        }

	        // draw the groups
	        for (i = 0; i < groupIds.length; i++) {
	          group = this.groups[groupIds[i]];
	          if (group.options.style != 'bar') {
	            // bar needs to be drawn enmasse
	            group.draw(processedGroupData[groupIds[i]], group, this.framework);
	          }
	        }
	        BarGraphFunctions.draw(groupIds, processedGroupData, this.framework);
	      }
	    }
	  }

	  // cleanup unused svg elements
	  DOMutil.cleanupElements(this.svgElements);
	  return false;
	};

	/**
	 * first select and preprocess the data from the datasets.
	 * the groups have their preselection of data, we now loop over this data to see
	 * what data we need to draw. Sorted data is much faster.
	 * more optimization is possible by doing the sampling before and using the binary search
	 * to find the end date to determine the increment.
	 *
	 * @param {array}  groupIds
	 * @param {object} groupsData
	 * @param {date}   minDate
	 * @param {date}   maxDate
	 * @private
	 */
	LineGraph.prototype._getRelevantData = function (groupIds, groupsData, minDate, maxDate) {
	  var group, i, j, item;
	  if (groupIds.length > 0) {
	    for (i = 0; i < groupIds.length; i++) {
	      group = this.groups[groupIds[i]];
	      groupsData[groupIds[i]] = [];
	      var dataContainer = groupsData[groupIds[i]];
	      // optimization for sorted data
	      if (group.options.sort == true) {
	        var guess = Math.max(0, util.binarySearchValue(group.itemsData, minDate, 'x', 'before'));
	        for (j = guess; j < group.itemsData.length; j++) {
	          item = group.itemsData[j];
	          if (item !== undefined) {
	            if (item.x > maxDate) {
	              dataContainer.push(item);
	              break;
	            } else {
	              dataContainer.push(item);
	            }
	          }
	        }
	      } else {
	        for (j = 0; j < group.itemsData.length; j++) {
	          item = group.itemsData[j];
	          if (item !== undefined) {
	            if (item.x > minDate && item.x < maxDate) {
	              dataContainer.push(item);
	            }
	          }
	        }
	      }
	    }
	  }
	};

	/**
	 *
	 * @param groupIds
	 * @param groupsData
	 * @private
	 */
	LineGraph.prototype._applySampling = function (groupIds, groupsData) {
	  var group;
	  if (groupIds.length > 0) {
	    for (var i = 0; i < groupIds.length; i++) {
	      group = this.groups[groupIds[i]];
	      if (group.options.sampling == true) {
	        var dataContainer = groupsData[groupIds[i]];
	        if (dataContainer.length > 0) {
	          var increment = 1;
	          var amountOfPoints = dataContainer.length;

	          // the global screen is used because changing the width of the yAxis may affect the increment, resulting in an endless loop
	          // of width changing of the yAxis.
	          var xDistance = this.body.util.toGlobalScreen(dataContainer[dataContainer.length - 1].x) - this.body.util.toGlobalScreen(dataContainer[0].x);
	          var pointsPerPixel = amountOfPoints / xDistance;
	          increment = Math.min(Math.ceil(0.2 * amountOfPoints), Math.max(1, Math.round(pointsPerPixel)));

	          var sampledData = [];
	          for (var j = 0; j < amountOfPoints; j += increment) {
	            sampledData.push(dataContainer[j]);
	          }
	          groupsData[groupIds[i]] = sampledData;
	        }
	      }
	    }
	  }
	};

	/**
	 *
	 *
	 * @param {array}  groupIds
	 * @param {object} groupsData
	 * @param {object} groupRanges  | this is being filled here
	 * @private
	 */
	LineGraph.prototype._getYRanges = function (groupIds, groupsData, groupRanges) {
	  var groupData, group, i;
	  var barCombinedDataLeft = [];
	  var barCombinedDataRight = [];
	  var options;
	  if (groupIds.length > 0) {
	    for (i = 0; i < groupIds.length; i++) {
	      groupData = groupsData[groupIds[i]];
	      options = this.groups[groupIds[i]].options;
	      if (groupData.length > 0) {
	        group = this.groups[groupIds[i]];
	        // if bar graphs are stacked, their range need to be handled differently and accumulated over all groups.
	        if (options.barChart.handleOverlap == 'stack' && options.style == 'bar') {
	          if (options.yAxisOrientation == 'left') {
	            barCombinedDataLeft = barCombinedDataLeft.concat(group.getYRange(groupData));
	          } else {
	            barCombinedDataRight = barCombinedDataRight.concat(group.getYRange(groupData));
	          }
	        } else {
	          groupRanges[groupIds[i]] = group.getYRange(groupData, groupIds[i]);
	        }
	      }
	    }

	    // if bar graphs are stacked, their range need to be handled differently and accumulated over all groups.
	    BarGraphFunctions.getStackedBarYRange(barCombinedDataLeft, groupRanges, groupIds, '__barchartLeft', 'left');
	    BarGraphFunctions.getStackedBarYRange(barCombinedDataRight, groupRanges, groupIds, '__barchartRight', 'right');
	  }
	};

	/**
	 * this sets the Y ranges for the Y axis. It also determines which of the axis should be shown or hidden.
	 * @param {Array} groupIds
	 * @param {Object} groupRanges
	 * @private
	 */
	LineGraph.prototype._updateYAxis = function (groupIds, groupRanges) {
	  var resized = false;
	  var yAxisLeftUsed = false;
	  var yAxisRightUsed = false;
	  var minLeft = 1e9,
	      minRight = 1e9,
	      maxLeft = -1e9,
	      maxRight = -1e9,
	      minVal,
	      maxVal;
	  // if groups are present
	  if (groupIds.length > 0) {
	    // this is here to make sure that if there are no items in the axis but there are groups, that there is no infinite draw/redraw loop.
	    for (var i = 0; i < groupIds.length; i++) {
	      var group = this.groups[groupIds[i]];
	      if (group && group.options.yAxisOrientation != 'right') {
	        yAxisLeftUsed = true;
	        minLeft = 0;
	        maxLeft = 0;
	      } else if (group && group.options.yAxisOrientation) {
	        yAxisRightUsed = true;
	        minRight = 0;
	        maxRight = 0;
	      }
	    }

	    // if there are items:
	    for (var i = 0; i < groupIds.length; i++) {
	      if (groupRanges.hasOwnProperty(groupIds[i])) {
	        if (groupRanges[groupIds[i]].ignore !== true) {
	          minVal = groupRanges[groupIds[i]].min;
	          maxVal = groupRanges[groupIds[i]].max;

	          if (groupRanges[groupIds[i]].yAxisOrientation != 'right') {
	            yAxisLeftUsed = true;
	            minLeft = minLeft > minVal ? minVal : minLeft;
	            maxLeft = maxLeft < maxVal ? maxVal : maxLeft;
	          } else {
	            yAxisRightUsed = true;
	            minRight = minRight > minVal ? minVal : minRight;
	            maxRight = maxRight < maxVal ? maxVal : maxRight;
	          }
	        }
	      }
	    }

	    if (yAxisLeftUsed == true) {
	      this.yAxisLeft.setRange(minLeft, maxLeft);
	    }
	    if (yAxisRightUsed == true) {
	      this.yAxisRight.setRange(minRight, maxRight);
	    }
	  }
	  resized = this._toggleAxisVisiblity(yAxisLeftUsed, this.yAxisLeft) || resized;
	  resized = this._toggleAxisVisiblity(yAxisRightUsed, this.yAxisRight) || resized;

	  if (yAxisRightUsed == true && yAxisLeftUsed == true) {
	    this.yAxisLeft.drawIcons = true;
	    this.yAxisRight.drawIcons = true;
	  } else {
	    this.yAxisLeft.drawIcons = false;
	    this.yAxisRight.drawIcons = false;
	  }
	  this.yAxisRight.master = !yAxisLeftUsed;
	  if (this.yAxisRight.master == false) {
	    if (yAxisRightUsed == true) {
	      this.yAxisLeft.lineOffset = this.yAxisRight.width;
	    } else {
	      this.yAxisLeft.lineOffset = 0;
	    }

	    resized = this.yAxisLeft.redraw() || resized;
	    this.yAxisRight.stepPixelsForced = this.yAxisLeft.stepPixels;
	    this.yAxisRight.zeroCrossing = this.yAxisLeft.zeroCrossing;
	    resized = this.yAxisRight.redraw() || resized;
	  } else {
	    resized = this.yAxisRight.redraw() || resized;
	  }

	  // clean the accumulated lists
	  if (groupIds.indexOf('__barchartLeft') != -1) {
	    groupIds.splice(groupIds.indexOf('__barchartLeft'), 1);
	  }
	  if (groupIds.indexOf('__barchartRight') != -1) {
	    groupIds.splice(groupIds.indexOf('__barchartRight'), 1);
	  }

	  return resized;
	};

	/**
	 * This shows or hides the Y axis if needed. If there is a change, the changed event is emitted by the updateYAxis function
	 *
	 * @param {boolean} axisUsed
	 * @returns {boolean}
	 * @private
	 * @param axis
	 */
	LineGraph.prototype._toggleAxisVisiblity = function (axisUsed, axis) {
	  var changed = false;
	  if (axisUsed == false) {
	    if (axis.dom.frame.parentNode && axis.hidden == false) {
	      axis.hide();
	      changed = true;
	    }
	  } else {
	    if (!axis.dom.frame.parentNode && axis.hidden == true) {
	      axis.show();
	      changed = true;
	    }
	  }
	  return changed;
	};

	/**
	 * This uses the DataAxis object to generate the correct X coordinate on the SVG window. It uses the
	 * util function toScreen to get the x coordinate from the timestamp. It also pre-filters the data and get the minMax ranges for
	 * the yAxis.
	 *
	 * @param datapoints
	 * @returns {Array}
	 * @private
	 */
	LineGraph.prototype._convertXcoordinates = function (datapoints) {
	  var extractedData = [];
	  var xValue, yValue;
	  var toScreen = this.body.util.toScreen;

	  for (var i = 0; i < datapoints.length; i++) {
	    xValue = toScreen(datapoints[i].x) + this.props.width;
	    yValue = datapoints[i].y;
	    extractedData.push({ x: xValue, y: yValue });
	  }

	  return extractedData;
	};

	/**
	 * This uses the DataAxis object to generate the correct X coordinate on the SVG window. It uses the
	 * util function toScreen to get the x coordinate from the timestamp. It also pre-filters the data and get the minMax ranges for
	 * the yAxis.
	 *
	 * @param datapoints
	 * @param group
	 * @returns {Array}
	 * @private
	 */
	LineGraph.prototype._convertYcoordinates = function (datapoints, group) {
	  var extractedData = [];
	  var xValue, yValue;
	  var toScreen = this.body.util.toScreen;
	  var axis = this.yAxisLeft;
	  var svgHeight = Number(this.svg.style.height.replace('px', ''));
	  if (group.options.yAxisOrientation == 'right') {
	    axis = this.yAxisRight;
	  }

	  for (var i = 0; i < datapoints.length; i++) {
	    var labelValue;
	    //if (datapoints[i].label) {
	    //    labelValue = datapoints[i].label;
	    //}
	    //else {
	    //  labelValue = null;
	    //}
	    labelValue = datapoints[i].label ? datapoints[i].label : null;
	    xValue = toScreen(datapoints[i].x) + this.props.width;
	    yValue = Math.round(axis.convertValue(datapoints[i].y));
	    extractedData.push({ x: xValue, y: yValue, label: labelValue });
	  }

	  group.setZeroPosition(Math.min(svgHeight, axis.convertValue(0)));

	  return extractedData;
	};

	module.exports = LineGraph;

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(175);
	var DOMutil = __webpack_require__(284);
	var Component = __webpack_require__(301);
	var DataStep = __webpack_require__(323);

	/**
	 * A horizontal time axis
	 * @param {Object} [options]        See DataAxis.setOptions for the available
	 *                                  options.
	 * @constructor DataAxis
	 * @extends Component
	 * @param body
	 */
	function DataAxis(body, options, svg, linegraphOptions) {
	  this.id = util.randomUUID();
	  this.body = body;

	  this.defaultOptions = {
	    orientation: 'left', // supported: 'left', 'right'
	    showMinorLabels: true,
	    showMajorLabels: true,
	    icons: true,
	    majorLinesOffset: 7,
	    minorLinesOffset: 4,
	    labelOffsetX: 10,
	    labelOffsetY: 2,
	    iconWidth: 20,
	    width: '40px',
	    visible: true,
	    alignZeros: true,
	    customRange: {
	      left: { min: undefined, max: undefined },
	      right: { min: undefined, max: undefined }
	    },
	    title: {
	      left: { text: undefined },
	      right: { text: undefined }
	    },
	    format: {
	      left: { decimals: undefined },
	      right: { decimals: undefined }
	    }
	  };

	  this.linegraphOptions = linegraphOptions;
	  this.linegraphSVG = svg;
	  this.props = {};
	  this.DOMelements = { // dynamic elements
	    lines: {},
	    labels: {},
	    title: {}
	  };

	  this.dom = {};

	  this.range = { start: 0, end: 0 };

	  this.options = util.extend({}, this.defaultOptions);
	  this.conversionFactor = 1;

	  this.setOptions(options);
	  this.width = Number(('' + this.options.width).replace("px", ""));
	  this.minWidth = this.width;
	  this.height = this.linegraphSVG.offsetHeight;
	  this.hidden = false;

	  this.stepPixels = 25;
	  this.stepPixelsForced = 25;
	  this.zeroCrossing = -1;

	  this.lineOffset = 0;
	  this.master = true;
	  this.svgElements = {};
	  this.iconsRemoved = false;

	  this.groups = {};
	  this.amountOfGroups = 0;

	  // create the HTML DOM
	  this._create();

	  var me = this;
	  this.body.emitter.on("verticalDrag", function () {
	    me.dom.lineContainer.style.top = me.body.domProps.scrollTop + 'px';
	  });
	}

	DataAxis.prototype = new Component();

	DataAxis.prototype.addGroup = function (label, graphOptions) {
	  if (!this.groups.hasOwnProperty(label)) {
	    this.groups[label] = graphOptions;
	  }
	  this.amountOfGroups += 1;
	};

	DataAxis.prototype.updateGroup = function (label, graphOptions) {
	  this.groups[label] = graphOptions;
	};

	DataAxis.prototype.removeGroup = function (label) {
	  if (this.groups.hasOwnProperty(label)) {
	    delete this.groups[label];
	    this.amountOfGroups -= 1;
	  }
	};

	DataAxis.prototype.setOptions = function (options) {
	  if (options) {
	    var redraw = false;
	    if (this.options.orientation != options.orientation && options.orientation !== undefined) {
	      redraw = true;
	    }
	    var fields = ['orientation', 'showMinorLabels', 'showMajorLabels', 'icons', 'majorLinesOffset', 'minorLinesOffset', 'labelOffsetX', 'labelOffsetY', 'iconWidth', 'width', 'visible', 'customRange', 'title', 'format', 'alignZeros'];
	    util.selectiveExtend(fields, this.options, options);

	    this.minWidth = Number(('' + this.options.width).replace("px", ""));

	    if (redraw == true && this.dom.frame) {
	      this.hide();
	      this.show();
	    }
	  }
	};

	/**
	 * Create the HTML DOM for the DataAxis
	 */
	DataAxis.prototype._create = function () {
	  this.dom.frame = document.createElement('div');
	  this.dom.frame.style.width = this.options.width;
	  this.dom.frame.style.height = this.height;

	  this.dom.lineContainer = document.createElement('div');
	  this.dom.lineContainer.style.width = '100%';
	  this.dom.lineContainer.style.height = this.height;
	  this.dom.lineContainer.style.position = 'relative';

	  // create svg element for graph drawing.
	  this.svg = document.createElementNS('http://www.w3.org/2000/svg', "svg");
	  this.svg.style.position = "absolute";
	  this.svg.style.top = '0px';
	  this.svg.style.height = '100%';
	  this.svg.style.width = '100%';
	  this.svg.style.display = "block";
	  this.dom.frame.appendChild(this.svg);
	};

	DataAxis.prototype._redrawGroupIcons = function () {
	  DOMutil.prepareElements(this.svgElements);

	  var x;
	  var iconWidth = this.options.iconWidth;
	  var iconHeight = 15;
	  var iconOffset = 4;
	  var y = iconOffset + 0.5 * iconHeight;

	  if (this.options.orientation == 'left') {
	    x = iconOffset;
	  } else {
	    x = this.width - iconWidth - iconOffset;
	  }

	  for (var groupId in this.groups) {
	    if (this.groups.hasOwnProperty(groupId)) {
	      if (this.groups[groupId].visible == true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] == true)) {
	        this.groups[groupId].drawIcon(x, y, this.svgElements, this.svg, iconWidth, iconHeight);
	        y += iconHeight + iconOffset;
	      }
	    }
	  }

	  DOMutil.cleanupElements(this.svgElements);
	  this.iconsRemoved = false;
	};

	DataAxis.prototype._cleanupIcons = function () {
	  if (this.iconsRemoved == false) {
	    DOMutil.prepareElements(this.svgElements);
	    DOMutil.cleanupElements(this.svgElements);
	    this.iconsRemoved = true;
	  }
	};

	/**
	 * Create the HTML DOM for the DataAxis
	 */
	DataAxis.prototype.show = function () {
	  this.hidden = false;
	  if (!this.dom.frame.parentNode) {
	    if (this.options.orientation == 'left') {
	      this.body.dom.left.appendChild(this.dom.frame);
	    } else {
	      this.body.dom.right.appendChild(this.dom.frame);
	    }
	  }

	  if (!this.dom.lineContainer.parentNode) {
	    this.body.dom.backgroundHorizontal.appendChild(this.dom.lineContainer);
	  }
	};

	/**
	 * Create the HTML DOM for the DataAxis
	 */
	DataAxis.prototype.hide = function () {
	  this.hidden = true;
	  if (this.dom.frame.parentNode) {
	    this.dom.frame.parentNode.removeChild(this.dom.frame);
	  }

	  if (this.dom.lineContainer.parentNode) {
	    this.dom.lineContainer.parentNode.removeChild(this.dom.lineContainer);
	  }
	};

	/**
	 * Set a range (start and end)
	 * @param end
	 * @param start
	 * @param end
	 */
	DataAxis.prototype.setRange = function (start, end) {
	  if (this.master == false && this.options.alignZeros == true && this.zeroCrossing != -1) {
	    if (start > 0) {
	      start = 0;
	    }
	  }
	  this.range.start = start;
	  this.range.end = end;
	};

	/**
	 * Repaint the component
	 * @return {boolean} Returns true if the component is resized
	 */
	DataAxis.prototype.redraw = function () {
	  var resized = false;
	  var activeGroups = 0;

	  // Make sure the line container adheres to the vertical scrolling.
	  this.dom.lineContainer.style.top = this.body.domProps.scrollTop + 'px';

	  for (var groupId in this.groups) {
	    if (this.groups.hasOwnProperty(groupId)) {
	      if (this.groups[groupId].visible == true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] == true)) {
	        activeGroups++;
	      }
	    }
	  }
	  if (this.amountOfGroups == 0 || activeGroups == 0) {
	    this.hide();
	  } else {
	    this.show();
	    this.height = Number(this.linegraphSVG.style.height.replace("px", ""));

	    // svg offsetheight did not work in firefox and explorer...
	    this.dom.lineContainer.style.height = this.height + 'px';
	    this.width = this.options.visible == true ? Number(('' + this.options.width).replace("px", "")) : 0;

	    var props = this.props;
	    var frame = this.dom.frame;

	    // update classname
	    frame.className = 'dataaxis';

	    // calculate character width and height
	    this._calculateCharSize();

	    var orientation = this.options.orientation;
	    var showMinorLabels = this.options.showMinorLabels;
	    var showMajorLabels = this.options.showMajorLabels;

	    // determine the width and height of the elements for the axis
	    props.minorLabelHeight = showMinorLabels ? props.minorCharHeight : 0;
	    props.majorLabelHeight = showMajorLabels ? props.majorCharHeight : 0;

	    props.minorLineWidth = this.body.dom.backgroundHorizontal.offsetWidth - this.lineOffset - this.width + 2 * this.options.minorLinesOffset;
	    props.minorLineHeight = 1;
	    props.majorLineWidth = this.body.dom.backgroundHorizontal.offsetWidth - this.lineOffset - this.width + 2 * this.options.majorLinesOffset;
	    props.majorLineHeight = 1;

	    //  take frame offline while updating (is almost twice as fast)
	    if (orientation == 'left') {
	      frame.style.top = '0';
	      frame.style.left = '0';
	      frame.style.bottom = '';
	      frame.style.width = this.width + 'px';
	      frame.style.height = this.height + "px";
	      this.props.width = this.body.domProps.left.width;
	      this.props.height = this.body.domProps.left.height;
	    } else {
	      // right
	      frame.style.top = '';
	      frame.style.bottom = '0';
	      frame.style.left = '0';
	      frame.style.width = this.width + 'px';
	      frame.style.height = this.height + "px";
	      this.props.width = this.body.domProps.right.width;
	      this.props.height = this.body.domProps.right.height;
	    }

	    resized = this._redrawLabels();
	    resized = this._isResized() || resized;

	    if (this.options.icons == true) {
	      this._redrawGroupIcons();
	    } else {
	      this._cleanupIcons();
	    }

	    this._redrawTitle(orientation);
	  }
	  return resized;
	};

	/**
	 * Repaint major and minor text labels and vertical grid lines
	 * @private
	 */
	DataAxis.prototype._redrawLabels = function () {
	  var resized = false;
	  DOMutil.prepareElements(this.DOMelements.lines);
	  DOMutil.prepareElements(this.DOMelements.labels);

	  var orientation = this.options['orientation'];

	  // calculate range and step (step such that we have space for 7 characters per label)
	  var minimumStep = this.master ? this.props.majorCharHeight || 10 : this.stepPixelsForced;

	  var step = new DataStep(this.range.start, this.range.end, minimumStep, this.dom.frame.offsetHeight, this.options.customRange[this.options.orientation], this.master == false && this.options.alignZeros // doess the step have to align zeros? only if not master and the options is on
	  );

	  this.step = step;
	  // get the distance in pixels for a step
	  // dead space is space that is "left over" after a step
	  var stepPixels = (this.dom.frame.offsetHeight - step.deadSpace * (this.dom.frame.offsetHeight / step.marginRange)) / ((step.marginRange - step.deadSpace) / step.step);

	  this.stepPixels = stepPixels;

	  var amountOfSteps = this.height / stepPixels;
	  var stepDifference = 0;

	  // the slave axis needs to use the same horizontal lines as the master axis.
	  if (this.master == false) {
	    stepPixels = this.stepPixelsForced;
	    stepDifference = Math.round(this.dom.frame.offsetHeight / stepPixels - amountOfSteps);
	    for (var i = 0; i < 0.5 * stepDifference; i++) {
	      step.previous();
	    }
	    amountOfSteps = this.height / stepPixels;

	    if (this.zeroCrossing != -1 && this.options.alignZeros == true) {
	      var zeroStepDifference = step.marginEnd / step.step - this.zeroCrossing;
	      if (zeroStepDifference > 0) {
	        for (var i = 0; i < zeroStepDifference; i++) {
	          step.next();
	        }
	      } else if (zeroStepDifference < 0) {
	        for (var i = 0; i < -zeroStepDifference; i++) {
	          step.previous();
	        }
	      }
	    }
	  } else {
	    amountOfSteps += 0.25;
	  }

	  this.valueAtZero = step.marginEnd;
	  var marginStartPos = 0;

	  // do not draw the first label
	  var max = 1;

	  // Get the number of decimal places
	  var decimals;
	  if (this.options.format[orientation] !== undefined) {
	    decimals = this.options.format[orientation].decimals;
	  }

	  this.maxLabelSize = 0;
	  var y = 0;
	  while (max < Math.round(amountOfSteps)) {
	    step.next();
	    y = Math.round(max * stepPixels);
	    marginStartPos = max * stepPixels;
	    var isMajor = step.isMajor();

	    if (this.options['showMinorLabels'] && isMajor == false || this.master == false && this.options['showMinorLabels'] == true) {
	      this._redrawLabel(y - 2, step.getCurrent(decimals), orientation, 'yAxis minor', this.props.minorCharHeight);
	    }

	    if (isMajor && this.options['showMajorLabels'] && this.master == true || this.options['showMinorLabels'] == false && this.master == false && isMajor == true) {
	      if (y >= 0) {
	        this._redrawLabel(y - 2, step.getCurrent(decimals), orientation, 'yAxis major', this.props.majorCharHeight);
	      }
	      this._redrawLine(y, orientation, 'grid horizontal major', this.options.majorLinesOffset, this.props.majorLineWidth);
	    } else {
	      this._redrawLine(y, orientation, 'grid horizontal minor', this.options.minorLinesOffset, this.props.minorLineWidth);
	    }

	    if (this.master == true && step.current == 0) {
	      this.zeroCrossing = max;
	    }

	    max++;
	  }

	  if (this.master == false) {
	    this.conversionFactor = y / (this.valueAtZero - step.current);
	  } else {
	    this.conversionFactor = this.dom.frame.offsetHeight / step.marginRange;
	  }

	  // Note that title is rotated, so we're using the height, not width!
	  var titleWidth = 0;
	  if (this.options.title[orientation] !== undefined && this.options.title[orientation].text !== undefined) {
	    titleWidth = this.props.titleCharHeight;
	  }
	  var offset = this.options.icons == true ? Math.max(this.options.iconWidth, titleWidth) + this.options.labelOffsetX + 15 : titleWidth + this.options.labelOffsetX + 15;

	  // this will resize the yAxis to accommodate the labels.
	  if (this.maxLabelSize > this.width - offset && this.options.visible == true) {
	    this.width = this.maxLabelSize + offset;
	    this.options.width = this.width + "px";
	    DOMutil.cleanupElements(this.DOMelements.lines);
	    DOMutil.cleanupElements(this.DOMelements.labels);
	    this.redraw();
	    resized = true;
	  }
	  // this will resize the yAxis if it is too big for the labels.
	  else if (this.maxLabelSize < this.width - offset && this.options.visible == true && this.width > this.minWidth) {
	      this.width = Math.max(this.minWidth, this.maxLabelSize + offset);
	      this.options.width = this.width + "px";
	      DOMutil.cleanupElements(this.DOMelements.lines);
	      DOMutil.cleanupElements(this.DOMelements.labels);
	      this.redraw();
	      resized = true;
	    } else {
	      DOMutil.cleanupElements(this.DOMelements.lines);
	      DOMutil.cleanupElements(this.DOMelements.labels);
	      resized = false;
	    }

	  return resized;
	};

	DataAxis.prototype.convertValue = function (value) {
	  var invertedValue = this.valueAtZero - value;
	  var convertedValue = invertedValue * this.conversionFactor;
	  return convertedValue;
	};

	DataAxis.prototype.screenToValue = function (x) {
	  return this.valueAtZero - x / this.conversionFactor;
	};

	/**
	 * Create a label for the axis at position x
	 * @private
	 * @param y
	 * @param text
	 * @param orientation
	 * @param className
	 * @param characterHeight
	 */
	DataAxis.prototype._redrawLabel = function (y, text, orientation, className, characterHeight) {
	  // reuse redundant label
	  var label = DOMutil.getDOMElement('div', this.DOMelements.labels, this.dom.frame); //this.dom.redundant.labels.shift();
	  label.className = className;
	  label.innerHTML = text;
	  if (orientation == 'left') {
	    label.style.left = '-' + this.options.labelOffsetX + 'px';
	    label.style.textAlign = "right";
	  } else {
	    label.style.right = '-' + this.options.labelOffsetX + 'px';
	    label.style.textAlign = "left";
	  }

	  label.style.top = y - 0.5 * characterHeight + this.options.labelOffsetY + 'px';

	  text += '';

	  var largestWidth = Math.max(this.props.majorCharWidth, this.props.minorCharWidth);
	  if (this.maxLabelSize < text.length * largestWidth) {
	    this.maxLabelSize = text.length * largestWidth;
	  }
	};

	/**
	 * Create a minor line for the axis at position y
	 * @param y
	 * @param orientation
	 * @param className
	 * @param offset
	 * @param width
	 */
	DataAxis.prototype._redrawLine = function (y, orientation, className, offset, width) {
	  if (this.master == true) {
	    var line = DOMutil.getDOMElement('div', this.DOMelements.lines, this.dom.lineContainer); //this.dom.redundant.lines.shift();
	    line.className = className;
	    line.innerHTML = '';

	    if (orientation == 'left') {
	      line.style.left = this.width - offset + 'px';
	    } else {
	      line.style.right = this.width - offset + 'px';
	    }

	    line.style.width = width + 'px';
	    line.style.top = y + 'px';
	  }
	};

	/**
	 * Create a title for the axis
	 * @private
	 * @param orientation
	 */
	DataAxis.prototype._redrawTitle = function (orientation) {
	  DOMutil.prepareElements(this.DOMelements.title);

	  // Check if the title is defined for this axes
	  if (this.options.title[orientation] !== undefined && this.options.title[orientation].text !== undefined) {
	    var title = DOMutil.getDOMElement('div', this.DOMelements.title, this.dom.frame);
	    title.className = 'yAxis title ' + orientation;
	    title.innerHTML = this.options.title[orientation].text;

	    // Add style - if provided
	    if (this.options.title[orientation].style !== undefined) {
	      util.addCssText(title, this.options.title[orientation].style);
	    }

	    if (orientation == 'left') {
	      title.style.left = this.props.titleCharHeight + 'px';
	    } else {
	      title.style.right = this.props.titleCharHeight + 'px';
	    }

	    title.style.width = this.height + 'px';
	  }

	  // we need to clean up in case we did not use all elements.
	  DOMutil.cleanupElements(this.DOMelements.title);
	};

	/**
	 * Determine the size of text on the axis (both major and minor axis).
	 * The size is calculated only once and then cached in this.props.
	 * @private
	 */
	DataAxis.prototype._calculateCharSize = function () {
	  // determine the char width and height on the minor axis
	  if (!('minorCharHeight' in this.props)) {
	    var textMinor = document.createTextNode('0');
	    var measureCharMinor = document.createElement('div');
	    measureCharMinor.className = 'yAxis minor measure';
	    measureCharMinor.appendChild(textMinor);
	    this.dom.frame.appendChild(measureCharMinor);

	    this.props.minorCharHeight = measureCharMinor.clientHeight;
	    this.props.minorCharWidth = measureCharMinor.clientWidth;

	    this.dom.frame.removeChild(measureCharMinor);
	  }

	  if (!('majorCharHeight' in this.props)) {
	    var textMajor = document.createTextNode('0');
	    var measureCharMajor = document.createElement('div');
	    measureCharMajor.className = 'yAxis major measure';
	    measureCharMajor.appendChild(textMajor);
	    this.dom.frame.appendChild(measureCharMajor);

	    this.props.majorCharHeight = measureCharMajor.clientHeight;
	    this.props.majorCharWidth = measureCharMajor.clientWidth;

	    this.dom.frame.removeChild(measureCharMajor);
	  }

	  if (!('titleCharHeight' in this.props)) {
	    var textTitle = document.createTextNode('0');
	    var measureCharTitle = document.createElement('div');
	    measureCharTitle.className = 'yAxis title measure';
	    measureCharTitle.appendChild(textTitle);
	    this.dom.frame.appendChild(measureCharTitle);

	    this.props.titleCharHeight = measureCharTitle.clientHeight;
	    this.props.titleCharWidth = measureCharTitle.clientWidth;

	    this.dom.frame.removeChild(measureCharTitle);
	  }
	};

	module.exports = DataAxis;

/***/ },
/* 323 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * @constructor  DataStep
	 * The class DataStep is an iterator for data for the lineGraph. You provide a start data point and an
	 * end data point. The class itself determines the best scale (step size) based on the
	 * provided start Date, end Date, and minimumStep.
	 *
	 * If minimumStep is provided, the step size is chosen as close as possible
	 * to the minimumStep but larger than minimumStep. If minimumStep is not
	 * provided, the scale is set to 1 DAY.
	 * The minimumStep should correspond with the onscreen size of about 6 characters
	 *
	 * Alternatively, you can set a scale by hand.
	 * After creation, you can initialize the class by executing first(). Then you
	 * can iterate from the start date to the end date via next(). You can check if
	 * the end date is reached with the function hasNext(). After each step, you can
	 * retrieve the current date via getCurrent().
	 * The DataStep has scales ranging from milliseconds, seconds, minutes, hours,
	 * days, to years.
	 *
	 * Version: 1.2
	 *
	 * @param {Date} [start]         The start date, for example new Date(2010, 9, 21)
	 *                               or new Date(2010, 9, 21, 23, 45, 00)
	 * @param {Date} [end]           The end date
	 * @param {Number} [minimumStep] Optional. Minimum step size in milliseconds
	 */
	function DataStep(start, end, minimumStep, containerHeight, customRange, alignZeros) {
	  // variables
	  this.current = 0;

	  this.autoScale = true;
	  this.stepIndex = 0;
	  this.step = 1;
	  this.scale = 1;

	  this.marginStart;
	  this.marginEnd;
	  this.deadSpace = 0;

	  this.majorSteps = [1, 2, 5, 10];
	  this.minorSteps = [0.25, 0.5, 1, 2];

	  this.alignZeros = alignZeros;

	  this.setRange(start, end, minimumStep, containerHeight, customRange);
	}

	/**
	 * Set a new range
	 * If minimumStep is provided, the step size is chosen as close as possible
	 * to the minimumStep but larger than minimumStep. If minimumStep is not
	 * provided, the scale is set to 1 DAY.
	 * The minimumStep should correspond with the onscreen size of about 6 characters
	 * @param {Number} [start]      The start date and time.
	 * @param {Number} [end]        The end date and time.
	 * @param {Number} [minimumStep] Optional. Minimum step size in milliseconds
	 */
	DataStep.prototype.setRange = function (start, end, minimumStep, containerHeight, customRange) {
	  this._start = customRange.min === undefined ? start : customRange.min;
	  this._end = customRange.max === undefined ? end : customRange.max;

	  if (this._start == this._end) {
	    this._start -= 0.75;
	    this._end += 1;
	  }

	  if (this.autoScale == true) {
	    this.setMinimumStep(minimumStep, containerHeight);
	  }

	  this.setFirst(customRange);
	};

	/**
	 * Automatically determine the scale that bests fits the provided minimum step
	 * @param {Number} [minimumStep]  The minimum step size in milliseconds
	 */
	DataStep.prototype.setMinimumStep = function (minimumStep, containerHeight) {
	  // round to floor
	  var size = this._end - this._start;
	  var safeSize = size * 1.2;
	  var minimumStepValue = minimumStep * (safeSize / containerHeight);
	  var orderOfMagnitude = Math.round(Math.log(safeSize) / Math.LN10);

	  var minorStepIdx = -1;
	  var magnitudefactor = Math.pow(10, orderOfMagnitude);

	  var start = 0;
	  if (orderOfMagnitude < 0) {
	    start = orderOfMagnitude;
	  }

	  var solutionFound = false;
	  for (var i = start; Math.abs(i) <= Math.abs(orderOfMagnitude); i++) {
	    magnitudefactor = Math.pow(10, i);
	    for (var j = 0; j < this.minorSteps.length; j++) {
	      var stepSize = magnitudefactor * this.minorSteps[j];
	      if (stepSize >= minimumStepValue) {
	        solutionFound = true;
	        minorStepIdx = j;
	        break;
	      }
	    }
	    if (solutionFound == true) {
	      break;
	    }
	  }
	  this.stepIndex = minorStepIdx;
	  this.scale = magnitudefactor;
	  this.step = magnitudefactor * this.minorSteps[minorStepIdx];
	};

	/**
	 * Round the current date to the first minor date value
	 * This must be executed once when the current date is set to start Date
	 */
	DataStep.prototype.setFirst = function (customRange) {
	  if (customRange === undefined) {
	    customRange = {};
	  }

	  var niceStart = customRange.min === undefined ? this._start - this.scale * 2 * this.minorSteps[this.stepIndex] : customRange.min;
	  var niceEnd = customRange.max === undefined ? this._end + this.scale * this.minorSteps[this.stepIndex] : customRange.max;

	  this.marginEnd = customRange.max === undefined ? this.roundToMinor(niceEnd) : customRange.max;
	  this.marginStart = customRange.min === undefined ? this.roundToMinor(niceStart) : customRange.min;

	  // if we need to align the zero's we need to make sure that there is a zero to use.
	  if (this.alignZeros == true && (this.marginEnd - this.marginStart) % this.step != 0) {
	    this.marginEnd += this.marginEnd % this.step;
	  }

	  this.deadSpace = this.roundToMinor(niceEnd) - niceEnd + this.roundToMinor(niceStart) - niceStart;
	  this.marginRange = this.marginEnd - this.marginStart;

	  this.current = this.marginEnd;
	};

	DataStep.prototype.roundToMinor = function (value) {
	  var rounded = value - value % (this.scale * this.minorSteps[this.stepIndex]);
	  if (value % (this.scale * this.minorSteps[this.stepIndex]) > 0.5 * (this.scale * this.minorSteps[this.stepIndex])) {
	    return rounded + this.scale * this.minorSteps[this.stepIndex];
	  } else {
	    return rounded;
	  }
	};

	/**
	 * Check if the there is a next step
	 * @return {boolean}  true if the current date has not passed the end date
	 */
	DataStep.prototype.hasNext = function () {
	  return this.current >= this.marginStart;
	};

	/**
	 * Do the next step
	 */
	DataStep.prototype.next = function () {
	  var prev = this.current;
	  this.current -= this.step;

	  // safety mechanism: if current time is still unchanged, move to the end
	  if (this.current == prev) {
	    this.current = this._end;
	  }
	};

	/**
	 * Do the next step
	 */
	DataStep.prototype.previous = function () {
	  this.current += this.step;
	  this.marginEnd += this.step;
	  this.marginRange = this.marginEnd - this.marginStart;
	};

	/**
	 * Get the current datetime
	 * @return {String}  current The current date
	 */
	DataStep.prototype.getCurrent = function (decimals) {
	  // prevent round-off errors when close to zero
	  var current = Math.abs(this.current) < this.step / 2 ? 0 : this.current;
	  var toPrecision = '' + Number(current).toPrecision(5);

	  // If decimals is specified, then limit or extend the string as required
	  if (decimals !== undefined && !isNaN(Number(decimals))) {
	    // If string includes exponent, then we need to add it to the end
	    var exp = "";
	    var index = toPrecision.indexOf("e");
	    if (index != -1) {
	      // Get the exponent
	      exp = toPrecision.slice(index);
	      // Remove the exponent in case we need to zero-extend
	      toPrecision = toPrecision.slice(0, index);
	    }
	    index = Math.max(toPrecision.indexOf(","), toPrecision.indexOf("."));
	    if (index === -1) {
	      // No decimal found - if we want decimals, then we need to add it
	      if (decimals !== 0) {
	        toPrecision += '.';
	      }
	      // Calculate how long the string should be
	      index = toPrecision.length + decimals;
	    } else if (decimals !== 0) {
	      // Calculate how long the string should be - accounting for the decimal place
	      index += decimals + 1;
	    }
	    if (index > toPrecision.length) {
	      // We need to add zeros!
	      for (var cnt = index - toPrecision.length; cnt > 0; cnt--) {
	        toPrecision += '0';
	      }
	    } else {
	      // we need to remove characters
	      toPrecision = toPrecision.slice(0, index);
	    }
	    // Add the exponent if there is one
	    toPrecision += exp;
	  } else {
	    if (toPrecision.indexOf(",") != -1 || toPrecision.indexOf(".") != -1) {
	      // If no decimal is specified, and there are decimal places, remove trailing zeros
	      for (var i = toPrecision.length - 1; i > 0; i--) {
	        if (toPrecision[i] == "0") {
	          toPrecision = toPrecision.slice(0, i);
	        } else if (toPrecision[i] == "." || toPrecision[i] == ",") {
	          toPrecision = toPrecision.slice(0, i);
	          break;
	        } else {
	          break;
	        }
	      }
	    }
	  }

	  return toPrecision;
	};

	/**
	 * Check if the current value is a major value (for example when the step
	 * is DAY, a major value is each first day of the MONTH)
	 * @return {boolean} true if current date is major, else false.
	 */
	DataStep.prototype.isMajor = function () {
	  return this.current % (this.scale * this.majorSteps[this.stepIndex]) == 0;
	};

	module.exports = DataStep;

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var util = __webpack_require__(175);
	var DOMutil = __webpack_require__(284);
	var Line = __webpack_require__(325);
	var Bar = __webpack_require__(327);
	var Points = __webpack_require__(326);

	/**
	 * /**
	 * @param {object} group            | the object of the group from the dataset
	 * @param {string} groupId          | ID of the group
	 * @param {object} options          | the default options
	 * @param {array} groupsUsingDefaultStyles  | this array has one entree.
	 *                                            It is passed as an array so it is passed by reference.
	 *                                            It enumerates through the default styles
	 * @constructor
	 */
	function GraphGroup(group, groupId, options, groupsUsingDefaultStyles) {
	  this.id = groupId;
	  var fields = ['sampling', 'style', 'sort', 'yAxisOrientation', 'barChart', 'drawPoints', 'shaded', 'catmullRom'];
	  this.options = util.selectiveBridgeObject(fields, options);
	  this.usingDefaultStyle = group.className === undefined;
	  this.groupsUsingDefaultStyles = groupsUsingDefaultStyles;
	  this.zeroPosition = 0;
	  this.update(group);
	  if (this.usingDefaultStyle == true) {
	    this.groupsUsingDefaultStyles[0] += 1;
	  }
	  this.itemsData = [];
	  this.visible = group.visible === undefined ? true : group.visible;
	}

	/**
	 * this loads a reference to all items in this group into this group.
	 * @param {array} items
	 */
	GraphGroup.prototype.setItems = function (items) {
	  if (items != null) {
	    this.itemsData = items;
	    if (this.options.sort == true) {
	      this.itemsData.sort(function (a, b) {
	        return a.x - b.x;
	      });
	    }
	  } else {
	    this.itemsData = [];
	  }
	};

	/**
	 * this is used for plotting barcharts, this way, we only have to calculate it once.
	 * @param pos
	 */
	GraphGroup.prototype.setZeroPosition = function (pos) {
	  this.zeroPosition = pos;
	};

	/**
	 * set the options of the graph group over the default options.
	 * @param options
	 */
	GraphGroup.prototype.setOptions = function (options) {
	  if (options !== undefined) {
	    var fields = ['sampling', 'style', 'sort', 'yAxisOrientation', 'barChart'];
	    util.selectiveDeepExtend(fields, this.options, options);

	    util.mergeOptions(this.options, options, 'catmullRom');
	    util.mergeOptions(this.options, options, 'drawPoints');
	    util.mergeOptions(this.options, options, 'shaded');

	    if (options.catmullRom) {
	      if (_typeof(options.catmullRom) == 'object') {
	        if (options.catmullRom.parametrization) {
	          if (options.catmullRom.parametrization == 'uniform') {
	            this.options.catmullRom.alpha = 0;
	          } else if (options.catmullRom.parametrization == 'chordal') {
	            this.options.catmullRom.alpha = 1.0;
	          } else {
	            this.options.catmullRom.parametrization = 'centripetal';
	            this.options.catmullRom.alpha = 0.5;
	          }
	        }
	      }
	    }
	  }

	  if (this.options.style == 'line') {
	    this.type = new Line(this.id, this.options);
	  } else if (this.options.style == 'bar') {
	    this.type = new Bar(this.id, this.options);
	  } else if (this.options.style == 'points') {
	    this.type = new Points(this.id, this.options);
	  }
	};

	/**
	 * this updates the current group class with the latest group dataset entree, used in _updateGroup in linegraph
	 * @param group
	 */
	GraphGroup.prototype.update = function (group) {
	  this.group = group;
	  this.content = group.content || 'graph';
	  this.className = group.className || this.className || "graphGroup" + this.groupsUsingDefaultStyles[0] % 10;
	  this.visible = group.visible === undefined ? true : group.visible;
	  this.style = group.style;
	  this.setOptions(group.options);
	};

	/**
	 * draw the icon for the legend.
	 *
	 * @param x
	 * @param y
	 * @param JSONcontainer
	 * @param SVGcontainer
	 * @param iconWidth
	 * @param iconHeight
	 */
	GraphGroup.prototype.drawIcon = function (x, y, JSONcontainer, SVGcontainer, iconWidth, iconHeight) {
	  var fillHeight = iconHeight * 0.5;
	  var path, fillPath;

	  var outline = DOMutil.getSVGElement("rect", JSONcontainer, SVGcontainer);
	  outline.setAttributeNS(null, "x", x);
	  outline.setAttributeNS(null, "y", y - fillHeight);
	  outline.setAttributeNS(null, "width", iconWidth);
	  outline.setAttributeNS(null, "height", 2 * fillHeight);
	  outline.setAttributeNS(null, "class", "outline");

	  if (this.options.style == 'line') {
	    path = DOMutil.getSVGElement("path", JSONcontainer, SVGcontainer);
	    path.setAttributeNS(null, "class", this.className);
	    if (this.style !== undefined) {
	      path.setAttributeNS(null, "style", this.style);
	    }

	    path.setAttributeNS(null, "d", "M" + x + "," + y + " L" + (x + iconWidth) + "," + y + "");
	    if (this.options.shaded.enabled == true) {
	      fillPath = DOMutil.getSVGElement("path", JSONcontainer, SVGcontainer);
	      if (this.options.shaded.orientation == 'top') {
	        fillPath.setAttributeNS(null, "d", "M" + x + ", " + (y - fillHeight) + "L" + x + "," + y + " L" + (x + iconWidth) + "," + y + " L" + (x + iconWidth) + "," + (y - fillHeight));
	      } else {
	        fillPath.setAttributeNS(null, "d", "M" + x + "," + y + " " + "L" + x + "," + (y + fillHeight) + " " + "L" + (x + iconWidth) + "," + (y + fillHeight) + "L" + (x + iconWidth) + "," + y);
	      }
	      fillPath.setAttributeNS(null, "class", this.className + " iconFill");
	    }

	    if (this.options.drawPoints.enabled == true) {
	      DOMutil.drawPoint(x + 0.5 * iconWidth, y, this, JSONcontainer, SVGcontainer);
	    }
	  } else {
	    var barWidth = Math.round(0.3 * iconWidth);
	    var bar1Height = Math.round(0.4 * iconHeight);
	    var bar2Height = Math.round(0.75 * iconHeight);

	    var offset = Math.round((iconWidth - 2 * barWidth) / 3);

	    DOMutil.drawBar(x + 0.5 * barWidth + offset, y + fillHeight - bar1Height - 1, barWidth, bar1Height, this.className + ' bar', JSONcontainer, SVGcontainer);
	    DOMutil.drawBar(x + 1.5 * barWidth + offset + 2, y + fillHeight - bar2Height - 1, barWidth, bar2Height, this.className + ' bar', JSONcontainer, SVGcontainer);
	  }
	};

	/**
	 * return the legend entree for this group.
	 *
	 * @param iconWidth
	 * @param iconHeight
	 * @returns {{icon: HTMLElement, label: (group.content|*|string), orientation: (.options.yAxisOrientation|*)}}
	 */
	GraphGroup.prototype.getLegend = function (iconWidth, iconHeight) {
	  var svg = document.createElementNS('http://www.w3.org/2000/svg', "svg");
	  this.drawIcon(0, 0.5 * iconHeight, [], svg, iconWidth, iconHeight);
	  return { icon: svg, label: this.content, orientation: this.options.yAxisOrientation };
	};

	GraphGroup.prototype.getYRange = function (groupData) {
	  return this.type.getYRange(groupData);
	};

	GraphGroup.prototype.draw = function (dataset, group, framework) {
	  this.type.draw(dataset, group, framework);
	};

	module.exports = GraphGroup;

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Created by Alex on 11/11/2014.
	 */
	var DOMutil = __webpack_require__(284);
	var Points = __webpack_require__(326);

	function Line(groupId, options) {
	  this.groupId = groupId;
	  this.options = options;
	}

	Line.prototype.getYRange = function (groupData) {
	  var yMin = groupData[0].y;
	  var yMax = groupData[0].y;
	  for (var j = 0; j < groupData.length; j++) {
	    yMin = yMin > groupData[j].y ? groupData[j].y : yMin;
	    yMax = yMax < groupData[j].y ? groupData[j].y : yMax;
	  }
	  return { min: yMin, max: yMax, yAxisOrientation: this.options.yAxisOrientation };
	};

	/**
	 * draw a line graph
	 *
	 * @param dataset
	 * @param group
	 */
	Line.prototype.draw = function (dataset, group, framework) {
	  if (dataset != null) {
	    if (dataset.length > 0) {
	      var path, d;
	      var svgHeight = Number(framework.svg.style.height.replace('px', ''));
	      path = DOMutil.getSVGElement('path', framework.svgElements, framework.svg);
	      path.setAttributeNS(null, "class", group.className);
	      if (group.style !== undefined) {
	        path.setAttributeNS(null, "style", group.style);
	      }

	      // construct path from dataset
	      if (group.options.catmullRom.enabled == true) {
	        d = Line._catmullRom(dataset, group);
	      } else {
	        d = Line._linear(dataset);
	      }

	      // append with points for fill and finalize the path
	      if (group.options.shaded.enabled == true) {
	        var fillPath = DOMutil.getSVGElement('path', framework.svgElements, framework.svg);
	        var dFill;
	        if (group.options.shaded.orientation == 'top') {
	          dFill = 'M' + dataset[0].x + ',' + 0 + ' ' + d + 'L' + dataset[dataset.length - 1].x + ',' + 0;
	        } else {
	          dFill = 'M' + dataset[0].x + ',' + svgHeight + ' ' + d + 'L' + dataset[dataset.length - 1].x + ',' + svgHeight;
	        }
	        fillPath.setAttributeNS(null, "class", group.className + " fill");
	        if (group.options.shaded.style !== undefined) {
	          fillPath.setAttributeNS(null, "style", group.options.shaded.style);
	        }
	        fillPath.setAttributeNS(null, "d", dFill);
	      }
	      // copy properties to path for drawing.
	      path.setAttributeNS(null, 'd', 'M' + d);

	      // draw points
	      if (group.options.drawPoints.enabled == true) {
	        Points.draw(dataset, group, framework);
	      }
	    }
	  }
	};

	/**
	 * This uses an uniform parametrization of the CatmullRom algorithm:
	 * 'On the Parameterization of Catmull-Rom Curves' by Cem Yuksel et al.
	 * @param data
	 * @returns {string}
	 * @private
	 */
	Line._catmullRomUniform = function (data) {
	  // catmull rom
	  var p0, p1, p2, p3, bp1, bp2;
	  var d = Math.round(data[0].x) + ',' + Math.round(data[0].y) + ' ';
	  var normalization = 1 / 6;
	  var length = data.length;
	  for (var i = 0; i < length - 1; i++) {

	    p0 = i == 0 ? data[0] : data[i - 1];
	    p1 = data[i];
	    p2 = data[i + 1];
	    p3 = i + 2 < length ? data[i + 2] : p2;

	    // Catmull-Rom to Cubic Bezier conversion matrix
	    //    0       1       0       0
	    //  -1/6      1      1/6      0
	    //    0      1/6      1     -1/6
	    //    0       0       1       0

	    //    bp0 = { x: p1.x,                               y: p1.y };
	    bp1 = { x: (-p0.x + 6 * p1.x + p2.x) * normalization, y: (-p0.y + 6 * p1.y + p2.y) * normalization };
	    bp2 = { x: (p1.x + 6 * p2.x - p3.x) * normalization, y: (p1.y + 6 * p2.y - p3.y) * normalization };
	    //    bp0 = { x: p2.x,                               y: p2.y };

	    d += 'C' + bp1.x + ',' + bp1.y + ' ' + bp2.x + ',' + bp2.y + ' ' + p2.x + ',' + p2.y + ' ';
	  }

	  return d;
	};

	/**
	 * This uses either the chordal or centripetal parameterization of the catmull-rom algorithm.
	 * By default, the centripetal parameterization is used because this gives the nicest results.
	 * These parameterizations are relatively heavy because the distance between 4 points have to be calculated.
	 *
	 * One optimization can be used to reuse distances since this is a sliding window approach.
	 * @param data
	 * @param group
	 * @returns {string}
	 * @private
	 */
	Line._catmullRom = function (data, group) {
	  var alpha = group.options.catmullRom.alpha;
	  if (alpha == 0 || alpha === undefined) {
	    return this._catmullRomUniform(data);
	  } else {
	    var p0, p1, p2, p3, bp1, bp2, d1, d2, d3, A, B, N, M;
	    var d3powA, d2powA, d3pow2A, d2pow2A, d1pow2A, d1powA;
	    var d = Math.round(data[0].x) + ',' + Math.round(data[0].y) + ' ';
	    var length = data.length;
	    for (var i = 0; i < length - 1; i++) {

	      p0 = i == 0 ? data[0] : data[i - 1];
	      p1 = data[i];
	      p2 = data[i + 1];
	      p3 = i + 2 < length ? data[i + 2] : p2;

	      d1 = Math.sqrt(Math.pow(p0.x - p1.x, 2) + Math.pow(p0.y - p1.y, 2));
	      d2 = Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));
	      d3 = Math.sqrt(Math.pow(p2.x - p3.x, 2) + Math.pow(p2.y - p3.y, 2));

	      // Catmull-Rom to Cubic Bezier conversion matrix

	      // A = 2d1^2a + 3d1^a * d2^a + d3^2a
	      // B = 2d3^2a + 3d3^a * d2^a + d2^2a

	      // [   0             1            0          0          ]
	      // [   -d2^2a /N     A/N          d1^2a /N   0          ]
	      // [   0             d3^2a /M     B/M        -d2^2a /M  ]
	      // [   0             0            1          0          ]

	      d3powA = Math.pow(d3, alpha);
	      d3pow2A = Math.pow(d3, 2 * alpha);
	      d2powA = Math.pow(d2, alpha);
	      d2pow2A = Math.pow(d2, 2 * alpha);
	      d1powA = Math.pow(d1, alpha);
	      d1pow2A = Math.pow(d1, 2 * alpha);

	      A = 2 * d1pow2A + 3 * d1powA * d2powA + d2pow2A;
	      B = 2 * d3pow2A + 3 * d3powA * d2powA + d2pow2A;
	      N = 3 * d1powA * (d1powA + d2powA);
	      if (N > 0) {
	        N = 1 / N;
	      }
	      M = 3 * d3powA * (d3powA + d2powA);
	      if (M > 0) {
	        M = 1 / M;
	      }

	      bp1 = { x: (-d2pow2A * p0.x + A * p1.x + d1pow2A * p2.x) * N,
	        y: (-d2pow2A * p0.y + A * p1.y + d1pow2A * p2.y) * N };

	      bp2 = { x: (d3pow2A * p1.x + B * p2.x - d2pow2A * p3.x) * M,
	        y: (d3pow2A * p1.y + B * p2.y - d2pow2A * p3.y) * M };

	      if (bp1.x == 0 && bp1.y == 0) {
	        bp1 = p1;
	      }
	      if (bp2.x == 0 && bp2.y == 0) {
	        bp2 = p2;
	      }
	      d += 'C' + bp1.x + ',' + bp1.y + ' ' + bp2.x + ',' + bp2.y + ' ' + p2.x + ',' + p2.y + ' ';
	    }

	    return d;
	  }
	};

	/**
	 * this generates the SVG path for a linear drawing between datapoints.
	 * @param data
	 * @returns {string}
	 * @private
	 */
	Line._linear = function (data) {
	  // linear
	  var d = '';
	  for (var i = 0; i < data.length; i++) {
	    if (i == 0) {
	      d += data[i].x + ',' + data[i].y;
	    } else {
	      d += ' ' + data[i].x + ',' + data[i].y;
	    }
	  }
	  return d;
	};

	module.exports = Line;

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Created by Alex on 11/11/2014.
	 */
	var DOMutil = __webpack_require__(284);

	function Points(groupId, options) {
	  this.groupId = groupId;
	  this.options = options;
	}

	Points.prototype.getYRange = function (groupData) {
	  var yMin = groupData[0].y;
	  var yMax = groupData[0].y;
	  for (var j = 0; j < groupData.length; j++) {
	    yMin = yMin > groupData[j].y ? groupData[j].y : yMin;
	    yMax = yMax < groupData[j].y ? groupData[j].y : yMax;
	  }
	  return { min: yMin, max: yMax, yAxisOrientation: this.options.yAxisOrientation };
	};

	Points.prototype.draw = function (dataset, group, framework, offset) {
	  Points.draw(dataset, group, framework, offset);
	};

	/**
	 * draw the data points
	 *
	 * @param {Array} dataset
	 * @param {Object} JSONcontainer
	 * @param {Object} svg            | SVG DOM element
	 * @param {GraphGroup} group
	 * @param {Number} [offset]
	 */
	Points.draw = function (dataset, group, framework, offset) {
	  if (offset === undefined) {
	    offset = 0;
	  }
	  for (var i = 0; i < dataset.length; i++) {
	    DOMutil.drawPoint(dataset[i].x + offset, dataset[i].y, group, framework.svgElements, framework.svg, dataset[i].label);
	  }
	};

	module.exports = Points;

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Created by Alex on 11/11/2014.
	 */
	var DOMutil = __webpack_require__(284);
	var Points = __webpack_require__(326);

	function Bargraph(groupId, options) {
	  this.groupId = groupId;
	  this.options = options;
	}

	Bargraph.prototype.getYRange = function (groupData) {
	  if (this.options.barChart.handleOverlap != 'stack') {
	    var yMin = groupData[0].y;
	    var yMax = groupData[0].y;
	    for (var j = 0; j < groupData.length; j++) {
	      yMin = yMin > groupData[j].y ? groupData[j].y : yMin;
	      yMax = yMax < groupData[j].y ? groupData[j].y : yMax;
	    }
	    return { min: yMin, max: yMax, yAxisOrientation: this.options.yAxisOrientation };
	  } else {
	    var barCombinedData = [];
	    for (var j = 0; j < groupData.length; j++) {
	      barCombinedData.push({
	        x: groupData[j].x,
	        y: groupData[j].y,
	        groupId: this.groupId
	      });
	    }
	    return barCombinedData;
	  }
	};

	/**
	 * draw a bar graph
	 *
	 * @param groupIds
	 * @param processedGroupData
	 */
	Bargraph.draw = function (groupIds, processedGroupData, framework) {
	  var combinedData = [];
	  var intersections = {};
	  var coreDistance;
	  var key, drawData;
	  var group;
	  var i, j;
	  var barPoints = 0;

	  // combine all barchart data
	  for (i = 0; i < groupIds.length; i++) {
	    group = framework.groups[groupIds[i]];
	    if (group.options.style == 'bar') {
	      if (group.visible == true && (framework.options.groups.visibility[groupIds[i]] === undefined || framework.options.groups.visibility[groupIds[i]] == true)) {
	        for (j = 0; j < processedGroupData[groupIds[i]].length; j++) {
	          combinedData.push({
	            x: processedGroupData[groupIds[i]][j].x,
	            y: processedGroupData[groupIds[i]][j].y,
	            groupId: groupIds[i],
	            label: processedGroupData[groupIds[i]][j].label
	          });
	          barPoints += 1;
	        }
	      }
	    }
	  }

	  if (barPoints == 0) {
	    return;
	  }

	  // sort by time and by group
	  combinedData.sort(function (a, b) {
	    if (a.x == b.x) {
	      return a.groupId - b.groupId;
	    } else {
	      return a.x - b.x;
	    }
	  });

	  // get intersections
	  Bargraph._getDataIntersections(intersections, combinedData);

	  // plot barchart
	  for (i = 0; i < combinedData.length; i++) {
	    group = framework.groups[combinedData[i].groupId];
	    var minWidth = 0.1 * group.options.barChart.width;

	    key = combinedData[i].x;
	    var heightOffset = 0;
	    if (intersections[key] === undefined) {
	      if (i + 1 < combinedData.length) {
	        coreDistance = Math.abs(combinedData[i + 1].x - key);
	      }
	      if (i > 0) {
	        coreDistance = Math.min(coreDistance, Math.abs(combinedData[i - 1].x - key));
	      }
	      drawData = Bargraph._getSafeDrawData(coreDistance, group, minWidth);
	    } else {
	      var nextKey = i + (intersections[key].amount - intersections[key].resolved);
	      var prevKey = i - (intersections[key].resolved + 1);
	      if (nextKey < combinedData.length) {
	        coreDistance = Math.abs(combinedData[nextKey].x - key);
	      }
	      if (prevKey > 0) {
	        coreDistance = Math.min(coreDistance, Math.abs(combinedData[prevKey].x - key));
	      }
	      drawData = Bargraph._getSafeDrawData(coreDistance, group, minWidth);
	      intersections[key].resolved += 1;

	      if (group.options.barChart.handleOverlap == 'stack') {
	        heightOffset = intersections[key].accumulated;
	        intersections[key].accumulated += group.zeroPosition - combinedData[i].y;
	      } else if (group.options.barChart.handleOverlap == 'sideBySide') {
	        drawData.width = drawData.width / intersections[key].amount;
	        drawData.offset += intersections[key].resolved * drawData.width - 0.5 * drawData.width * (intersections[key].amount + 1);
	        if (group.options.barChart.align == 'left') {
	          drawData.offset -= 0.5 * drawData.width;
	        } else if (group.options.barChart.align == 'right') {
	          drawData.offset += 0.5 * drawData.width;
	        }
	      }
	    }
	    DOMutil.drawBar(combinedData[i].x + drawData.offset, combinedData[i].y - heightOffset, drawData.width, group.zeroPosition - combinedData[i].y, group.className + ' bar', framework.svgElements, framework.svg);
	    // draw points
	    if (group.options.drawPoints.enabled == true) {
	      DOMutil.drawPoint(combinedData[i].x + drawData.offset, combinedData[i].y, group, framework.svgElements, framework.svg, combinedData[i].label);
	    }
	  }
	};

	/**
	 * Fill the intersections object with counters of how many datapoints share the same x coordinates
	 * @param intersections
	 * @param combinedData
	 * @private
	 */
	Bargraph._getDataIntersections = function (intersections, combinedData) {
	  // get intersections
	  var coreDistance;
	  for (var i = 0; i < combinedData.length; i++) {
	    if (i + 1 < combinedData.length) {
	      coreDistance = Math.abs(combinedData[i + 1].x - combinedData[i].x);
	    }
	    if (i > 0) {
	      coreDistance = Math.min(coreDistance, Math.abs(combinedData[i - 1].x - combinedData[i].x));
	    }
	    if (coreDistance == 0) {
	      if (intersections[combinedData[i].x] === undefined) {
	        intersections[combinedData[i].x] = { amount: 0, resolved: 0, accumulated: 0 };
	      }
	      intersections[combinedData[i].x].amount += 1;
	    }
	  }
	};

	/**
	 * Get the width and offset for bargraphs based on the coredistance between datapoints
	 *
	 * @param coreDistance
	 * @param group
	 * @param minWidth
	 * @returns {{width: Number, offset: Number}}
	 * @private
	 */
	Bargraph._getSafeDrawData = function (coreDistance, group, minWidth) {
	  var width, offset;
	  if (coreDistance < group.options.barChart.width && coreDistance > 0) {
	    width = coreDistance < minWidth ? minWidth : coreDistance;

	    offset = 0; // recalculate offset with the new width;
	    if (group.options.barChart.align == 'left') {
	      offset -= 0.5 * coreDistance;
	    } else if (group.options.barChart.align == 'right') {
	      offset += 0.5 * coreDistance;
	    }
	  } else {
	    // default settings
	    width = group.options.barChart.width;
	    offset = 0;
	    if (group.options.barChart.align == 'left') {
	      offset -= 0.5 * group.options.barChart.width;
	    } else if (group.options.barChart.align == 'right') {
	      offset += 0.5 * group.options.barChart.width;
	    }
	  }

	  return { width: width, offset: offset };
	};

	Bargraph.getStackedBarYRange = function (barCombinedData, groupRanges, groupIds, groupLabel, orientation) {
	  if (barCombinedData.length > 0) {
	    // sort by time and by group
	    barCombinedData.sort(function (a, b) {
	      if (a.x == b.x) {
	        return a.groupId - b.groupId;
	      } else {
	        return a.x - b.x;
	      }
	    });
	    var intersections = {};

	    Bargraph._getDataIntersections(intersections, barCombinedData);
	    groupRanges[groupLabel] = Bargraph._getStackedBarYRange(intersections, barCombinedData);
	    groupRanges[groupLabel].yAxisOrientation = orientation;
	    groupIds.push(groupLabel);
	  }
	};

	Bargraph._getStackedBarYRange = function (intersections, combinedData) {
	  var key;
	  var yMin = combinedData[0].y;
	  var yMax = combinedData[0].y;
	  for (var i = 0; i < combinedData.length; i++) {
	    key = combinedData[i].x;
	    if (intersections[key] === undefined) {
	      yMin = yMin > combinedData[i].y ? combinedData[i].y : yMin;
	      yMax = yMax < combinedData[i].y ? combinedData[i].y : yMax;
	    } else {
	      intersections[key].accumulated += combinedData[i].y;
	    }
	  }
	  for (var xpos in intersections) {
	    if (intersections.hasOwnProperty(xpos)) {
	      yMin = yMin > intersections[xpos].accumulated ? intersections[xpos].accumulated : yMin;
	      yMax = yMax < intersections[xpos].accumulated ? intersections[xpos].accumulated : yMax;
	    }
	  }

	  return { min: yMin, max: yMax };
	};

	module.exports = Bargraph;

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(175);
	var DOMutil = __webpack_require__(284);
	var Component = __webpack_require__(301);

	/**
	 * Legend for Graph2d
	 */
	function Legend(body, options, side, linegraphOptions) {
	  this.body = body;
	  this.defaultOptions = {
	    enabled: true,
	    icons: true,
	    iconSize: 20,
	    iconSpacing: 6,
	    left: {
	      visible: true,
	      position: 'top-left' // top/bottom - left,center,right
	    },
	    right: {
	      visible: true,
	      position: 'top-left' // top/bottom - left,center,right
	    }
	  };
	  this.side = side;
	  this.options = util.extend({}, this.defaultOptions);
	  this.linegraphOptions = linegraphOptions;

	  this.svgElements = {};
	  this.dom = {};
	  this.groups = {};
	  this.amountOfGroups = 0;
	  this._create();

	  this.setOptions(options);
	}

	Legend.prototype = new Component();

	Legend.prototype.clear = function () {
	  this.groups = {};
	  this.amountOfGroups = 0;
	};

	Legend.prototype.addGroup = function (label, graphOptions) {

	  if (!this.groups.hasOwnProperty(label)) {
	    this.groups[label] = graphOptions;
	  }
	  this.amountOfGroups += 1;
	};

	Legend.prototype.updateGroup = function (label, graphOptions) {
	  this.groups[label] = graphOptions;
	};

	Legend.prototype.removeGroup = function (label) {
	  if (this.groups.hasOwnProperty(label)) {
	    delete this.groups[label];
	    this.amountOfGroups -= 1;
	  }
	};

	Legend.prototype._create = function () {
	  this.dom.frame = document.createElement('div');
	  this.dom.frame.className = 'legend';
	  this.dom.frame.style.position = "absolute";
	  this.dom.frame.style.top = "10px";
	  this.dom.frame.style.display = "block";

	  this.dom.textArea = document.createElement('div');
	  this.dom.textArea.className = 'legendText';
	  this.dom.textArea.style.position = "relative";
	  this.dom.textArea.style.top = "0px";

	  this.svg = document.createElementNS('http://www.w3.org/2000/svg', "svg");
	  this.svg.style.position = 'absolute';
	  this.svg.style.top = 0 + 'px';
	  this.svg.style.width = this.options.iconSize + 5 + 'px';
	  this.svg.style.height = '100%';

	  this.dom.frame.appendChild(this.svg);
	  this.dom.frame.appendChild(this.dom.textArea);
	};

	/**
	 * Hide the component from the DOM
	 */
	Legend.prototype.hide = function () {
	  // remove the frame containing the items
	  if (this.dom.frame.parentNode) {
	    this.dom.frame.parentNode.removeChild(this.dom.frame);
	  }
	};

	/**
	 * Show the component in the DOM (when not already visible).
	 * @return {Boolean} changed
	 */
	Legend.prototype.show = function () {
	  // show frame containing the items
	  if (!this.dom.frame.parentNode) {
	    this.body.dom.center.appendChild(this.dom.frame);
	  }
	};

	Legend.prototype.setOptions = function (options) {
	  var fields = ['enabled', 'orientation', 'icons', 'left', 'right'];
	  util.selectiveDeepExtend(fields, this.options, options);
	};

	Legend.prototype.redraw = function () {
	  var activeGroups = 0;
	  for (var groupId in this.groups) {
	    if (this.groups.hasOwnProperty(groupId)) {
	      if (this.groups[groupId].visible == true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] == true)) {
	        activeGroups++;
	      }
	    }
	  }

	  if (this.options[this.side].visible == false || this.amountOfGroups == 0 || this.options.enabled == false || activeGroups == 0) {
	    this.hide();
	  } else {
	    this.show();
	    if (this.options[this.side].position == 'top-left' || this.options[this.side].position == 'bottom-left') {
	      this.dom.frame.style.left = '4px';
	      this.dom.frame.style.textAlign = "left";
	      this.dom.textArea.style.textAlign = "left";
	      this.dom.textArea.style.left = this.options.iconSize + 15 + 'px';
	      this.dom.textArea.style.right = '';
	      this.svg.style.left = 0 + 'px';
	      this.svg.style.right = '';
	    } else {
	      this.dom.frame.style.right = '4px';
	      this.dom.frame.style.textAlign = "right";
	      this.dom.textArea.style.textAlign = "right";
	      this.dom.textArea.style.right = this.options.iconSize + 15 + 'px';
	      this.dom.textArea.style.left = '';
	      this.svg.style.right = 0 + 'px';
	      this.svg.style.left = '';
	    }

	    if (this.options[this.side].position == 'top-left' || this.options[this.side].position == 'top-right') {
	      this.dom.frame.style.top = 4 - Number(this.body.dom.center.style.top.replace("px", "")) + 'px';
	      this.dom.frame.style.bottom = '';
	    } else {
	      var scrollableHeight = this.body.domProps.center.height - this.body.domProps.centerContainer.height;
	      this.dom.frame.style.bottom = 4 + scrollableHeight + Number(this.body.dom.center.style.top.replace("px", "")) + 'px';
	      this.dom.frame.style.top = '';
	    }

	    if (this.options.icons == false) {
	      this.dom.frame.style.width = this.dom.textArea.offsetWidth + 10 + 'px';
	      this.dom.textArea.style.right = '';
	      this.dom.textArea.style.left = '';
	      this.svg.style.width = '0px';
	    } else {
	      this.dom.frame.style.width = this.options.iconSize + 15 + this.dom.textArea.offsetWidth + 10 + 'px';
	      this.drawLegendIcons();
	    }

	    var content = '';
	    for (var groupId in this.groups) {
	      if (this.groups.hasOwnProperty(groupId)) {
	        if (this.groups[groupId].visible == true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] == true)) {
	          content += this.groups[groupId].content + '<br />';
	        }
	      }
	    }
	    this.dom.textArea.innerHTML = content;
	    this.dom.textArea.style.lineHeight = 0.75 * this.options.iconSize + this.options.iconSpacing + 'px';
	  }
	};

	Legend.prototype.drawLegendIcons = function () {
	  if (this.dom.frame.parentNode) {
	    DOMutil.prepareElements(this.svgElements);
	    var padding = window.getComputedStyle(this.dom.frame).paddingTop;
	    var iconOffset = Number(padding.replace('px', ''));
	    var x = iconOffset;
	    var iconWidth = this.options.iconSize;
	    var iconHeight = 0.75 * this.options.iconSize;
	    var y = iconOffset + 0.5 * iconHeight + 3;

	    this.svg.style.width = iconWidth + 5 + iconOffset + 'px';

	    for (var groupId in this.groups) {
	      if (this.groups.hasOwnProperty(groupId)) {
	        if (this.groups[groupId].visible == true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] == true)) {
	          this.groups[groupId].drawIcon(x, y, this.svgElements, this.svg, iconWidth, iconHeight);
	          y += iconHeight + this.options.iconSpacing;
	        }
	      }
	    }

	    DOMutil.cleanupElements(this.svgElements);
	  }
	};

	module.exports = Legend;

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Emitter = __webpack_require__(289);
	var Hammer = __webpack_require__(297);
	var keycharm = __webpack_require__(316);
	var util = __webpack_require__(175);
	var hammerUtil = __webpack_require__(300);
	var DataSet = __webpack_require__(285);
	var DataView = __webpack_require__(287);
	var dotparser = __webpack_require__(330);
	var gephiParser = __webpack_require__(331);
	var Groups = __webpack_require__(332);
	var Images = __webpack_require__(333);
	var Node = __webpack_require__(334);
	var Edge = __webpack_require__(335);
	var Popup = __webpack_require__(336);
	var MixinLoader = __webpack_require__(337);
	var Activator = __webpack_require__(315);
	var locales = __webpack_require__(348);

	// Load custom shapes into CanvasRenderingContext2D
	__webpack_require__(349);

	/**
	 * @constructor Network
	 * Create a network visualization, displaying nodes and edges.
	 *
	 * @param {Element} container   The DOM element in which the Network will
	 *                                  be created. Normally a div element.
	 * @param {Object} data         An object containing parameters
	 *                              {Array} nodes
	 *                              {Array} edges
	 * @param {Object} options      Options
	 */
	function Network(container, data, options) {
	  if (!(this instanceof Network)) {
	    throw new SyntaxError('Constructor must be called with the new operator');
	  }

	  this._determineBrowserMethod();
	  this._initializeMixinLoaders();

	  // create variables and set default values
	  this.containerElement = container;

	  // render and calculation settings
	  this.renderRefreshRate = 60; // hz (fps)
	  this.renderTimestep = 1000 / this.renderRefreshRate; // ms -- saves calculation later on
	  this.renderTime = 0; // measured time it takes to render a frame
	  this.physicsTime = 0; // measured time it takes to render a frame
	  this.runDoubleSpeed = false;
	  this.physicsDiscreteStepsize = 0.50; // discrete stepsize of the simulation

	  this.initializing = true;

	  this.triggerFunctions = { add: null, edit: null, editEdge: null, connect: null, del: null };

	  var customScalingFunction = function customScalingFunction(min, max, total, value) {
	    if (max == min) {
	      return 0.5;
	    } else {
	      var scale = 1 / (max - min);
	      return Math.max(0, (value - min) * scale);
	    }
	  };
	  // set constant values
	  this.defaultOptions = {
	    nodes: {
	      customScalingFunction: customScalingFunction,
	      mass: 1,
	      radiusMin: 10,
	      radiusMax: 30,
	      radius: 10,
	      shape: 'ellipse',
	      image: undefined,
	      widthMin: 16, // px
	      widthMax: 64, // px
	      fontColor: 'black',
	      fontSize: 14, // px
	      fontFace: 'verdana',
	      fontFill: undefined,
	      fontStrokeWidth: 0, // px
	      fontStrokeColor: '#ffffff',
	      fontDrawThreshold: 3,
	      scaleFontWithValue: false,
	      fontSizeMin: 14,
	      fontSizeMax: 30,
	      fontSizeMaxVisible: 30,
	      level: -1,
	      color: {
	        border: '#2B7CE9',
	        background: '#97C2FC',
	        highlight: {
	          border: '#2B7CE9',
	          background: '#D2E5FF'
	        },
	        hover: {
	          border: '#2B7CE9',
	          background: '#D2E5FF'
	        }
	      },
	      group: undefined,
	      borderWidth: 1,
	      borderWidthSelected: undefined
	    },
	    edges: {
	      customScalingFunction: customScalingFunction,
	      widthMin: 1, //
	      widthMax: 15, //
	      width: 1,
	      widthSelectionMultiplier: 2,
	      hoverWidth: 1.5,
	      style: 'line',
	      color: {
	        color: '#848484',
	        highlight: '#848484',
	        hover: '#848484'
	      },
	      opacity: 1.0,
	      fontColor: '#343434',
	      fontSize: 14, // px
	      fontFace: 'arial',
	      fontFill: 'white',
	      fontStrokeWidth: 0, // px
	      fontStrokeColor: 'white',
	      labelAlignment: 'horizontal',
	      arrowScaleFactor: 1,
	      dash: {
	        length: 10,
	        gap: 5,
	        altLength: undefined
	      },
	      inheritColor: "from", // to, from, false, true (== from)
	      useGradients: false // release in 4.0
	    },
	    configurePhysics: false,
	    physics: {
	      barnesHut: {
	        enabled: true,
	        thetaInverted: 1 / 0.5, // inverted to save time during calculation
	        gravitationalConstant: -2000,
	        centralGravity: 0.3,
	        springLength: 95,
	        springConstant: 0.04,
	        damping: 0.09
	      },
	      repulsion: {
	        centralGravity: 0.0,
	        springLength: 200,
	        springConstant: 0.05,
	        nodeDistance: 100,
	        damping: 0.09
	      },
	      hierarchicalRepulsion: {
	        enabled: false,
	        centralGravity: 0.0,
	        springLength: 100,
	        springConstant: 0.01,
	        nodeDistance: 150,
	        damping: 0.09
	      },
	      damping: null,
	      centralGravity: null,
	      springLength: null,
	      springConstant: null
	    },
	    clustering: { // Per Node in Cluster = PNiC
	      enabled: false, // (Boolean)             | global on/off switch for clustering.
	      initialMaxNodes: 100, // (# nodes)             | if the initial amount of nodes is larger than this, we cluster until the total number is less than this threshold.
	      clusterThreshold: 500, // (# nodes)             | during calculate forces, we check if the total number of nodes is larger than this. If it is, cluster until reduced to reduceToNodes
	      reduceToNodes: 300, // (# nodes)             | during calculate forces, we check if the total number of nodes is larger than clusterThreshold. If it is, cluster until reduced to this
	      chainThreshold: 0.4, // (% of all drawn nodes)| maximum percentage of allowed chainnodes (long strings of connected nodes) within all nodes. (lower means less chains).
	      clusterEdgeThreshold: 20, // (px)                  | edge length threshold. if smaller, this node is clustered.
	      sectorThreshold: 100, // (# nodes in cluster)  | cluster size threshold. If larger, expanding in own sector.
	      screenSizeThreshold: 0.2, // (% of canvas)         | relative size threshold. If the width or height of a clusternode takes up this much of the screen, decluster node.
	      fontSizeMultiplier: 4.0, // (px PNiC)             | how much the cluster font size grows per node in cluster (in px).
	      maxFontSize: 1000,
	      forceAmplification: 0.1, // (multiplier PNiC)     | factor of increase fo the repulsion force of a cluster (per node in cluster).
	      distanceAmplification: 0.1, // (multiplier PNiC)     | factor how much the repulsion distance of a cluster increases (per node in cluster).
	      edgeGrowth: 20, // (px PNiC)             | amount of clusterSize connected to the edge is multiplied with this and added to edgeLength.
	      nodeScaling: { width: 1, // (px PNiC)             | growth of the width  per node in cluster.
	        height: 1, // (px PNiC)             | growth of the height per node in cluster.
	        radius: 1 }, // (px PNiC)             | growth of the radius per node in cluster.
	      maxNodeSizeIncrements: 600, // (# increments)        | max growth of the width  per node in cluster.
	      activeAreaBoxSize: 80, // (px)                  | box area around the curser where clusters are popped open.
	      clusterLevelDifference: 2, // used for normalization of the cluster levels
	      clusterByZoom: true // enable clustering through zooming in and out
	    },
	    navigation: {
	      enabled: false
	    },
	    keyboard: {
	      enabled: false,
	      speed: { x: 10, y: 10, zoom: 0.02 },
	      bindToWindow: true
	    },
	    dataManipulation: {
	      enabled: false,
	      initiallyVisible: false
	    },
	    hierarchicalLayout: {
	      enabled: false,
	      levelSeparation: 150,
	      nodeSpacing: 100,
	      direction: "UD", // UD, DU, LR, RL
	      layout: "hubsize" // hubsize, directed
	    },
	    freezeForStabilization: false,
	    smoothCurves: {
	      enabled: true,
	      dynamic: true,
	      type: "continuous",
	      roundness: 0.5
	    },
	    maxVelocity: 50,
	    minVelocity: 0.1, // px/s
	    stabilize: true, // stabilize before displaying the network
	    stabilizationIterations: 1000, // maximum number of iteration to stabilize
	    zoomExtentOnStabilize: true,
	    locale: 'en',
	    locales: locales,
	    tooltip: {
	      delay: 300,
	      fontColor: 'black',
	      fontSize: 14, // px
	      fontFace: 'verdana',
	      color: {
	        border: '#666',
	        background: '#FFFFC6'
	      }
	    },
	    dragNetwork: true,
	    dragNodes: true,
	    zoomable: true,
	    hover: false,
	    hideEdgesOnDrag: false,
	    hideNodesOnDrag: false,
	    width: '100%',
	    height: '100%',
	    selectable: true,
	    useDefaultGroups: true
	  };
	  this.constants = util.extend({}, this.defaultOptions);
	  this.pixelRatio = 1;

	  this.hoverObj = { nodes: {}, edges: {} };
	  this.controlNodesActive = false;
	  this.navigationHammers = [];
	  this.manipulationHammers = [];

	  // animation properties
	  this.animationSpeed = 1 / this.renderRefreshRate;
	  this.animationEasingFunction = "easeInOutQuint";
	  this.animating = false;
	  this.easingTime = 0;
	  this.sourceScale = 0;
	  this.targetScale = 0;
	  this.sourceTranslation = 0;
	  this.targetTranslation = 0;
	  this.lockedOnNodeId = null;
	  this.lockedOnNodeOffset = null;
	  this.touchTime = 0;
	  this.redrawRequested = false;

	  // Node variables
	  var network = this;
	  this.groups = new Groups(); // object with groups
	  this.images = new Images(); // object with images
	  this.images.setOnloadCallback(function (status) {
	    network._requestRedraw();
	  });

	  // keyboard navigation variables
	  this.xIncrement = 0;
	  this.yIncrement = 0;
	  this.zoomIncrement = 0;

	  // loading all the mixins:
	  // load the force calculation functions, grouped under the physics system.
	  this._loadPhysicsSystem();
	  // create a frame and canvas
	  this._create();
	  // load the sector system.    (mandatory, fully integrated with Network)
	  this._loadSectorSystem();
	  // load the cluster system.   (mandatory, even when not using the cluster system, there are function calls to it)
	  this._loadClusterSystem();
	  // load the selection system. (mandatory, required by Network)
	  this._loadSelectionSystem();
	  // load the selection system. (mandatory, required by Network)
	  this._loadHierarchySystem();

	  // apply options
	  this._setTranslation(this.frame.clientWidth / 2, this.frame.clientHeight / 2);
	  this._setScale(1);
	  this.setOptions(options);

	  // other vars
	  this.freezeSimulationEnabled = false; // freeze the simulation
	  this.cachedFunctions = {};
	  this.startedStabilization = false;
	  this.stabilized = false;
	  this.stabilizationIterations = null;
	  this.draggingNodes = false;

	  // containers for nodes and edges
	  this.calculationNodes = {};
	  this.calculationNodeIndices = [];
	  this.nodeIndices = []; // array with all the indices of the nodes. Used to speed up forces calculation
	  this.nodes = {}; // object with Node objects
	  this.edges = {}; // object with Edge objects

	  // position and scale variables and objects
	  this.canvasTopLeft = { "x": 0, "y": 0 }; // coordinates of the top left of the canvas.     they will be set during _redraw.
	  this.canvasBottomRight = { "x": 0, "y": 0 }; // coordinates of the bottom right of the canvas. they will be set during _redraw
	  this.pointerPosition = { "x": 0, "y": 0 }; // coordinates of the bottom right of the canvas. they will be set during _redraw
	  this.areaCenter = {}; // object with x and y elements used for determining the center of the zoom action
	  this.scale = 1; // defining the global scale variable in the constructor
	  this.previousScale = this.scale; // this is used to check if the zoom operation is zooming in or out

	  // datasets or dataviews
	  this.nodesData = null; // A DataSet or DataView
	  this.edgesData = null; // A DataSet or DataView

	  // create event listeners used to subscribe on the DataSets of the nodes and edges
	  this.nodesListeners = {
	    'add': function add(event, params) {
	      network._addNodes(params.items);
	      network.start();
	    },
	    'update': function update(event, params) {
	      network._updateNodes(params.items);
	      network.start();
	    },
	    'remove': function remove(event, params) {
	      network._removeNodes(params.items);
	      network.start();
	    }
	  };
	  this.edgesListeners = {
	    'add': function add(event, params) {
	      network._addEdges(params.items);
	      network.start();
	    },
	    'update': function update(event, params) {
	      network._updateEdges(params.items);
	      network.start();
	    },
	    'remove': function remove(event, params) {
	      network._removeEdges(params.items);
	      network.start();
	    }
	  };

	  // properties for the animation
	  this.moving = true;
	  this.timer = undefined; // Scheduling function. Is definded in this.start();

	  // load data (the disable start variable will be the same as the enabled clustering)
	  this.setData(data, this.constants.clustering.enabled || this.constants.hierarchicalLayout.enabled);

	  // hierarchical layout
	  this.initializing = false;
	  if (this.constants.hierarchicalLayout.enabled == true) {
	    this._setupHierarchicalLayout();
	  } else {
	    // zoom so all data will fit on the screen, if clustering is enabled, we do not want start to be called here.
	    if (this.constants.stabilize == false) {
	      this.zoomExtent({ duration: 0 }, true, this.constants.clustering.enabled);
	    }
	  }

	  // if clustering is disabled, the simulation will have started in the setData function
	  if (this.constants.clustering.enabled) {
	    this.startWithClustering();
	  }
	}

	// Extend Network with an Emitter mixin
	Emitter(Network.prototype);

	/**
	 * Determine if the browser requires a setTimeout or a requestAnimationFrame. This was required because
	 * some implementations (safari and IE9) did not support requestAnimationFrame
	 * @private
	 */
	Network.prototype._determineBrowserMethod = function () {
	  var browserType = navigator.userAgent.toLowerCase();
	  this.requiresTimeout = false;
	  if (browserType.indexOf('msie 9.0') != -1) {
	    // IE 9
	    this.requiresTimeout = true;
	  } else if (browserType.indexOf('safari') != -1) {
	    // safari
	    if (browserType.indexOf('chrome') <= -1) {
	      this.requiresTimeout = true;
	    }
	  }
	};

	/**
	 * Get the script path where the vis.js library is located
	 *
	 * @returns {string | null} path   Path or null when not found. Path does not
	 *                                 end with a slash.
	 * @private
	 */
	Network.prototype._getScriptPath = function () {
	  var scripts = document.getElementsByTagName('script');

	  // find script named vis.js or vis.min.js
	  for (var i = 0; i < scripts.length; i++) {
	    var src = scripts[i].src;
	    var match = src && /\/?vis(.min)?\.js$/.exec(src);
	    if (match) {
	      // return path without the script name
	      return src.substring(0, src.length - match[0].length);
	    }
	  }

	  return null;
	};

	/**
	 * Find the center position of the network
	 * @private
	 */
	Network.prototype._getRange = function (specificNodes) {
	  var minY = 1e9,
	      maxY = -1e9,
	      minX = 1e9,
	      maxX = -1e9,
	      node;
	  if (specificNodes.length > 0) {
	    for (var i = 0; i < specificNodes.length; i++) {
	      node = this.nodes[specificNodes[i]];
	      if (minX > node.boundingBox.left) {
	        minX = node.boundingBox.left;
	      }
	      if (maxX < node.boundingBox.right) {
	        maxX = node.boundingBox.right;
	      }
	      if (minY > node.boundingBox.bottom) {
	        minY = node.boundingBox.top;
	      } // top is negative, bottom is positive
	      if (maxY < node.boundingBox.top) {
	        maxY = node.boundingBox.bottom;
	      } // top is negative, bottom is positive
	    }
	  } else {
	    for (var nodeId in this.nodes) {
	      if (this.nodes.hasOwnProperty(nodeId)) {
	        node = this.nodes[nodeId];
	        if (minX > node.boundingBox.left) {
	          minX = node.boundingBox.left;
	        }
	        if (maxX < node.boundingBox.right) {
	          maxX = node.boundingBox.right;
	        }
	        if (minY > node.boundingBox.bottom) {
	          minY = node.boundingBox.top;
	        } // top is negative, bottom is positive
	        if (maxY < node.boundingBox.top) {
	          maxY = node.boundingBox.bottom;
	        } // top is negative, bottom is positive
	      }
	    }
	  }

	  if (minX == 1e9 && maxX == -1e9 && minY == 1e9 && maxY == -1e9) {
	    minY = 0, maxY = 0, minX = 0, maxX = 0;
	  }
	  return { minX: minX, maxX: maxX, minY: minY, maxY: maxY };
	};

	/**
	 * @param {object} range = {minX: minX, maxX: maxX, minY: minY, maxY: maxY};
	 * @returns {{x: number, y: number}}
	 * @private
	 */
	Network.prototype._findCenter = function (range) {
	  return { x: 0.5 * (range.maxX + range.minX),
	    y: 0.5 * (range.maxY + range.minY) };
	};

	/**
	 * This function zooms out to fit all data on screen based on amount of nodes
	 *
	 * @param {Boolean} [initialZoom]  | zoom based on fitted formula or range, true = fitted, default = false;
	 * @param {Boolean} [disableStart] | If true, start is not called.
	 */
	Network.prototype.zoomExtent = function (options, initialZoom, disableStart) {
	  this._redraw(true);

	  if (initialZoom === undefined) {
	    initialZoom = false;
	  }
	  if (disableStart === undefined) {
	    disableStart = false;
	  }
	  if (options === undefined) {
	    options = { nodes: [] };
	  }
	  if (options.nodes === undefined) {
	    options.nodes = [];
	  }

	  var range;
	  var zoomLevel;

	  if (initialZoom == true) {
	    // check if more than half of the nodes have a predefined position. If so, we use the range, not the approximation.
	    var positionDefined = 0;
	    for (var nodeId in this.nodes) {
	      if (this.nodes.hasOwnProperty(nodeId)) {
	        var node = this.nodes[nodeId];
	        if (node.predefinedPosition == true) {
	          positionDefined += 1;
	        }
	      }
	    }
	    if (positionDefined > 0.5 * this.nodeIndices.length) {
	      this.zoomExtent(options, false, disableStart);
	      return;
	    }

	    range = this._getRange(options.nodes);

	    var numberOfNodes = this.nodeIndices.length;
	    if (this.constants.smoothCurves == true) {
	      if (this.constants.clustering.enabled == true && numberOfNodes >= this.constants.clustering.initialMaxNodes) {
	        zoomLevel = 49.07548 / (numberOfNodes + 142.05338) + 9.1444e-04; // this is obtained from fitting a dataset from 5 points with scale levels that looked good.
	      } else {
	        zoomLevel = 12.662 / (numberOfNodes + 7.4147) + 0.0964822; // this is obtained from fitting a dataset from 5 points with scale levels that looked good.
	      }
	    } else {
	      if (this.constants.clustering.enabled == true && numberOfNodes >= this.constants.clustering.initialMaxNodes) {
	        zoomLevel = 77.5271985 / (numberOfNodes + 187.266146) + 4.76710517e-05; // this is obtained from fitting a dataset from 5 points with scale levels that looked good.
	      } else {
	        zoomLevel = 30.5062972 / (numberOfNodes + 19.93597763) + 0.08413486; // this is obtained from fitting a dataset from 5 points with scale levels that looked good.
	      }
	    }

	    // correct for larger canvasses.
	    var factor = Math.min(this.frame.canvas.clientWidth / 600, this.frame.canvas.clientHeight / 600);
	    zoomLevel *= factor;
	  } else {
	    range = this._getRange(options.nodes);
	    var xDistance = Math.abs(range.maxX - range.minX) * 1.1;
	    var yDistance = Math.abs(range.maxY - range.minY) * 1.1;

	    var xZoomLevel = this.frame.canvas.clientWidth / xDistance;
	    var yZoomLevel = this.frame.canvas.clientHeight / yDistance;
	    zoomLevel = xZoomLevel <= yZoomLevel ? xZoomLevel : yZoomLevel;
	  }

	  if (zoomLevel > 1.0) {
	    zoomLevel = 1.0;
	  }

	  var center = this._findCenter(range);
	  if (disableStart == false) {
	    var options = { position: center, scale: zoomLevel, animation: options };
	    this.moveTo(options);
	    this.moving = true;
	    this.start();
	  } else {
	    center.x *= zoomLevel;
	    center.y *= zoomLevel;
	    center.x -= 0.5 * this.frame.canvas.clientWidth;
	    center.y -= 0.5 * this.frame.canvas.clientHeight;
	    this._setScale(zoomLevel);
	    this._setTranslation(-center.x, -center.y);
	  }
	};

	/**
	 * Update the this.nodeIndices with the most recent node index list
	 * @private
	 */
	Network.prototype._updateNodeIndexList = function () {
	  this._clearNodeIndexList();
	  for (var idx in this.nodes) {
	    if (this.nodes.hasOwnProperty(idx)) {
	      this.nodeIndices.push(idx);
	    }
	  }
	};

	/**
	 * Set nodes and edges, and optionally options as well.
	 *
	 * @param {Object} data              Object containing parameters:
	 *                                   {Array | DataSet | DataView} [nodes] Array with nodes
	 *                                   {Array | DataSet | DataView} [edges] Array with edges
	 *                                   {String} [dot] String containing data in DOT format
	 *                                   {String} [gephi] String containing data in gephi JSON format
	 *                                   {Options} [options] Object with options
	 * @param {Boolean} [disableStart]   | optional: disable the calling of the start function.
	 */
	Network.prototype.setData = function (data, disableStart) {
	  if (disableStart === undefined) {
	    disableStart = false;
	  }

	  // unselect all to ensure no selections from old data are carried over.
	  this._unselectAll(true);

	  // we set initializing to true to ensure that the hierarchical layout is not performed until both nodes and edges are added.
	  this.initializing = true;

	  if (data && data.dot && (data.nodes || data.edges)) {
	    throw new SyntaxError('Data must contain either parameter "dot" or ' + ' parameter pair "nodes" and "edges", but not both.');
	  }

	  // clean up in case there is anyone in an active mode of the manipulation. This is the same option as bound to the escape button.
	  if (this.constants.dataManipulation.enabled == true) {
	    this._createManipulatorBar();
	  }

	  // set options
	  this.setOptions(data && data.options);
	  // set all data
	  if (data && data.dot) {
	    // parse DOT file
	    if (data && data.dot) {
	      var dotData = dotparser.DOTToGraph(data.dot);
	      this.setData(dotData);
	      return;
	    }
	  } else if (data && data.gephi) {
	    // parse DOT file
	    if (data && data.gephi) {
	      var gephiData = gephiParser.parseGephi(data.gephi);
	      this.setData(gephiData);
	      return;
	    }
	  } else {
	    this._setNodes(data && data.nodes);
	    this._setEdges(data && data.edges);
	  }
	  this._putDataInSector();
	  if (disableStart == false) {
	    if (this.constants.hierarchicalLayout.enabled == true) {
	      this._resetLevels();
	      this._setupHierarchicalLayout();
	    } else {
	      // find a stable position or start animating to a stable position
	      if (this.constants.stabilize == true) {
	        this._stabilize();
	      }
	    }
	    this.start();
	  }
	  this.initializing = false;
	};

	/**
	 * Set options
	 * @param {Object} options
	 */
	Network.prototype.setOptions = function (options) {
	  if (options) {
	    var prop;
	    var fields = ['nodes', 'edges', 'smoothCurves', 'hierarchicalLayout', 'clustering', 'navigation', 'keyboard', 'dataManipulation', 'onAdd', 'onEdit', 'onEditEdge', 'onConnect', 'onDelete', 'clickToUse'];
	    // extend all but the values in fields
	    util.selectiveNotDeepExtend(fields, this.constants, options);
	    util.selectiveNotDeepExtend(['color'], this.constants.nodes, options.nodes);
	    util.selectiveNotDeepExtend(['color', 'length'], this.constants.edges, options.edges);

	    this.groups.useDefaultGroups = this.constants.useDefaultGroups;
	    if (options.physics) {
	      util.mergeOptions(this.constants.physics, options.physics, 'barnesHut');
	      util.mergeOptions(this.constants.physics, options.physics, 'repulsion');

	      if (options.physics.hierarchicalRepulsion) {
	        this.constants.hierarchicalLayout.enabled = true;
	        this.constants.physics.hierarchicalRepulsion.enabled = true;
	        this.constants.physics.barnesHut.enabled = false;
	        for (prop in options.physics.hierarchicalRepulsion) {
	          if (options.physics.hierarchicalRepulsion.hasOwnProperty(prop)) {
	            this.constants.physics.hierarchicalRepulsion[prop] = options.physics.hierarchicalRepulsion[prop];
	          }
	        }
	      }
	    }

	    if (options.onAdd) {
	      this.triggerFunctions.add = options.onAdd;
	    }
	    if (options.onEdit) {
	      this.triggerFunctions.edit = options.onEdit;
	    }
	    if (options.onEditEdge) {
	      this.triggerFunctions.editEdge = options.onEditEdge;
	    }
	    if (options.onConnect) {
	      this.triggerFunctions.connect = options.onConnect;
	    }
	    if (options.onDelete) {
	      this.triggerFunctions.del = options.onDelete;
	    }

	    util.mergeOptions(this.constants, options, 'smoothCurves');
	    util.mergeOptions(this.constants, options, 'hierarchicalLayout');
	    util.mergeOptions(this.constants, options, 'clustering');
	    util.mergeOptions(this.constants, options, 'navigation');
	    util.mergeOptions(this.constants, options, 'keyboard');
	    util.mergeOptions(this.constants, options, 'dataManipulation');

	    if (options.dataManipulation) {
	      this.editMode = this.constants.dataManipulation.initiallyVisible;
	    }

	    // TODO: work out these options and document them
	    if (options.edges) {
	      if (options.edges.color !== undefined) {
	        if (util.isString(options.edges.color)) {
	          this.constants.edges.color = {};
	          this.constants.edges.color.color = options.edges.color;
	          this.constants.edges.color.highlight = options.edges.color;
	          this.constants.edges.color.hover = options.edges.color;
	        } else {
	          if (options.edges.color.color !== undefined) {
	            this.constants.edges.color.color = options.edges.color.color;
	          }
	          if (options.edges.color.highlight !== undefined) {
	            this.constants.edges.color.highlight = options.edges.color.highlight;
	          }
	          if (options.edges.color.hover !== undefined) {
	            this.constants.edges.color.hover = options.edges.color.hover;
	          }
	        }
	        this.constants.edges.inheritColor = false;
	      }

	      if (!options.edges.fontColor) {
	        if (options.edges.color !== undefined) {
	          if (util.isString(options.edges.color)) {
	            this.constants.edges.fontColor = options.edges.color;
	          } else if (options.edges.color.color !== undefined) {
	            this.constants.edges.fontColor = options.edges.color.color;
	          }
	        }
	      }
	    }

	    if (options.nodes) {
	      if (options.nodes.color) {
	        var newColorObj = util.parseColor(options.nodes.color);
	        this.constants.nodes.color.background = newColorObj.background;
	        this.constants.nodes.color.border = newColorObj.border;
	        this.constants.nodes.color.highlight.background = newColorObj.highlight.background;
	        this.constants.nodes.color.highlight.border = newColorObj.highlight.border;
	        this.constants.nodes.color.hover.background = newColorObj.hover.background;
	        this.constants.nodes.color.hover.border = newColorObj.hover.border;
	      }
	    }
	    if (options.groups) {
	      for (var groupname in options.groups) {
	        if (options.groups.hasOwnProperty(groupname)) {
	          var group = options.groups[groupname];
	          this.groups.add(groupname, group);
	        }
	      }
	    }

	    if (options.tooltip) {
	      for (prop in options.tooltip) {
	        if (options.tooltip.hasOwnProperty(prop)) {
	          this.constants.tooltip[prop] = options.tooltip[prop];
	        }
	      }
	      if (options.tooltip.color) {
	        this.constants.tooltip.color = util.parseColor(options.tooltip.color);
	      }
	    }

	    if ('clickToUse' in options) {
	      if (options.clickToUse) {
	        if (!this.activator) {
	          this.activator = new Activator(this.frame);
	          this.activator.on('change', this._createKeyBinds.bind(this));
	        }
	      } else {
	        if (this.activator) {
	          this.activator.destroy();
	          delete this.activator;
	        }
	      }
	    }

	    if (options.labels) {
	      throw new Error('Option "labels" is deprecated. Use options "locale" and "locales" instead.');
	    }

	    // (Re)loading the mixins that can be enabled or disabled in the options.
	    // load the force calculation functions, grouped under the physics system.
	    this._loadPhysicsSystem();
	    // load the navigation system.
	    this._loadNavigationControls();
	    // load the data manipulation system
	    this._loadManipulationSystem();
	    // configure the smooth curves
	    this._configureSmoothCurves();

	    // bind hammer
	    this._bindHammer();

	    // bind keys. If disabled, this will not do anything;
	    this._createKeyBinds();

	    this._markAllEdgesAsDirty();
	    this.setSize(this.constants.width, this.constants.height);
	    this.moving = true;
	    if (this.constants.hierarchicalLayout.enabled == true && this.initializing == false) {
	      this._resetLevels();
	      this._setupHierarchicalLayout();
	    }
	    this.start();
	  }
	};

	/**
	 * Create the main frame for the Network.
	 * This function is executed once when a Network object is created. The frame
	 * contains a canvas, and this canvas contains all objects like the axis and
	 * nodes.
	 * @private
	 */
	Network.prototype._create = function () {
	  // remove all elements from the container element.
	  while (this.containerElement.hasChildNodes()) {
	    this.containerElement.removeChild(this.containerElement.firstChild);
	  }

	  this.frame = document.createElement('div');
	  this.frame.className = 'vis network-frame';
	  this.frame.style.position = 'relative';
	  this.frame.style.overflow = 'hidden';
	  this.frame.tabIndex = 900;

	  //////////////////////////////////////////////////////////////////

	  this.frame.canvas = document.createElement("canvas");
	  this.frame.canvas.style.position = 'relative';
	  this.frame.appendChild(this.frame.canvas);

	  if (!this.frame.canvas.getContext) {
	    var noCanvas = document.createElement('DIV');
	    noCanvas.style.color = 'red';
	    noCanvas.style.fontWeight = 'bold';
	    noCanvas.style.padding = '10px';
	    noCanvas.innerHTML = 'Error: your browser does not support HTML canvas';
	    this.frame.canvas.appendChild(noCanvas);
	  } else {
	    var ctx = this.frame.canvas.getContext("2d");
	    this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1);

	    //this.pixelRatio = Math.max(1,this.pixelRatio); // this is to account for browser zooming out. The pixel ratio is ment to switch between 1 and 2 for HD screens.
	    this.frame.canvas.getContext("2d").setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);
	  }

	  this._bindHammer();
	};

	/**
	 * This function binds hammer, it can be repeated over and over due to the uniqueness check.
	 * @private
	 */
	Network.prototype._bindHammer = function () {
	  var me = this;
	  if (this.hammer !== undefined) {
	    this.hammer.dispose();
	  }
	  this.drag = {};
	  this.pinch = {};
	  this.hammer = Hammer(this.frame.canvas, {
	    prevent_default: true
	  });
	  this.hammer.on('tap', me._onTap.bind(me));
	  this.hammer.on('doubletap', me._onDoubleTap.bind(me));
	  this.hammer.on('hold', me._onHold.bind(me));
	  this.hammer.on('touch', me._onTouch.bind(me));
	  this.hammer.on('dragstart', me._onDragStart.bind(me));
	  this.hammer.on('drag', me._onDrag.bind(me));
	  this.hammer.on('dragend', me._onDragEnd.bind(me));

	  if (this.constants.zoomable == true) {
	    this.hammer.on('mousewheel', me._onMouseWheel.bind(me));
	    this.hammer.on('DOMMouseScroll', me._onMouseWheel.bind(me)); // for FF
	    this.hammer.on('pinch', me._onPinch.bind(me));
	  }

	  this.hammer.on('mousemove', me._onMouseMoveTitle.bind(me));

	  this.hammerFrame = Hammer(this.frame, {
	    prevent_default: true
	  });
	  this.hammerFrame.on('release', me._onRelease.bind(me));

	  // add the frame to the container element
	  this.containerElement.appendChild(this.frame);
	};

	/**
	 * Binding the keys for keyboard navigation. These functions are defined in the NavigationMixin
	 * @private
	 */
	Network.prototype._createKeyBinds = function () {
	  var me = this;
	  if (this.keycharm !== undefined) {
	    this.keycharm.destroy();
	  }

	  if (this.constants.keyboard.bindToWindow == true) {
	    this.keycharm = keycharm({ container: window, preventDefault: false });
	  } else {
	    this.keycharm = keycharm({ container: this.frame, preventDefault: false });
	  }

	  this.keycharm.reset();

	  if (this.constants.keyboard.enabled && this.isActive()) {
	    this.keycharm.bind("up", this._moveUp.bind(me), "keydown");
	    this.keycharm.bind("up", this._yStopMoving.bind(me), "keyup");
	    this.keycharm.bind("down", this._moveDown.bind(me), "keydown");
	    this.keycharm.bind("down", this._yStopMoving.bind(me), "keyup");
	    this.keycharm.bind("left", this._moveLeft.bind(me), "keydown");
	    this.keycharm.bind("left", this._xStopMoving.bind(me), "keyup");
	    this.keycharm.bind("right", this._moveRight.bind(me), "keydown");
	    this.keycharm.bind("right", this._xStopMoving.bind(me), "keyup");
	    this.keycharm.bind("=", this._zoomIn.bind(me), "keydown");
	    this.keycharm.bind("=", this._stopZoom.bind(me), "keyup");
	    this.keycharm.bind("num+", this._zoomIn.bind(me), "keydown");
	    this.keycharm.bind("num+", this._stopZoom.bind(me), "keyup");
	    this.keycharm.bind("num-", this._zoomOut.bind(me), "keydown");
	    this.keycharm.bind("num-", this._stopZoom.bind(me), "keyup");
	    this.keycharm.bind("-", this._zoomOut.bind(me), "keydown");
	    this.keycharm.bind("-", this._stopZoom.bind(me), "keyup");
	    this.keycharm.bind("[", this._zoomIn.bind(me), "keydown");
	    this.keycharm.bind("[", this._stopZoom.bind(me), "keyup");
	    this.keycharm.bind("]", this._zoomOut.bind(me), "keydown");
	    this.keycharm.bind("]", this._stopZoom.bind(me), "keyup");
	    this.keycharm.bind("pageup", this._zoomIn.bind(me), "keydown");
	    this.keycharm.bind("pageup", this._stopZoom.bind(me), "keyup");
	    this.keycharm.bind("pagedown", this._zoomOut.bind(me), "keydown");
	    this.keycharm.bind("pagedown", this._stopZoom.bind(me), "keyup");
	  }

	  if (this.constants.dataManipulation.enabled == true) {
	    this.keycharm.bind("esc", this._createManipulatorBar.bind(me));
	    this.keycharm.bind("delete", this._deleteSelected.bind(me));
	  }
	};

	/**
	 * Cleans up all bindings of the network, removing it fully from the memory IF the variable is set to null after calling this function.
	 * var network = new vis.Network(..);
	 * network.destroy();
	 * network = null;
	 */
	Network.prototype.destroy = function () {
	  this.start = function () {};
	  this.redraw = function () {};
	  this.timer = false;

	  // cleanup physicsConfiguration if it exists
	  this._cleanupPhysicsConfiguration();

	  // remove keybindings
	  this.keycharm.reset();

	  // clear hammer bindings
	  this.hammer.dispose();

	  // clear events
	  this.off();

	  this._recursiveDOMDelete(this.containerElement);
	};

	Network.prototype._recursiveDOMDelete = function (DOMobject) {
	  while (DOMobject.hasChildNodes() == true) {
	    this._recursiveDOMDelete(DOMobject.firstChild);
	    DOMobject.removeChild(DOMobject.firstChild);
	  }
	};

	/**
	 * Get the pointer location from a touch location
	 * @param {{pageX: Number, pageY: Number}} touch
	 * @return {{x: Number, y: Number}} pointer
	 * @private
	 */
	Network.prototype._getPointer = function (touch) {
	  return {
	    x: touch.pageX - util.getAbsoluteLeft(this.frame.canvas),
	    y: touch.pageY - util.getAbsoluteTop(this.frame.canvas)
	  };
	};

	/**
	 * On start of a touch gesture, store the pointer
	 * @param event
	 * @private
	 */
	Network.prototype._onTouch = function (event) {
	  if (new Date().valueOf() - this.touchTime > 100) {
	    this.drag.pointer = this._getPointer(event.gesture.center);
	    this.drag.pinched = false;
	    this.pinch.scale = this._getScale();

	    // to avoid double fireing of this event because we have two hammer instances. (on canvas and on frame)
	    this.touchTime = new Date().valueOf();

	    this._handleTouch(this.drag.pointer);
	  }
	};

	/**
	 * handle drag start event
	 * @private
	 */
	Network.prototype._onDragStart = function (event) {
	  this._handleDragStart(event);
	};

	/**
	 * This function is called by _onDragStart.
	 * It is separated out because we can then overload it for the datamanipulation system.
	 *
	 * @private
	 */
	Network.prototype._handleDragStart = function (event) {
	  // in case the touch event was triggered on an external div, do the initial touch now.
	  if (this.drag.pointer === undefined) {
	    this._onTouch(event);
	  }

	  var node = this._getNodeAt(this.drag.pointer);
	  // note: drag.pointer is set in _onTouch to get the initial touch location

	  this.drag.dragging = true;
	  this.drag.selection = [];
	  this.drag.translation = this._getTranslation();
	  this.drag.nodeId = null;
	  this.draggingNodes = false;

	  if (node != null && this.constants.dragNodes == true) {
	    this.draggingNodes = true;
	    this.drag.nodeId = node.id;
	    // select the clicked node if not yet selected
	    if (!node.isSelected()) {
	      this._selectObject(node, false);
	    }

	    this.emit("dragStart", { nodeIds: this.getSelection().nodes });

	    // create an array with the selected nodes and their original location and status
	    for (var objectId in this.selectionObj.nodes) {
	      if (this.selectionObj.nodes.hasOwnProperty(objectId)) {
	        var object = this.selectionObj.nodes[objectId];
	        var s = {
	          id: object.id,
	          node: object,

	          // store original x, y, xFixed and yFixed, make the node temporarily Fixed
	          x: object.x,
	          y: object.y,
	          xFixed: object.xFixed,
	          yFixed: object.yFixed
	        };

	        object.xFixed = true;
	        object.yFixed = true;

	        this.drag.selection.push(s);
	      }
	    }
	  }
	};

	/**
	 * handle drag event
	 * @private
	 */
	Network.prototype._onDrag = function (event) {
	  this._handleOnDrag(event);
	};

	/**
	 * This function is called by _onDrag.
	 * It is separated out because we can then overload it for the datamanipulation system.
	 *
	 * @private
	 */
	Network.prototype._handleOnDrag = function (event) {
	  if (this.drag.pinched) {
	    return;
	  }

	  // remove the focus on node if it is focussed on by the focusOnNode
	  this.releaseNode();

	  var pointer = this._getPointer(event.gesture.center);
	  var me = this;
	  var drag = this.drag;
	  var selection = drag.selection;
	  if (selection && selection.length && this.constants.dragNodes == true) {
	    // calculate delta's and new location
	    var deltaX = pointer.x - drag.pointer.x;
	    var deltaY = pointer.y - drag.pointer.y;

	    // update position of all selected nodes
	    selection.forEach(function (s) {
	      var node = s.node;

	      if (!s.xFixed) {
	        node.x = me._XconvertDOMtoCanvas(me._XconvertCanvasToDOM(s.x) + deltaX);
	      }

	      if (!s.yFixed) {
	        node.y = me._YconvertDOMtoCanvas(me._YconvertCanvasToDOM(s.y) + deltaY);
	      }
	    });

	    // start _animationStep if not yet running
	    if (!this.moving) {
	      this.moving = true;
	      this.start();
	    }
	  } else {
	    // move the network
	    if (this.constants.dragNetwork == true) {
	      // if the drag was not started properly because the click started outside the network div, start it now.
	      if (this.drag.pointer === undefined) {
	        this._handleDragStart(event);
	        return;
	      }
	      var diffX = pointer.x - this.drag.pointer.x;
	      var diffY = pointer.y - this.drag.pointer.y;

	      this._setTranslation(this.drag.translation.x + diffX, this.drag.translation.y + diffY);
	      this._redraw();
	    }
	  }
	};

	/**
	 * handle drag start event
	 * @private
	 */
	Network.prototype._onDragEnd = function (event) {
	  this._handleDragEnd(event);
	};

	Network.prototype._handleDragEnd = function (event) {
	  this.drag.dragging = false;
	  var selection = this.drag.selection;
	  if (selection && selection.length) {
	    selection.forEach(function (s) {
	      // restore original xFixed and yFixed
	      s.node.xFixed = s.xFixed;
	      s.node.yFixed = s.yFixed;
	    });
	    this.moving = true;
	    this.start();
	  } else {
	    this._redraw();
	  }
	  if (this.draggingNodes == false) {
	    this.emit("dragEnd", { nodeIds: [] });
	  } else {
	    this.emit("dragEnd", { nodeIds: this.getSelection().nodes });
	  }
	};
	/**
	 * handle tap/click event: select/unselect a node
	 * @private
	 */
	Network.prototype._onTap = function (event) {
	  var pointer = this._getPointer(event.gesture.center);
	  this.pointerPosition = pointer;
	  this._handleTap(pointer);
	};

	/**
	 * handle doubletap event
	 * @private
	 */
	Network.prototype._onDoubleTap = function (event) {
	  var pointer = this._getPointer(event.gesture.center);
	  this._handleDoubleTap(pointer);
	};

	/**
	 * handle long tap event: multi select nodes
	 * @private
	 */
	Network.prototype._onHold = function (event) {
	  var pointer = this._getPointer(event.gesture.center);
	  this.pointerPosition = pointer;
	  this._handleOnHold(pointer);
	};

	/**
	 * handle the release of the screen
	 *
	 * @private
	 */
	Network.prototype._onRelease = function (event) {
	  var pointer = this._getPointer(event.gesture.center);
	  this._handleOnRelease(pointer);
	};

	/**
	 * Handle pinch event
	 * @param event
	 * @private
	 */
	Network.prototype._onPinch = function (event) {
	  var pointer = this._getPointer(event.gesture.center);

	  this.drag.pinched = true;
	  if (!('scale' in this.pinch)) {
	    this.pinch.scale = 1;
	  }

	  // TODO: enabled moving while pinching?
	  var scale = this.pinch.scale * event.gesture.scale;
	  this._zoom(scale, pointer);
	};

	/**
	 * Zoom the network in or out
	 * @param {Number} scale a number around 1, and between 0.01 and 10
	 * @param {{x: Number, y: Number}} pointer    Position on screen
	 * @return {Number} appliedScale    scale is limited within the boundaries
	 * @private
	 */
	Network.prototype._zoom = function (scale, pointer) {
	  if (this.constants.zoomable == true) {
	    var scaleOld = this._getScale();
	    if (scale < 0.00001) {
	      scale = 0.00001;
	    }
	    if (scale > 10) {
	      scale = 10;
	    }

	    var preScaleDragPointer = null;
	    if (this.drag !== undefined) {
	      if (this.drag.dragging == true) {
	        preScaleDragPointer = this.DOMtoCanvas(this.drag.pointer);
	      }
	    }
	    // + this.frame.canvas.clientHeight / 2
	    var translation = this._getTranslation();

	    var scaleFrac = scale / scaleOld;
	    var tx = (1 - scaleFrac) * pointer.x + translation.x * scaleFrac;
	    var ty = (1 - scaleFrac) * pointer.y + translation.y * scaleFrac;

	    this.areaCenter = { "x": this._XconvertDOMtoCanvas(pointer.x),
	      "y": this._YconvertDOMtoCanvas(pointer.y) };

	    this._setScale(scale);
	    this._setTranslation(tx, ty);
	    this.updateClustersDefault();

	    if (preScaleDragPointer != null) {
	      var postScaleDragPointer = this.canvasToDOM(preScaleDragPointer);
	      this.drag.pointer.x = postScaleDragPointer.x;
	      this.drag.pointer.y = postScaleDragPointer.y;
	    }

	    this._redraw();

	    if (scaleOld < scale) {
	      this.emit("zoom", { direction: "+" });
	    } else {
	      this.emit("zoom", { direction: "-" });
	    }

	    return scale;
	  }
	};

	/**
	 * Event handler for mouse wheel event, used to zoom the timeline
	 * See http://adomas.org/javascript-mouse-wheel/
	 *     https://github.com/EightMedia/hammer.js/issues/256
	 * @param {MouseEvent}  event
	 * @private
	 */
	Network.prototype._onMouseWheel = function (event) {
	  // retrieve delta
	  var delta = 0;
	  if (event.wheelDelta) {
	    /* IE/Opera. */
	    delta = event.wheelDelta / 120;
	  } else if (event.detail) {
	    /* Mozilla case. */
	    // In Mozilla, sign of delta is different than in IE.
	    // Also, delta is multiple of 3.
	    delta = -event.detail / 3;
	  }

	  // If delta is nonzero, handle it.
	  // Basically, delta is now positive if wheel was scrolled up,
	  // and negative, if wheel was scrolled down.
	  if (delta) {

	    // calculate the new scale
	    var scale = this._getScale();
	    var zoom = delta / 10;
	    if (delta < 0) {
	      zoom = zoom / (1 - zoom);
	    }
	    scale *= 1 + zoom;

	    // calculate the pointer location
	    var gesture = hammerUtil.fakeGesture(this, event);
	    var pointer = this._getPointer(gesture.center);

	    // apply the new scale
	    this._zoom(scale, pointer);
	  }

	  // Prevent default actions caused by mouse wheel.
	  event.preventDefault();
	};

	/**
	 * Mouse move handler for checking whether the title moves over a node with a title.
	 * @param  {Event} event
	 * @private
	 */
	Network.prototype._onMouseMoveTitle = function (event) {
	  var gesture = hammerUtil.fakeGesture(this, event);
	  var pointer = this._getPointer(gesture.center);
	  var popupVisible = false;

	  // check if the previously selected node is still selected
	  if (this.popup !== undefined) {
	    if (this.popup.hidden === false) {
	      this._checkHidePopup(pointer);
	    }

	    // if the popup was not hidden above
	    if (this.popup.hidden === false) {
	      popupVisible = true;
	      this.popup.setPosition(pointer.x + 3, pointer.y - 5);
	      this.popup.show();
	    }
	  }

	  // if we bind the keyboard to the div, we have to highlight it to use it. This highlights it on mouse over
	  if (this.constants.keyboard.bindToWindow == false && this.constants.keyboard.enabled == true) {
	    this.frame.focus();
	  }

	  // start a timeout that will check if the mouse is positioned above an element
	  if (popupVisible === false) {
	    var me = this;
	    var checkShow = function checkShow() {
	      me._checkShowPopup(pointer);
	    };
	    if (this.popupTimer) {
	      clearInterval(this.popupTimer); // stop any running calculationTimer
	    }
	    if (!this.drag.dragging) {
	      this.popupTimer = setTimeout(checkShow, this.constants.tooltip.delay);
	    }
	  }

	  /**
	   * Adding hover highlights
	   */
	  if (this.constants.hover == true) {
	    // removing all hover highlights
	    for (var edgeId in this.hoverObj.edges) {
	      if (this.hoverObj.edges.hasOwnProperty(edgeId)) {
	        this.hoverObj.edges[edgeId].hover = false;
	        delete this.hoverObj.edges[edgeId];
	      }
	    }

	    // adding hover highlights
	    var obj = this._getNodeAt(pointer);
	    if (obj == null) {
	      obj = this._getEdgeAt(pointer);
	    }
	    if (obj != null) {
	      this._hoverObject(obj);
	    }

	    // removing all node hover highlights except for the selected one.
	    for (var nodeId in this.hoverObj.nodes) {
	      if (this.hoverObj.nodes.hasOwnProperty(nodeId)) {
	        if (obj instanceof Node && obj.id != nodeId || obj instanceof Edge || obj == null) {
	          this._blurObject(this.hoverObj.nodes[nodeId]);
	          delete this.hoverObj.nodes[nodeId];
	        }
	      }
	    }
	    this.redraw();
	  }
	};

	/**
	 * Check if there is an element on the given position in the network
	 * (a node or edge). If so, and if this element has a title,
	 * show a popup window with its title.
	 *
	 * @param {{x:Number, y:Number}} pointer
	 * @private
	 */
	Network.prototype._checkShowPopup = function (pointer) {
	  var obj = {
	    left: this._XconvertDOMtoCanvas(pointer.x),
	    top: this._YconvertDOMtoCanvas(pointer.y),
	    right: this._XconvertDOMtoCanvas(pointer.x),
	    bottom: this._YconvertDOMtoCanvas(pointer.y)
	  };

	  var id;
	  var previousPopupObjId = this.popupObj === undefined ? "" : this.popupObj.id;
	  var nodeUnderCursor = false;
	  var popupType = "node";

	  if (this.popupObj == undefined) {
	    // search the nodes for overlap, select the top one in case of multiple nodes
	    var nodes = this.nodes;
	    var overlappingNodes = [];
	    for (id in nodes) {
	      if (nodes.hasOwnProperty(id)) {
	        var node = nodes[id];
	        if (node.isOverlappingWith(obj)) {
	          if (node.getTitle() !== undefined) {
	            overlappingNodes.push(id);
	          }
	        }
	      }
	    }

	    if (overlappingNodes.length > 0) {
	      // if there are overlapping nodes, select the last one, this is the
	      // one which is drawn on top of the others
	      this.popupObj = this.nodes[overlappingNodes[overlappingNodes.length - 1]];
	      // if you hover over a node, the title of the edge is not supposed to be shown.
	      nodeUnderCursor = true;
	    }
	  }

	  if (this.popupObj === undefined && nodeUnderCursor == false) {
	    // search the edges for overlap
	    var edges = this.edges;
	    var overlappingEdges = [];
	    for (id in edges) {
	      if (edges.hasOwnProperty(id)) {
	        var edge = edges[id];
	        if (edge.connected && edge.getTitle() !== undefined && edge.isOverlappingWith(obj)) {
	          overlappingEdges.push(id);
	        }
	      }
	    }

	    if (overlappingEdges.length > 0) {
	      this.popupObj = this.edges[overlappingEdges[overlappingEdges.length - 1]];
	      popupType = "edge";
	    }
	  }

	  if (this.popupObj) {
	    // show popup message window
	    if (this.popupObj.id != previousPopupObjId) {
	      if (this.popup === undefined) {
	        this.popup = new Popup(this.frame, this.constants.tooltip);
	      }

	      this.popup.popupTargetType = popupType;
	      this.popup.popupTargetId = this.popupObj.id;

	      // adjust a small offset such that the mouse cursor is located in the
	      // bottom left location of the popup, and you can easily move over the
	      // popup area
	      this.popup.setPosition(pointer.x + 3, pointer.y - 5);
	      this.popup.setText(this.popupObj.getTitle());
	      this.popup.show();
	    }
	  } else {
	    if (this.popup) {
	      this.popup.hide();
	    }
	  }
	};

	/**
	 * Check if the popup must be hidden, which is the case when the mouse is no
	 * longer hovering on the object
	 * @param {{x:Number, y:Number}} pointer
	 * @private
	 */
	Network.prototype._checkHidePopup = function (pointer) {
	  var pointerObj = {
	    left: this._XconvertDOMtoCanvas(pointer.x),
	    top: this._YconvertDOMtoCanvas(pointer.y),
	    right: this._XconvertDOMtoCanvas(pointer.x),
	    bottom: this._YconvertDOMtoCanvas(pointer.y)
	  };

	  var stillOnObj = false;
	  if (this.popup.popupTargetType == 'node') {
	    stillOnObj = this.nodes[this.popup.popupTargetId].isOverlappingWith(pointerObj);
	    if (stillOnObj === true) {
	      var overNode = this._getNodeAt(pointer);
	      stillOnObj = overNode.id == this.popup.popupTargetId;
	    }
	  } else {
	    if (this._getNodeAt(pointer) === null) {
	      stillOnObj = this.edges[this.popup.popupTargetId].isOverlappingWith(pointerObj);
	    }
	  }

	  if (stillOnObj === false) {
	    this.popupObj = undefined;
	    this.popup.hide();
	  }
	};

	/**
	 * Set a new size for the network
	 * @param {string} width   Width in pixels or percentage (for example '800px'
	 *                         or '50%')
	 * @param {string} height  Height in pixels or percentage  (for example '400px'
	 *                         or '30%')
	 */
	Network.prototype.setSize = function (width, height) {
	  var emitEvent = false;
	  var oldWidth = this.frame.canvas.width;
	  var oldHeight = this.frame.canvas.height;
	  if (width != this.constants.width || height != this.constants.height || this.frame.style.width != width || this.frame.style.height != height) {
	    this.frame.style.width = width;
	    this.frame.style.height = height;

	    this.frame.canvas.style.width = '100%';
	    this.frame.canvas.style.height = '100%';

	    this.frame.canvas.width = this.frame.canvas.clientWidth * this.pixelRatio;
	    this.frame.canvas.height = this.frame.canvas.clientHeight * this.pixelRatio;

	    this.constants.width = width;
	    this.constants.height = height;

	    emitEvent = true;
	  } else {
	    // this would adapt the width of the canvas to the width from 100% if and only if
	    // there is a change.

	    if (this.frame.canvas.width != this.frame.canvas.clientWidth * this.pixelRatio) {
	      this.frame.canvas.width = this.frame.canvas.clientWidth * this.pixelRatio;
	      emitEvent = true;
	    }
	    if (this.frame.canvas.height != this.frame.canvas.clientHeight * this.pixelRatio) {
	      this.frame.canvas.height = this.frame.canvas.clientHeight * this.pixelRatio;
	      emitEvent = true;
	    }
	  }

	  if (emitEvent == true) {
	    this.emit('resize', { width: this.frame.canvas.width * this.pixelRatio, height: this.frame.canvas.height * this.pixelRatio, oldWidth: oldWidth * this.pixelRatio, oldHeight: oldHeight * this.pixelRatio });
	  }
	};

	/**
	 * Set a data set with nodes for the network
	 * @param {Array | DataSet | DataView} nodes         The data containing the nodes.
	 * @private
	 */
	Network.prototype._setNodes = function (nodes) {
	  var oldNodesData = this.nodesData;

	  if (nodes instanceof DataSet || nodes instanceof DataView) {
	    this.nodesData = nodes;
	  } else if (Array.isArray(nodes)) {
	    this.nodesData = new DataSet();
	    this.nodesData.add(nodes);
	  } else if (!nodes) {
	    this.nodesData = new DataSet();
	  } else {
	    throw new TypeError('Array or DataSet expected');
	  }

	  if (oldNodesData) {
	    // unsubscribe from old dataset
	    util.forEach(this.nodesListeners, function (callback, event) {
	      oldNodesData.off(event, callback);
	    });
	  }

	  // remove drawn nodes
	  this.nodes = {};

	  if (this.nodesData) {
	    // subscribe to new dataset
	    var me = this;
	    util.forEach(this.nodesListeners, function (callback, event) {
	      me.nodesData.on(event, callback);
	    });

	    // draw all new nodes
	    var ids = this.nodesData.getIds();
	    this._addNodes(ids);
	  }
	  this._updateSelection();
	};

	/**
	 * Add nodes
	 * @param {Number[] | String[]} ids
	 * @private
	 */
	Network.prototype._addNodes = function (ids) {
	  var id;
	  var fieldId = this.nodesData._fieldId || null;
	  for (var i = 0, len = ids.length; i < len; i++) {
	    id = ids[i];
	    var data = this.nodesData.get(id);
	    if (fieldId) {
	      data.id = data[fieldId];
	    }

	    var node = new Node(data, this.images, this.groups, this.constants);
	    this.nodes[id] = node; // note: this may replace an existing node
	    if ((node.xFixed == false || node.yFixed == false) && (node.x === null || node.y === null)) {
	      var radius = 10 * 0.1 * ids.length + 10;
	      var angle = 2 * Math.PI * Math.random();
	      if (node.xFixed == false) {
	        node.x = radius * Math.cos(angle);
	      }
	      if (node.yFixed == false) {
	        node.y = radius * Math.sin(angle);
	      }
	    }
	    this.moving = true;
	  }

	  this._updateNodeIndexList();
	  if (this.constants.hierarchicalLayout.enabled == true && this.initializing == false) {
	    this._resetLevels();
	    this._setupHierarchicalLayout();
	  }
	  this._updateCalculationNodes();
	  this._reconnectEdges();
	  this._updateValueRange(this.nodes);
	  this.updateLabels();
	};

	/**
	 * Update existing nodes, or create them when not yet existing
	 * @param {Number[] | String[]} ids
	 * @private
	 */
	Network.prototype._updateNodes = function (ids) {
	  var nodesData = this.nodesData.get(ids);
	  var nodes = this.nodes;

	  for (var i = 0, len = ids.length; i < len; i++) {
	    var id = ids[i];
	    var node = nodes[id];
	    var data = nodesData[i];
	    if (node) {
	      // update node
	      node.setProperties(data, this.constants);
	    } else {
	      // create node
	      node = new Node(properties, this.images, this.groups, this.constants);
	      nodes[id] = node;
	    }
	  }
	  this.moving = true;
	  if (this.constants.hierarchicalLayout.enabled == true && this.initializing == false) {
	    this._resetLevels();
	    this._setupHierarchicalLayout();
	  }
	  this._updateNodeIndexList();
	  this._updateValueRange(nodes);
	  this._markAllEdgesAsDirty();
	};

	Network.prototype._markAllEdgesAsDirty = function () {
	  for (var edgeId in this.edges) {
	    this.edges[edgeId].colorDirty = true;
	  }
	};

	/**
	 * Remove existing nodes. If nodes do not exist, the method will just ignore it.
	 * @param {Number[] | String[]} ids
	 * @private
	 */
	Network.prototype._removeNodes = function (ids) {
	  var nodes = this.nodes;

	  // remove from selection
	  for (var i = 0, len = ids.length; i < len; i++) {
	    if (this.selectionObj.nodes[ids[i]] !== undefined) {
	      this.nodes[ids[i]].unselect();
	      this._removeFromSelection(this.nodes[ids[i]]);
	    }
	  }

	  for (var i = 0, len = ids.length; i < len; i++) {
	    var id = ids[i];
	    delete nodes[id];
	  }

	  this._updateNodeIndexList();
	  if (this.constants.hierarchicalLayout.enabled == true && this.initializing == false) {
	    this._resetLevels();
	    this._setupHierarchicalLayout();
	  }
	  this._updateCalculationNodes();
	  this._reconnectEdges();
	  this._updateSelection();
	  this._updateValueRange(nodes);
	};

	/**
	 * Load edges by reading the data table
	 * @param {Array | DataSet | DataView} edges    The data containing the edges.
	 * @private
	 * @private
	 */
	Network.prototype._setEdges = function (edges) {
	  var oldEdgesData = this.edgesData;

	  if (edges instanceof DataSet || edges instanceof DataView) {
	    this.edgesData = edges;
	  } else if (Array.isArray(edges)) {
	    this.edgesData = new DataSet();
	    this.edgesData.add(edges);
	  } else if (!edges) {
	    this.edgesData = new DataSet();
	  } else {
	    throw new TypeError('Array or DataSet expected');
	  }

	  if (oldEdgesData) {
	    // unsubscribe from old dataset
	    util.forEach(this.edgesListeners, function (callback, event) {
	      oldEdgesData.off(event, callback);
	    });
	  }

	  // remove drawn edges
	  this.edges = {};

	  if (this.edgesData) {
	    // subscribe to new dataset
	    var me = this;
	    util.forEach(this.edgesListeners, function (callback, event) {
	      me.edgesData.on(event, callback);
	    });

	    // draw all new nodes
	    var ids = this.edgesData.getIds();
	    this._addEdges(ids);
	  }

	  this._reconnectEdges();
	};

	/**
	 * Add edges
	 * @param {Number[] | String[]} ids
	 * @private
	 */
	Network.prototype._addEdges = function (ids) {
	  var edges = this.edges;
	  var edgesData = this.edgesData;
	  var fieldId = this.edgesData._fieldId;

	  for (var i = 0, len = ids.length; i < len; i++) {
	    var id = ids[i];

	    var oldEdge = edges[id];
	    if (oldEdge) {
	      oldEdge.disconnect();
	    }

	    var data = edgesData.get(id, { "showInternalIds": true });
	    if (fieldId) {
	      data.id = data[fieldId];
	    }
	    edges[id] = new Edge(data, this, this.constants);
	  }
	  this.moving = true;
	  this._updateValueRange(edges);
	  this._createBezierNodes();
	  this._updateCalculationNodes();
	  if (this.constants.hierarchicalLayout.enabled == true && this.initializing == false) {
	    this._resetLevels();
	    this._setupHierarchicalLayout();
	  }
	};

	/**
	 * Update existing edges, or create them when not yet existing
	 * @param {Number[] | String[]} ids
	 * @private
	 */
	Network.prototype._updateEdges = function (ids) {
	  var edges = this.edges,
	      edgesData = this.edgesData;
	  for (var i = 0, len = ids.length; i < len; i++) {
	    var id = ids[i];

	    var data = edgesData.get(id);
	    var edge = edges[id];
	    if (edge) {
	      // update edge
	      edge.disconnect();
	      edge.setProperties(data, this.constants);
	      edge.connect();
	    } else {
	      // create edge
	      edge = new Edge(data, this, this.constants);
	      this.edges[id] = edge;
	    }
	  }

	  this._createBezierNodes();
	  if (this.constants.hierarchicalLayout.enabled == true && this.initializing == false) {
	    this._resetLevels();
	    this._setupHierarchicalLayout();
	  }
	  this.moving = true;
	  this._updateValueRange(edges);
	};

	/**
	 * Remove existing edges. Non existing ids will be ignored
	 * @param {Number[] | String[]} ids
	 * @private
	 */
	Network.prototype._removeEdges = function (ids) {
	  var edges = this.edges;

	  // remove from selection
	  for (var i = 0, len = ids.length; i < len; i++) {
	    if (this.selectionObj.edges[ids[i]] !== undefined) {
	      edges[ids[i]].unselect();
	      this._removeFromSelection(edges[ids[i]]);
	    }
	  }

	  for (var i = 0, len = ids.length; i < len; i++) {
	    var id = ids[i];
	    var edge = edges[id];
	    if (edge) {
	      if (edge.via != null) {
	        delete this.sectors['support']['nodes'][edge.via.id];
	      }
	      edge.disconnect();
	      delete edges[id];
	    }
	  }

	  this.moving = true;
	  this._updateValueRange(edges);
	  if (this.constants.hierarchicalLayout.enabled == true && this.initializing == false) {
	    this._resetLevels();
	    this._setupHierarchicalLayout();
	  }
	  this._updateCalculationNodes();
	};

	/**
	 * Reconnect all edges
	 * @private
	 */
	Network.prototype._reconnectEdges = function () {
	  var id,
	      nodes = this.nodes,
	      edges = this.edges;
	  for (id in nodes) {
	    if (nodes.hasOwnProperty(id)) {
	      nodes[id].edges = [];
	      nodes[id].dynamicEdges = [];
	    }
	  }

	  for (id in edges) {
	    if (edges.hasOwnProperty(id)) {
	      var edge = edges[id];
	      edge.from = null;
	      edge.to = null;
	      edge.connect();
	    }
	  }
	};

	/**
	 * Update the values of all object in the given array according to the current
	 * value range of the objects in the array.
	 * @param {Object} obj    An object containing a set of Edges or Nodes
	 *                        The objects must have a method getValue() and
	 *                        setValueRange(min, max).
	 * @private
	 */
	Network.prototype._updateValueRange = function (obj) {
	  var id;

	  // determine the range of the objects
	  var valueMin = undefined;
	  var valueMax = undefined;
	  var valueTotal = 0;
	  for (id in obj) {
	    if (obj.hasOwnProperty(id)) {
	      var value = obj[id].getValue();
	      if (value !== undefined) {
	        valueMin = valueMin === undefined ? value : Math.min(value, valueMin);
	        valueMax = valueMax === undefined ? value : Math.max(value, valueMax);
	        valueTotal += value;
	      }
	    }
	  }

	  // adjust the range of all objects
	  if (valueMin !== undefined && valueMax !== undefined) {
	    for (id in obj) {
	      if (obj.hasOwnProperty(id)) {
	        obj[id].setValueRange(valueMin, valueMax, valueTotal);
	      }
	    }
	  }
	};

	/**
	 * Redraw the network with the current data
	 * chart will be resized too.
	 */
	Network.prototype.redraw = function () {
	  this.setSize(this.constants.width, this.constants.height);
	  this._redraw();
	};

	/**
	 * Redraw the network with the current data
	 * @param hidden | used to get the first estimate of the node sizes. only the nodes are drawn after which they are quickly drawn over.
	 * @private
	 */
	Network.prototype._requestRedraw = function (hidden) {
	  if (this.redrawRequested !== true) {
	    this.redrawRequested = true;
	    if (this.requiresTimeout === true) {
	      window.setTimeout(this._redraw.bind(this, hidden), 0);
	    } else {
	      window.requestAnimationFrame(this._redraw.bind(this, hidden, true));
	    }
	  }
	};

	Network.prototype._redraw = function (hidden, requested) {
	  if (hidden === undefined) {
	    hidden = false;
	  }
	  this.redrawRequested = false;
	  var ctx = this.frame.canvas.getContext('2d');

	  ctx.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);

	  // clear the canvas
	  var w = this.frame.canvas.clientWidth;
	  var h = this.frame.canvas.clientHeight;
	  ctx.clearRect(0, 0, w, h);

	  // set scaling and translation
	  ctx.save();
	  ctx.translate(this.translation.x, this.translation.y);
	  ctx.scale(this.scale, this.scale);

	  this.canvasTopLeft = {
	    "x": this._XconvertDOMtoCanvas(0),
	    "y": this._YconvertDOMtoCanvas(0)
	  };
	  this.canvasBottomRight = {
	    "x": this._XconvertDOMtoCanvas(this.frame.canvas.clientWidth),
	    "y": this._YconvertDOMtoCanvas(this.frame.canvas.clientHeight)
	  };

	  if (hidden === false) {
	    this._doInAllSectors("_drawAllSectorNodes", ctx);
	    if (this.drag.dragging == false || this.drag.dragging === undefined || this.constants.hideEdgesOnDrag == false) {
	      this._doInAllSectors("_drawEdges", ctx);
	    }
	  }

	  if (this.drag.dragging == false || this.drag.dragging === undefined || this.constants.hideNodesOnDrag == false) {
	    this._doInAllSectors("_drawNodes", ctx, false);
	  }

	  if (hidden === false) {
	    if (this.controlNodesActive == true) {
	      this._doInAllSectors("_drawControlNodes", ctx);
	    }
	  }

	  //  this._doInSupportSector("_drawNodes",ctx,true);
	  //  this._drawTree(ctx,"#F00F0F");

	  // restore original scaling and translation
	  ctx.restore();

	  if (hidden === true) {
	    ctx.clearRect(0, 0, w, h);
	  }
	};

	/**
	 * Set the translation of the network
	 * @param {Number} offsetX    Horizontal offset
	 * @param {Number} offsetY    Vertical offset
	 * @private
	 */
	Network.prototype._setTranslation = function (offsetX, offsetY) {
	  if (this.translation === undefined) {
	    this.translation = {
	      x: 0,
	      y: 0
	    };
	  }

	  if (offsetX !== undefined) {
	    this.translation.x = offsetX;
	  }
	  if (offsetY !== undefined) {
	    this.translation.y = offsetY;
	  }

	  this.emit('viewChanged');
	};

	/**
	 * Get the translation of the network
	 * @return {Object} translation    An object with parameters x and y, both a number
	 * @private
	 */
	Network.prototype._getTranslation = function () {
	  return {
	    x: this.translation.x,
	    y: this.translation.y
	  };
	};

	/**
	 * Scale the network
	 * @param {Number} scale   Scaling factor 1.0 is unscaled
	 * @private
	 */
	Network.prototype._setScale = function (scale) {
	  this.scale = scale;
	};

	/**
	 * Get the current scale of  the network
	 * @return {Number} scale   Scaling factor 1.0 is unscaled
	 * @private
	 */
	Network.prototype._getScale = function () {
	  return this.scale;
	};

	/**
	 * Convert the X coordinate in DOM-space (coordinate point in browser relative to the container div) to
	 * the X coordinate in canvas-space (the simulation sandbox, which the camera looks upon)
	 * @param {number} x
	 * @returns {number}
	 * @private
	 */
	Network.prototype._XconvertDOMtoCanvas = function (x) {
	  return (x - this.translation.x) / this.scale;
	};

	/**
	 * Convert the X coordinate in canvas-space (the simulation sandbox, which the camera looks upon) to
	 * the X coordinate in DOM-space (coordinate point in browser relative to the container div)
	 * @param {number} x
	 * @returns {number}
	 * @private
	 */
	Network.prototype._XconvertCanvasToDOM = function (x) {
	  return x * this.scale + this.translation.x;
	};

	/**
	 * Convert the Y coordinate in DOM-space (coordinate point in browser relative to the container div) to
	 * the Y coordinate in canvas-space (the simulation sandbox, which the camera looks upon)
	 * @param {number} y
	 * @returns {number}
	 * @private
	 */
	Network.prototype._YconvertDOMtoCanvas = function (y) {
	  return (y - this.translation.y) / this.scale;
	};

	/**
	 * Convert the Y coordinate in canvas-space (the simulation sandbox, which the camera looks upon) to
	 * the Y coordinate in DOM-space (coordinate point in browser relative to the container div)
	 * @param {number} y
	 * @returns {number}
	 * @private
	 */
	Network.prototype._YconvertCanvasToDOM = function (y) {
	  return y * this.scale + this.translation.y;
	};

	/**
	 *
	 * @param {object} pos   = {x: number, y: number}
	 * @returns {{x: number, y: number}}
	 * @constructor
	 */
	Network.prototype.canvasToDOM = function (pos) {
	  return { x: this._XconvertCanvasToDOM(pos.x), y: this._YconvertCanvasToDOM(pos.y) };
	};

	/**
	 *
	 * @param {object} pos   = {x: number, y: number}
	 * @returns {{x: number, y: number}}
	 * @constructor
	 */
	Network.prototype.DOMtoCanvas = function (pos) {
	  return { x: this._XconvertDOMtoCanvas(pos.x), y: this._YconvertDOMtoCanvas(pos.y) };
	};

	/**
	 * Redraw all nodes
	 * The 2d context of a HTML canvas can be retrieved by canvas.getContext('2d');
	 * @param {CanvasRenderingContext2D}   ctx
	 * @param {Boolean} [alwaysShow]
	 * @private
	 */
	Network.prototype._drawNodes = function (ctx, alwaysShow) {
	  if (alwaysShow === undefined) {
	    alwaysShow = false;
	  }

	  // first draw the unselected nodes
	  var nodes = this.nodes;
	  var selected = [];

	  for (var id in nodes) {
	    if (nodes.hasOwnProperty(id)) {
	      nodes[id].setScaleAndPos(this.scale, this.canvasTopLeft, this.canvasBottomRight);
	      if (nodes[id].isSelected()) {
	        selected.push(id);
	      } else {
	        if (nodes[id].inArea() || alwaysShow) {
	          nodes[id].draw(ctx);
	        }
	      }
	    }
	  }

	  // draw the selected nodes on top
	  for (var s = 0, sMax = selected.length; s < sMax; s++) {
	    if (nodes[selected[s]].inArea() || alwaysShow) {
	      nodes[selected[s]].draw(ctx);
	    }
	  }
	};

	/**
	 * Redraw all edges
	 * The 2d context of a HTML canvas can be retrieved by canvas.getContext('2d');
	 * @param {CanvasRenderingContext2D}   ctx
	 * @private
	 */
	Network.prototype._drawEdges = function (ctx) {
	  var edges = this.edges;
	  for (var id in edges) {
	    if (edges.hasOwnProperty(id)) {
	      var edge = edges[id];
	      edge.setScale(this.scale);
	      if (edge.connected) {
	        edges[id].draw(ctx);
	      }
	    }
	  }
	};

	/**
	 * Redraw all edges
	 * The 2d context of a HTML canvas can be retrieved by canvas.getContext('2d');
	 * @param {CanvasRenderingContext2D}   ctx
	 * @private
	 */
	Network.prototype._drawControlNodes = function (ctx) {
	  var edges = this.edges;
	  for (var id in edges) {
	    if (edges.hasOwnProperty(id)) {
	      edges[id]._drawControlNodes(ctx);
	    }
	  }
	};

	/**
	 * Find a stable position for all nodes
	 * @private
	 */
	Network.prototype._stabilize = function () {
	  if (this.constants.freezeForStabilization == true) {
	    this._freezeDefinedNodes();
	  }

	  // find stable position
	  var count = 0;
	  while (this.moving && count < this.constants.stabilizationIterations) {
	    this._physicsTick();
	    count++;
	  }

	  if (this.constants.zoomExtentOnStabilize == true) {
	    this.zoomExtent({ duration: 0 }, false, true);
	  }

	  if (this.constants.freezeForStabilization == true) {
	    this._restoreFrozenNodes();
	  }

	  this.emit("stabilizationIterationsDone");
	};

	/**
	 * When initializing and stabilizing, we can freeze nodes with a predefined position. This greatly speeds up stabilization
	 * because only the supportnodes for the smoothCurves have to settle.
	 *
	 * @private
	 */
	Network.prototype._freezeDefinedNodes = function () {
	  var nodes = this.nodes;
	  for (var id in nodes) {
	    if (nodes.hasOwnProperty(id)) {
	      if (nodes[id].x != null && nodes[id].y != null) {
	        nodes[id].fixedData.x = nodes[id].xFixed;
	        nodes[id].fixedData.y = nodes[id].yFixed;
	        nodes[id].xFixed = true;
	        nodes[id].yFixed = true;
	      }
	    }
	  }
	};

	/**
	 * Unfreezes the nodes that have been frozen by _freezeDefinedNodes.
	 *
	 * @private
	 */
	Network.prototype._restoreFrozenNodes = function () {
	  var nodes = this.nodes;
	  for (var id in nodes) {
	    if (nodes.hasOwnProperty(id)) {
	      if (nodes[id].fixedData.x != null) {
	        nodes[id].xFixed = nodes[id].fixedData.x;
	        nodes[id].yFixed = nodes[id].fixedData.y;
	      }
	    }
	  }
	};

	/**
	 * Check if any of the nodes is still moving
	 * @param {number} vmin   the minimum velocity considered as 'moving'
	 * @return {boolean}      true if moving, false if non of the nodes is moving
	 * @private
	 */
	Network.prototype._isMoving = function (vmin) {
	  var nodes = this.nodes;
	  for (var id in nodes) {
	    if (nodes[id] !== undefined) {
	      if (nodes[id].isMoving(vmin) == true) {
	        return true;
	      }
	    }
	  }
	  return false;
	};

	/**
	 * /**
	 * Perform one discrete step for all nodes
	 *
	 * @private
	 */
	Network.prototype._discreteStepNodes = function () {
	  var interval = this.physicsDiscreteStepsize;
	  var nodes = this.nodes;
	  var nodeId;
	  var nodesPresent = false;

	  if (this.constants.maxVelocity > 0) {
	    for (nodeId in nodes) {
	      if (nodes.hasOwnProperty(nodeId)) {
	        nodes[nodeId].discreteStepLimited(interval, this.constants.maxVelocity);
	        nodesPresent = true;
	      }
	    }
	  } else {
	    for (nodeId in nodes) {
	      if (nodes.hasOwnProperty(nodeId)) {
	        nodes[nodeId].discreteStep(interval);
	        nodesPresent = true;
	      }
	    }
	  }

	  if (nodesPresent == true) {
	    var vminCorrected = this.constants.minVelocity / Math.max(this.scale, 0.05);
	    if (vminCorrected > 0.5 * this.constants.maxVelocity) {
	      return true;
	    } else {
	      return this._isMoving(vminCorrected);
	    }
	  }
	  return false;
	};

	Network.prototype._revertPhysicsState = function () {
	  var nodes = this.nodes;
	  for (var nodeId in nodes) {
	    if (nodes.hasOwnProperty(nodeId)) {
	      nodes[nodeId].revertPosition();
	    }
	  }
	};

	Network.prototype._revertPhysicsTick = function () {
	  this._doInAllActiveSectors("_revertPhysicsState");
	  if (this.constants.smoothCurves.enabled == true && this.constants.smoothCurves.dynamic == true) {
	    this._doInSupportSector("_revertPhysicsState");
	  }
	};

	/**
	 * A single simulation step (or "tick") in the physics simulation
	 *
	 * @private
	 */
	Network.prototype._physicsTick = function () {
	  if (!this.freezeSimulationEnabled) {
	    if (this.moving == true) {
	      var mainMovingStatus = false;
	      var supportMovingStatus = false;

	      this._doInAllActiveSectors("_initializeForceCalculation");
	      var mainMoving = this._doInAllActiveSectors("_discreteStepNodes");
	      if (this.constants.smoothCurves.enabled == true && this.constants.smoothCurves.dynamic == true) {
	        supportMovingStatus = this._doInSupportSector("_discreteStepNodes");
	      }

	      // gather movement data from all sectors, if one moves, we are NOT stabilzied
	      for (var i = 0; i < mainMoving.length; i++) {
	        mainMovingStatus = mainMoving[i] || mainMovingStatus;
	      }

	      // determine if the network has stabilzied
	      this.moving = mainMovingStatus || supportMovingStatus;
	      if (this.moving == false) {
	        this._revertPhysicsTick();
	      } else {
	        // this is here to ensure that there is no start event when the network is already stable.
	        if (this.startedStabilization == false) {
	          this.emit("startStabilization");
	          this.startedStabilization = true;
	        }
	      }

	      this.stabilizationIterations++;
	    }
	  }
	};

	/**
	 * This function runs one step of the animation. It calls an x amount of physics ticks and one render tick.
	 * It reschedules itself at the beginning of the function
	 *
	 * @private
	 */
	Network.prototype._animationStep = function () {
	  // reset the timer so a new scheduled animation step can be set
	  this.timer = undefined;

	  if (this.requiresTimeout == true) {
	    // this schedules a new animation step
	    this.start();
	  }

	  // handle the keyboad movement
	  this._handleNavigation();

	  // check if the physics have settled
	  if (this.moving == true) {
	    var startTime = Date.now();
	    this._physicsTick();
	    var physicsTime = Date.now() - startTime;

	    // run double speed if it is a little graph
	    if ((this.renderTimestep - this.renderTime > 2 * physicsTime || this.runDoubleSpeed == true) && this.moving == true) {
	      this._physicsTick();

	      // this makes sure there is no jitter. The decision is taken once to run it at double speed.
	      if (this.renderTime != 0) {
	        this.runDoubleSpeed = true;
	      }
	    }
	  }

	  var renderStartTime = Date.now();
	  this._redraw();
	  this.renderTime = Date.now() - renderStartTime;

	  if (this.requiresTimeout == false) {
	    // this schedules a new animation step
	    this.start();
	  }
	};

	if (typeof window !== 'undefined') {
	  window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
	}

	/**
	 * Schedule a animation step with the refreshrate interval.
	 */
	Network.prototype.start = function () {
	  if (this.freezeSimulationEnabled == true) {
	    this.moving = false;
	  }
	  if (this.moving == true || this.xIncrement != 0 || this.yIncrement != 0 || this.zoomIncrement != 0 || this.animating == true) {
	    if (!this.timer) {
	      if (this.requiresTimeout == true) {
	        this.timer = window.setTimeout(this._animationStep.bind(this), this.renderTimestep); // wait this.renderTimeStep milliseconds and perform the animation step function
	      } else {
	        this.timer = window.requestAnimationFrame(this._animationStep.bind(this)); // wait this.renderTimeStep milliseconds and perform the animation step function
	      }
	    }
	  } else {
	    this._requestRedraw();
	    // this check is to ensure that the network does not emit these events if it was already stabilized and setOptions is called (setting moving to true and calling start())
	    if (this.stabilizationIterations > 1) {
	      // trigger the "stabilized" event.
	      // The event is triggered on the next tick, to prevent the case that
	      // it is fired while initializing the Network, in which case you would not
	      // be able to catch it
	      var me = this;
	      var params = {
	        iterations: me.stabilizationIterations
	      };
	      this.stabilizationIterations = 0;
	      this.startedStabilization = false;
	      setTimeout(function () {
	        me.emit("stabilized", params);
	      }, 0);
	    } else {
	      this.stabilizationIterations = 0;
	    }
	  }
	};

	/**
	 * Move the network according to the keyboard presses.
	 *
	 * @private
	 */
	Network.prototype._handleNavigation = function () {
	  if (this.xIncrement != 0 || this.yIncrement != 0) {
	    var translation = this._getTranslation();
	    this._setTranslation(translation.x + this.xIncrement, translation.y + this.yIncrement);
	  }
	  if (this.zoomIncrement != 0) {
	    var center = {
	      x: this.frame.canvas.clientWidth / 2,
	      y: this.frame.canvas.clientHeight / 2
	    };
	    this._zoom(this.scale * (1 + this.zoomIncrement), center);
	  }
	};

	/**
	 *  Freeze the _animationStep
	 */
	Network.prototype.freezeSimulation = function (freeze) {
	  if (freeze == true) {
	    this.freezeSimulationEnabled = true;
	    this.moving = false;
	  } else {
	    this.freezeSimulationEnabled = false;
	    this.moving = true;
	    this.start();
	  }
	};

	/**
	 * This function cleans the support nodes if they are not needed and adds them when they are.
	 *
	 * @param {boolean} [disableStart]
	 * @private
	 */
	Network.prototype._configureSmoothCurves = function (disableStart) {
	  if (disableStart === undefined) {
	    disableStart = true;
	  }
	  if (this.constants.smoothCurves.enabled == true && this.constants.smoothCurves.dynamic == true) {
	    this._createBezierNodes();
	    // cleanup unused support nodes
	    for (var nodeId in this.sectors['support']['nodes']) {
	      if (this.sectors['support']['nodes'].hasOwnProperty(nodeId)) {
	        if (this.edges[this.sectors['support']['nodes'][nodeId].parentEdgeId] === undefined) {
	          delete this.sectors['support']['nodes'][nodeId];
	        }
	      }
	    }
	  } else {
	    // delete the support nodes
	    this.sectors['support']['nodes'] = {};
	    for (var edgeId in this.edges) {
	      if (this.edges.hasOwnProperty(edgeId)) {
	        this.edges[edgeId].via = null;
	      }
	    }
	  }

	  this._updateCalculationNodes();
	  if (!disableStart) {
	    this.moving = true;
	    this.start();
	  }
	};

	/**
	 * Bezier curves require an anchor point to calculate the smooth flow. These points are nodes. These nodes are invisible but
	 * are used for the force calculation.
	 *
	 * @private
	 */
	Network.prototype._createBezierNodes = function () {
	  if (this.constants.smoothCurves.enabled == true && this.constants.smoothCurves.dynamic == true) {
	    for (var edgeId in this.edges) {
	      if (this.edges.hasOwnProperty(edgeId)) {
	        var edge = this.edges[edgeId];
	        if (edge.via == null) {
	          var nodeId = "edgeId:".concat(edge.id);
	          this.sectors['support']['nodes'][nodeId] = new Node({ id: nodeId,
	            mass: 1,
	            shape: 'circle',
	            image: "",
	            internalMultiplier: 1
	          }, {}, {}, this.constants);
	          edge.via = this.sectors['support']['nodes'][nodeId];
	          edge.via.parentEdgeId = edge.id;
	          edge.positionBezierNode();
	        }
	      }
	    }
	  }
	};

	/**
	 * load the functions that load the mixins into the prototype.
	 *
	 * @private
	 */
	Network.prototype._initializeMixinLoaders = function () {
	  for (var mixin in MixinLoader) {
	    if (MixinLoader.hasOwnProperty(mixin)) {
	      Network.prototype[mixin] = MixinLoader[mixin];
	    }
	  }
	};

	/**
	 * Load the XY positions of the nodes into the dataset.
	 */
	Network.prototype.storePosition = function () {
	  console.log("storePosition is depricated: use .storePositions() from now on.");
	  this.storePositions();
	};

	/**
	 * Load the XY positions of the nodes into the dataset.
	 */
	Network.prototype.storePositions = function () {
	  var dataArray = [];
	  for (var nodeId in this.nodes) {
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      var node = this.nodes[nodeId];
	      var allowedToMoveX = !this.nodes.xFixed;
	      var allowedToMoveY = !this.nodes.yFixed;
	      if (this.nodesData._data[nodeId].x != Math.round(node.x) || this.nodesData._data[nodeId].y != Math.round(node.y)) {
	        dataArray.push({ id: nodeId, x: Math.round(node.x), y: Math.round(node.y), allowedToMoveX: allowedToMoveX, allowedToMoveY: allowedToMoveY });
	      }
	    }
	  }
	  this.nodesData.update(dataArray);
	};

	/**
	 * Return the positions of the nodes.
	 */
	Network.prototype.getPositions = function (ids) {
	  var dataArray = {};
	  if (ids !== undefined) {
	    if (Array.isArray(ids) == true) {
	      for (var i = 0; i < ids.length; i++) {
	        if (this.nodes[ids[i]] !== undefined) {
	          var node = this.nodes[ids[i]];
	          dataArray[ids[i]] = { x: Math.round(node.x), y: Math.round(node.y) };
	        }
	      }
	    } else {
	      if (this.nodes[ids] !== undefined) {
	        var node = this.nodes[ids];
	        dataArray[ids] = { x: Math.round(node.x), y: Math.round(node.y) };
	      }
	    }
	  } else {
	    for (var nodeId in this.nodes) {
	      if (this.nodes.hasOwnProperty(nodeId)) {
	        var node = this.nodes[nodeId];
	        dataArray[nodeId] = { x: Math.round(node.x), y: Math.round(node.y) };
	      }
	    }
	  }
	  return dataArray;
	};

	/**
	 * Center a node in view.
	 *
	 * @param {Number} nodeId
	 * @param {Number} [options]
	 */
	Network.prototype.focusOnNode = function (nodeId, options) {
	  if (this.nodes.hasOwnProperty(nodeId)) {
	    if (options === undefined) {
	      options = {};
	    }
	    var nodePosition = { x: this.nodes[nodeId].x, y: this.nodes[nodeId].y };
	    options.position = nodePosition;
	    options.lockedOnNode = nodeId;

	    this.moveTo(options);
	  } else {
	    console.log("This nodeId cannot be found.");
	  }
	};

	/**
	 *
	 * @param {Object} options  |  options.offset   = {x:Number, y:Number}   // offset from the center in DOM pixels
	 *                          |  options.scale    = Number                 // scale to move to
	 *                          |  options.position = {x:Number, y:Number}   // position to move to
	 *                          |  options.animation = {duration:Number, easingFunction:String} || Boolean   // position to move to
	 */
	Network.prototype.moveTo = function (options) {
	  if (options === undefined) {
	    options = {};
	    return;
	  }
	  if (options.offset === undefined) {
	    options.offset = { x: 0, y: 0 };
	  }
	  if (options.offset.x === undefined) {
	    options.offset.x = 0;
	  }
	  if (options.offset.y === undefined) {
	    options.offset.y = 0;
	  }
	  if (options.scale === undefined) {
	    options.scale = this._getScale();
	  }
	  if (options.position === undefined) {
	    options.position = this._getTranslation();
	  }
	  if (options.animation === undefined) {
	    options.animation = { duration: 0 };
	  }
	  if (options.animation === false) {
	    options.animation = { duration: 0 };
	  }
	  if (options.animation === true) {
	    options.animation = {};
	  }
	  if (options.animation.duration === undefined) {
	    options.animation.duration = 1000;
	  } // default duration
	  if (options.animation.easingFunction === undefined) {
	    options.animation.easingFunction = "easeInOutQuad";
	  } // default easing function

	  this.animateView(options);
	};

	/**
	 *
	 * @param {Object} options  |  options.offset   = {x:Number, y:Number}   // offset from the center in DOM pixels
	 *                          |  options.time     = Number                 // animation time in milliseconds
	 *                          |  options.scale    = Number                 // scale to animate to
	 *                          |  options.position = {x:Number, y:Number}   // position to animate to
	 *                          |  options.easingFunction = String           // linear, easeInQuad, easeOutQuad, easeInOutQuad,
	 *                                                                       // easeInCubic, easeOutCubic, easeInOutCubic,
	 *                                                                       // easeInQuart, easeOutQuart, easeInOutQuart,
	 *                                                                       // easeInQuint, easeOutQuint, easeInOutQuint
	 */
	Network.prototype.animateView = function (options) {
	  if (options === undefined) {
	    options = {};
	    return;
	  }

	  // release if something focussed on the node
	  this.releaseNode();
	  if (options.locked == true) {
	    this.lockedOnNodeId = options.lockedOnNode;
	    this.lockedOnNodeOffset = options.offset;
	  }

	  // forcefully complete the old animation if it was still running
	  if (this.easingTime != 0) {
	    this._transitionRedraw(1); // by setting easingtime to 1, we finish the animation.
	  }

	  this.sourceScale = this._getScale();
	  this.sourceTranslation = this._getTranslation();
	  this.targetScale = options.scale;

	  // set the scale so the viewCenter is based on the correct zoom level. This is overridden in the transitionRedraw
	  // but at least then we'll have the target transition
	  this._setScale(this.targetScale);
	  var viewCenter = this.DOMtoCanvas({ x: 0.5 * this.frame.canvas.clientWidth, y: 0.5 * this.frame.canvas.clientHeight });
	  var distanceFromCenter = { // offset from view, distance view has to change by these x and y to center the node
	    x: viewCenter.x - options.position.x,
	    y: viewCenter.y - options.position.y
	  };
	  this.targetTranslation = {
	    x: this.sourceTranslation.x + distanceFromCenter.x * this.targetScale + options.offset.x,
	    y: this.sourceTranslation.y + distanceFromCenter.y * this.targetScale + options.offset.y
	  };

	  // if the time is set to 0, don't do an animation
	  if (options.animation.duration == 0) {
	    if (this.lockedOnNodeId != null) {
	      this._classicRedraw = this._redraw;
	      this._redraw = this._lockedRedraw;
	    } else {
	      this._setScale(this.targetScale);
	      this._setTranslation(this.targetTranslation.x, this.targetTranslation.y);
	      this._redraw();
	    }
	  } else {
	    this.animating = true;
	    this.animationSpeed = 1 / (this.renderRefreshRate * options.animation.duration * 0.001) || 1 / this.renderRefreshRate;
	    this.animationEasingFunction = options.animation.easingFunction;
	    this._classicRedraw = this._redraw;
	    this._redraw = this._transitionRedraw;
	    this._redraw();
	    this.start();
	  }
	};

	/**
	 * used to animate smoothly by hijacking the redraw function.
	 * @private
	 */
	Network.prototype._lockedRedraw = function () {
	  var nodePosition = { x: this.nodes[this.lockedOnNodeId].x, y: this.nodes[this.lockedOnNodeId].y };
	  var viewCenter = this.DOMtoCanvas({ x: 0.5 * this.frame.canvas.clientWidth, y: 0.5 * this.frame.canvas.clientHeight });
	  var distanceFromCenter = { // offset from view, distance view has to change by these x and y to center the node
	    x: viewCenter.x - nodePosition.x,
	    y: viewCenter.y - nodePosition.y
	  };
	  var sourceTranslation = this._getTranslation();
	  var targetTranslation = {
	    x: sourceTranslation.x + distanceFromCenter.x * this.scale + this.lockedOnNodeOffset.x,
	    y: sourceTranslation.y + distanceFromCenter.y * this.scale + this.lockedOnNodeOffset.y
	  };

	  this._setTranslation(targetTranslation.x, targetTranslation.y);
	  this._classicRedraw();
	};

	Network.prototype.releaseNode = function () {
	  if (this.lockedOnNodeId != null) {
	    this._redraw = this._classicRedraw;
	    this.lockedOnNodeId = null;
	    this.lockedOnNodeOffset = null;
	  }
	};

	/**
	 *
	 * @param easingTime
	 * @private
	 */
	Network.prototype._transitionRedraw = function (easingTime) {
	  this.easingTime = easingTime || this.easingTime + this.animationSpeed;
	  this.easingTime += this.animationSpeed;

	  var progress = util.easingFunctions[this.animationEasingFunction](this.easingTime);

	  this._setScale(this.sourceScale + (this.targetScale - this.sourceScale) * progress);
	  this._setTranslation(this.sourceTranslation.x + (this.targetTranslation.x - this.sourceTranslation.x) * progress, this.sourceTranslation.y + (this.targetTranslation.y - this.sourceTranslation.y) * progress);

	  this._classicRedraw();

	  // cleanup
	  if (this.easingTime >= 1.0) {
	    this.animating = false;
	    this.easingTime = 0;
	    if (this.lockedOnNodeId != null) {
	      this._redraw = this._lockedRedraw;
	    } else {
	      this._redraw = this._classicRedraw;
	    }
	    this.emit("animationFinished");
	  }
	};

	Network.prototype._classicRedraw = function () {
	  // placeholder function to be overloaded by animations;
	};

	/**
	 * Returns true when the Network is active.
	 * @returns {boolean}
	 */
	Network.prototype.isActive = function () {
	  return !this.activator || this.activator.active;
	};

	/**
	 * Sets the scale
	 * @returns {Number}
	 */
	Network.prototype.setScale = function () {
	  return this._setScale();
	};

	/**
	 * Returns the scale
	 * @returns {Number}
	 */
	Network.prototype.getScale = function () {
	  return this._getScale();
	};

	/**
	 * Returns the scale
	 * @returns {Number}
	 */
	Network.prototype.getCenterCoordinates = function () {
	  return this.DOMtoCanvas({ x: 0.5 * this.frame.canvas.clientWidth, y: 0.5 * this.frame.canvas.clientHeight });
	};

	Network.prototype.getBoundingBox = function (nodeId) {
	  if (this.nodes[nodeId] !== undefined) {
	    return this.nodes[nodeId].boundingBox;
	  }
	};

	Network.prototype.getConnectedNodes = function (nodeId) {
	  var nodeList = [];
	  if (this.nodes[nodeId] !== undefined) {
	    var node = this.nodes[nodeId];
	    var nodeObj = { nodeId: true }; // used to quickly check if node already exists
	    for (var i = 0; i < node.edges.length; i++) {
	      var edge = node.edges[i];
	      if (edge.toId == nodeId) {
	        if (nodeObj[edge.fromId] === undefined) {
	          nodeList.push(edge.fromId);
	          nodeObj[edge.fromId] = true;
	        }
	      } else if (edge.fromId == nodeId) {
	        if (nodeObj[edge.toId] === undefined) {
	          nodeList.push(edge.toId);
	          nodeObj[edge.toId] = true;
	        }
	      }
	    }
	  }
	  return nodeList;
	};

	Network.prototype.getEdgesFromNode = function (nodeId) {
	  var edgesList = [];
	  if (this.nodes[nodeId] !== undefined) {
	    var node = this.nodes[nodeId];
	    for (var i = 0; i < node.edges.length; i++) {
	      edgesList.push(node.edges[i].id);
	    }
	  }
	  return edgesList;
	};

	Network.prototype.generateColorObject = function (color) {
	  return util.parseColor(color);
	};

	module.exports = Network;

/***/ },
/* 330 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Parse a text source containing data in DOT language into a JSON object.
	 * The object contains two lists: one with nodes and one with edges.
	 *
	 * DOT language reference: http://www.graphviz.org/doc/info/lang.html
	 *
	 * @param {String} data     Text containing a graph in DOT-notation
	 * @return {Object} graph   An object containing two parameters:
	 *                          {Object[]} nodes
	 *                          {Object[]} edges
	 */
	function parseDOT(data) {
	  dot = data;
	  return parseGraph();
	}

	// token types enumeration
	var TOKENTYPE = {
	  NULL: 0,
	  DELIMITER: 1,
	  IDENTIFIER: 2,
	  UNKNOWN: 3
	};

	// map with all delimiters
	var DELIMITERS = {
	  '{': true,
	  '}': true,
	  '[': true,
	  ']': true,
	  ';': true,
	  '=': true,
	  ',': true,

	  '->': true,
	  '--': true
	};

	var dot = ''; // current dot file
	var index = 0; // current index in dot file
	var c = ''; // current token character in expr
	var token = ''; // current token
	var tokenType = TOKENTYPE.NULL; // type of the token

	/**
	 * Get the first character from the dot file.
	 * The character is stored into the char c. If the end of the dot file is
	 * reached, the function puts an empty string in c.
	 */
	function first() {
	  index = 0;
	  c = dot.charAt(0);
	}

	/**
	 * Get the next character from the dot file.
	 * The character is stored into the char c. If the end of the dot file is
	 * reached, the function puts an empty string in c.
	 */
	function next() {
	  index++;
	  c = dot.charAt(index);
	}

	/**
	 * Preview the next character from the dot file.
	 * @return {String} cNext
	 */
	function nextPreview() {
	  return dot.charAt(index + 1);
	}

	/**
	 * Test whether given character is alphabetic or numeric
	 * @param {String} c
	 * @return {Boolean} isAlphaNumeric
	 */
	var regexAlphaNumeric = /[a-zA-Z_0-9.:#]/;
	function isAlphaNumeric(c) {
	  return regexAlphaNumeric.test(c);
	}

	/**
	 * Merge all properties of object b into object b
	 * @param {Object} a
	 * @param {Object} b
	 * @return {Object} a
	 */
	function merge(a, b) {
	  if (!a) {
	    a = {};
	  }

	  if (b) {
	    for (var name in b) {
	      if (b.hasOwnProperty(name)) {
	        a[name] = b[name];
	      }
	    }
	  }
	  return a;
	}

	/**
	 * Set a value in an object, where the provided parameter name can be a
	 * path with nested parameters. For example:
	 *
	 *     var obj = {a: 2};
	 *     setValue(obj, 'b.c', 3);     // obj = {a: 2, b: {c: 3}}
	 *
	 * @param {Object} obj
	 * @param {String} path  A parameter name or dot-separated parameter path,
	 *                      like "color.highlight.border".
	 * @param {*} value
	 */
	function setValue(obj, path, value) {
	  var keys = path.split('.');
	  var o = obj;
	  while (keys.length) {
	    var key = keys.shift();
	    if (keys.length) {
	      // this isn't the end point
	      if (!o[key]) {
	        o[key] = {};
	      }
	      o = o[key];
	    } else {
	      // this is the end point
	      o[key] = value;
	    }
	  }
	}

	/**
	 * Add a node to a graph object. If there is already a node with
	 * the same id, their attributes will be merged.
	 * @param {Object} graph
	 * @param {Object} node
	 */
	function addNode(graph, node) {
	  var i, len;
	  var current = null;

	  // find root graph (in case of subgraph)
	  var graphs = [graph]; // list with all graphs from current graph to root graph
	  var root = graph;
	  while (root.parent) {
	    graphs.push(root.parent);
	    root = root.parent;
	  }

	  // find existing node (at root level) by its id
	  if (root.nodes) {
	    for (i = 0, len = root.nodes.length; i < len; i++) {
	      if (node.id === root.nodes[i].id) {
	        current = root.nodes[i];
	        break;
	      }
	    }
	  }

	  if (!current) {
	    // this is a new node
	    current = {
	      id: node.id
	    };
	    if (graph.node) {
	      // clone default attributes
	      current.attr = merge(current.attr, graph.node);
	    }
	  }

	  // add node to this (sub)graph and all its parent graphs
	  for (i = graphs.length - 1; i >= 0; i--) {
	    var g = graphs[i];

	    if (!g.nodes) {
	      g.nodes = [];
	    }
	    if (g.nodes.indexOf(current) == -1) {
	      g.nodes.push(current);
	    }
	  }

	  // merge attributes
	  if (node.attr) {
	    current.attr = merge(current.attr, node.attr);
	  }
	}

	/**
	 * Add an edge to a graph object
	 * @param {Object} graph
	 * @param {Object} edge
	 */
	function addEdge(graph, edge) {
	  if (!graph.edges) {
	    graph.edges = [];
	  }
	  graph.edges.push(edge);
	  if (graph.edge) {
	    var attr = merge({}, graph.edge); // clone default attributes
	    edge.attr = merge(attr, edge.attr); // merge attributes
	  }
	}

	/**
	 * Create an edge to a graph object
	 * @param {Object} graph
	 * @param {String | Number | Object} from
	 * @param {String | Number | Object} to
	 * @param {String} type
	 * @param {Object | null} attr
	 * @return {Object} edge
	 */
	function createEdge(graph, from, to, type, attr) {
	  var edge = {
	    from: from,
	    to: to,
	    type: type
	  };

	  if (graph.edge) {
	    edge.attr = merge({}, graph.edge); // clone default attributes
	  }
	  edge.attr = merge(edge.attr || {}, attr); // merge attributes

	  return edge;
	}

	/**
	 * Get next token in the current dot file.
	 * The token and token type are available as token and tokenType
	 */
	function getToken() {
	  tokenType = TOKENTYPE.NULL;
	  token = '';

	  // skip over whitespaces
	  while (c == ' ' || c == '\t' || c == '\n' || c == '\r') {
	    // space, tab, enter
	    next();
	  }

	  do {
	    var isComment = false;

	    // skip comment
	    if (c == '#') {
	      // find the previous non-space character
	      var i = index - 1;
	      while (dot.charAt(i) == ' ' || dot.charAt(i) == '\t') {
	        i--;
	      }
	      if (dot.charAt(i) == '\n' || dot.charAt(i) == '') {
	        // the # is at the start of a line, this is indeed a line comment
	        while (c != '' && c != '\n') {
	          next();
	        }
	        isComment = true;
	      }
	    }
	    if (c == '/' && nextPreview() == '/') {
	      // skip line comment
	      while (c != '' && c != '\n') {
	        next();
	      }
	      isComment = true;
	    }
	    if (c == '/' && nextPreview() == '*') {
	      // skip block comment
	      while (c != '') {
	        if (c == '*' && nextPreview() == '/') {
	          // end of block comment found. skip these last two characters
	          next();
	          next();
	          break;
	        } else {
	          next();
	        }
	      }
	      isComment = true;
	    }

	    // skip over whitespaces
	    while (c == ' ' || c == '\t' || c == '\n' || c == '\r') {
	      // space, tab, enter
	      next();
	    }
	  } while (isComment);

	  // check for end of dot file
	  if (c == '') {
	    // token is still empty
	    tokenType = TOKENTYPE.DELIMITER;
	    return;
	  }

	  // check for delimiters consisting of 2 characters
	  var c2 = c + nextPreview();
	  if (DELIMITERS[c2]) {
	    tokenType = TOKENTYPE.DELIMITER;
	    token = c2;
	    next();
	    next();
	    return;
	  }

	  // check for delimiters consisting of 1 character
	  if (DELIMITERS[c]) {
	    tokenType = TOKENTYPE.DELIMITER;
	    token = c;
	    next();
	    return;
	  }

	  // check for an identifier (number or string)
	  // TODO: more precise parsing of numbers/strings (and the port separator ':')
	  if (isAlphaNumeric(c) || c == '-') {
	    token += c;
	    next();

	    while (isAlphaNumeric(c)) {
	      token += c;
	      next();
	    }
	    if (token == 'false') {
	      token = false; // convert to boolean
	    } else if (token == 'true') {
	      token = true; // convert to boolean
	    } else if (!isNaN(Number(token))) {
	      token = Number(token); // convert to number
	    }
	    tokenType = TOKENTYPE.IDENTIFIER;
	    return;
	  }

	  // check for a string enclosed by double quotes
	  if (c == '"') {
	    next();
	    while (c != '' && (c != '"' || c == '"' && nextPreview() == '"')) {
	      token += c;
	      if (c == '"') {
	        // skip the escape character
	        next();
	      }
	      next();
	    }
	    if (c != '"') {
	      throw newSyntaxError('End of string " expected');
	    }
	    next();
	    tokenType = TOKENTYPE.IDENTIFIER;
	    return;
	  }

	  // something unknown is found, wrong characters, a syntax error
	  tokenType = TOKENTYPE.UNKNOWN;
	  while (c != '') {
	    token += c;
	    next();
	  }
	  throw new SyntaxError('Syntax error in part "' + chop(token, 30) + '"');
	}

	/**
	 * Parse a graph.
	 * @returns {Object} graph
	 */
	function parseGraph() {
	  var graph = {};

	  first();
	  getToken();

	  // optional strict keyword
	  if (token == 'strict') {
	    graph.strict = true;
	    getToken();
	  }

	  // graph or digraph keyword
	  if (token == 'graph' || token == 'digraph') {
	    graph.type = token;
	    getToken();
	  }

	  // optional graph id
	  if (tokenType == TOKENTYPE.IDENTIFIER) {
	    graph.id = token;
	    getToken();
	  }

	  // open angle bracket
	  if (token != '{') {
	    throw newSyntaxError('Angle bracket { expected');
	  }
	  getToken();

	  // statements
	  parseStatements(graph);

	  // close angle bracket
	  if (token != '}') {
	    throw newSyntaxError('Angle bracket } expected');
	  }
	  getToken();

	  // end of file
	  if (token !== '') {
	    throw newSyntaxError('End of file expected');
	  }
	  getToken();

	  // remove temporary default properties
	  delete graph.node;
	  delete graph.edge;
	  delete graph.graph;

	  return graph;
	}

	/**
	 * Parse a list with statements.
	 * @param {Object} graph
	 */
	function parseStatements(graph) {
	  while (token !== '' && token != '}') {
	    parseStatement(graph);
	    if (token == ';') {
	      getToken();
	    }
	  }
	}

	/**
	 * Parse a single statement. Can be a an attribute statement, node
	 * statement, a series of node statements and edge statements, or a
	 * parameter.
	 * @param {Object} graph
	 */
	function parseStatement(graph) {
	  // parse subgraph
	  var subgraph = parseSubgraph(graph);
	  if (subgraph) {
	    // edge statements
	    parseEdge(graph, subgraph);

	    return;
	  }

	  // parse an attribute statement
	  var attr = parseAttributeStatement(graph);
	  if (attr) {
	    return;
	  }

	  // parse node
	  if (tokenType != TOKENTYPE.IDENTIFIER) {
	    throw newSyntaxError('Identifier expected');
	  }
	  var id = token; // id can be a string or a number
	  getToken();

	  if (token == '=') {
	    // id statement
	    getToken();
	    if (tokenType != TOKENTYPE.IDENTIFIER) {
	      throw newSyntaxError('Identifier expected');
	    }
	    graph[id] = token;
	    getToken();
	    // TODO: implement comma separated list with "a_list: ID=ID [','] [a_list] "
	  } else {
	    parseNodeStatement(graph, id);
	  }
	}

	/**
	 * Parse a subgraph
	 * @param {Object} graph    parent graph object
	 * @return {Object | null} subgraph
	 */
	function parseSubgraph(graph) {
	  var subgraph = null;

	  // optional subgraph keyword
	  if (token == 'subgraph') {
	    subgraph = {};
	    subgraph.type = 'subgraph';
	    getToken();

	    // optional graph id
	    if (tokenType == TOKENTYPE.IDENTIFIER) {
	      subgraph.id = token;
	      getToken();
	    }
	  }

	  // open angle bracket
	  if (token == '{') {
	    getToken();

	    if (!subgraph) {
	      subgraph = {};
	    }
	    subgraph.parent = graph;
	    subgraph.node = graph.node;
	    subgraph.edge = graph.edge;
	    subgraph.graph = graph.graph;

	    // statements
	    parseStatements(subgraph);

	    // close angle bracket
	    if (token != '}') {
	      throw newSyntaxError('Angle bracket } expected');
	    }
	    getToken();

	    // remove temporary default properties
	    delete subgraph.node;
	    delete subgraph.edge;
	    delete subgraph.graph;
	    delete subgraph.parent;

	    // register at the parent graph
	    if (!graph.subgraphs) {
	      graph.subgraphs = [];
	    }
	    graph.subgraphs.push(subgraph);
	  }

	  return subgraph;
	}

	/**
	 * parse an attribute statement like "node [shape=circle fontSize=16]".
	 * Available keywords are 'node', 'edge', 'graph'.
	 * The previous list with default attributes will be replaced
	 * @param {Object} graph
	 * @returns {String | null} keyword Returns the name of the parsed attribute
	 *                                  (node, edge, graph), or null if nothing
	 *                                  is parsed.
	 */
	function parseAttributeStatement(graph) {
	  // attribute statements
	  if (token == 'node') {
	    getToken();

	    // node attributes
	    graph.node = parseAttributeList();
	    return 'node';
	  } else if (token == 'edge') {
	    getToken();

	    // edge attributes
	    graph.edge = parseAttributeList();
	    return 'edge';
	  } else if (token == 'graph') {
	    getToken();

	    // graph attributes
	    graph.graph = parseAttributeList();
	    return 'graph';
	  }

	  return null;
	}

	/**
	 * parse a node statement
	 * @param {Object} graph
	 * @param {String | Number} id
	 */
	function parseNodeStatement(graph, id) {
	  // node statement
	  var node = {
	    id: id
	  };
	  var attr = parseAttributeList();
	  if (attr) {
	    node.attr = attr;
	  }
	  addNode(graph, node);

	  // edge statements
	  parseEdge(graph, id);
	}

	/**
	 * Parse an edge or a series of edges
	 * @param {Object} graph
	 * @param {String | Number} from        Id of the from node
	 */
	function parseEdge(graph, from) {
	  while (token == '->' || token == '--') {
	    var to;
	    var type = token;
	    getToken();

	    var subgraph = parseSubgraph(graph);
	    if (subgraph) {
	      to = subgraph;
	    } else {
	      if (tokenType != TOKENTYPE.IDENTIFIER) {
	        throw newSyntaxError('Identifier or subgraph expected');
	      }
	      to = token;
	      addNode(graph, {
	        id: to
	      });
	      getToken();
	    }

	    // parse edge attributes
	    var attr = parseAttributeList();

	    // create edge
	    var edge = createEdge(graph, from, to, type, attr);
	    addEdge(graph, edge);

	    from = to;
	  }
	}

	/**
	 * Parse a set with attributes,
	 * for example [label="1.000", shape=solid]
	 * @return {Object | null} attr
	 */
	function parseAttributeList() {
	  var attr = null;

	  while (token == '[') {
	    getToken();
	    attr = {};
	    while (token !== '' && token != ']') {
	      if (tokenType != TOKENTYPE.IDENTIFIER) {
	        throw newSyntaxError('Attribute name expected');
	      }
	      var name = token;

	      getToken();
	      if (token != '=') {
	        throw newSyntaxError('Equal sign = expected');
	      }
	      getToken();

	      if (tokenType != TOKENTYPE.IDENTIFIER) {
	        throw newSyntaxError('Attribute value expected');
	      }
	      var value = token;
	      setValue(attr, name, value); // name can be a path

	      getToken();
	      if (token == ',') {
	        getToken();
	      }
	    }

	    if (token != ']') {
	      throw newSyntaxError('Bracket ] expected');
	    }
	    getToken();
	  }

	  return attr;
	}

	/**
	 * Create a syntax error with extra information on current token and index.
	 * @param {String} message
	 * @returns {SyntaxError} err
	 */
	function newSyntaxError(message) {
	  return new SyntaxError(message + ', got "' + chop(token, 30) + '" (char ' + index + ')');
	}

	/**
	 * Chop off text after a maximum length
	 * @param {String} text
	 * @param {Number} maxLength
	 * @returns {String}
	 */
	function chop(text, maxLength) {
	  return text.length <= maxLength ? text : text.substr(0, 27) + '...';
	}

	/**
	 * Execute a function fn for each pair of elements in two arrays
	 * @param {Array | *} array1
	 * @param {Array | *} array2
	 * @param {function} fn
	 */
	function forEach2(array1, array2, fn) {
	  if (Array.isArray(array1)) {
	    array1.forEach(function (elem1) {
	      if (Array.isArray(array2)) {
	        array2.forEach(function (elem2) {
	          fn(elem1, elem2);
	        });
	      } else {
	        fn(elem1, array2);
	      }
	    });
	  } else {
	    if (Array.isArray(array2)) {
	      array2.forEach(function (elem2) {
	        fn(array1, elem2);
	      });
	    } else {
	      fn(array1, array2);
	    }
	  }
	}

	/**
	 * Convert a string containing a graph in DOT language into a map containing
	 * with nodes and edges in the format of graph.
	 * @param {String} data         Text containing a graph in DOT-notation
	 * @return {Object} graphData
	 */
	function DOTToGraph(data) {
	  // parse the DOT file
	  var dotData = parseDOT(data);
	  var graphData = {
	    nodes: [],
	    edges: [],
	    options: {}
	  };

	  // copy the nodes
	  if (dotData.nodes) {
	    dotData.nodes.forEach(function (dotNode) {
	      var graphNode = {
	        id: dotNode.id,
	        label: String(dotNode.label || dotNode.id)
	      };
	      merge(graphNode, dotNode.attr);
	      if (graphNode.image) {
	        graphNode.shape = 'image';
	      }
	      graphData.nodes.push(graphNode);
	    });
	  }

	  // copy the edges
	  if (dotData.edges) {
	    /**
	     * Convert an edge in DOT format to an edge with VisGraph format
	     * @param {Object} dotEdge
	     * @returns {Object} graphEdge
	     */
	    var convertEdge = function convertEdge(dotEdge) {
	      var graphEdge = {
	        from: dotEdge.from,
	        to: dotEdge.to
	      };
	      merge(graphEdge, dotEdge.attr);
	      graphEdge.style = dotEdge.type == '->' ? 'arrow' : 'line';
	      return graphEdge;
	    };

	    dotData.edges.forEach(function (dotEdge) {
	      var from, to;
	      if (dotEdge.from instanceof Object) {
	        from = dotEdge.from.nodes;
	      } else {
	        from = {
	          id: dotEdge.from
	        };
	      }

	      if (dotEdge.to instanceof Object) {
	        to = dotEdge.to.nodes;
	      } else {
	        to = {
	          id: dotEdge.to
	        };
	      }

	      if (dotEdge.from instanceof Object && dotEdge.from.edges) {
	        dotEdge.from.edges.forEach(function (subEdge) {
	          var graphEdge = convertEdge(subEdge);
	          graphData.edges.push(graphEdge);
	        });
	      }

	      forEach2(from, to, function (from, to) {
	        var subEdge = createEdge(graphData, from.id, to.id, dotEdge.type, dotEdge.attr);
	        var graphEdge = convertEdge(subEdge);
	        graphData.edges.push(graphEdge);
	      });

	      if (dotEdge.to instanceof Object && dotEdge.to.edges) {
	        dotEdge.to.edges.forEach(function (subEdge) {
	          var graphEdge = convertEdge(subEdge);
	          graphData.edges.push(graphEdge);
	        });
	      }
	    });
	  }

	  // copy the options
	  if (dotData.attr) {
	    graphData.options = dotData.attr;
	  }

	  return graphData;
	}

	// exports
	exports.parseDOT = parseDOT;
	exports.DOTToGraph = DOTToGraph;

/***/ },
/* 331 */
/***/ function(module, exports) {

	'use strict';

	function parseGephi(gephiJSON, options) {
	  var edges = [];
	  var nodes = [];
	  this.options = {
	    edges: {
	      inheritColor: true
	    },
	    nodes: {
	      allowedToMove: false,
	      parseColor: false
	    }
	  };

	  if (options !== undefined) {
	    this.options.nodes['allowedToMove'] = options.allowedToMove | false;
	    this.options.nodes['parseColor'] = options.parseColor | false;
	    this.options.edges['inheritColor'] = options.inheritColor | true;
	  }

	  var gEdges = gephiJSON.edges;
	  var gNodes = gephiJSON.nodes;
	  for (var i = 0; i < gEdges.length; i++) {
	    var edge = {};
	    var gEdge = gEdges[i];
	    edge['id'] = gEdge.id;
	    edge['from'] = gEdge.source;
	    edge['to'] = gEdge.target;
	    edge['attributes'] = gEdge.attributes;
	    //    edge['value'] = gEdge.attributes !== undefined ? gEdge.attributes.Weight : undefined;
	    //    edge['width'] = edge['value'] !== undefined ? undefined : edgegEdge.size;
	    edge['color'] = gEdge.color;
	    edge['inheritColor'] = edge['color'] !== undefined ? false : this.options.inheritColor;
	    edges.push(edge);
	  }

	  for (var i = 0; i < gNodes.length; i++) {
	    var node = {};
	    var gNode = gNodes[i];
	    node['id'] = gNode.id;
	    node['attributes'] = gNode.attributes;
	    node['x'] = gNode.x;
	    node['y'] = gNode.y;
	    node['label'] = gNode.label;
	    if (this.options.nodes.parseColor == true) {
	      node['color'] = gNode.color;
	    } else {
	      node['color'] = gNode.color !== undefined ? { background: gNode.color, border: gNode.color } : undefined;
	    }
	    node['radius'] = gNode.size;
	    node['allowedToMoveX'] = this.options.nodes.allowedToMove;
	    node['allowedToMoveY'] = this.options.nodes.allowedToMove;
	    nodes.push(node);
	  }

	  return { nodes: nodes, edges: edges };
	}

	exports.parseGephi = parseGephi;

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var util = __webpack_require__(175);

	/**
	 * @class Groups
	 * This class can store groups and properties specific for groups.
	 */
	function Groups() {
	  this.clear();
	  this.defaultIndex = 0;
	  this.groupsArray = [];
	  this.groupIndex = 0;
	  this.useDefaultGroups = true;
	}

	/**
	 * default constants for group colors
	 */
	Groups.DEFAULT = [{ border: "#2B7CE9", background: "#97C2FC", highlight: { border: "#2B7CE9", background: "#D2E5FF" }, hover: { border: "#2B7CE9", background: "#D2E5FF" } }, // 0: blue
	{ border: "#FFA500", background: "#FFFF00", highlight: { border: "#FFA500", background: "#FFFFA3" }, hover: { border: "#FFA500", background: "#FFFFA3" } }, // 1: yellow
	{ border: "#FA0A10", background: "#FB7E81", highlight: { border: "#FA0A10", background: "#FFAFB1" }, hover: { border: "#FA0A10", background: "#FFAFB1" } }, // 2: red
	{ border: "#41A906", background: "#7BE141", highlight: { border: "#41A906", background: "#A1EC76" }, hover: { border: "#41A906", background: "#A1EC76" } }, // 3: green
	{ border: "#E129F0", background: "#EB7DF4", highlight: { border: "#E129F0", background: "#F0B3F5" }, hover: { border: "#E129F0", background: "#F0B3F5" } }, // 4: magenta
	{ border: "#7C29F0", background: "#AD85E4", highlight: { border: "#7C29F0", background: "#D3BDF0" }, hover: { border: "#7C29F0", background: "#D3BDF0" } }, // 5: purple
	{ border: "#C37F00", background: "#FFA807", highlight: { border: "#C37F00", background: "#FFCA66" }, hover: { border: "#C37F00", background: "#FFCA66" } }, // 6: orange
	{ border: "#4220FB", background: "#6E6EFD", highlight: { border: "#4220FB", background: "#9B9BFD" }, hover: { border: "#4220FB", background: "#9B9BFD" } }, // 7: darkblue
	{ border: "#FD5A77", background: "#FFC0CB", highlight: { border: "#FD5A77", background: "#FFD1D9" }, hover: { border: "#FD5A77", background: "#FFD1D9" } }, // 8: pink
	{ border: "#4AD63A", background: "#C2FABC", highlight: { border: "#4AD63A", background: "#E6FFE3" }, hover: { border: "#4AD63A", background: "#E6FFE3" } }, // 9: mint

	{ border: "#990000", background: "#EE0000", highlight: { border: "#BB0000", background: "#FF3333" }, hover: { border: "#BB0000", background: "#FF3333" } }, // 10:bright red

	{ border: "#FF6000", background: "#FF6000", highlight: { border: "#FF6000", background: "#FF6000" }, hover: { border: "#FF6000", background: "#FF6000" } }, // 12: real orange
	{ border: "#97C2FC", background: "#2B7CE9", highlight: { border: "#D2E5FF", background: "#2B7CE9" }, hover: { border: "#D2E5FF", background: "#2B7CE9" } }, // 13: blue
	{ border: "#399605", background: "#255C03", highlight: { border: "#399605", background: "#255C03" }, hover: { border: "#399605", background: "#255C03" } }, // 14: green
	{ border: "#B70054", background: "#FF007E", highlight: { border: "#B70054", background: "#FF007E" }, hover: { border: "#B70054", background: "#FF007E" } }, // 15: magenta
	{ border: "#AD85E4", background: "#7C29F0", highlight: { border: "#D3BDF0", background: "#7C29F0" }, hover: { border: "#D3BDF0", background: "#7C29F0" } }, // 16: purple
	{ border: "#4557FA", background: "#000EA1", highlight: { border: "#6E6EFD", background: "#000EA1" }, hover: { border: "#6E6EFD", background: "#000EA1" } }, // 17: darkblue
	{ border: "#FFC0CB", background: "#FD5A77", highlight: { border: "#FFD1D9", background: "#FD5A77" }, hover: { border: "#FFD1D9", background: "#FD5A77" } }, // 18: pink
	{ border: "#C2FABC", background: "#74D66A", highlight: { border: "#E6FFE3", background: "#74D66A" }, hover: { border: "#E6FFE3", background: "#74D66A" } }, // 19: mint

	{ border: "#EE0000", background: "#990000", highlight: { border: "#FF3333", background: "#BB0000" }, hover: { border: "#FF3333", background: "#BB0000" } }];

	/**
	 * Clear all groups
	 */
	Groups.prototype.clear = function () {
	  this.groups = {};
	  this.groups.length = function () {
	    var i = 0;
	    for (var p in this) {
	      if (this.hasOwnProperty(p)) {
	        i++;
	      }
	    }
	    return i;
	  };
	};

	/**
	 * get group properties of a groupname. If groupname is not found, a new group
	 * is added.
	 * @param {*} groupname        Can be a number, string, Date, etc.
	 * @return {Object} group      The created group, containing all group properties
	 */
	Groups.prototype.get = function (groupname) {
	  var group = this.groups[groupname];
	  if (group == undefined) {
	    if (this.useDefaultGroups === false && this.groupsArray.length > 0) {
	      // create new group
	      var index = this.groupIndex % this.groupsArray.length;
	      this.groupIndex++;
	      group = {};
	      group.color = this.groups[this.groupsArray[index]];
	      this.groups[groupname] = group;
	    } else {
	      // create new group
	      var index = this.defaultIndex % Groups.DEFAULT.length;
	      this.defaultIndex++;
	      group = {};
	      group.color = Groups.DEFAULT[index];
	      this.groups[groupname] = group;
	    }
	  }

	  return group;
	};

	/**
	 * Add a custom group style
	 * @param {String} groupName
	 * @param {Object} style       An object containing borderColor,
	 *                             backgroundColor, etc.
	 * @return {Object} group      The created group object
	 */
	Groups.prototype.add = function (groupName, style) {
	  this.groups[groupName] = style;
	  this.groupsArray.push(groupName);
	  return style;
	};

	module.exports = Groups;

/***/ },
/* 333 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * @class Images
	 * This class loads images and keeps them stored.
	 */
	function Images() {
	  this.images = {};
	  this.imageBroken = {};
	  this.callback = undefined;
	}

	/**
	 * Set an onload callback function. This will be called each time an image
	 * is loaded
	 * @param {function} callback
	 */
	Images.prototype.setOnloadCallback = function (callback) {
	  this.callback = callback;
	};

	/**
	 *
	 * @param {string} url          Url of the image
	 * @param {string} url          Url of an image to use if the url image is not found
	 * @return {Image} img          The image object
	 */
	Images.prototype.load = function (url, brokenUrl) {
	  var img = this.images[url]; // make a pointer
	  if (img === undefined) {
	    // create the image
	    var me = this;
	    img = new Image();
	    img.onload = function () {
	      // IE11 fix -- thanks dponch!
	      if (this.width == 0) {
	        document.body.appendChild(this);
	        this.width = this.offsetWidth;
	        this.height = this.offsetHeight;
	        document.body.removeChild(this);
	      }

	      if (me.callback) {
	        me.images[url] = img;
	        me.callback(this);
	      }
	    };

	    img.onerror = function () {
	      if (brokenUrl === undefined) {
	        console.error("Could not load image:", url);
	        delete this.src;
	        if (me.callback) {
	          me.callback(this);
	        }
	      } else {
	        if (me.imageBroken[url] === true) {
	          if (this.src == brokenUrl) {
	            console.error("Could not load brokenImage:", brokenUrl);
	            delete this.src;
	            if (me.callback) {
	              me.callback(this);
	            }
	          } else {
	            console.error("Could not load image:", url);
	            this.src = brokenUrl;
	          }
	        } else {
	          console.error("Could not load image:", url);
	          this.src = brokenUrl;
	          me.imageBroken[url] = true;
	        }
	      }
	    };

	    img.src = url;
	  }

	  return img;
	};

	module.exports = Images;

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(175);

	/**
	 * @class Node
	 * A node. A node can be connected to other nodes via one or multiple edges.
	 * @param {object} properties An object containing properties for the node. All
	 *                            properties are optional, except for the id.
	 *                              {number} id     Id of the node. Required
	 *                              {string} label  Text label for the node
	 *                              {number} x      Horizontal position of the node
	 *                              {number} y      Vertical position of the node
	 *                              {string} shape  Node shape, available:
	 *                                              "database", "circle", "ellipse",
	 *                                              "box", "image", "text", "dot",
	 *                                              "star", "triangle", "triangleDown",
	 *                                              "square", "icon"
	 *                              {string} image  An image url
	 *                              {string} title  An title text, can be HTML
	 *                              {anytype} group A group name or number
	 * @param {Network.Images} imagelist    A list with images. Only needed
	 *                                            when the node has an image
	 * @param {Network.Groups} grouplist    A list with groups. Needed for
	 *                                            retrieving group properties
	 * @param {Object}               constants    An object with default values for
	 *                                            example for the color
	 *
	 */
	function Node(properties, imagelist, grouplist, networkConstants) {
	  var constants = util.selectiveBridgeObject(['nodes'], networkConstants);
	  this.options = constants.nodes;

	  this.selected = false;
	  this.hover = false;

	  this.edges = []; // all edges connected to this node
	  this.dynamicEdges = [];
	  this.reroutedEdges = {};

	  // set defaults for the properties
	  this.id = undefined;
	  this.allowedToMoveX = false;
	  this.allowedToMoveY = false;
	  this.xFixed = false;
	  this.yFixed = false;
	  this.horizontalAlignLeft = true; // these are for the navigation controls
	  this.verticalAlignTop = true; // these are for the navigation controls
	  this.baseRadiusValue = networkConstants.nodes.radius;
	  this.radiusFixed = false;
	  this.level = -1;
	  this.preassignedLevel = false;
	  this.hierarchyEnumerated = false;
	  this.labelDimensions = { top: 0, left: 0, width: 0, height: 0, yLine: 0 }; // could be cached
	  this.boundingBox = { top: 0, left: 0, right: 0, bottom: 0 };

	  this.imagelist = imagelist;
	  this.grouplist = grouplist;

	  // physics properties
	  this.fx = 0.0; // external force x
	  this.fy = 0.0; // external force y
	  this.vx = 0.0; // velocity x
	  this.vy = 0.0; // velocity y
	  this.x = null;
	  this.y = null;
	  this.predefinedPosition = false; // used to check if initial zoomExtent should just take the range or approximate

	  // used for reverting to previous position on stabilization
	  this.previousState = { vx: 0, vy: 0, x: 0, y: 0 };

	  this.damping = networkConstants.physics.damping; // written every time gravity is calculated
	  this.fixedData = { x: null, y: null };

	  this.setProperties(properties, constants);

	  // creating the variables for clustering
	  this.resetCluster();
	  this.clusterSession = 0;
	  this.clusterSizeWidthFactor = networkConstants.clustering.nodeScaling.width;
	  this.clusterSizeHeightFactor = networkConstants.clustering.nodeScaling.height;
	  this.clusterSizeRadiusFactor = networkConstants.clustering.nodeScaling.radius;
	  this.maxNodeSizeIncrements = networkConstants.clustering.maxNodeSizeIncrements;
	  this.growthIndicator = 0;

	  // variables to tell the node about the network.
	  this.networkScaleInv = 1;
	  this.networkScale = 1;
	  this.canvasTopLeft = { "x": -300, "y": -300 };
	  this.canvasBottomRight = { "x": 300, "y": 300 };
	  this.parentEdgeId = null;
	}

	/**
	 *  Revert the position and velocity of the previous step.
	 */
	Node.prototype.revertPosition = function () {
	  this.x = this.previousState.x;
	  this.y = this.previousState.y;
	  this.vx = this.previousState.vx;
	  this.vy = this.previousState.vy;
	};

	/**
	 * (re)setting the clustering variables and objects
	 */
	Node.prototype.resetCluster = function () {
	  // clustering variables
	  this.formationScale = undefined; // this is used to determine when to open the cluster
	  this.clusterSize = 1; // this signifies the total amount of nodes in this cluster
	  this.containedNodes = {};
	  this.containedEdges = {};
	  this.clusterSessions = [];
	};

	/**
	 * Attach a edge to the node
	 * @param {Edge} edge
	 */
	Node.prototype.attachEdge = function (edge) {
	  if (this.edges.indexOf(edge) == -1) {
	    this.edges.push(edge);
	  }
	  if (this.dynamicEdges.indexOf(edge) == -1) {
	    this.dynamicEdges.push(edge);
	  }
	};

	/**
	 * Detach a edge from the node
	 * @param {Edge} edge
	 */
	Node.prototype.detachEdge = function (edge) {
	  var index = this.edges.indexOf(edge);
	  if (index != -1) {
	    this.edges.splice(index, 1);
	  }
	  index = this.dynamicEdges.indexOf(edge);
	  if (index != -1) {
	    this.dynamicEdges.splice(index, 1);
	  }
	};

	/**
	 * Set or overwrite properties for the node
	 * @param {Object} properties an object with properties
	 * @param {Object} constants  and object with default, global properties
	 */
	Node.prototype.setProperties = function (properties, constants) {
	  if (!properties) {
	    return;
	  }

	  var fields = ['borderWidth', 'borderWidthSelected', 'shape', 'image', 'brokenImage', 'radius', 'fontColor', 'fontSize', 'fontFace', 'fontFill', 'fontStrokeWidth', 'fontStrokeColor', 'group', 'mass', 'fontDrawThreshold', 'scaleFontWithValue', 'fontSizeMaxVisible', 'customScalingFunction', 'iconFontFace', 'icon', 'iconColor', 'iconSize'];
	  util.selectiveDeepExtend(fields, this.options, properties);

	  // basic properties
	  if (properties.id !== undefined) {
	    this.id = properties.id;
	  }
	  if (properties.label !== undefined) {
	    this.label = properties.label;this.originalLabel = properties.label;
	  }
	  if (properties.title !== undefined) {
	    this.title = properties.title;
	  }
	  if (properties.x !== undefined) {
	    this.x = properties.x;this.predefinedPosition = true;
	  }
	  if (properties.y !== undefined) {
	    this.y = properties.y;this.predefinedPosition = true;
	  }
	  if (properties.value !== undefined) {
	    this.value = properties.value;
	  }
	  if (properties.level !== undefined) {
	    this.level = properties.level;this.preassignedLevel = true;
	  }

	  // navigation controls properties
	  if (properties.horizontalAlignLeft !== undefined) {
	    this.horizontalAlignLeft = properties.horizontalAlignLeft;
	  }
	  if (properties.verticalAlignTop !== undefined) {
	    this.verticalAlignTop = properties.verticalAlignTop;
	  }
	  if (properties.triggerFunction !== undefined) {
	    this.triggerFunction = properties.triggerFunction;
	  }

	  if (this.id === undefined) {
	    throw "Node must have an id";
	  }

	  // copy group properties
	  if (typeof properties.group === 'number' || typeof properties.group === 'string' && properties.group != '') {
	    var groupObj = this.grouplist.get(properties.group);
	    util.deepExtend(this.options, groupObj);
	    // the color object needs to be completely defined. Since groups can partially overwrite the colors, we parse it again, just in case.
	    this.options.color = util.parseColor(this.options.color);
	  }
	  // individual shape properties
	  if (properties.radius !== undefined) {
	    this.baseRadiusValue = this.options.radius;
	  }
	  if (properties.color !== undefined) {
	    this.options.color = util.parseColor(properties.color);
	  }

	  if (this.options.image !== undefined && this.options.image != "") {
	    if (this.imagelist) {
	      this.imageObj = this.imagelist.load(this.options.image, this.options.brokenImage);
	    } else {
	      throw "No imagelist provided";
	    }
	  }

	  if (properties.allowedToMoveX !== undefined) {
	    this.xFixed = !properties.allowedToMoveX;
	    this.allowedToMoveX = properties.allowedToMoveX;
	  } else if (properties.x !== undefined && this.allowedToMoveX == false) {
	    this.xFixed = true;
	  }

	  if (properties.allowedToMoveY !== undefined) {
	    this.yFixed = !properties.allowedToMoveY;
	    this.allowedToMoveY = properties.allowedToMoveY;
	  } else if (properties.y !== undefined && this.allowedToMoveY == false) {
	    this.yFixed = true;
	  }

	  this.radiusFixed = this.radiusFixed || properties.radius !== undefined;

	  if (this.options.shape === 'image' || this.options.shape === 'circularImage') {
	    this.options.radiusMin = constants.nodes.widthMin;
	    this.options.radiusMax = constants.nodes.widthMax;
	  }

	  // choose draw method depending on the shape
	  switch (this.options.shape) {
	    case 'database':
	      this.draw = this._drawDatabase;this.resize = this._resizeDatabase;break;
	    case 'box':
	      this.draw = this._drawBox;this.resize = this._resizeBox;break;
	    case 'circle':
	      this.draw = this._drawCircle;this.resize = this._resizeCircle;break;
	    case 'ellipse':
	      this.draw = this._drawEllipse;this.resize = this._resizeEllipse;break;
	    // TODO: add diamond shape
	    case 'image':
	      this.draw = this._drawImage;this.resize = this._resizeImage;break;
	    case 'circularImage':
	      this.draw = this._drawCircularImage;this.resize = this._resizeCircularImage;break;
	    case 'text':
	      this.draw = this._drawText;this.resize = this._resizeText;break;
	    case 'dot':
	      this.draw = this._drawDot;this.resize = this._resizeShape;break;
	    case 'square':
	      this.draw = this._drawSquare;this.resize = this._resizeShape;break;
	    case 'triangle':
	      this.draw = this._drawTriangle;this.resize = this._resizeShape;break;
	    case 'triangleDown':
	      this.draw = this._drawTriangleDown;this.resize = this._resizeShape;break;
	    case 'star':
	      this.draw = this._drawStar;this.resize = this._resizeShape;break;
	    case 'icon':
	      this.draw = this._drawIcon;this.resize = this._resizeIcon;break;
	    default:
	      this.draw = this._drawEllipse;this.resize = this._resizeEllipse;break;
	  }
	  // reset the size of the node, this can be changed
	  this._reset();
	};

	/**
	 * select this node
	 */
	Node.prototype.select = function () {
	  this.selected = true;
	  this._reset();
	};

	/**
	 * unselect this node
	 */
	Node.prototype.unselect = function () {
	  this.selected = false;
	  this._reset();
	};

	/**
	 * Reset the calculated size of the node, forces it to recalculate its size
	 */
	Node.prototype.clearSizeCache = function () {
	  this._reset();
	};

	/**
	 * Reset the calculated size of the node, forces it to recalculate its size
	 * @private
	 */
	Node.prototype._reset = function () {
	  this.width = undefined;
	  this.height = undefined;
	};

	/**
	 * get the title of this node.
	 * @return {string} title    The title of the node, or undefined when no title
	 *                           has been set.
	 */
	Node.prototype.getTitle = function () {
	  return typeof this.title === "function" ? this.title() : this.title;
	};

	/**
	 * Calculate the distance to the border of the Node
	 * @param {CanvasRenderingContext2D}   ctx
	 * @param {Number} angle        Angle in radians
	 * @returns {number} distance   Distance to the border in pixels
	 */
	Node.prototype.distanceToBorder = function (ctx, angle) {
	  var borderWidth = 1;

	  if (!this.width) {
	    this.resize(ctx);
	  }

	  switch (this.options.shape) {
	    case 'circle':
	    case 'dot':
	      return this.options.radius + borderWidth;

	    case 'ellipse':
	      var a = this.width / 2;
	      var b = this.height / 2;
	      var w = Math.sin(angle) * a;
	      var h = Math.cos(angle) * b;
	      return a * b / Math.sqrt(w * w + h * h);

	    // TODO: implement distanceToBorder for database
	    // TODO: implement distanceToBorder for triangle
	    // TODO: implement distanceToBorder for triangleDown

	    case 'box':
	    case 'image':
	    case 'text':
	    default:
	      if (this.width) {
	        return Math.min(Math.abs(this.width / 2 / Math.cos(angle)), Math.abs(this.height / 2 / Math.sin(angle))) + borderWidth;
	        // TODO: reckon with border radius too in case of box
	      } else {
	        return 0;
	      }

	  }
	  // TODO: implement calculation of distance to border for all shapes
	};

	/**
	 * Set forces acting on the node
	 * @param {number} fx   Force in horizontal direction
	 * @param {number} fy   Force in vertical direction
	 */
	Node.prototype._setForce = function (fx, fy) {
	  this.fx = fx;
	  this.fy = fy;
	};

	/**
	 * Add forces acting on the node
	 * @param {number} fx   Force in horizontal direction
	 * @param {number} fy   Force in vertical direction
	 * @private
	 */
	Node.prototype._addForce = function (fx, fy) {
	  this.fx += fx;
	  this.fy += fy;
	};

	/**
	 * Store the state before the next step
	 */
	Node.prototype.storeState = function () {
	  this.previousState.x = this.x;
	  this.previousState.y = this.y;
	  this.previousState.vx = this.vx;
	  this.previousState.vy = this.vy;
	};

	/**
	 * Perform one discrete step for the node
	 * @param {number} interval    Time interval in seconds
	 */
	Node.prototype.discreteStep = function (interval) {
	  this.storeState();
	  if (!this.xFixed) {
	    var dx = this.damping * this.vx; // damping force
	    var ax = (this.fx - dx) / this.options.mass; // acceleration
	    this.vx += ax * interval; // velocity
	    this.x += this.vx * interval; // position
	  } else {
	    this.fx = 0;
	    this.vx = 0;
	  }

	  if (!this.yFixed) {
	    var dy = this.damping * this.vy; // damping force
	    var ay = (this.fy - dy) / this.options.mass; // acceleration
	    this.vy += ay * interval; // velocity
	    this.y += this.vy * interval; // position
	  } else {
	    this.fy = 0;
	    this.vy = 0;
	  }
	};

	/**
	 * Perform one discrete step for the node
	 * @param {number} interval    Time interval in seconds
	 * @param {number} maxVelocity The speed limit imposed on the velocity
	 */
	Node.prototype.discreteStepLimited = function (interval, maxVelocity) {
	  this.storeState();
	  if (!this.xFixed) {
	    var dx = this.damping * this.vx; // damping force
	    var ax = (this.fx - dx) / this.options.mass; // acceleration
	    this.vx += ax * interval; // velocity
	    this.vx = Math.abs(this.vx) > maxVelocity ? this.vx > 0 ? maxVelocity : -maxVelocity : this.vx;
	    this.x += this.vx * interval; // position
	  } else {
	    this.fx = 0;
	    this.vx = 0;
	  }

	  if (!this.yFixed) {
	    var dy = this.damping * this.vy; // damping force
	    var ay = (this.fy - dy) / this.options.mass; // acceleration
	    this.vy += ay * interval; // velocity
	    this.vy = Math.abs(this.vy) > maxVelocity ? this.vy > 0 ? maxVelocity : -maxVelocity : this.vy;
	    this.y += this.vy * interval; // position
	  } else {
	    this.fy = 0;
	    this.vy = 0;
	  }
	};

	/**
	 * Check if this node has a fixed x and y position
	 * @return {boolean}      true if fixed, false if not
	 */
	Node.prototype.isFixed = function () {
	  return this.xFixed && this.yFixed;
	};

	/**
	 * Check if this node is moving
	 * @param {number} vmin   the minimum velocity considered as "moving"
	 * @return {boolean}      true if moving, false if it has no velocity
	 */
	Node.prototype.isMoving = function (vmin) {
	  var velocity = Math.sqrt(Math.pow(this.vx, 2) + Math.pow(this.vy, 2));
	  //  this.velocity = Math.sqrt(Math.pow(this.vx,2) + Math.pow(this.vy,2))
	  return velocity > vmin;
	};

	/**
	 * check if this node is selecte
	 * @return {boolean} selected   True if node is selected, else false
	 */
	Node.prototype.isSelected = function () {
	  return this.selected;
	};

	/**
	 * Retrieve the value of the node. Can be undefined
	 * @return {Number} value
	 */
	Node.prototype.getValue = function () {
	  return this.value;
	};

	/**
	 * Calculate the distance from the nodes location to the given location (x,y)
	 * @param {Number} x
	 * @param {Number} y
	 * @return {Number} value
	 */
	Node.prototype.getDistance = function (x, y) {
	  var dx = this.x - x,
	      dy = this.y - y;
	  return Math.sqrt(dx * dx + dy * dy);
	};

	/**
	 * Adjust the value range of the node. The node will adjust it's radius
	 * based on its value.
	 * @param {Number} min
	 * @param {Number} max
	 */
	Node.prototype.setValueRange = function (min, max, total) {
	  if (!this.radiusFixed && this.value !== undefined) {
	    var scale = this.options.customScalingFunction(min, max, total, this.value);
	    var radiusDiff = this.options.radiusMax - this.options.radiusMin;
	    if (this.options.scaleFontWithValue == true) {
	      var fontDiff = this.options.fontSizeMax - this.options.fontSizeMin;
	      this.options.fontSize = this.options.fontSizeMin + scale * fontDiff;
	    }
	    this.options.radius = this.options.radiusMin + scale * radiusDiff;
	  }

	  this.baseRadiusValue = this.options.radius;
	};

	/**
	 * Draw this node in the given canvas
	 * The 2d context of a HTML canvas can be retrieved by canvas.getContext("2d");
	 * @param {CanvasRenderingContext2D}   ctx
	 */
	Node.prototype.draw = function (ctx) {
	  throw "Draw method not initialized for node";
	};

	/**
	 * Recalculate the size of this node in the given canvas
	 * The 2d context of a HTML canvas can be retrieved by canvas.getContext("2d");
	 * @param {CanvasRenderingContext2D}   ctx
	 */
	Node.prototype.resize = function (ctx) {
	  throw "Resize method not initialized for node";
	};

	/**
	 * Check if this object is overlapping with the provided object
	 * @param {Object} obj   an object with parameters left, top, right, bottom
	 * @return {boolean}     True if location is located on node
	 */
	Node.prototype.isOverlappingWith = function (obj) {
	  return this.left < obj.right && this.left + this.width > obj.left && this.top < obj.bottom && this.top + this.height > obj.top;
	};

	Node.prototype._resizeImage = function (ctx) {
	  // TODO: pre calculate the image size

	  if (!this.width || !this.height) {
	    // undefined or 0
	    var width, height;
	    if (this.value) {
	      this.options.radius = this.baseRadiusValue;
	      var scale = this.imageObj.height / this.imageObj.width;
	      if (scale !== undefined) {
	        width = this.options.radius || this.imageObj.width;
	        height = this.options.radius * scale || this.imageObj.height;
	      } else {
	        width = 0;
	        height = 0;
	      }
	    } else {
	      width = this.imageObj.width;
	      height = this.imageObj.height;
	    }
	    this.width = width;
	    this.height = height;

	    this.growthIndicator = 0;
	    if (this.width > 0 && this.height > 0) {
	      this.width += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeWidthFactor;
	      this.height += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeHeightFactor;
	      this.options.radius += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeRadiusFactor;
	      this.growthIndicator = this.width - width;
	    }
	  }
	};

	Node.prototype._drawImageAtPosition = function (ctx) {
	  if (this.imageObj.width != 0) {
	    // draw the shade
	    if (this.clusterSize > 1) {
	      var lineWidth = this.clusterSize > 1 ? 10 : 0.0;
	      lineWidth *= this.networkScaleInv;
	      lineWidth = Math.min(0.2 * this.width, lineWidth);

	      ctx.globalAlpha = 0.5;
	      ctx.drawImage(this.imageObj, this.left - lineWidth, this.top - lineWidth, this.width + 2 * lineWidth, this.height + 2 * lineWidth);
	    }

	    // draw the image
	    ctx.globalAlpha = 1.0;
	    ctx.drawImage(this.imageObj, this.left, this.top, this.width, this.height);
	  }
	};

	Node.prototype._drawImageLabel = function (ctx) {
	  var yLabel;
	  var offset = 0;

	  if (this.height) {
	    offset = this.height / 2;
	    var labelDimensions = this.getTextSize(ctx);

	    if (labelDimensions.lineCount >= 1) {
	      offset += labelDimensions.height / 2;
	      offset += 3;
	    }
	  }

	  yLabel = this.y + offset;

	  this._label(ctx, this.label, this.x, yLabel, undefined);
	};

	Node.prototype._drawImage = function (ctx) {
	  this._resizeImage(ctx);
	  this.left = this.x - this.width / 2;
	  this.top = this.y - this.height / 2;

	  this._drawImageAtPosition(ctx);

	  this.boundingBox.top = this.top;
	  this.boundingBox.left = this.left;
	  this.boundingBox.right = this.left + this.width;
	  this.boundingBox.bottom = this.top + this.height;

	  this._drawImageLabel(ctx);
	  this.boundingBox.left = Math.min(this.boundingBox.left, this.labelDimensions.left);
	  this.boundingBox.right = Math.max(this.boundingBox.right, this.labelDimensions.left + this.labelDimensions.width);
	  this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelDimensions.height);
	};

	Node.prototype._resizeCircularImage = function (ctx) {
	  if (!this.imageObj.src || !this.imageObj.width || !this.imageObj.height) {
	    if (!this.width) {
	      var diameter = this.options.radius * 2;
	      this.width = diameter;
	      this.height = diameter;

	      // scaling used for clustering
	      //this.width  += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * 0.5 * this.clusterSizeWidthFactor;
	      //this.height += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * 0.5 * this.clusterSizeHeightFactor;
	      this.options.radius += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * 0.5 * this.clusterSizeRadiusFactor;
	      this.growthIndicator = this.options.radius - 0.5 * diameter;
	      this._swapToImageResizeWhenImageLoaded = true;
	    }
	  } else {
	    if (this._swapToImageResizeWhenImageLoaded) {
	      this.width = 0;
	      this.height = 0;
	      delete this._swapToImageResizeWhenImageLoaded;
	    }
	    this._resizeImage(ctx);
	  }
	};

	Node.prototype._drawCircularImage = function (ctx) {
	  this._resizeCircularImage(ctx);

	  this.left = this.x - this.width / 2;
	  this.top = this.y - this.height / 2;

	  var centerX = this.left + this.width / 2;
	  var centerY = this.top + this.height / 2;
	  var radius = Math.abs(this.height / 2);

	  this._drawRawCircle(ctx, centerX, centerY, radius);

	  ctx.save();
	  ctx.circle(this.x, this.y, radius);
	  ctx.stroke();
	  ctx.clip();

	  this._drawImageAtPosition(ctx);

	  ctx.restore();

	  this.boundingBox.top = this.y - this.options.radius;
	  this.boundingBox.left = this.x - this.options.radius;
	  this.boundingBox.right = this.x + this.options.radius;
	  this.boundingBox.bottom = this.y + this.options.radius;

	  this._drawImageLabel(ctx);

	  this.boundingBox.left = Math.min(this.boundingBox.left, this.labelDimensions.left);
	  this.boundingBox.right = Math.max(this.boundingBox.right, this.labelDimensions.left + this.labelDimensions.width);
	  this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelDimensions.height);
	};

	Node.prototype._resizeBox = function (ctx) {
	  if (!this.width) {
	    var margin = 5;
	    var textSize = this.getTextSize(ctx);
	    this.width = textSize.width + 2 * margin;
	    this.height = textSize.height + 2 * margin;

	    this.width += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * 0.5 * this.clusterSizeWidthFactor;
	    this.height += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * 0.5 * this.clusterSizeHeightFactor;
	    this.growthIndicator = this.width - (textSize.width + 2 * margin);
	    //    this.options.radius+= Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * 0.5 * this.clusterSizeRadiusFactor;
	  }
	};

	Node.prototype._drawBox = function (ctx) {
	  this._resizeBox(ctx);

	  this.left = this.x - this.width / 2;
	  this.top = this.y - this.height / 2;

	  var clusterLineWidth = 2.5;
	  var borderWidth = this.options.borderWidth;
	  var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;

	  ctx.strokeStyle = this.selected ? this.options.color.highlight.border : this.hover ? this.options.color.hover.border : this.options.color.border;

	  // draw the outer border
	  if (this.clusterSize > 1) {
	    ctx.lineWidth = (this.selected ? selectionLineWidth : borderWidth) + (this.clusterSize > 1 ? clusterLineWidth : 0.0);
	    ctx.lineWidth *= this.networkScaleInv;
	    ctx.lineWidth = Math.min(this.width, ctx.lineWidth);

	    ctx.roundRect(this.left - 2 * ctx.lineWidth, this.top - 2 * ctx.lineWidth, this.width + 4 * ctx.lineWidth, this.height + 4 * ctx.lineWidth, this.options.radius);
	    ctx.stroke();
	  }
	  ctx.lineWidth = (this.selected ? selectionLineWidth : borderWidth) + (this.clusterSize > 1 ? clusterLineWidth : 0.0);
	  ctx.lineWidth *= this.networkScaleInv;
	  ctx.lineWidth = Math.min(this.width, ctx.lineWidth);

	  ctx.fillStyle = this.selected ? this.options.color.highlight.background : this.hover ? this.options.color.hover.background : this.options.color.background;

	  ctx.roundRect(this.left, this.top, this.width, this.height, this.options.radius);
	  ctx.fill();
	  ctx.stroke();

	  this.boundingBox.top = this.top;
	  this.boundingBox.left = this.left;
	  this.boundingBox.right = this.left + this.width;
	  this.boundingBox.bottom = this.top + this.height;

	  this._label(ctx, this.label, this.x, this.y);
	};

	Node.prototype._resizeDatabase = function (ctx) {
	  if (!this.width) {
	    var margin = 5;
	    var textSize = this.getTextSize(ctx);
	    var size = textSize.width + 2 * margin;
	    this.width = size;
	    this.height = size;

	    // scaling used for clustering
	    this.width += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeWidthFactor;
	    this.height += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeHeightFactor;
	    this.options.radius += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeRadiusFactor;
	    this.growthIndicator = this.width - size;
	  }
	};

	Node.prototype._drawDatabase = function (ctx) {
	  this._resizeDatabase(ctx);
	  this.left = this.x - this.width / 2;
	  this.top = this.y - this.height / 2;

	  var clusterLineWidth = 2.5;
	  var borderWidth = this.options.borderWidth;
	  var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;

	  ctx.strokeStyle = this.selected ? this.options.color.highlight.border : this.hover ? this.options.color.hover.border : this.options.color.border;

	  // draw the outer border
	  if (this.clusterSize > 1) {
	    ctx.lineWidth = (this.selected ? selectionLineWidth : borderWidth) + (this.clusterSize > 1 ? clusterLineWidth : 0.0);
	    ctx.lineWidth *= this.networkScaleInv;
	    ctx.lineWidth = Math.min(this.width, ctx.lineWidth);

	    ctx.database(this.x - this.width / 2 - 2 * ctx.lineWidth, this.y - this.height * 0.5 - 2 * ctx.lineWidth, this.width + 4 * ctx.lineWidth, this.height + 4 * ctx.lineWidth);
	    ctx.stroke();
	  }
	  ctx.lineWidth = (this.selected ? selectionLineWidth : borderWidth) + (this.clusterSize > 1 ? clusterLineWidth : 0.0);
	  ctx.lineWidth *= this.networkScaleInv;
	  ctx.lineWidth = Math.min(this.width, ctx.lineWidth);

	  ctx.fillStyle = this.selected ? this.options.color.highlight.background : this.hover ? this.options.color.hover.background : this.options.color.background;
	  ctx.database(this.x - this.width / 2, this.y - this.height * 0.5, this.width, this.height);
	  ctx.fill();
	  ctx.stroke();

	  this.boundingBox.top = this.top;
	  this.boundingBox.left = this.left;
	  this.boundingBox.right = this.left + this.width;
	  this.boundingBox.bottom = this.top + this.height;

	  this._label(ctx, this.label, this.x, this.y);
	};

	Node.prototype._resizeCircle = function (ctx) {
	  if (!this.width) {
	    var margin = 5;
	    var textSize = this.getTextSize(ctx);
	    var diameter = Math.max(textSize.width, textSize.height) + 2 * margin;
	    this.options.radius = diameter / 2;

	    this.width = diameter;
	    this.height = diameter;

	    // scaling used for clustering
	    //    this.width  += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * 0.5 * this.clusterSizeWidthFactor;
	    //    this.height += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * 0.5 * this.clusterSizeHeightFactor;
	    this.options.radius += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * 0.5 * this.clusterSizeRadiusFactor;
	    this.growthIndicator = this.options.radius - 0.5 * diameter;
	  }
	};

	Node.prototype._drawRawCircle = function (ctx, x, y, radius) {
	  var clusterLineWidth = 2.5;
	  var borderWidth = this.options.borderWidth;
	  var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;

	  ctx.strokeStyle = this.selected ? this.options.color.highlight.border : this.hover ? this.options.color.hover.border : this.options.color.border;

	  // draw the outer border
	  if (this.clusterSize > 1) {
	    ctx.lineWidth = (this.selected ? selectionLineWidth : borderWidth) + (this.clusterSize > 1 ? clusterLineWidth : 0.0);
	    ctx.lineWidth *= this.networkScaleInv;
	    ctx.lineWidth = Math.min(this.width, ctx.lineWidth);

	    ctx.circle(x, y, radius + 2 * ctx.lineWidth);
	    ctx.stroke();
	  }
	  ctx.lineWidth = (this.selected ? selectionLineWidth : borderWidth) + (this.clusterSize > 1 ? clusterLineWidth : 0.0);
	  ctx.lineWidth *= this.networkScaleInv;
	  ctx.lineWidth = Math.min(this.width, ctx.lineWidth);

	  ctx.fillStyle = this.selected ? this.options.color.highlight.background : this.hover ? this.options.color.hover.background : this.options.color.background;
	  ctx.circle(this.x, this.y, radius);
	  ctx.fill();
	  ctx.stroke();
	};

	Node.prototype._drawCircle = function (ctx) {
	  this._resizeCircle(ctx);
	  this.left = this.x - this.width / 2;
	  this.top = this.y - this.height / 2;

	  this._drawRawCircle(ctx, this.x, this.y, this.options.radius);

	  this.boundingBox.top = this.y - this.options.radius;
	  this.boundingBox.left = this.x - this.options.radius;
	  this.boundingBox.right = this.x + this.options.radius;
	  this.boundingBox.bottom = this.y + this.options.radius;

	  this._label(ctx, this.label, this.x, this.y);
	};

	Node.prototype._resizeEllipse = function (ctx) {
	  if (!this.width) {
	    var textSize = this.getTextSize(ctx);

	    this.width = textSize.width * 1.5;
	    this.height = textSize.height * 2;
	    if (this.width < this.height) {
	      this.width = this.height;
	    }
	    var defaultSize = this.width;

	    // scaling used for clustering
	    this.width += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeWidthFactor;
	    this.height += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeHeightFactor;
	    this.options.radius += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeRadiusFactor;
	    this.growthIndicator = this.width - defaultSize;
	  }
	};

	Node.prototype._drawEllipse = function (ctx) {
	  this._resizeEllipse(ctx);
	  this.left = this.x - this.width / 2;
	  this.top = this.y - this.height / 2;

	  var clusterLineWidth = 2.5;
	  var borderWidth = this.options.borderWidth;
	  var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;

	  ctx.strokeStyle = this.selected ? this.options.color.highlight.border : this.hover ? this.options.color.hover.border : this.options.color.border;

	  // draw the outer border
	  if (this.clusterSize > 1) {
	    ctx.lineWidth = (this.selected ? selectionLineWidth : borderWidth) + (this.clusterSize > 1 ? clusterLineWidth : 0.0);
	    ctx.lineWidth *= this.networkScaleInv;
	    ctx.lineWidth = Math.min(this.width, ctx.lineWidth);

	    ctx.ellipse(this.left - 2 * ctx.lineWidth, this.top - 2 * ctx.lineWidth, this.width + 4 * ctx.lineWidth, this.height + 4 * ctx.lineWidth);
	    ctx.stroke();
	  }
	  ctx.lineWidth = (this.selected ? selectionLineWidth : borderWidth) + (this.clusterSize > 1 ? clusterLineWidth : 0.0);
	  ctx.lineWidth *= this.networkScaleInv;
	  ctx.lineWidth = Math.min(this.width, ctx.lineWidth);

	  ctx.fillStyle = this.selected ? this.options.color.highlight.background : this.hover ? this.options.color.hover.background : this.options.color.background;

	  ctx.ellipse(this.left, this.top, this.width, this.height);
	  ctx.fill();
	  ctx.stroke();

	  this.boundingBox.top = this.top;
	  this.boundingBox.left = this.left;
	  this.boundingBox.right = this.left + this.width;
	  this.boundingBox.bottom = this.top + this.height;

	  this._label(ctx, this.label, this.x, this.y);
	};

	Node.prototype._drawDot = function (ctx) {
	  this._drawShape(ctx, 'circle');
	};

	Node.prototype._drawTriangle = function (ctx) {
	  this._drawShape(ctx, 'triangle');
	};

	Node.prototype._drawTriangleDown = function (ctx) {
	  this._drawShape(ctx, 'triangleDown');
	};

	Node.prototype._drawSquare = function (ctx) {
	  this._drawShape(ctx, 'square');
	};

	Node.prototype._drawStar = function (ctx) {
	  this._drawShape(ctx, 'star');
	};

	Node.prototype._resizeShape = function (ctx) {
	  if (!this.width) {
	    this.options.radius = this.baseRadiusValue;
	    var size = 2 * this.options.radius;
	    this.width = size;
	    this.height = size;

	    // scaling used for clustering
	    this.width += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeWidthFactor;
	    this.height += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeHeightFactor;
	    this.options.radius += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * 0.5 * this.clusterSizeRadiusFactor;
	    this.growthIndicator = this.width - size;
	  }
	};

	Node.prototype._drawShape = function (ctx, shape) {
	  this._resizeShape(ctx);

	  this.left = this.x - this.width / 2;
	  this.top = this.y - this.height / 2;

	  var clusterLineWidth = 2.5;
	  var borderWidth = this.options.borderWidth;
	  var selectionLineWidth = this.options.borderWidthSelected || 2 * this.options.borderWidth;
	  var radiusMultiplier = 2;

	  // choose draw method depending on the shape
	  switch (shape) {
	    case 'dot':
	      radiusMultiplier = 2;break;
	    case 'square':
	      radiusMultiplier = 2;break;
	    case 'triangle':
	      radiusMultiplier = 3;break;
	    case 'triangleDown':
	      radiusMultiplier = 3;break;
	    case 'star':
	      radiusMultiplier = 4;break;
	  }

	  ctx.strokeStyle = this.selected ? this.options.color.highlight.border : this.hover ? this.options.color.hover.border : this.options.color.border;
	  // draw the outer border
	  if (this.clusterSize > 1) {
	    ctx.lineWidth = (this.selected ? selectionLineWidth : borderWidth) + (this.clusterSize > 1 ? clusterLineWidth : 0.0);
	    ctx.lineWidth *= this.networkScaleInv;
	    ctx.lineWidth = Math.min(this.width, ctx.lineWidth);

	    ctx[shape](this.x, this.y, this.options.radius + radiusMultiplier * ctx.lineWidth);
	    ctx.stroke();
	  }
	  ctx.lineWidth = (this.selected ? selectionLineWidth : borderWidth) + (this.clusterSize > 1 ? clusterLineWidth : 0.0);
	  ctx.lineWidth *= this.networkScaleInv;
	  ctx.lineWidth = Math.min(this.width, ctx.lineWidth);

	  ctx.fillStyle = this.selected ? this.options.color.highlight.background : this.hover ? this.options.color.hover.background : this.options.color.background;
	  ctx[shape](this.x, this.y, this.options.radius);
	  ctx.fill();
	  ctx.stroke();

	  this.boundingBox.top = this.y - this.options.radius;
	  this.boundingBox.left = this.x - this.options.radius;
	  this.boundingBox.right = this.x + this.options.radius;
	  this.boundingBox.bottom = this.y + this.options.radius;

	  if (this.label) {
	    this._label(ctx, this.label, this.x, this.y + this.height / 2, undefined, 'hanging', true);
	    this.boundingBox.left = Math.min(this.boundingBox.left, this.labelDimensions.left);
	    this.boundingBox.right = Math.max(this.boundingBox.right, this.labelDimensions.left + this.labelDimensions.width);
	    this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelDimensions.height);
	  }
	};

	Node.prototype._resizeText = function (ctx) {
	  if (!this.width) {
	    var margin = 5;
	    var textSize = this.getTextSize(ctx);
	    this.width = textSize.width + 2 * margin;
	    this.height = textSize.height + 2 * margin;

	    // scaling used for clustering
	    this.width += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeWidthFactor;
	    this.height += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeHeightFactor;
	    this.options.radius += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeRadiusFactor;
	    this.growthIndicator = this.width - (textSize.width + 2 * margin);
	  }
	};

	Node.prototype._drawText = function (ctx) {
	  this._resizeText(ctx);
	  this.left = this.x - this.width / 2;
	  this.top = this.y - this.height / 2;

	  this._label(ctx, this.label, this.x, this.y);

	  this.boundingBox.top = this.top;
	  this.boundingBox.left = this.left;
	  this.boundingBox.right = this.left + this.width;
	  this.boundingBox.bottom = this.top + this.height;
	};

	Node.prototype._resizeIcon = function (ctx) {
	  if (!this.width) {
	    var margin = 5;
	    var iconSize = {
	      width: Number(this.options.iconSize),
	      height: Number(this.options.iconSize)
	    };
	    this.width = iconSize.width + 2 * margin;
	    this.height = iconSize.height + 2 * margin;

	    // scaling used for clustering
	    this.width += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeWidthFactor;
	    this.height += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeHeightFactor;
	    this.options.radius += Math.min(this.clusterSize - 1, this.maxNodeSizeIncrements) * this.clusterSizeRadiusFactor;
	    this.growthIndicator = this.width - (iconSize.width + 2 * margin);
	  }
	};

	Node.prototype._drawIcon = function (ctx) {
	  this._resizeIcon(ctx);

	  this.options.iconSize = this.options.iconSize || 50;

	  this.left = this.x - this.width / 2;
	  this.top = this.y - this.height / 2;
	  this._icon(ctx);

	  this.boundingBox.top = this.y - this.options.iconSize / 2;
	  this.boundingBox.left = this.x - this.options.iconSize / 2;
	  this.boundingBox.right = this.x + this.options.iconSize / 2;
	  this.boundingBox.bottom = this.y + this.options.iconSize / 2;

	  if (this.label) {
	    var iconTextSpacing = 5;
	    this._label(ctx, this.label, this.x, this.y + this.height / 2 + iconTextSpacing, 'top', true);

	    this.boundingBox.left = Math.min(this.boundingBox.left, this.labelDimensions.left);
	    this.boundingBox.right = Math.max(this.boundingBox.right, this.labelDimensions.left + this.labelDimensions.width);
	    this.boundingBox.bottom = Math.max(this.boundingBox.bottom, this.boundingBox.bottom + this.labelDimensions.height);
	  }
	};

	Node.prototype._icon = function (ctx) {
	  var relativeIconSize = Number(this.options.iconSize) * this.networkScale;

	  if (this.options.icon && relativeIconSize > this.options.fontDrawThreshold - 1) {

	    var iconSize = Number(this.options.iconSize);

	    ctx.font = (this.selected ? "bold " : "") + iconSize + "px " + this.options.iconFontFace;

	    // draw icon
	    ctx.fillStyle = this.options.iconColor || "black";
	    ctx.textAlign = "center";
	    ctx.textBaseline = "middle";
	    ctx.fillText(this.options.icon, this.x, this.y);
	  }
	};

	Node.prototype._label = function (ctx, text, x, y, align, baseline, labelUnderNode) {
	  var relativeFontSize = Number(this.options.fontSize) * this.networkScale;
	  if (text && relativeFontSize >= this.options.fontDrawThreshold - 1) {
	    var fontSize = Number(this.options.fontSize);

	    // this ensures that there will not be HUGE letters on screen by setting an upper limit on the visible text size (regardless of zoomLevel)
	    if (relativeFontSize >= this.options.fontSizeMaxVisible) {
	      fontSize = Number(this.options.fontSizeMaxVisible) * this.networkScaleInv;
	    }

	    // fade in when relative scale is between threshold and threshold - 1
	    var fontColor = this.options.fontColor || "#000000";
	    var strokecolor = this.options.fontStrokeColor;
	    if (relativeFontSize <= this.options.fontDrawThreshold) {
	      var opacity = Math.max(0, Math.min(1, 1 - (this.options.fontDrawThreshold - relativeFontSize)));
	      fontColor = util.overrideOpacity(fontColor, opacity);
	      strokecolor = util.overrideOpacity(strokecolor, opacity);
	    }

	    ctx.font = (this.selected ? "bold " : "") + fontSize + "px " + this.options.fontFace;

	    var lines = text.split('\n');
	    var lineCount = lines.length;
	    var yLine = y + (1 - lineCount) / 2 * fontSize;
	    if (labelUnderNode == true) {
	      yLine = y + (1 - lineCount) / (2 * fontSize);
	    }

	    // font fill from edges now for nodes!
	    var width = ctx.measureText(lines[0]).width;
	    for (var i = 1; i < lineCount; i++) {
	      var lineWidth = ctx.measureText(lines[i]).width;
	      width = lineWidth > width ? lineWidth : width;
	    }
	    var height = fontSize * lineCount;
	    var left = x - width / 2;
	    var top = y - height / 2;
	    if (baseline == "hanging") {
	      top += 0.5 * fontSize;
	      top += 4; // distance from node, required because we use hanging. Hanging has less difference between browsers
	      yLine += 4; // distance from node
	    }
	    this.labelDimensions = { top: top, left: left, width: width, height: height, yLine: yLine };

	    // create the fontfill background
	    if (this.options.fontFill !== undefined && this.options.fontFill !== null && this.options.fontFill !== "none") {
	      ctx.fillStyle = this.options.fontFill;
	      ctx.fillRect(left, top, width, height);
	    }

	    // draw text
	    ctx.fillStyle = fontColor;
	    ctx.textAlign = align || "center";
	    ctx.textBaseline = baseline || "middle";
	    if (this.options.fontStrokeWidth > 0) {
	      ctx.lineWidth = this.options.fontStrokeWidth;
	      ctx.strokeStyle = strokecolor;
	      ctx.lineJoin = 'round';
	    }
	    for (var i = 0; i < lineCount; i++) {
	      if (this.options.fontStrokeWidth) {
	        ctx.strokeText(lines[i], x, yLine);
	      }
	      ctx.fillText(lines[i], x, yLine);
	      yLine += fontSize;
	    }
	  }
	};

	Node.prototype.getTextSize = function (ctx) {
	  if (this.label !== undefined) {
	    var fontSize = Number(this.options.fontSize);
	    if (fontSize * this.networkScale > this.options.fontSizeMaxVisible) {
	      fontSize = Number(this.options.fontSizeMaxVisible) * this.networkScaleInv;
	    }
	    ctx.font = (this.selected ? "bold " : "") + fontSize + "px " + this.options.fontFace;

	    var lines = this.label.split('\n'),
	        height = (fontSize + 4) * lines.length,
	        width = 0;

	    for (var i = 0, iMax = lines.length; i < iMax; i++) {
	      width = Math.max(width, ctx.measureText(lines[i]).width);
	    }

	    return { "width": width, "height": height, lineCount: lines.length };
	  } else {
	    return { "width": 0, "height": 0, lineCount: 0 };
	  }
	};

	/**
	 * this is used to determine if a node is visible at all. this is used to determine when it needs to be drawn.
	 * there is a safety margin of 0.3 * width;
	 *
	 * @returns {boolean}
	 */
	Node.prototype.inArea = function () {
	  if (this.width !== undefined) {
	    return this.x + this.width * this.networkScaleInv >= this.canvasTopLeft.x && this.x - this.width * this.networkScaleInv < this.canvasBottomRight.x && this.y + this.height * this.networkScaleInv >= this.canvasTopLeft.y && this.y - this.height * this.networkScaleInv < this.canvasBottomRight.y;
	  } else {
	    return true;
	  }
	};

	/**
	 * checks if the core of the node is in the display area, this is used for opening clusters around zoom
	 * @returns {boolean}
	 */
	Node.prototype.inView = function () {
	  return this.x >= this.canvasTopLeft.x && this.x < this.canvasBottomRight.x && this.y >= this.canvasTopLeft.y && this.y < this.canvasBottomRight.y;
	};

	/**
	 * This allows the zoom level of the network to influence the rendering
	 * We store the inverted scale and the coordinates of the top left, and bottom right points of the canvas
	 *
	 * @param scale
	 * @param canvasTopLeft
	 * @param canvasBottomRight
	 */
	Node.prototype.setScaleAndPos = function (scale, canvasTopLeft, canvasBottomRight) {
	  this.networkScaleInv = 1.0 / scale;
	  this.networkScale = scale;
	  this.canvasTopLeft = canvasTopLeft;
	  this.canvasBottomRight = canvasBottomRight;
	};

	/**
	 * This allows the zoom level of the network to influence the rendering
	 *
	 * @param scale
	 */
	Node.prototype.setScale = function (scale) {
	  this.networkScaleInv = 1.0 / scale;
	  this.networkScale = scale;
	};

	/**
	 * set the velocity at 0. Is called when this node is contained in another during clustering
	 */
	Node.prototype.clearVelocity = function () {
	  this.vx = 0;
	  this.vy = 0;
	};

	/**
	 * Basic preservation of (kinectic) energy
	 *
	 * @param massBeforeClustering
	 */
	Node.prototype.updateVelocity = function (massBeforeClustering) {
	  var energyBefore = this.vx * this.vx * massBeforeClustering;
	  //this.vx = (this.vx < 0) ? -Math.sqrt(energyBefore/this.options.mass) : Math.sqrt(energyBefore/this.options.mass);
	  this.vx = Math.sqrt(energyBefore / this.options.mass);
	  energyBefore = this.vy * this.vy * massBeforeClustering;
	  //this.vy = (this.vy < 0) ? -Math.sqrt(energyBefore/this.options.mass) : Math.sqrt(energyBefore/this.options.mass);
	  this.vy = Math.sqrt(energyBefore / this.options.mass);
	};

	module.exports = Node;

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(175);
	var Node = __webpack_require__(334);

	/**
	 * @class Edge
	 *
	 * A edge connects two nodes
	 * @param {Object} properties     Object with properties. Must contain
	 *                                At least properties from and to.
	 *                                Available properties: from (number),
	 *                                to (number), label (string, color (string),
	 *                                width (number), style (string),
	 *                                length (number), title (string)
	 * @param {Network} network       A Network object, used to find and edge to
	 *                                nodes.
	 * @param {Object} constants      An object with default values for
	 *                                example for the color
	 */
	function Edge(properties, network, networkConstants) {
	  if (!network) {
	    throw "No network provided";
	  }
	  var fields = ['edges', 'physics'];
	  var constants = util.selectiveBridgeObject(fields, networkConstants);
	  this.options = constants.edges;
	  this.physics = constants.physics;
	  this.options['smoothCurves'] = networkConstants['smoothCurves'];

	  this.network = network;

	  // initialize variables
	  this.id = undefined;
	  this.fromId = undefined;
	  this.toId = undefined;
	  this.title = undefined;
	  this.widthSelected = this.options.width * this.options.widthSelectionMultiplier;
	  this.value = undefined;
	  this.selected = false;
	  this.hover = false;
	  this.labelDimensions = { top: 0, left: 0, width: 0, height: 0, yLine: 0 }; // could be cached
	  this.dirtyLabel = true;
	  this.colorDirty = true;

	  this.from = null; // a node
	  this.to = null; // a node
	  this.via = null; // a temp node

	  this.fromBackup = null; // used to clean up after reconnect
	  this.toBackup = null;; // used to clean up after reconnect

	  // we use this to be able to reconnect the edge to a cluster if its node is put into a cluster
	  // by storing the original information we can revert to the original connection when the cluser is opened.
	  this.originalFromId = [];
	  this.originalToId = [];

	  this.connected = false;

	  this.widthFixed = false;
	  this.lengthFixed = false;

	  this.setProperties(properties);

	  this.controlNodesEnabled = false;
	  this.controlNodes = { from: null, to: null, positions: {} };
	  this.connectedNode = null;
	}

	/**
	 * Set or overwrite properties for the edge
	 * @param {Object} properties  an object with properties
	 * @param {Object} constants   and object with default, global properties
	 */
	Edge.prototype.setProperties = function (properties) {
	  this.colorDirty = true;
	  if (!properties) {
	    return;
	  }

	  var fields = ['style', 'fontSize', 'fontFace', 'fontColor', 'fontFill', 'fontStrokeWidth', 'fontStrokeColor', 'width', 'widthSelectionMultiplier', 'hoverWidth', 'arrowScaleFactor', 'dash', 'inheritColor', 'labelAlignment', 'opacity', 'customScalingFunction', 'useGradients'];
	  util.selectiveDeepExtend(fields, this.options, properties);

	  if (properties.from !== undefined) {
	    this.fromId = properties.from;
	  }
	  if (properties.to !== undefined) {
	    this.toId = properties.to;
	  }

	  if (properties.id !== undefined) {
	    this.id = properties.id;
	  }
	  if (properties.label !== undefined) {
	    this.label = properties.label;this.dirtyLabel = true;
	  }

	  if (properties.title !== undefined) {
	    this.title = properties.title;
	  }
	  if (properties.value !== undefined) {
	    this.value = properties.value;
	  }
	  if (properties.length !== undefined) {
	    this.physics.springLength = properties.length;
	  }

	  if (properties.color !== undefined) {
	    this.options.inheritColor = false;
	    if (util.isString(properties.color)) {
	      this.options.color.color = properties.color;
	      this.options.color.highlight = properties.color;
	    } else {
	      if (properties.color.color !== undefined) {
	        this.options.color.color = properties.color.color;
	      }
	      if (properties.color.highlight !== undefined) {
	        this.options.color.highlight = properties.color.highlight;
	      }
	      if (properties.color.hover !== undefined) {
	        this.options.color.hover = properties.color.hover;
	      }
	    }
	  }

	  // A node is connected when it has a from and to node.
	  this.connect();

	  this.widthFixed = this.widthFixed || properties.width !== undefined;
	  this.lengthFixed = this.lengthFixed || properties.length !== undefined;

	  this.widthSelected = this.options.width * this.options.widthSelectionMultiplier;

	  // set draw method based on style
	  switch (this.options.style) {
	    case 'line':
	      this.draw = this._drawLine;break;
	    case 'arrow':
	      this.draw = this._drawArrow;break;
	    case 'arrow-center':
	      this.draw = this._drawArrowCenter;break;
	    case 'dash-line':
	      this.draw = this._drawDashLine;break;
	    default:
	      this.draw = this._drawLine;break;
	  }
	};

	/**
	 * Connect an edge to its nodes
	 */
	Edge.prototype.connect = function () {
	  this.disconnect();

	  this.from = this.network.nodes[this.fromId] || null;
	  this.to = this.network.nodes[this.toId] || null;
	  this.connected = this.from && this.to;

	  if (this.connected) {
	    this.from.attachEdge(this);
	    this.to.attachEdge(this);
	  } else {
	    if (this.from) {
	      this.from.detachEdge(this);
	    }
	    if (this.to) {
	      this.to.detachEdge(this);
	    }
	  }
	};

	/**
	 * Disconnect an edge from its nodes
	 */
	Edge.prototype.disconnect = function () {
	  if (this.from) {
	    this.from.detachEdge(this);
	    this.from = null;
	  }
	  if (this.to) {
	    this.to.detachEdge(this);
	    this.to = null;
	  }

	  this.connected = false;
	};

	/**
	 * get the title of this edge.
	 * @return {string} title    The title of the edge, or undefined when no title
	 *                           has been set.
	 */
	Edge.prototype.getTitle = function () {
	  return typeof this.title === "function" ? this.title() : this.title;
	};

	/**
	 * Retrieve the value of the edge. Can be undefined
	 * @return {Number} value
	 */
	Edge.prototype.getValue = function () {
	  return this.value;
	};

	/**
	 * Adjust the value range of the edge. The edge will adjust it's width
	 * based on its value.
	 * @param {Number} min
	 * @param {Number} max
	 */
	Edge.prototype.setValueRange = function (min, max, total) {
	  if (!this.widthFixed && this.value !== undefined) {
	    var scale = this.options.customScalingFunction(min, max, total, this.value);
	    var widthDiff = this.options.widthMax - this.options.widthMin;
	    this.options.width = this.options.widthMin + scale * widthDiff;
	    this.widthSelected = this.options.width * this.options.widthSelectionMultiplier;
	  }
	};

	/**
	 * Redraw a edge
	 * Draw this edge in the given canvas
	 * The 2d context of a HTML canvas can be retrieved by canvas.getContext("2d");
	 * @param {CanvasRenderingContext2D}   ctx
	 */
	Edge.prototype.draw = function (ctx) {
	  throw "Method draw not initialized in edge";
	};

	/**
	 * Check if this object is overlapping with the provided object
	 * @param {Object} obj   an object with parameters left, top
	 * @return {boolean}     True if location is located on the edge
	 */
	Edge.prototype.isOverlappingWith = function (obj) {
	  if (this.connected) {
	    var distMax = 10;
	    var xFrom = this.from.x;
	    var yFrom = this.from.y;
	    var xTo = this.to.x;
	    var yTo = this.to.y;
	    var xObj = obj.left;
	    var yObj = obj.top;

	    var dist = this._getDistanceToEdge(xFrom, yFrom, xTo, yTo, xObj, yObj);

	    return dist < distMax;
	  } else {
	    return false;
	  }
	};

	Edge.prototype._getColor = function (ctx) {
	  var colorObj = this.options.color;
	  if (this.options.useGradients == true) {
	    var grd = ctx.createLinearGradient(this.from.x, this.from.y, this.to.x, this.to.y);
	    var fromColor, toColor;
	    fromColor = this.from.options.color.highlight.border;
	    toColor = this.to.options.color.highlight.border;

	    if (this.from.selected == false && this.to.selected == false) {
	      fromColor = util.overrideOpacity(this.from.options.color.border, this.options.opacity);
	      toColor = util.overrideOpacity(this.to.options.color.border, this.options.opacity);
	    } else if (this.from.selected == true && this.to.selected == false) {
	      toColor = this.to.options.color.border;
	    } else if (this.from.selected == false && this.to.selected == true) {
	      fromColor = this.from.options.color.border;
	    }
	    grd.addColorStop(0, fromColor);
	    grd.addColorStop(1, toColor);
	    return grd;
	  }

	  if (this.colorDirty === true) {
	    if (this.options.inheritColor == "to") {
	      colorObj = {
	        highlight: this.to.options.color.highlight.border,
	        hover: this.to.options.color.hover.border,
	        color: util.overrideOpacity(this.from.options.color.border, this.options.opacity)
	      };
	    } else if (this.options.inheritColor == "from" || this.options.inheritColor == true) {
	      colorObj = {
	        highlight: this.from.options.color.highlight.border,
	        hover: this.from.options.color.hover.border,
	        color: util.overrideOpacity(this.from.options.color.border, this.options.opacity)
	      };
	    }
	    this.options.color = colorObj;
	    this.colorDirty = false;
	  }

	  if (this.selected == true) {
	    return colorObj.highlight;
	  } else if (this.hover == true) {
	    return colorObj.hover;
	  } else {
	    return colorObj.color;
	  }
	};

	/**
	 * Redraw a edge as a line
	 * Draw this edge in the given canvas
	 * The 2d context of a HTML canvas can be retrieved by canvas.getContext("2d");
	 * @param {CanvasRenderingContext2D}   ctx
	 * @private
	 */
	Edge.prototype._drawLine = function (ctx) {
	  // set style
	  ctx.strokeStyle = this._getColor(ctx);
	  ctx.lineWidth = this._getLineWidth();

	  if (this.from != this.to) {
	    // draw line
	    var via = this._line(ctx);

	    // draw label
	    var point;
	    if (this.label) {
	      if (this.options.smoothCurves.enabled == true && via != null) {
	        var midpointX = 0.5 * (0.5 * (this.from.x + via.x) + 0.5 * (this.to.x + via.x));
	        var midpointY = 0.5 * (0.5 * (this.from.y + via.y) + 0.5 * (this.to.y + via.y));
	        point = { x: midpointX, y: midpointY };
	      } else {
	        point = this._pointOnLine(0.5);
	      }
	      this._label(ctx, this.label, point.x, point.y);
	    }
	  } else {
	    var x, y;
	    var radius = this.physics.springLength / 4;
	    var node = this.from;
	    if (!node.width) {
	      node.resize(ctx);
	    }
	    if (node.width > node.height) {
	      x = node.x + node.width / 2;
	      y = node.y - radius;
	    } else {
	      x = node.x + radius;
	      y = node.y - node.height / 2;
	    }
	    this._circle(ctx, x, y, radius);
	    point = this._pointOnCircle(x, y, radius, 0.5);
	    this._label(ctx, this.label, point.x, point.y);
	  }
	};

	/**
	 * Get the line width of the edge. Depends on width and whether one of the
	 * connected nodes is selected.
	 * @return {Number} width
	 * @private
	 */
	Edge.prototype._getLineWidth = function () {
	  if (this.selected == true) {
	    return Math.max(Math.min(this.widthSelected, this.options.widthMax), 0.3 * this.networkScaleInv);
	  } else {
	    if (this.hover == true) {
	      return Math.max(Math.min(this.options.hoverWidth, this.options.widthMax), 0.3 * this.networkScaleInv);
	    } else {
	      return Math.max(this.options.width, 0.3 * this.networkScaleInv);
	    }
	  }
	};

	Edge.prototype._getViaCoordinates = function () {
	  if (this.options.smoothCurves.dynamic == true && this.options.smoothCurves.enabled == true) {
	    return this.via;
	  } else if (this.options.smoothCurves.enabled == false) {
	    return { x: 0, y: 0 };
	  } else {
	    var xVia = null;
	    var yVia = null;
	    var factor = this.options.smoothCurves.roundness;
	    var type = this.options.smoothCurves.type;
	    var dx = Math.abs(this.from.x - this.to.x);
	    var dy = Math.abs(this.from.y - this.to.y);
	    if (type == 'discrete' || type == 'diagonalCross') {
	      if (Math.abs(this.from.x - this.to.x) < Math.abs(this.from.y - this.to.y)) {
	        if (this.from.y > this.to.y) {
	          if (this.from.x < this.to.x) {
	            xVia = this.from.x + factor * dy;
	            yVia = this.from.y - factor * dy;
	          } else if (this.from.x > this.to.x) {
	            xVia = this.from.x - factor * dy;
	            yVia = this.from.y - factor * dy;
	          }
	        } else if (this.from.y < this.to.y) {
	          if (this.from.x < this.to.x) {
	            xVia = this.from.x + factor * dy;
	            yVia = this.from.y + factor * dy;
	          } else if (this.from.x > this.to.x) {
	            xVia = this.from.x - factor * dy;
	            yVia = this.from.y + factor * dy;
	          }
	        }
	        if (type == "discrete") {
	          xVia = dx < factor * dy ? this.from.x : xVia;
	        }
	      } else if (Math.abs(this.from.x - this.to.x) > Math.abs(this.from.y - this.to.y)) {
	        if (this.from.y > this.to.y) {
	          if (this.from.x < this.to.x) {
	            xVia = this.from.x + factor * dx;
	            yVia = this.from.y - factor * dx;
	          } else if (this.from.x > this.to.x) {
	            xVia = this.from.x - factor * dx;
	            yVia = this.from.y - factor * dx;
	          }
	        } else if (this.from.y < this.to.y) {
	          if (this.from.x < this.to.x) {
	            xVia = this.from.x + factor * dx;
	            yVia = this.from.y + factor * dx;
	          } else if (this.from.x > this.to.x) {
	            xVia = this.from.x - factor * dx;
	            yVia = this.from.y + factor * dx;
	          }
	        }
	        if (type == "discrete") {
	          yVia = dy < factor * dx ? this.from.y : yVia;
	        }
	      }
	    } else if (type == "straightCross") {
	      if (Math.abs(this.from.x - this.to.x) < Math.abs(this.from.y - this.to.y)) {
	        // up - down
	        xVia = this.from.x;
	        if (this.from.y < this.to.y) {
	          yVia = this.to.y - (1 - factor) * dy;
	        } else {
	          yVia = this.to.y + (1 - factor) * dy;
	        }
	      } else if (Math.abs(this.from.x - this.to.x) > Math.abs(this.from.y - this.to.y)) {
	        // left - right
	        if (this.from.x < this.to.x) {
	          xVia = this.to.x - (1 - factor) * dx;
	        } else {
	          xVia = this.to.x + (1 - factor) * dx;
	        }
	        yVia = this.from.y;
	      }
	    } else if (type == 'horizontal') {
	      if (this.from.x < this.to.x) {
	        xVia = this.to.x - (1 - factor) * dx;
	      } else {
	        xVia = this.to.x + (1 - factor) * dx;
	      }
	      yVia = this.from.y;
	    } else if (type == 'vertical') {
	      xVia = this.from.x;
	      if (this.from.y < this.to.y) {
	        yVia = this.to.y - (1 - factor) * dy;
	      } else {
	        yVia = this.to.y + (1 - factor) * dy;
	      }
	    } else if (type == 'curvedCW') {
	      var dx = this.to.x - this.from.x;
	      var dy = this.from.y - this.to.y;
	      var radius = Math.sqrt(dx * dx + dy * dy);
	      var pi = Math.PI;

	      var originalAngle = Math.atan2(dy, dx);
	      var myAngle = (originalAngle + (factor * 0.5 + 0.5) * pi) % (2 * pi);

	      xVia = this.from.x + (factor * 0.5 + 0.5) * radius * Math.sin(myAngle);
	      yVia = this.from.y + (factor * 0.5 + 0.5) * radius * Math.cos(myAngle);
	    } else if (type == 'curvedCCW') {
	      var dx = this.to.x - this.from.x;
	      var dy = this.from.y - this.to.y;
	      var radius = Math.sqrt(dx * dx + dy * dy);
	      var pi = Math.PI;

	      var originalAngle = Math.atan2(dy, dx);
	      var myAngle = (originalAngle + (-factor * 0.5 + 0.5) * pi) % (2 * pi);

	      xVia = this.from.x + (factor * 0.5 + 0.5) * radius * Math.sin(myAngle);
	      yVia = this.from.y + (factor * 0.5 + 0.5) * radius * Math.cos(myAngle);
	    } else {
	      // continuous
	      if (Math.abs(this.from.x - this.to.x) < Math.abs(this.from.y - this.to.y)) {
	        if (this.from.y > this.to.y) {
	          if (this.from.x < this.to.x) {
	            xVia = this.from.x + factor * dy;
	            yVia = this.from.y - factor * dy;
	            xVia = this.to.x < xVia ? this.to.x : xVia;
	          } else if (this.from.x > this.to.x) {
	            xVia = this.from.x - factor * dy;
	            yVia = this.from.y - factor * dy;
	            xVia = this.to.x > xVia ? this.to.x : xVia;
	          }
	        } else if (this.from.y < this.to.y) {
	          if (this.from.x < this.to.x) {
	            xVia = this.from.x + factor * dy;
	            yVia = this.from.y + factor * dy;
	            xVia = this.to.x < xVia ? this.to.x : xVia;
	          } else if (this.from.x > this.to.x) {
	            xVia = this.from.x - factor * dy;
	            yVia = this.from.y + factor * dy;
	            xVia = this.to.x > xVia ? this.to.x : xVia;
	          }
	        }
	      } else if (Math.abs(this.from.x - this.to.x) > Math.abs(this.from.y - this.to.y)) {
	        if (this.from.y > this.to.y) {
	          if (this.from.x < this.to.x) {
	            xVia = this.from.x + factor * dx;
	            yVia = this.from.y - factor * dx;
	            yVia = this.to.y > yVia ? this.to.y : yVia;
	          } else if (this.from.x > this.to.x) {
	            xVia = this.from.x - factor * dx;
	            yVia = this.from.y - factor * dx;
	            yVia = this.to.y > yVia ? this.to.y : yVia;
	          }
	        } else if (this.from.y < this.to.y) {
	          if (this.from.x < this.to.x) {
	            xVia = this.from.x + factor * dx;
	            yVia = this.from.y + factor * dx;
	            yVia = this.to.y < yVia ? this.to.y : yVia;
	          } else if (this.from.x > this.to.x) {
	            xVia = this.from.x - factor * dx;
	            yVia = this.from.y + factor * dx;
	            yVia = this.to.y < yVia ? this.to.y : yVia;
	          }
	        }
	      }
	    }

	    return { x: xVia, y: yVia };
	  }
	};

	/**
	 * Draw a line between two nodes
	 * @param {CanvasRenderingContext2D} ctx
	 * @private
	 */
	Edge.prototype._line = function (ctx) {
	  // draw a straight line
	  ctx.beginPath();
	  ctx.moveTo(this.from.x, this.from.y);
	  if (this.options.smoothCurves.enabled == true) {
	    if (this.options.smoothCurves.dynamic == false) {
	      var via = this._getViaCoordinates();
	      if (via.x == null) {
	        ctx.lineTo(this.to.x, this.to.y);
	        ctx.stroke();
	        return null;
	      } else {
	        //        this.via.x = via.x;
	        //        this.via.y = via.y;
	        ctx.quadraticCurveTo(via.x, via.y, this.to.x, this.to.y);
	        ctx.stroke();
	        //ctx.circle(via.x,via.y,2)
	        //ctx.stroke();
	        return via;
	      }
	    } else {
	      ctx.quadraticCurveTo(this.via.x, this.via.y, this.to.x, this.to.y);
	      ctx.stroke();
	      return this.via;
	    }
	  } else {
	    ctx.lineTo(this.to.x, this.to.y);
	    ctx.stroke();
	    return null;
	  }
	};

	/**
	 * Draw a line from a node to itself, a circle
	 * @param {CanvasRenderingContext2D} ctx
	 * @param {Number} x
	 * @param {Number} y
	 * @param {Number} radius
	 * @private
	 */
	Edge.prototype._circle = function (ctx, x, y, radius) {
	  // draw a circle
	  ctx.beginPath();
	  ctx.arc(x, y, radius, 0, 2 * Math.PI, false);
	  ctx.stroke();
	};

	/**
	 * Draw label with white background and with the middle at (x, y)
	 * @param {CanvasRenderingContext2D} ctx
	 * @param {String} text
	 * @param {Number} x
	 * @param {Number} y
	 * @private
	 */
	Edge.prototype._label = function (ctx, text, x, y) {
	  if (text) {
	    ctx.font = (this.from.selected || this.to.selected ? "bold " : "") + this.options.fontSize + "px " + this.options.fontFace;
	    var yLine;

	    if (this.dirtyLabel == true) {
	      var lines = String(text).split('\n');
	      var lineCount = lines.length;
	      var fontSize = Number(this.options.fontSize);
	      yLine = y + (1 - lineCount) / 2 * fontSize;

	      var width = ctx.measureText(lines[0]).width;
	      for (var i = 1; i < lineCount; i++) {
	        var lineWidth = ctx.measureText(lines[i]).width;
	        width = lineWidth > width ? lineWidth : width;
	      }
	      var height = this.options.fontSize * lineCount;
	      var left = x - width / 2;
	      var top = y - height / 2;

	      // cache
	      this.labelDimensions = { top: top, left: left, width: width, height: height, yLine: yLine };
	    }

	    var yLine = this.labelDimensions.yLine;

	    ctx.save();

	    if (this.options.labelAlignment != "horizontal") {
	      ctx.translate(x, yLine);
	      this._rotateForLabelAlignment(ctx);
	      x = 0;
	      yLine = 0;
	    }

	    this._drawLabelRect(ctx);
	    this._drawLabelText(ctx, x, yLine, lines, lineCount, fontSize);

	    ctx.restore();
	  }
	};

	/**
	 * Rotates the canvas so the text is most readable
	 * @param {CanvasRenderingContext2D} ctx
	 * @private
	 */
	Edge.prototype._rotateForLabelAlignment = function (ctx) {
	  var dy = this.from.y - this.to.y;
	  var dx = this.from.x - this.to.x;
	  var angleInDegrees = Math.atan2(dy, dx);

	  // rotate so label it is readable
	  if (angleInDegrees < -1 && dx < 0 || angleInDegrees > 0 && dx < 0) {
	    angleInDegrees = angleInDegrees + Math.PI;
	  }

	  ctx.rotate(angleInDegrees);
	};

	/**
	 * Draws the label rectangle 
	 * @param {CanvasRenderingContext2D} ctx
	 * @param {String} labelAlignment
	 * @private
	 */
	Edge.prototype._drawLabelRect = function (ctx) {
	  if (this.options.fontFill !== undefined && this.options.fontFill !== null && this.options.fontFill !== "none") {
	    ctx.fillStyle = this.options.fontFill;

	    var lineMargin = 2;

	    if (this.options.labelAlignment == 'line-center') {
	      ctx.fillRect(-this.labelDimensions.width * 0.5, -this.labelDimensions.height * 0.5, this.labelDimensions.width, this.labelDimensions.height);
	    } else if (this.options.labelAlignment == 'line-above') {
	      ctx.fillRect(-this.labelDimensions.width * 0.5, -(this.labelDimensions.height + lineMargin), this.labelDimensions.width, this.labelDimensions.height);
	    } else if (this.options.labelAlignment == 'line-below') {
	      ctx.fillRect(-this.labelDimensions.width * 0.5, lineMargin, this.labelDimensions.width, this.labelDimensions.height);
	    } else {
	      ctx.fillRect(this.labelDimensions.left, this.labelDimensions.top, this.labelDimensions.width, this.labelDimensions.height);
	    }
	  }
	};

	/**
	 * Draws the label text 
	 * @param {CanvasRenderingContext2D} ctx
	 * @param {Number} x
	 * @param {Number} yLine
	 * @param {Array} lines
	 * @param {Number} lineCount
	 * @param {Number} fontSize
	 * @private
	 */
	Edge.prototype._drawLabelText = function (ctx, x, yLine, lines, lineCount, fontSize) {
	  // draw text
	  ctx.fillStyle = this.options.fontColor || "black";
	  ctx.textAlign = "center";

	  // check for label alignment
	  if (this.options.labelAlignment != 'horizontal') {
	    var lineMargin = 2;
	    if (this.options.labelAlignment == 'line-above') {
	      ctx.textBaseline = "alphabetic";
	      yLine -= 2 * lineMargin; // distance from edge, required because we use alphabetic. Alphabetic has less difference between browsers
	    } else if (this.options.labelAlignment == 'line-below') {
	      ctx.textBaseline = "hanging";
	      yLine += 2 * lineMargin; // distance from edge, required because we use hanging. Hanging has less difference between browsers
	    } else {
	      ctx.textBaseline = "middle";
	    }
	  } else {
	    ctx.textBaseline = "middle";
	  }

	  // check for strokeWidth
	  if (this.options.fontStrokeWidth > 0) {
	    ctx.lineWidth = this.options.fontStrokeWidth;
	    ctx.strokeStyle = this.options.fontStrokeColor;
	    ctx.lineJoin = 'round';
	  }
	  for (var i = 0; i < lineCount; i++) {
	    if (this.options.fontStrokeWidth > 0) {
	      ctx.strokeText(lines[i], x, yLine);
	    }
	    ctx.fillText(lines[i], x, yLine);
	    yLine += fontSize;
	  }
	};

	/**
	 * Redraw a edge as a dashed line
	 * Draw this edge in the given canvas
	 * @author David Jordan
	 * @date 2012-08-08
	 * The 2d context of a HTML canvas can be retrieved by canvas.getContext("2d");
	 * @param {CanvasRenderingContext2D}   ctx
	 * @private
	 */
	Edge.prototype._drawDashLine = function (ctx) {
	  // set style
	  ctx.strokeStyle = this._getColor(ctx);
	  ctx.lineWidth = this._getLineWidth();

	  var via = null;
	  // only firefox and chrome support this method, else we use the legacy one.
	  if (ctx.setLineDash !== undefined) {
	    ctx.save();
	    // configure the dash pattern
	    var pattern = [0];
	    if (this.options.dash.length !== undefined && this.options.dash.gap !== undefined) {
	      pattern = [this.options.dash.length, this.options.dash.gap];
	    } else {
	      pattern = [5, 5];
	    }

	    // set dash settings for chrome or firefox
	    ctx.setLineDash(pattern);
	    ctx.lineDashOffset = 0;

	    // draw the line
	    via = this._line(ctx);

	    // restore the dash settings.
	    ctx.setLineDash([0]);
	    ctx.lineDashOffset = 0;
	    ctx.restore();
	  } else {
	    // unsupporting smooth lines
	    // draw dashed line
	    ctx.beginPath();
	    ctx.lineCap = 'round';
	    if (this.options.dash.altLength !== undefined) //If an alt dash value has been set add to the array this value
	      {
	        ctx.dashedLine(this.from.x, this.from.y, this.to.x, this.to.y, [this.options.dash.length, this.options.dash.gap, this.options.dash.altLength, this.options.dash.gap]);
	      } else if (this.options.dash.length !== undefined && this.options.dash.gap !== undefined) //If a dash and gap value has been set add to the array this value
	      {
	        ctx.dashedLine(this.from.x, this.from.y, this.to.x, this.to.y, [this.options.dash.length, this.options.dash.gap]);
	      } else //If all else fails draw a line
	      {
	        ctx.moveTo(this.from.x, this.from.y);
	        ctx.lineTo(this.to.x, this.to.y);
	      }
	    ctx.stroke();
	  }

	  // draw label
	  if (this.label) {
	    var point;
	    if (this.options.smoothCurves.enabled == true && via != null) {
	      var midpointX = 0.5 * (0.5 * (this.from.x + via.x) + 0.5 * (this.to.x + via.x));
	      var midpointY = 0.5 * (0.5 * (this.from.y + via.y) + 0.5 * (this.to.y + via.y));
	      point = { x: midpointX, y: midpointY };
	    } else {
	      point = this._pointOnLine(0.5);
	    }
	    this._label(ctx, this.label, point.x, point.y);
	  }
	};

	/**
	 * Get a point on a line
	 * @param {Number} percentage. Value between 0 (line start) and 1 (line end)
	 * @return {Object} point
	 * @private
	 */
	Edge.prototype._pointOnLine = function (percentage) {
	  return {
	    x: (1 - percentage) * this.from.x + percentage * this.to.x,
	    y: (1 - percentage) * this.from.y + percentage * this.to.y
	  };
	};

	/**
	 * Get a point on a circle
	 * @param {Number} x
	 * @param {Number} y
	 * @param {Number} radius
	 * @param {Number} percentage. Value between 0 (line start) and 1 (line end)
	 * @return {Object} point
	 * @private
	 */
	Edge.prototype._pointOnCircle = function (x, y, radius, percentage) {
	  var angle = (percentage - 3 / 8) * 2 * Math.PI;
	  return {
	    x: x + radius * Math.cos(angle),
	    y: y - radius * Math.sin(angle)
	  };
	};

	/**
	 * Redraw a edge as a line with an arrow halfway the line
	 * Draw this edge in the given canvas
	 * The 2d context of a HTML canvas can be retrieved by canvas.getContext("2d");
	 * @param {CanvasRenderingContext2D}   ctx
	 * @private
	 */
	Edge.prototype._drawArrowCenter = function (ctx) {
	  var point;
	  // set style
	  ctx.strokeStyle = this._getColor(ctx);
	  ctx.fillStyle = ctx.strokeStyle;
	  ctx.lineWidth = this._getLineWidth();

	  if (this.from != this.to) {
	    // draw line
	    var via = this._line(ctx);

	    var angle = Math.atan2(this.to.y - this.from.y, this.to.x - this.from.x);
	    var length = (10 + 5 * this.options.width) * this.options.arrowScaleFactor;
	    // draw an arrow halfway the line
	    if (this.options.smoothCurves.enabled == true && via != null) {
	      var midpointX = 0.5 * (0.5 * (this.from.x + via.x) + 0.5 * (this.to.x + via.x));
	      var midpointY = 0.5 * (0.5 * (this.from.y + via.y) + 0.5 * (this.to.y + via.y));
	      point = { x: midpointX, y: midpointY };
	    } else {
	      point = this._pointOnLine(0.5);
	    }

	    ctx.arrow(point.x, point.y, angle, length);
	    ctx.fill();
	    ctx.stroke();

	    // draw label
	    if (this.label) {
	      this._label(ctx, this.label, point.x, point.y);
	    }
	  } else {
	    // draw circle
	    var x, y;
	    var radius = 0.25 * Math.max(100, this.physics.springLength);
	    var node = this.from;
	    if (!node.width) {
	      node.resize(ctx);
	    }
	    if (node.width > node.height) {
	      x = node.x + node.width * 0.5;
	      y = node.y - radius;
	    } else {
	      x = node.x + radius;
	      y = node.y - node.height * 0.5;
	    }
	    this._circle(ctx, x, y, radius);

	    // draw all arrows
	    var angle = 0.2 * Math.PI;
	    var length = (10 + 5 * this.options.width) * this.options.arrowScaleFactor;
	    point = this._pointOnCircle(x, y, radius, 0.5);
	    ctx.arrow(point.x, point.y, angle, length);
	    ctx.fill();
	    ctx.stroke();

	    // draw label
	    if (this.label) {
	      point = this._pointOnCircle(x, y, radius, 0.5);
	      this._label(ctx, this.label, point.x, point.y);
	    }
	  }
	};

	Edge.prototype._pointOnBezier = function (t) {
	  var via = this._getViaCoordinates();

	  var x = Math.pow(1 - t, 2) * this.from.x + 2 * t * (1 - t) * via.x + Math.pow(t, 2) * this.to.x;
	  var y = Math.pow(1 - t, 2) * this.from.y + 2 * t * (1 - t) * via.y + Math.pow(t, 2) * this.to.y;

	  return { x: x, y: y };
	};

	/**
	 * This function uses binary search to look for the point where the bezier curve crosses the border of the node.
	 *
	 * @param from
	 * @param ctx
	 * @returns {*}
	 * @private
	 */
	Edge.prototype._findBorderPosition = function (from, ctx) {
	  var maxIterations = 10;
	  var iteration = 0;
	  var low = 0;
	  var high = 1;
	  var pos, angle, distanceToBorder, distanceToNodes, difference;
	  var threshold = 0.2;
	  var node = this.to;
	  if (from == true) {
	    node = this.from;
	  }

	  while (low <= high && iteration < maxIterations) {
	    var middle = (low + high) * 0.5;

	    pos = this._pointOnBezier(middle);
	    angle = Math.atan2(node.y - pos.y, node.x - pos.x);
	    distanceToBorder = node.distanceToBorder(ctx, angle);
	    distanceToNodes = Math.sqrt(Math.pow(pos.x - node.x, 2) + Math.pow(pos.y - node.y, 2));
	    difference = distanceToBorder - distanceToNodes;
	    if (Math.abs(difference) < threshold) {
	      break; // found
	    } else if (difference < 0) {
	      // distance to nodes is larger than distance to border --> t needs to be bigger if we're looking at the to node.
	      if (from == false) {
	        low = middle;
	      } else {
	        high = middle;
	      }
	    } else {
	      if (from == false) {
	        high = middle;
	      } else {
	        low = middle;
	      }
	    }

	    iteration++;
	  }
	  pos.t = middle;

	  return pos;
	};

	/**
	 * Redraw a edge as a line with an arrow
	 * Draw this edge in the given canvas
	 * The 2d context of a HTML canvas can be retrieved by canvas.getContext("2d");
	 * @param {CanvasRenderingContext2D}   ctx
	 * @private
	 */
	Edge.prototype._drawArrow = function (ctx) {
	  // set style
	  ctx.strokeStyle = this._getColor(ctx);
	  ctx.fillStyle = ctx.strokeStyle;
	  ctx.lineWidth = this._getLineWidth();

	  // set vars
	  var angle, length, arrowPos;

	  // if not connected to itself
	  if (this.from != this.to) {
	    // draw line
	    this._line(ctx);

	    // draw arrow head
	    if (this.options.smoothCurves.enabled == true) {
	      var via = this._getViaCoordinates();
	      arrowPos = this._findBorderPosition(false, ctx);
	      var guidePos = this._pointOnBezier(Math.max(0.0, arrowPos.t - 0.1));
	      angle = Math.atan2(arrowPos.y - guidePos.y, arrowPos.x - guidePos.x);
	    } else {
	      angle = Math.atan2(this.to.y - this.from.y, this.to.x - this.from.x);
	      var dx = this.to.x - this.from.x;
	      var dy = this.to.y - this.from.y;
	      var edgeSegmentLength = Math.sqrt(dx * dx + dy * dy);
	      var toBorderDist = this.to.distanceToBorder(ctx, angle);
	      var toBorderPoint = (edgeSegmentLength - toBorderDist) / edgeSegmentLength;

	      arrowPos = {};
	      arrowPos.x = (1 - toBorderPoint) * this.from.x + toBorderPoint * this.to.x;
	      arrowPos.y = (1 - toBorderPoint) * this.from.y + toBorderPoint * this.to.y;
	    }

	    // draw arrow at the end of the line
	    length = (10 + 5 * this.options.width) * this.options.arrowScaleFactor;
	    ctx.arrow(arrowPos.x, arrowPos.y, angle, length);
	    ctx.fill();
	    ctx.stroke();

	    // draw label
	    if (this.label) {
	      var point;
	      if (this.options.smoothCurves.enabled == true && via != null) {
	        point = this._pointOnBezier(0.5);
	      } else {
	        point = this._pointOnLine(0.5);
	      }
	      this._label(ctx, this.label, point.x, point.y);
	    }
	  } else {
	    // draw circle
	    var node = this.from;
	    var x, y, arrow;
	    var radius = 0.25 * Math.max(100, this.physics.springLength);
	    if (!node.width) {
	      node.resize(ctx);
	    }
	    if (node.width > node.height) {
	      x = node.x + node.width * 0.5;
	      y = node.y - radius;
	      arrow = {
	        x: x,
	        y: node.y,
	        angle: 0.9 * Math.PI
	      };
	    } else {
	      x = node.x + radius;
	      y = node.y - node.height * 0.5;
	      arrow = {
	        x: node.x,
	        y: y,
	        angle: 0.6 * Math.PI
	      };
	    }
	    ctx.beginPath();
	    // TODO: similarly, for a line without arrows, draw to the border of the nodes instead of the center
	    ctx.arc(x, y, radius, 0, 2 * Math.PI, false);
	    ctx.stroke();

	    // draw all arrows
	    var length = (10 + 5 * this.options.width) * this.options.arrowScaleFactor;
	    ctx.arrow(arrow.x, arrow.y, arrow.angle, length);
	    ctx.fill();
	    ctx.stroke();

	    // draw label
	    if (this.label) {
	      point = this._pointOnCircle(x, y, radius, 0.5);
	      this._label(ctx, this.label, point.x, point.y);
	    }
	  }
	};

	/**
	 * Calculate the distance between a point (x3,y3) and a line segment from
	 * (x1,y1) to (x2,y2).
	 * http://stackoverflow.com/questions/849211/shortest-distancae-between-a-point-and-a-line-segment
	 * @param {number} x1
	 * @param {number} y1
	 * @param {number} x2
	 * @param {number} y2
	 * @param {number} x3
	 * @param {number} y3
	 * @private
	 */
	Edge.prototype._getDistanceToEdge = function (x1, y1, x2, y2, x3, y3) {
	  // x3,y3 is the point
	  var returnValue = 0;
	  if (this.from != this.to) {
	    if (this.options.smoothCurves.enabled == true) {
	      var xVia, yVia;
	      if (this.options.smoothCurves.enabled == true && this.options.smoothCurves.dynamic == true) {
	        xVia = this.via.x;
	        yVia = this.via.y;
	      } else {
	        var via = this._getViaCoordinates();
	        xVia = via.x;
	        yVia = via.y;
	      }
	      var minDistance = 1e9;
	      var distance;
	      var i, t, x, y, lastX, lastY;
	      for (i = 0; i < 10; i++) {
	        t = 0.1 * i;
	        x = Math.pow(1 - t, 2) * x1 + 2 * t * (1 - t) * xVia + Math.pow(t, 2) * x2;
	        y = Math.pow(1 - t, 2) * y1 + 2 * t * (1 - t) * yVia + Math.pow(t, 2) * y2;
	        if (i > 0) {
	          distance = this._getDistanceToLine(lastX, lastY, x, y, x3, y3);
	          minDistance = distance < minDistance ? distance : minDistance;
	        }
	        lastX = x;lastY = y;
	      }
	      returnValue = minDistance;
	    } else {
	      returnValue = this._getDistanceToLine(x1, y1, x2, y2, x3, y3);
	    }
	  } else {
	    var x, y, dx, dy;
	    var radius = 0.25 * this.physics.springLength;
	    var node = this.from;
	    if (node.width > node.height) {
	      x = node.x + 0.5 * node.width;
	      y = node.y - radius;
	    } else {
	      x = node.x + radius;
	      y = node.y - 0.5 * node.height;
	    }
	    dx = x - x3;
	    dy = y - y3;
	    returnValue = Math.abs(Math.sqrt(dx * dx + dy * dy) - radius);
	  }

	  if (this.labelDimensions.left < x3 && this.labelDimensions.left + this.labelDimensions.width > x3 && this.labelDimensions.top < y3 && this.labelDimensions.top + this.labelDimensions.height > y3) {
	    return 0;
	  } else {
	    return returnValue;
	  }
	};

	Edge.prototype._getDistanceToLine = function (x1, y1, x2, y2, x3, y3) {
	  var px = x2 - x1,
	      py = y2 - y1,
	      something = px * px + py * py,
	      u = ((x3 - x1) * px + (y3 - y1) * py) / something;

	  if (u > 1) {
	    u = 1;
	  } else if (u < 0) {
	    u = 0;
	  }

	  var x = x1 + u * px,
	      y = y1 + u * py,
	      dx = x - x3,
	      dy = y - y3;

	  //# Note: If the actual distance does not matter,
	  //# if you only want to compare what this function
	  //# returns to other results of this function, you
	  //# can just return the squared distance instead
	  //# (i.e. remove the sqrt) to gain a little performance

	  return Math.sqrt(dx * dx + dy * dy);
	};

	/**
	 * This allows the zoom level of the network to influence the rendering
	 *
	 * @param scale
	 */
	Edge.prototype.setScale = function (scale) {
	  this.networkScaleInv = 1.0 / scale;
	};

	Edge.prototype.select = function () {
	  this.selected = true;
	};

	Edge.prototype.unselect = function () {
	  this.selected = false;
	};

	Edge.prototype.positionBezierNode = function () {
	  if (this.via !== null && this.from !== null && this.to !== null) {
	    this.via.x = 0.5 * (this.from.x + this.to.x);
	    this.via.y = 0.5 * (this.from.y + this.to.y);
	  } else if (this.via !== null) {
	    this.via.x = 0;
	    this.via.y = 0;
	  }
	};

	/**
	 * This function draws the control nodes for the manipulator.
	 * In order to enable this, only set the this.controlNodesEnabled to true.
	 * @param ctx
	 */
	Edge.prototype._drawControlNodes = function (ctx) {
	  if (this.controlNodesEnabled == true) {
	    if (this.controlNodes.from === null && this.controlNodes.to === null) {
	      var nodeIdFrom = "edgeIdFrom:".concat(this.id);
	      var nodeIdTo = "edgeIdTo:".concat(this.id);
	      var constants = {
	        nodes: { group: '', radius: 7, borderWidth: 2, borderWidthSelected: 2 },
	        physics: { damping: 0 },
	        clustering: { maxNodeSizeIncrements: 0, nodeScaling: { width: 0, height: 0, radius: 0 } }
	      };
	      this.controlNodes.from = new Node({ id: nodeIdFrom,
	        shape: 'dot',
	        color: { background: '#ff0000', border: '#3c3c3c', highlight: { background: '#07f968' } }
	      }, {}, {}, constants);
	      this.controlNodes.to = new Node({ id: nodeIdTo,
	        shape: 'dot',
	        color: { background: '#ff0000', border: '#3c3c3c', highlight: { background: '#07f968' } }
	      }, {}, {}, constants);
	    }

	    this.controlNodes.positions = {};
	    if (this.controlNodes.from.selected == false) {
	      this.controlNodes.positions.from = this.getControlNodeFromPosition(ctx);
	      this.controlNodes.from.x = this.controlNodes.positions.from.x;
	      this.controlNodes.from.y = this.controlNodes.positions.from.y;
	    }
	    if (this.controlNodes.to.selected == false) {
	      this.controlNodes.positions.to = this.getControlNodeToPosition(ctx);
	      this.controlNodes.to.x = this.controlNodes.positions.to.x;
	      this.controlNodes.to.y = this.controlNodes.positions.to.y;
	    }

	    this.controlNodes.from.draw(ctx);
	    this.controlNodes.to.draw(ctx);
	  } else {
	    this.controlNodes = { from: null, to: null, positions: {} };
	  }
	};

	/**
	 * Enable control nodes.
	 * @private
	 */
	Edge.prototype._enableControlNodes = function () {
	  this.fromBackup = this.from;
	  this.toBackup = this.to;
	  this.controlNodesEnabled = true;
	};

	/**
	 * disable control nodes and remove from dynamicEdges from old node
	 * @private
	 */
	Edge.prototype._disableControlNodes = function () {
	  this.fromId = this.from.id;
	  this.toId = this.to.id;
	  if (this.fromId != this.fromBackup.id) {
	    // from was changed, remove edge from old 'from' node dynamic edges
	    this.fromBackup.detachEdge(this);
	  } else if (this.toId != this.toBackup.id) {
	    // to was changed, remove edge from old 'to' node dynamic edges
	    this.toBackup.detachEdge(this);
	  }

	  this.fromBackup = null;
	  this.toBackup = null;
	  this.controlNodesEnabled = false;
	};

	/**
	 * This checks if one of the control nodes is selected and if so, returns the control node object. Else it returns null.
	 * @param x
	 * @param y
	 * @returns {null}
	 * @private
	 */
	Edge.prototype._getSelectedControlNode = function (x, y) {
	  var positions = this.controlNodes.positions;
	  var fromDistance = Math.sqrt(Math.pow(x - positions.from.x, 2) + Math.pow(y - positions.from.y, 2));
	  var toDistance = Math.sqrt(Math.pow(x - positions.to.x, 2) + Math.pow(y - positions.to.y, 2));

	  if (fromDistance < 15) {
	    this.connectedNode = this.from;
	    this.from = this.controlNodes.from;
	    return this.controlNodes.from;
	  } else if (toDistance < 15) {
	    this.connectedNode = this.to;
	    this.to = this.controlNodes.to;
	    return this.controlNodes.to;
	  } else {
	    return null;
	  }
	};

	/**
	 * this resets the control nodes to their original position.
	 * @private
	 */
	Edge.prototype._restoreControlNodes = function () {
	  if (this.controlNodes.from.selected == true) {
	    this.from = this.connectedNode;
	    this.connectedNode = null;
	    this.controlNodes.from.unselect();
	  } else if (this.controlNodes.to.selected == true) {
	    this.to = this.connectedNode;
	    this.connectedNode = null;
	    this.controlNodes.to.unselect();
	  }
	};

	/**
	 * this calculates the position of the control nodes on the edges of the parent nodes.
	 *
	 * @param ctx
	 * @returns {x: *, y: *}
	 */
	Edge.prototype.getControlNodeFromPosition = function (ctx) {
	  // draw arrow head
	  var controlnodeFromPos;
	  if (this.options.smoothCurves.enabled == true) {
	    controlnodeFromPos = this._findBorderPosition(true, ctx);
	  } else {
	    var angle = Math.atan2(this.to.y - this.from.y, this.to.x - this.from.x);
	    var dx = this.to.x - this.from.x;
	    var dy = this.to.y - this.from.y;
	    var edgeSegmentLength = Math.sqrt(dx * dx + dy * dy);

	    var fromBorderDist = this.from.distanceToBorder(ctx, angle + Math.PI);
	    var fromBorderPoint = (edgeSegmentLength - fromBorderDist) / edgeSegmentLength;
	    controlnodeFromPos = {};
	    controlnodeFromPos.x = fromBorderPoint * this.from.x + (1 - fromBorderPoint) * this.to.x;
	    controlnodeFromPos.y = fromBorderPoint * this.from.y + (1 - fromBorderPoint) * this.to.y;
	  }

	  return controlnodeFromPos;
	};

	/**
	 * this calculates the position of the control nodes on the edges of the parent nodes.
	 *
	 * @param ctx
	 * @returns {{from: {x: number, y: number}, to: {x: *, y: *}}}
	 */
	Edge.prototype.getControlNodeToPosition = function (ctx) {
	  // draw arrow head
	  var controlnodeFromPos, controlnodeToPos;
	  if (this.options.smoothCurves.enabled == true) {
	    controlnodeToPos = this._findBorderPosition(false, ctx);
	  } else {
	    var angle = Math.atan2(this.to.y - this.from.y, this.to.x - this.from.x);
	    var dx = this.to.x - this.from.x;
	    var dy = this.to.y - this.from.y;
	    var edgeSegmentLength = Math.sqrt(dx * dx + dy * dy);
	    var toBorderDist = this.to.distanceToBorder(ctx, angle);
	    var toBorderPoint = (edgeSegmentLength - toBorderDist) / edgeSegmentLength;

	    controlnodeToPos = {};
	    controlnodeToPos.x = (1 - toBorderPoint) * this.from.x + toBorderPoint * this.to.x;
	    controlnodeToPos.y = (1 - toBorderPoint) * this.from.y + toBorderPoint * this.to.y;
	  }

	  return controlnodeToPos;
	};

	module.exports = Edge;

/***/ },
/* 336 */
/***/ function(module, exports) {

	"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/**
	 * Popup is a class to create a popup window with some text
	 * @param {Element}  container     The container object.
	 * @param {Number} [x]
	 * @param {Number} [y]
	 * @param {String} [text]
	 * @param {Object} [style]     An object containing borderColor,
	 *                             backgroundColor, etc.
	 */
	function Popup(container, x, y, text, style) {
	  if (container) {
	    this.container = container;
	  } else {
	    this.container = document.body;
	  }

	  // x, y and text are optional, see if a style object was passed in their place
	  if (style === undefined) {
	    if ((typeof x === "undefined" ? "undefined" : _typeof(x)) === "object") {
	      style = x;
	      x = undefined;
	    } else if ((typeof text === "undefined" ? "undefined" : _typeof(text)) === "object") {
	      style = text;
	      text = undefined;
	    } else {
	      // for backwards compatibility, in case clients other than Network are creating Popup directly
	      style = {
	        fontColor: 'black',
	        fontSize: 14, // px
	        fontFace: 'verdana',
	        color: {
	          border: '#666',
	          background: '#FFFFC6'
	        }
	      };
	    }
	  }

	  this.x = 0;
	  this.y = 0;
	  this.padding = 5;
	  this.hidden = false;

	  if (x !== undefined && y !== undefined) {
	    this.setPosition(x, y);
	  }
	  if (text !== undefined) {
	    this.setText(text);
	  }

	  // create the frame
	  this.frame = document.createElement('div');
	  this.frame.className = 'network-tooltip';
	  this.frame.style.color = style.fontColor;
	  this.frame.style.backgroundColor = style.color.background;
	  this.frame.style.borderColor = style.color.border;
	  this.frame.style.fontSize = style.fontSize + 'px';
	  this.frame.style.fontFamily = style.fontFace;
	  this.container.appendChild(this.frame);
	}

	/**
	 * @param {number} x   Horizontal position of the popup window
	 * @param {number} y   Vertical position of the popup window
	 */
	Popup.prototype.setPosition = function (x, y) {
	  this.x = parseInt(x);
	  this.y = parseInt(y);
	};

	/**
	 * Set the content for the popup window. This can be HTML code or text.
	 * @param {string | Element} content
	 */
	Popup.prototype.setText = function (content) {
	  if (content instanceof Element) {
	    this.frame.innerHTML = '';
	    this.frame.appendChild(content);
	  } else {
	    this.frame.innerHTML = content; // string containing text or HTML
	  }
	};

	/**
	 * Show the popup window
	 * @param {boolean} show    Optional. Show or hide the window
	 */
	Popup.prototype.show = function (show) {
	  if (show === undefined) {
	    show = true;
	  }

	  if (show) {
	    var height = this.frame.clientHeight;
	    var width = this.frame.clientWidth;
	    var maxHeight = this.frame.parentNode.clientHeight;
	    var maxWidth = this.frame.parentNode.clientWidth;

	    var top = this.y - height;
	    if (top + height + this.padding > maxHeight) {
	      top = maxHeight - height - this.padding;
	    }
	    if (top < this.padding) {
	      top = this.padding;
	    }

	    var left = this.x;
	    if (left + width + this.padding > maxWidth) {
	      left = maxWidth - width - this.padding;
	    }
	    if (left < this.padding) {
	      left = this.padding;
	    }

	    this.frame.style.left = left + "px";
	    this.frame.style.top = top + "px";
	    this.frame.style.visibility = "visible";
	    this.hidden = false;
	  } else {
	    this.hide();
	  }
	};

	/**
	 * Hide the popup window
	 */
	Popup.prototype.hide = function () {
	  this.hidden = true;
	  this.frame.style.visibility = "hidden";
	};

	module.exports = Popup;

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var PhysicsMixin = __webpack_require__(338);
	var ClusterMixin = __webpack_require__(342);
	var SectorsMixin = __webpack_require__(343);
	var SelectionMixin = __webpack_require__(344);
	var ManipulationMixin = __webpack_require__(345);
	var NavigationMixin = __webpack_require__(346);
	var HierarchicalLayoutMixin = __webpack_require__(347);

	/**
	 * Load a mixin into the network object
	 *
	 * @param {Object} sourceVariable | this object has to contain functions.
	 * @private
	 */
	exports._loadMixin = function (sourceVariable) {
	  for (var mixinFunction in sourceVariable) {
	    if (sourceVariable.hasOwnProperty(mixinFunction)) {
	      this[mixinFunction] = sourceVariable[mixinFunction];
	    }
	  }
	};

	/**
	 * removes a mixin from the network object.
	 *
	 * @param {Object} sourceVariable | this object has to contain functions.
	 * @private
	 */
	exports._clearMixin = function (sourceVariable) {
	  for (var mixinFunction in sourceVariable) {
	    if (sourceVariable.hasOwnProperty(mixinFunction)) {
	      this[mixinFunction] = undefined;
	    }
	  }
	};

	/**
	 * Mixin the physics system and initialize the parameters required.
	 *
	 * @private
	 */
	exports._loadPhysicsSystem = function () {
	  this._loadMixin(PhysicsMixin);
	  this._loadSelectedForceSolver();
	  if (this.constants.configurePhysics == true) {
	    this._loadPhysicsConfiguration();
	  } else {
	    this._cleanupPhysicsConfiguration();
	  }
	};

	/**
	 * Mixin the cluster system and initialize the parameters required.
	 *
	 * @private
	 */
	exports._loadClusterSystem = function () {
	  this.clusterSession = 0;
	  this.hubThreshold = 5;
	  this._loadMixin(ClusterMixin);
	};

	/**
	 * Mixin the sector system and initialize the parameters required
	 *
	 * @private
	 */
	exports._loadSectorSystem = function () {
	  this.sectors = {};
	  this.activeSector = ["default"];
	  this.sectors["active"] = {};
	  this.sectors["active"]["default"] = { "nodes": {},
	    "edges": {},
	    "nodeIndices": [],
	    "formationScale": 1.0,
	    "drawingNode": undefined };
	  this.sectors["frozen"] = {};
	  this.sectors["support"] = { "nodes": {},
	    "edges": {},
	    "nodeIndices": [],
	    "formationScale": 1.0,
	    "drawingNode": undefined };

	  this.nodeIndices = this.sectors["active"]["default"]["nodeIndices"]; // the node indices list is used to speed up the computation of the repulsion fields

	  this._loadMixin(SectorsMixin);
	};

	/**
	 * Mixin the selection system and initialize the parameters required
	 *
	 * @private
	 */
	exports._loadSelectionSystem = function () {
	  this.selectionObj = { nodes: {}, edges: {} };

	  this._loadMixin(SelectionMixin);
	};

	/**
	 * Mixin the navigationUI (User Interface) system and initialize the parameters required
	 *
	 * @private
	 */
	exports._loadManipulationSystem = function () {
	  // reset global variables -- these are used by the selection of nodes and edges.
	  this.blockConnectingEdgeSelection = false;
	  this.forceAppendSelection = false;

	  if (this.constants.dataManipulation.enabled == true) {
	    // load the manipulator HTML elements. All styling done in css.
	    if (this.manipulationDiv === undefined) {
	      this.manipulationDiv = document.createElement('div');
	      this.manipulationDiv.className = 'network-manipulationDiv';
	      if (this.editMode == true) {
	        this.manipulationDiv.style.display = "block";
	      } else {
	        this.manipulationDiv.style.display = "none";
	      }
	      this.frame.appendChild(this.manipulationDiv);
	    }

	    if (this.editModeDiv === undefined) {
	      this.editModeDiv = document.createElement('div');
	      this.editModeDiv.className = 'network-manipulation-editMode';
	      if (this.editMode == true) {
	        this.editModeDiv.style.display = "none";
	      } else {
	        this.editModeDiv.style.display = "block";
	      }
	      this.frame.appendChild(this.editModeDiv);
	    }

	    if (this.closeDiv === undefined) {
	      this.closeDiv = document.createElement('div');
	      this.closeDiv.className = 'network-manipulation-closeDiv';
	      this.closeDiv.style.display = this.manipulationDiv.style.display;
	      this.frame.appendChild(this.closeDiv);
	    }

	    // load the manipulation functions
	    this._loadMixin(ManipulationMixin);

	    // create the manipulator toolbar
	    this._createManipulatorBar();
	  } else {
	    if (this.manipulationDiv !== undefined) {
	      // removes all the bindings and overloads
	      this._createManipulatorBar();

	      // remove the manipulation divs
	      this.frame.removeChild(this.manipulationDiv);
	      this.frame.removeChild(this.editModeDiv);
	      this.frame.removeChild(this.closeDiv);

	      this.manipulationDiv = undefined;
	      this.editModeDiv = undefined;
	      this.closeDiv = undefined;
	      // remove the mixin functions
	      this._clearMixin(ManipulationMixin);
	    }
	  }
	};

	/**
	 * Mixin the navigation (User Interface) system and initialize the parameters required
	 *
	 * @private
	 */
	exports._loadNavigationControls = function () {
	  this._loadMixin(NavigationMixin);
	  // the clean function removes the button divs, this is done to remove the bindings.
	  this._cleanNavigation();
	  if (this.constants.navigation.enabled == true) {
	    this._loadNavigationElements();
	  }
	};

	/**
	 * Mixin the hierarchical layout system.
	 *
	 * @private
	 */
	exports._loadHierarchySystem = function () {
	  this._loadMixin(HierarchicalLayoutMixin);
	};

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(175);
	var RepulsionMixin = __webpack_require__(339);
	var HierarchialRepulsionMixin = __webpack_require__(340);
	var BarnesHutMixin = __webpack_require__(341);

	/**
	 * Toggling barnes Hut calculation on and off.
	 *
	 * @private
	 */
	exports._toggleBarnesHut = function () {
	  this.constants.physics.barnesHut.enabled = !this.constants.physics.barnesHut.enabled;
	  this._loadSelectedForceSolver();
	  this.moving = true;
	  this.start();
	};

	/**
	 * This loads the node force solver based on the barnes hut or repulsion algorithm
	 *
	 * @private
	 */
	exports._loadSelectedForceSolver = function () {
	  // this overloads the this._calculateNodeForces
	  if (this.constants.physics.barnesHut.enabled == true) {
	    this._clearMixin(RepulsionMixin);
	    this._clearMixin(HierarchialRepulsionMixin);

	    this.constants.physics.centralGravity = this.constants.physics.barnesHut.centralGravity;
	    this.constants.physics.springLength = this.constants.physics.barnesHut.springLength;
	    this.constants.physics.springConstant = this.constants.physics.barnesHut.springConstant;
	    this.constants.physics.damping = this.constants.physics.barnesHut.damping;

	    this._loadMixin(BarnesHutMixin);
	  } else if (this.constants.physics.hierarchicalRepulsion.enabled == true) {
	    this._clearMixin(BarnesHutMixin);
	    this._clearMixin(RepulsionMixin);

	    this.constants.physics.centralGravity = this.constants.physics.hierarchicalRepulsion.centralGravity;
	    this.constants.physics.springLength = this.constants.physics.hierarchicalRepulsion.springLength;
	    this.constants.physics.springConstant = this.constants.physics.hierarchicalRepulsion.springConstant;
	    this.constants.physics.damping = this.constants.physics.hierarchicalRepulsion.damping;

	    this._loadMixin(HierarchialRepulsionMixin);
	  } else {
	    this._clearMixin(BarnesHutMixin);
	    this._clearMixin(HierarchialRepulsionMixin);
	    this.barnesHutTree = undefined;

	    this.constants.physics.centralGravity = this.constants.physics.repulsion.centralGravity;
	    this.constants.physics.springLength = this.constants.physics.repulsion.springLength;
	    this.constants.physics.springConstant = this.constants.physics.repulsion.springConstant;
	    this.constants.physics.damping = this.constants.physics.repulsion.damping;

	    this._loadMixin(RepulsionMixin);
	  }
	};

	/**
	 * Before calculating the forces, we check if we need to cluster to keep up performance and we check
	 * if there is more than one node. If it is just one node, we dont calculate anything.
	 *
	 * @private
	 */
	exports._initializeForceCalculation = function () {
	  // stop calculation if there is only one node
	  if (this.nodeIndices.length == 1) {
	    this.nodes[this.nodeIndices[0]]._setForce(0, 0);
	  } else {
	    // if there are too many nodes on screen, we cluster without repositioning
	    if (this.nodeIndices.length > this.constants.clustering.clusterThreshold && this.constants.clustering.enabled == true) {
	      this.clusterToFit(this.constants.clustering.reduceToNodes, false);
	    }

	    // we now start the force calculation
	    this._calculateForces();
	  }
	};

	/**
	 * Calculate the external forces acting on the nodes
	 * Forces are caused by: edges, repulsing forces between nodes, gravity
	 * @private
	 */
	exports._calculateForces = function () {
	  // Gravity is required to keep separated groups from floating off
	  // the forces are reset to zero in this loop by using _setForce instead
	  // of _addForce

	  this._calculateGravitationalForces();
	  this._calculateNodeForces();

	  if (this.constants.physics.springConstant > 0) {
	    if (this.constants.smoothCurves.enabled == true && this.constants.smoothCurves.dynamic == true) {
	      this._calculateSpringForcesWithSupport();
	    } else {
	      if (this.constants.physics.hierarchicalRepulsion.enabled == true) {
	        this._calculateHierarchicalSpringForces();
	      } else {
	        this._calculateSpringForces();
	      }
	    }
	  }
	};

	/**
	 * Smooth curves are created by adding invisible nodes in the center of the edges. These nodes are also
	 * handled in the calculateForces function. We then use a quadratic curve with the center node as control.
	 * This function joins the datanodes and invisible (called support) nodes into one object.
	 * We do this so we do not contaminate this.nodes with the support nodes.
	 *
	 * @private
	 */
	exports._updateCalculationNodes = function () {
	  if (this.constants.smoothCurves.enabled == true && this.constants.smoothCurves.dynamic == true) {
	    this.calculationNodes = {};
	    this.calculationNodeIndices = [];

	    for (var nodeId in this.nodes) {
	      if (this.nodes.hasOwnProperty(nodeId)) {
	        this.calculationNodes[nodeId] = this.nodes[nodeId];
	      }
	    }
	    var supportNodes = this.sectors['support']['nodes'];
	    for (var supportNodeId in supportNodes) {
	      if (supportNodes.hasOwnProperty(supportNodeId)) {
	        if (this.edges.hasOwnProperty(supportNodes[supportNodeId].parentEdgeId)) {
	          this.calculationNodes[supportNodeId] = supportNodes[supportNodeId];
	        } else {
	          supportNodes[supportNodeId]._setForce(0, 0);
	        }
	      }
	    }

	    for (var idx in this.calculationNodes) {
	      if (this.calculationNodes.hasOwnProperty(idx)) {
	        this.calculationNodeIndices.push(idx);
	      }
	    }
	  } else {
	    this.calculationNodes = this.nodes;
	    this.calculationNodeIndices = this.nodeIndices;
	  }
	};

	/**
	 * this function applies the central gravity effect to keep groups from floating off
	 *
	 * @private
	 */
	exports._calculateGravitationalForces = function () {
	  var dx, dy, distance, node, i;
	  var nodes = this.calculationNodes;
	  var gravity = this.constants.physics.centralGravity;
	  var gravityForce = 0;

	  for (i = 0; i < this.calculationNodeIndices.length; i++) {
	    node = nodes[this.calculationNodeIndices[i]];
	    node.damping = this.constants.physics.damping; // possibly add function to alter damping properties of clusters.
	    // gravity does not apply when we are in a pocket sector
	    if (this._sector() == "default" && gravity != 0) {
	      dx = -node.x;
	      dy = -node.y;
	      distance = Math.sqrt(dx * dx + dy * dy);

	      gravityForce = distance == 0 ? 0 : gravity / distance;
	      node.fx = dx * gravityForce;
	      node.fy = dy * gravityForce;
	    } else {
	      node.fx = 0;
	      node.fy = 0;
	    }
	  }
	};

	/**
	 * this function calculates the effects of the springs in the case of unsmooth curves.
	 *
	 * @private
	 */
	exports._calculateSpringForces = function () {
	  var edgeLength, edge, edgeId;
	  var dx, dy, fx, fy, springForce, distance;
	  var edges = this.edges;

	  // forces caused by the edges, modelled as springs
	  for (edgeId in edges) {
	    if (edges.hasOwnProperty(edgeId)) {
	      edge = edges[edgeId];
	      if (edge.connected) {
	        // only calculate forces if nodes are in the same sector
	        if (this.nodes.hasOwnProperty(edge.toId) && this.nodes.hasOwnProperty(edge.fromId)) {
	          edgeLength = edge.physics.springLength;
	          // this implies that the edges between big clusters are longer
	          edgeLength += (edge.to.clusterSize + edge.from.clusterSize - 2) * this.constants.clustering.edgeGrowth;

	          dx = edge.from.x - edge.to.x;
	          dy = edge.from.y - edge.to.y;
	          distance = Math.sqrt(dx * dx + dy * dy);

	          if (distance == 0) {
	            distance = 0.01;
	          }

	          // the 1/distance is so the fx and fy can be calculated without sine or cosine.
	          springForce = this.constants.physics.springConstant * (edgeLength - distance) / distance;

	          fx = dx * springForce;
	          fy = dy * springForce;

	          edge.from.fx += fx;
	          edge.from.fy += fy;
	          edge.to.fx -= fx;
	          edge.to.fy -= fy;
	        }
	      }
	    }
	  }
	};

	/**
	 * This function calculates the springforces on the nodes, accounting for the support nodes.
	 *
	 * @private
	 */
	exports._calculateSpringForcesWithSupport = function () {
	  var edgeLength, edge, edgeId, combinedClusterSize;
	  var edges = this.edges;

	  // forces caused by the edges, modelled as springs
	  for (edgeId in edges) {
	    if (edges.hasOwnProperty(edgeId)) {
	      edge = edges[edgeId];
	      if (edge.connected) {
	        // only calculate forces if nodes are in the same sector
	        if (this.nodes.hasOwnProperty(edge.toId) && this.nodes.hasOwnProperty(edge.fromId)) {
	          if (edge.via != null) {
	            var node1 = edge.to;
	            var node2 = edge.via;
	            var node3 = edge.from;

	            edgeLength = edge.physics.springLength;

	            combinedClusterSize = node1.clusterSize + node3.clusterSize - 2;

	            // this implies that the edges between big clusters are longer
	            edgeLength += combinedClusterSize * this.constants.clustering.edgeGrowth;
	            this._calculateSpringForce(node1, node2, 0.5 * edgeLength);
	            this._calculateSpringForce(node2, node3, 0.5 * edgeLength);
	          }
	        }
	      }
	    }
	  }
	};

	/**
	 * This is the code actually performing the calculation for the function above. It is split out to avoid repetition.
	 *
	 * @param node1
	 * @param node2
	 * @param edgeLength
	 * @private
	 */
	exports._calculateSpringForce = function (node1, node2, edgeLength) {
	  var dx, dy, fx, fy, springForce, distance;

	  dx = node1.x - node2.x;
	  dy = node1.y - node2.y;
	  distance = Math.sqrt(dx * dx + dy * dy);

	  if (distance == 0) {
	    distance = 0.01;
	  }

	  // the 1/distance is so the fx and fy can be calculated without sine or cosine.
	  springForce = this.constants.physics.springConstant * (edgeLength - distance) / distance;

	  fx = dx * springForce;
	  fy = dy * springForce;

	  node1.fx += fx;
	  node1.fy += fy;
	  node2.fx -= fx;
	  node2.fy -= fy;
	};

	exports._cleanupPhysicsConfiguration = function () {
	  if (this.physicsConfiguration !== undefined) {
	    while (this.physicsConfiguration.hasChildNodes()) {
	      this.physicsConfiguration.removeChild(this.physicsConfiguration.firstChild);
	    }

	    this.physicsConfiguration.parentNode.removeChild(this.physicsConfiguration);
	    this.physicsConfiguration = undefined;
	  }
	};

	/**
	 * Load the HTML for the physics config and bind it
	 * @private
	 */
	exports._loadPhysicsConfiguration = function () {
	  if (this.physicsConfiguration === undefined) {
	    this.backupConstants = {};
	    util.deepExtend(this.backupConstants, this.constants);

	    var maxGravitational = Math.max(20000, -1 * this.constants.physics.barnesHut.gravitationalConstant * 10);
	    var maxSpring = Math.min(0.05, this.constants.physics.barnesHut.springConstant * 10);

	    var hierarchicalLayoutDirections = ["LR", "RL", "UD", "DU"];
	    this.physicsConfiguration = document.createElement('div');
	    this.physicsConfiguration.className = "PhysicsConfiguration";
	    this.physicsConfiguration.innerHTML = '' + '<table><tr><td><b>Simulation Mode:</b></td></tr>' + '<tr>' + '<td width="120px"><input type="radio" name="graph_physicsMethod" id="graph_physicsMethod1" value="BH" checked="checked">Barnes Hut</td>' + '<td width="120px"><input type="radio" name="graph_physicsMethod" id="graph_physicsMethod2" value="R">Repulsion</td>' + '<td width="120px"><input type="radio" name="graph_physicsMethod" id="graph_physicsMethod3" value="H">Hierarchical</td>' + '</tr>' + '</table>' + '<table id="graph_BH_table" style="display:none">' + '<tr><td><b>Barnes Hut</b></td></tr>' + '<tr>' + '<td width="150px">gravitationalConstant</td><td>0</td><td><input type="range" min="0" max="' + maxGravitational + '" value="' + -1 * this.constants.physics.barnesHut.gravitationalConstant + '" step="25" style="width:300px" id="graph_BH_gc"></td><td  width="50px">-' + maxGravitational + '</td><td><input value="' + this.constants.physics.barnesHut.gravitationalConstant + '" id="graph_BH_gc_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">centralGravity</td><td>0</td><td><input type="range" min="0" max="6"  value="' + this.constants.physics.barnesHut.centralGravity + '" step="0.05"  style="width:300px" id="graph_BH_cg"></td><td>3</td><td><input value="' + this.constants.physics.barnesHut.centralGravity + '" id="graph_BH_cg_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">springLength</td><td>0</td><td><input type="range" min="0" max="500" value="' + this.constants.physics.barnesHut.springLength + '" step="1" style="width:300px" id="graph_BH_sl"></td><td>500</td><td><input value="' + this.constants.physics.barnesHut.springLength + '" id="graph_BH_sl_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">springConstant</td><td>0</td><td><input type="range" min="0" max="' + maxSpring + '" value="' + this.constants.physics.barnesHut.springConstant + '" step="0.0001" style="width:300px" id="graph_BH_sc"></td><td>' + maxSpring + '</td><td><input value="' + this.constants.physics.barnesHut.springConstant + '" id="graph_BH_sc_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">damping</td><td>0</td><td><input type="range" min="0" max="0.3" value="' + this.constants.physics.barnesHut.damping + '" step="0.005" style="width:300px" id="graph_BH_damp"></td><td>0.3</td><td><input value="' + this.constants.physics.barnesHut.damping + '" id="graph_BH_damp_value" style="width:60px"></td>' + '</tr>' + '</table>' + '<table id="graph_R_table" style="display:none">' + '<tr><td><b>Repulsion</b></td></tr>' + '<tr>' + '<td width="150px">nodeDistance</td><td>0</td><td><input type="range" min="0" max="300" value="' + this.constants.physics.repulsion.nodeDistance + '" step="1" style="width:300px" id="graph_R_nd"></td><td width="50px">300</td><td><input value="' + this.constants.physics.repulsion.nodeDistance + '" id="graph_R_nd_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">centralGravity</td><td>0</td><td><input type="range" min="0" max="3"  value="' + this.constants.physics.repulsion.centralGravity + '" step="0.05"  style="width:300px" id="graph_R_cg"></td><td>3</td><td><input value="' + this.constants.physics.repulsion.centralGravity + '" id="graph_R_cg_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">springLength</td><td>0</td><td><input type="range" min="0" max="500" value="' + this.constants.physics.repulsion.springLength + '" step="1" style="width:300px" id="graph_R_sl"></td><td>500</td><td><input value="' + this.constants.physics.repulsion.springLength + '" id="graph_R_sl_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">springConstant</td><td>0</td><td><input type="range" min="0" max="0.5" value="' + this.constants.physics.repulsion.springConstant + '" step="0.001" style="width:300px" id="graph_R_sc"></td><td>0.5</td><td><input value="' + this.constants.physics.repulsion.springConstant + '" id="graph_R_sc_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">damping</td><td>0</td><td><input type="range" min="0" max="0.3" value="' + this.constants.physics.repulsion.damping + '" step="0.005" style="width:300px" id="graph_R_damp"></td><td>0.3</td><td><input value="' + this.constants.physics.repulsion.damping + '" id="graph_R_damp_value" style="width:60px"></td>' + '</tr>' + '</table>' + '<table id="graph_H_table" style="display:none">' + '<tr><td width="150"><b>Hierarchical</b></td></tr>' + '<tr>' + '<td width="150px">nodeDistance</td><td>0</td><td><input type="range" min="0" max="300" value="' + this.constants.physics.hierarchicalRepulsion.nodeDistance + '" step="1" style="width:300px" id="graph_H_nd"></td><td width="50px">300</td><td><input value="' + this.constants.physics.hierarchicalRepulsion.nodeDistance + '" id="graph_H_nd_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">centralGravity</td><td>0</td><td><input type="range" min="0" max="3"  value="' + this.constants.physics.hierarchicalRepulsion.centralGravity + '" step="0.05"  style="width:300px" id="graph_H_cg"></td><td>3</td><td><input value="' + this.constants.physics.hierarchicalRepulsion.centralGravity + '" id="graph_H_cg_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">springLength</td><td>0</td><td><input type="range" min="0" max="500" value="' + this.constants.physics.hierarchicalRepulsion.springLength + '" step="1" style="width:300px" id="graph_H_sl"></td><td>500</td><td><input value="' + this.constants.physics.hierarchicalRepulsion.springLength + '" id="graph_H_sl_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">springConstant</td><td>0</td><td><input type="range" min="0" max="0.5" value="' + this.constants.physics.hierarchicalRepulsion.springConstant + '" step="0.001" style="width:300px" id="graph_H_sc"></td><td>0.5</td><td><input value="' + this.constants.physics.hierarchicalRepulsion.springConstant + '" id="graph_H_sc_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">damping</td><td>0</td><td><input type="range" min="0" max="0.3" value="' + this.constants.physics.hierarchicalRepulsion.damping + '" step="0.005" style="width:300px" id="graph_H_damp"></td><td>0.3</td><td><input value="' + this.constants.physics.hierarchicalRepulsion.damping + '" id="graph_H_damp_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">direction</td><td>1</td><td><input type="range" min="0" max="3" value="' + hierarchicalLayoutDirections.indexOf(this.constants.hierarchicalLayout.direction) + '" step="1" style="width:300px" id="graph_H_direction"></td><td>4</td><td><input value="' + this.constants.hierarchicalLayout.direction + '" id="graph_H_direction_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">levelSeparation</td><td>1</td><td><input type="range" min="0" max="500" value="' + this.constants.hierarchicalLayout.levelSeparation + '" step="1" style="width:300px" id="graph_H_levsep"></td><td>500</td><td><input value="' + this.constants.hierarchicalLayout.levelSeparation + '" id="graph_H_levsep_value" style="width:60px"></td>' + '</tr>' + '<tr>' + '<td width="150px">nodeSpacing</td><td>1</td><td><input type="range" min="0" max="500" value="' + this.constants.hierarchicalLayout.nodeSpacing + '" step="1" style="width:300px" id="graph_H_nspac"></td><td>500</td><td><input value="' + this.constants.hierarchicalLayout.nodeSpacing + '" id="graph_H_nspac_value" style="width:60px"></td>' + '</tr>' + '</table>' + '<table><tr><td><b>Options:</b></td></tr>' + '<tr>' + '<td width="180px"><input type="button" id="graph_toggleSmooth" value="Toggle smoothCurves" style="width:150px"></td>' + '<td width="180px"><input type="button" id="graph_repositionNodes" value="Reinitialize" style="width:150px"></td>' + '<td width="180px"><input type="button" id="graph_generateOptions" value="Generate Options" style="width:150px"></td>' + '</tr>' + '</table>';
	    this.containerElement.parentElement.insertBefore(this.physicsConfiguration, this.containerElement);
	    this.optionsDiv = document.createElement("div");
	    this.optionsDiv.style.fontSize = "14px";
	    this.optionsDiv.style.fontFamily = "verdana";
	    this.containerElement.parentElement.insertBefore(this.optionsDiv, this.containerElement);

	    var rangeElement;
	    rangeElement = document.getElementById('graph_BH_gc');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_BH_gc', -1, "physics_barnesHut_gravitationalConstant");
	    rangeElement = document.getElementById('graph_BH_cg');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_BH_cg', 1, "physics_centralGravity");
	    rangeElement = document.getElementById('graph_BH_sc');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_BH_sc', 1, "physics_springConstant");
	    rangeElement = document.getElementById('graph_BH_sl');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_BH_sl', 1, "physics_springLength");
	    rangeElement = document.getElementById('graph_BH_damp');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_BH_damp', 1, "physics_damping");

	    rangeElement = document.getElementById('graph_R_nd');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_R_nd', 1, "physics_repulsion_nodeDistance");
	    rangeElement = document.getElementById('graph_R_cg');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_R_cg', 1, "physics_centralGravity");
	    rangeElement = document.getElementById('graph_R_sc');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_R_sc', 1, "physics_springConstant");
	    rangeElement = document.getElementById('graph_R_sl');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_R_sl', 1, "physics_springLength");
	    rangeElement = document.getElementById('graph_R_damp');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_R_damp', 1, "physics_damping");

	    rangeElement = document.getElementById('graph_H_nd');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_H_nd', 1, "physics_hierarchicalRepulsion_nodeDistance");
	    rangeElement = document.getElementById('graph_H_cg');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_H_cg', 1, "physics_centralGravity");
	    rangeElement = document.getElementById('graph_H_sc');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_H_sc', 1, "physics_springConstant");
	    rangeElement = document.getElementById('graph_H_sl');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_H_sl', 1, "physics_springLength");
	    rangeElement = document.getElementById('graph_H_damp');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_H_damp', 1, "physics_damping");
	    rangeElement = document.getElementById('graph_H_direction');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_H_direction', hierarchicalLayoutDirections, "hierarchicalLayout_direction");
	    rangeElement = document.getElementById('graph_H_levsep');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_H_levsep', 1, "hierarchicalLayout_levelSeparation");
	    rangeElement = document.getElementById('graph_H_nspac');
	    rangeElement.onchange = showValueOfRange.bind(this, 'graph_H_nspac', 1, "hierarchicalLayout_nodeSpacing");

	    var radioButton1 = document.getElementById("graph_physicsMethod1");
	    var radioButton2 = document.getElementById("graph_physicsMethod2");
	    var radioButton3 = document.getElementById("graph_physicsMethod3");
	    radioButton2.checked = true;
	    if (this.constants.physics.barnesHut.enabled) {
	      radioButton1.checked = true;
	    }
	    if (this.constants.hierarchicalLayout.enabled) {
	      radioButton3.checked = true;
	    }

	    var graph_toggleSmooth = document.getElementById("graph_toggleSmooth");
	    var graph_repositionNodes = document.getElementById("graph_repositionNodes");
	    var graph_generateOptions = document.getElementById("graph_generateOptions");

	    graph_toggleSmooth.onclick = graphToggleSmoothCurves.bind(this);
	    graph_repositionNodes.onclick = graphRepositionNodes.bind(this);
	    graph_generateOptions.onclick = graphGenerateOptions.bind(this);
	    if (this.constants.smoothCurves == true && this.constants.dynamicSmoothCurves == false) {
	      graph_toggleSmooth.style.background = "#A4FF56";
	    } else {
	      graph_toggleSmooth.style.background = "#FF8532";
	    }

	    switchConfigurations.apply(this);

	    radioButton1.onchange = switchConfigurations.bind(this);
	    radioButton2.onchange = switchConfigurations.bind(this);
	    radioButton3.onchange = switchConfigurations.bind(this);
	  }
	};

	/**
	 * This overwrites the this.constants.
	 *
	 * @param constantsVariableName
	 * @param value
	 * @private
	 */
	exports._overWriteGraphConstants = function (constantsVariableName, value) {
	  var nameArray = constantsVariableName.split("_");
	  if (nameArray.length == 1) {
	    this.constants[nameArray[0]] = value;
	  } else if (nameArray.length == 2) {
	    this.constants[nameArray[0]][nameArray[1]] = value;
	  } else if (nameArray.length == 3) {
	    this.constants[nameArray[0]][nameArray[1]][nameArray[2]] = value;
	  }
	};

	/**
	 * this function is bound to the toggle smooth curves button. That is also why it is not in the prototype.
	 */
	function graphToggleSmoothCurves() {
	  this.constants.smoothCurves.enabled = !this.constants.smoothCurves.enabled;
	  var graph_toggleSmooth = document.getElementById("graph_toggleSmooth");
	  if (this.constants.smoothCurves.enabled == true) {
	    graph_toggleSmooth.style.background = "#A4FF56";
	  } else {
	    graph_toggleSmooth.style.background = "#FF8532";
	  }

	  this._configureSmoothCurves(false);
	}

	/**
	 * this function is used to scramble the nodes
	 *
	 */
	function graphRepositionNodes() {
	  for (var nodeId in this.calculationNodes) {
	    if (this.calculationNodes.hasOwnProperty(nodeId)) {
	      this.calculationNodes[nodeId].vx = 0;this.calculationNodes[nodeId].vy = 0;
	      this.calculationNodes[nodeId].fx = 0;this.calculationNodes[nodeId].fy = 0;
	    }
	  }
	  if (this.constants.hierarchicalLayout.enabled == true) {
	    this._setupHierarchicalLayout();
	    showValueOfRange.call(this, 'graph_H_nd', 1, "physics_hierarchicalRepulsion_nodeDistance");
	    showValueOfRange.call(this, 'graph_H_cg', 1, "physics_centralGravity");
	    showValueOfRange.call(this, 'graph_H_sc', 1, "physics_springConstant");
	    showValueOfRange.call(this, 'graph_H_sl', 1, "physics_springLength");
	    showValueOfRange.call(this, 'graph_H_damp', 1, "physics_damping");
	  } else {
	    this.repositionNodes();
	  }
	  this.moving = true;
	  this.start();
	}

	/**
	 *  this is used to generate an options file from the playing with physics system.
	 */
	function graphGenerateOptions() {
	  var options = "No options are required, default values used.";
	  var optionsSpecific = [];
	  var radioButton1 = document.getElementById("graph_physicsMethod1");
	  var radioButton2 = document.getElementById("graph_physicsMethod2");
	  if (radioButton1.checked == true) {
	    if (this.constants.physics.barnesHut.gravitationalConstant != this.backupConstants.physics.barnesHut.gravitationalConstant) {
	      optionsSpecific.push("gravitationalConstant: " + this.constants.physics.barnesHut.gravitationalConstant);
	    }
	    if (this.constants.physics.centralGravity != this.backupConstants.physics.barnesHut.centralGravity) {
	      optionsSpecific.push("centralGravity: " + this.constants.physics.centralGravity);
	    }
	    if (this.constants.physics.springLength != this.backupConstants.physics.barnesHut.springLength) {
	      optionsSpecific.push("springLength: " + this.constants.physics.springLength);
	    }
	    if (this.constants.physics.springConstant != this.backupConstants.physics.barnesHut.springConstant) {
	      optionsSpecific.push("springConstant: " + this.constants.physics.springConstant);
	    }
	    if (this.constants.physics.damping != this.backupConstants.physics.barnesHut.damping) {
	      optionsSpecific.push("damping: " + this.constants.physics.damping);
	    }
	    if (optionsSpecific.length != 0) {
	      options = "var options = {";
	      options += "physics: {barnesHut: {";
	      for (var i = 0; i < optionsSpecific.length; i++) {
	        options += optionsSpecific[i];
	        if (i < optionsSpecific.length - 1) {
	          options += ", ";
	        }
	      }
	      options += '}}';
	    }
	    if (this.constants.smoothCurves.enabled != this.backupConstants.smoothCurves.enabled) {
	      if (optionsSpecific.length == 0) {
	        options = "var options = {";
	      } else {
	        options += ", ";
	      }
	      options += "smoothCurves: " + this.constants.smoothCurves.enabled;
	    }
	    if (options != "No options are required, default values used.") {
	      options += '};';
	    }
	  } else if (radioButton2.checked == true) {
	    options = "var options = {";
	    options += "physics: {barnesHut: {enabled: false}";
	    if (this.constants.physics.repulsion.nodeDistance != this.backupConstants.physics.repulsion.nodeDistance) {
	      optionsSpecific.push("nodeDistance: " + this.constants.physics.repulsion.nodeDistance);
	    }
	    if (this.constants.physics.centralGravity != this.backupConstants.physics.repulsion.centralGravity) {
	      optionsSpecific.push("centralGravity: " + this.constants.physics.centralGravity);
	    }
	    if (this.constants.physics.springLength != this.backupConstants.physics.repulsion.springLength) {
	      optionsSpecific.push("springLength: " + this.constants.physics.springLength);
	    }
	    if (this.constants.physics.springConstant != this.backupConstants.physics.repulsion.springConstant) {
	      optionsSpecific.push("springConstant: " + this.constants.physics.springConstant);
	    }
	    if (this.constants.physics.damping != this.backupConstants.physics.repulsion.damping) {
	      optionsSpecific.push("damping: " + this.constants.physics.damping);
	    }
	    if (optionsSpecific.length != 0) {
	      options += ", repulsion: {";
	      for (var i = 0; i < optionsSpecific.length; i++) {
	        options += optionsSpecific[i];
	        if (i < optionsSpecific.length - 1) {
	          options += ", ";
	        }
	      }
	      options += '}}';
	    }
	    if (optionsSpecific.length == 0) {
	      options += "}";
	    }
	    if (this.constants.smoothCurves != this.backupConstants.smoothCurves) {
	      options += ", smoothCurves: " + this.constants.smoothCurves;
	    }
	    options += '};';
	  } else {
	    options = "var options = {";
	    if (this.constants.physics.hierarchicalRepulsion.nodeDistance != this.backupConstants.physics.hierarchicalRepulsion.nodeDistance) {
	      optionsSpecific.push("nodeDistance: " + this.constants.physics.hierarchicalRepulsion.nodeDistance);
	    }
	    if (this.constants.physics.centralGravity != this.backupConstants.physics.hierarchicalRepulsion.centralGravity) {
	      optionsSpecific.push("centralGravity: " + this.constants.physics.centralGravity);
	    }
	    if (this.constants.physics.springLength != this.backupConstants.physics.hierarchicalRepulsion.springLength) {
	      optionsSpecific.push("springLength: " + this.constants.physics.springLength);
	    }
	    if (this.constants.physics.springConstant != this.backupConstants.physics.hierarchicalRepulsion.springConstant) {
	      optionsSpecific.push("springConstant: " + this.constants.physics.springConstant);
	    }
	    if (this.constants.physics.damping != this.backupConstants.physics.hierarchicalRepulsion.damping) {
	      optionsSpecific.push("damping: " + this.constants.physics.damping);
	    }
	    if (optionsSpecific.length != 0) {
	      options += "physics: {hierarchicalRepulsion: {";
	      for (var i = 0; i < optionsSpecific.length; i++) {
	        options += optionsSpecific[i];
	        if (i < optionsSpecific.length - 1) {
	          options += ", ";
	        }
	      }
	      options += '}},';
	    }
	    options += 'hierarchicalLayout: {';
	    optionsSpecific = [];
	    if (this.constants.hierarchicalLayout.direction != this.backupConstants.hierarchicalLayout.direction) {
	      optionsSpecific.push("direction: " + this.constants.hierarchicalLayout.direction);
	    }
	    if (Math.abs(this.constants.hierarchicalLayout.levelSeparation) != this.backupConstants.hierarchicalLayout.levelSeparation) {
	      optionsSpecific.push("levelSeparation: " + this.constants.hierarchicalLayout.levelSeparation);
	    }
	    if (this.constants.hierarchicalLayout.nodeSpacing != this.backupConstants.hierarchicalLayout.nodeSpacing) {
	      optionsSpecific.push("nodeSpacing: " + this.constants.hierarchicalLayout.nodeSpacing);
	    }
	    if (optionsSpecific.length != 0) {
	      for (var i = 0; i < optionsSpecific.length; i++) {
	        options += optionsSpecific[i];
	        if (i < optionsSpecific.length - 1) {
	          options += ", ";
	        }
	      }
	      options += '}';
	    } else {
	      options += "enabled:true}";
	    }
	    options += '};';
	  }

	  this.optionsDiv.innerHTML = options;
	}

	/**
	 * this is used to switch between barnesHut, repulsion and hierarchical.
	 *
	 */
	function switchConfigurations() {
	  var ids = ["graph_BH_table", "graph_R_table", "graph_H_table"];
	  var radioButton = document.querySelector('input[name="graph_physicsMethod"]:checked').value;
	  var tableId = "graph_" + radioButton + "_table";
	  var table = document.getElementById(tableId);
	  table.style.display = "block";
	  for (var i = 0; i < ids.length; i++) {
	    if (ids[i] != tableId) {
	      table = document.getElementById(ids[i]);
	      table.style.display = "none";
	    }
	  }
	  this._restoreNodes();
	  if (radioButton == "R") {
	    this.constants.hierarchicalLayout.enabled = false;
	    this.constants.physics.hierarchicalRepulsion.enabled = false;
	    this.constants.physics.barnesHut.enabled = false;
	  } else if (radioButton == "H") {
	    if (this.constants.hierarchicalLayout.enabled == false) {
	      this.constants.hierarchicalLayout.enabled = true;
	      this.constants.physics.hierarchicalRepulsion.enabled = true;
	      this.constants.physics.barnesHut.enabled = false;
	      this.constants.smoothCurves.enabled = false;
	      this._setupHierarchicalLayout();
	    }
	  } else {
	    this.constants.hierarchicalLayout.enabled = false;
	    this.constants.physics.hierarchicalRepulsion.enabled = false;
	    this.constants.physics.barnesHut.enabled = true;
	  }
	  this._loadSelectedForceSolver();
	  var graph_toggleSmooth = document.getElementById("graph_toggleSmooth");
	  if (this.constants.smoothCurves.enabled == true) {
	    graph_toggleSmooth.style.background = "#A4FF56";
	  } else {
	    graph_toggleSmooth.style.background = "#FF8532";
	  }
	  this.moving = true;
	  this.start();
	}

	/**
	 * this generates the ranges depending on the iniital values.
	 *
	 * @param id
	 * @param map
	 * @param constantsVariableName
	 */
	function showValueOfRange(id, map, constantsVariableName) {
	  var valueId = id + "_value";
	  var rangeValue = document.getElementById(id).value;

	  if (Array.isArray(map)) {
	    document.getElementById(valueId).value = map[parseInt(rangeValue)];
	    this._overWriteGraphConstants(constantsVariableName, map[parseInt(rangeValue)]);
	  } else {
	    document.getElementById(valueId).value = parseInt(map) * parseFloat(rangeValue);
	    this._overWriteGraphConstants(constantsVariableName, parseInt(map) * parseFloat(rangeValue));
	  }

	  if (constantsVariableName == "hierarchicalLayout_direction" || constantsVariableName == "hierarchicalLayout_levelSeparation" || constantsVariableName == "hierarchicalLayout_nodeSpacing") {
	    this._setupHierarchicalLayout();
	  }
	  this.moving = true;
	  this.start();
	}

/***/ },
/* 339 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Calculate the forces the nodes apply on each other based on a repulsion field.
	 * This field is linearly approximated.
	 *
	 * @private
	 */
	exports._calculateNodeForces = function () {
	  var dx, dy, angle, distance, fx, fy, combinedClusterSize, repulsingForce, node1, node2, i, j;

	  var nodes = this.calculationNodes;
	  var nodeIndices = this.calculationNodeIndices;

	  // approximation constants
	  var a_base = -2 / 3;
	  var b = 4 / 3;

	  // repulsing forces between nodes
	  var nodeDistance = this.constants.physics.repulsion.nodeDistance;
	  var minimumDistance = nodeDistance;

	  // we loop from i over all but the last entree in the array
	  // j loops from i+1 to the last. This way we do not double count any of the indices, nor i == j
	  for (i = 0; i < nodeIndices.length - 1; i++) {
	    node1 = nodes[nodeIndices[i]];
	    for (j = i + 1; j < nodeIndices.length; j++) {
	      node2 = nodes[nodeIndices[j]];
	      combinedClusterSize = node1.clusterSize + node2.clusterSize - 2;

	      dx = node2.x - node1.x;
	      dy = node2.y - node1.y;
	      distance = Math.sqrt(dx * dx + dy * dy);

	      // same condition as BarnesHut, making sure nodes are never 100% overlapping.
	      if (distance == 0) {
	        distance = 0.1 * Math.random();
	        dx = distance;
	      }

	      minimumDistance = combinedClusterSize == 0 ? nodeDistance : nodeDistance * (1 + combinedClusterSize * this.constants.clustering.distanceAmplification);
	      var a = a_base / minimumDistance;
	      if (distance < 2 * minimumDistance) {
	        if (distance < 0.5 * minimumDistance) {
	          repulsingForce = 1.0;
	        } else {
	          repulsingForce = a * distance + b; // linear approx of  1 / (1 + Math.exp((distance / minimumDistance - 1) * steepness))
	        }

	        // amplify the repulsion for clusters.
	        repulsingForce *= combinedClusterSize == 0 ? 1 : 1 + combinedClusterSize * this.constants.clustering.forceAmplification;
	        repulsingForce = repulsingForce / Math.max(distance, 0.01 * minimumDistance);

	        fx = dx * repulsingForce;
	        fy = dy * repulsingForce;
	        node1.fx -= fx;
	        node1.fy -= fy;
	        node2.fx += fx;
	        node2.fy += fy;
	      }
	    }
	  }
	};

/***/ },
/* 340 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Calculate the forces the nodes apply on eachother based on a repulsion field.
	 * This field is linearly approximated.
	 *
	 * @private
	 */
	exports._calculateNodeForces = function () {
	  var dx, dy, distance, fx, fy, repulsingForce, node1, node2, i, j;

	  var nodes = this.calculationNodes;
	  var nodeIndices = this.calculationNodeIndices;

	  // repulsing forces between nodes
	  var nodeDistance = this.constants.physics.hierarchicalRepulsion.nodeDistance;

	  // we loop from i over all but the last entree in the array
	  // j loops from i+1 to the last. This way we do not double count any of the indices, nor i == j
	  for (i = 0; i < nodeIndices.length - 1; i++) {
	    node1 = nodes[nodeIndices[i]];
	    for (j = i + 1; j < nodeIndices.length; j++) {
	      node2 = nodes[nodeIndices[j]];

	      // nodes only affect nodes on their level
	      if (node1.level == node2.level) {

	        dx = node2.x - node1.x;
	        dy = node2.y - node1.y;
	        distance = Math.sqrt(dx * dx + dy * dy);

	        var steepness = 0.05;
	        if (distance < nodeDistance) {
	          repulsingForce = -Math.pow(steepness * distance, 2) + Math.pow(steepness * nodeDistance, 2);
	        } else {
	          repulsingForce = 0;
	        }
	        // normalize force with
	        if (distance == 0) {
	          distance = 0.01;
	        } else {
	          repulsingForce = repulsingForce / distance;
	        }
	        fx = dx * repulsingForce;
	        fy = dy * repulsingForce;

	        node1.fx -= fx;
	        node1.fy -= fy;
	        node2.fx += fx;
	        node2.fy += fy;
	      }
	    }
	  }
	};

	/**
	 * this function calculates the effects of the springs in the case of unsmooth curves.
	 *
	 * @private
	 */
	exports._calculateHierarchicalSpringForces = function () {
	  var edgeLength, edge, edgeId;
	  var dx, dy, fx, fy, springForce, distance;
	  var edges = this.edges;

	  var nodes = this.calculationNodes;
	  var nodeIndices = this.calculationNodeIndices;

	  for (var i = 0; i < nodeIndices.length; i++) {
	    var node1 = nodes[nodeIndices[i]];
	    node1.springFx = 0;
	    node1.springFy = 0;
	  }

	  // forces caused by the edges, modelled as springs
	  for (edgeId in edges) {
	    if (edges.hasOwnProperty(edgeId)) {
	      edge = edges[edgeId];
	      if (edge.connected) {
	        // only calculate forces if nodes are in the same sector
	        if (this.nodes.hasOwnProperty(edge.toId) && this.nodes.hasOwnProperty(edge.fromId)) {
	          edgeLength = edge.physics.springLength;
	          // this implies that the edges between big clusters are longer
	          edgeLength += (edge.to.clusterSize + edge.from.clusterSize - 2) * this.constants.clustering.edgeGrowth;

	          dx = edge.from.x - edge.to.x;
	          dy = edge.from.y - edge.to.y;
	          distance = Math.sqrt(dx * dx + dy * dy);

	          if (distance == 0) {
	            distance = 0.01;
	          }

	          // the 1/distance is so the fx and fy can be calculated without sine or cosine.
	          springForce = this.constants.physics.springConstant * (edgeLength - distance) / distance;

	          fx = dx * springForce;
	          fy = dy * springForce;

	          if (edge.to.level != edge.from.level) {
	            edge.to.springFx -= fx;
	            edge.to.springFy -= fy;
	            edge.from.springFx += fx;
	            edge.from.springFy += fy;
	          } else {
	            var factor = 0.5;
	            edge.to.fx -= factor * fx;
	            edge.to.fy -= factor * fy;
	            edge.from.fx += factor * fx;
	            edge.from.fy += factor * fy;
	          }
	        }
	      }
	    }
	  }

	  // normalize spring forces
	  var springForce = 1;
	  var springFx, springFy;
	  for (i = 0; i < nodeIndices.length; i++) {
	    var node = nodes[nodeIndices[i]];
	    springFx = Math.min(springForce, Math.max(-springForce, node.springFx));
	    springFy = Math.min(springForce, Math.max(-springForce, node.springFy));

	    node.fx += springFx;
	    node.fy += springFy;
	  }

	  // retain energy balance
	  var totalFx = 0;
	  var totalFy = 0;
	  for (i = 0; i < nodeIndices.length; i++) {
	    var node = nodes[nodeIndices[i]];
	    totalFx += node.fx;
	    totalFy += node.fy;
	  }
	  var correctionFx = totalFx / nodeIndices.length;
	  var correctionFy = totalFy / nodeIndices.length;

	  for (i = 0; i < nodeIndices.length; i++) {
	    var node = nodes[nodeIndices[i]];
	    node.fx -= correctionFx;
	    node.fy -= correctionFy;
	  }
	};

/***/ },
/* 341 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * This function calculates the forces the nodes apply on eachother based on a gravitational model.
	 * The Barnes Hut method is used to speed up this N-body simulation.
	 *
	 * @private
	 */
	exports._calculateNodeForces = function () {
	  if (this.constants.physics.barnesHut.gravitationalConstant != 0) {
	    var node;
	    var nodes = this.calculationNodes;
	    var nodeIndices = this.calculationNodeIndices;
	    var nodeCount = nodeIndices.length;

	    this._formBarnesHutTree(nodes, nodeIndices);

	    var barnesHutTree = this.barnesHutTree;

	    // place the nodes one by one recursively
	    for (var i = 0; i < nodeCount; i++) {
	      node = nodes[nodeIndices[i]];
	      if (node.options.mass > 0) {
	        // starting with root is irrelevant, it never passes the BarnesHut condition
	        this._getForceContribution(barnesHutTree.root.children.NW, node);
	        this._getForceContribution(barnesHutTree.root.children.NE, node);
	        this._getForceContribution(barnesHutTree.root.children.SW, node);
	        this._getForceContribution(barnesHutTree.root.children.SE, node);
	      }
	    }
	  }
	};

	/**
	 * This function traverses the barnesHutTree. It checks when it can approximate distant nodes with their center of mass.
	 * If a region contains a single node, we check if it is not itself, then we apply the force.
	 *
	 * @param parentBranch
	 * @param node
	 * @private
	 */
	exports._getForceContribution = function (parentBranch, node) {
	  // we get no force contribution from an empty region
	  if (parentBranch.childrenCount > 0) {
	    var dx, dy, distance;

	    // get the distance from the center of mass to the node.
	    dx = parentBranch.centerOfMass.x - node.x;
	    dy = parentBranch.centerOfMass.y - node.y;
	    distance = Math.sqrt(dx * dx + dy * dy);

	    // BarnesHut condition
	    // original condition : s/d < thetaInverted = passed  ===  d/s > 1/theta = passed
	    // calcSize = 1/s --> d * 1/s > 1/theta = passed
	    if (distance * parentBranch.calcSize > this.constants.physics.barnesHut.thetaInverted) {
	      // duplicate code to reduce function calls to speed up program
	      if (distance == 0) {
	        distance = 0.1 * Math.random();
	        dx = distance;
	      }
	      var gravityForce = this.constants.physics.barnesHut.gravitationalConstant * parentBranch.mass * node.options.mass / (distance * distance * distance);
	      var fx = dx * gravityForce;
	      var fy = dy * gravityForce;
	      node.fx += fx;
	      node.fy += fy;
	    } else {
	      // Did not pass the condition, go into children if available
	      if (parentBranch.childrenCount == 4) {
	        this._getForceContribution(parentBranch.children.NW, node);
	        this._getForceContribution(parentBranch.children.NE, node);
	        this._getForceContribution(parentBranch.children.SW, node);
	        this._getForceContribution(parentBranch.children.SE, node);
	      } else {
	        // parentBranch must have only one node, if it was empty we wouldnt be here
	        if (parentBranch.children.data.id != node.id) {
	          // if it is not self
	          // duplicate code to reduce function calls to speed up program
	          if (distance == 0) {
	            distance = 0.5 * Math.random();
	            dx = distance;
	          }
	          var gravityForce = this.constants.physics.barnesHut.gravitationalConstant * parentBranch.mass * node.options.mass / (distance * distance * distance);
	          var fx = dx * gravityForce;
	          var fy = dy * gravityForce;
	          node.fx += fx;
	          node.fy += fy;
	        }
	      }
	    }
	  }
	};

	/**
	 * This function constructs the barnesHut tree recursively. It creates the root, splits it and starts placing the nodes.
	 *
	 * @param nodes
	 * @param nodeIndices
	 * @private
	 */
	exports._formBarnesHutTree = function (nodes, nodeIndices) {
	  var node;
	  var nodeCount = nodeIndices.length;

	  var minX = Number.MAX_VALUE,
	      minY = Number.MAX_VALUE,
	      maxX = -Number.MAX_VALUE,
	      maxY = -Number.MAX_VALUE;

	  // get the range of the nodes
	  for (var i = 0; i < nodeCount; i++) {
	    var x = nodes[nodeIndices[i]].x;
	    var y = nodes[nodeIndices[i]].y;
	    if (nodes[nodeIndices[i]].options.mass > 0) {
	      if (x < minX) {
	        minX = x;
	      }
	      if (x > maxX) {
	        maxX = x;
	      }
	      if (y < minY) {
	        minY = y;
	      }
	      if (y > maxY) {
	        maxY = y;
	      }
	    }
	  }
	  // make the range a square
	  var sizeDiff = Math.abs(maxX - minX) - Math.abs(maxY - minY); // difference between X and Y
	  if (sizeDiff > 0) {
	    minY -= 0.5 * sizeDiff;maxY += 0.5 * sizeDiff;
	  } // xSize > ySize
	  else {
	      minX += 0.5 * sizeDiff;maxX -= 0.5 * sizeDiff;
	    } // xSize < ySize


	  var minimumTreeSize = 1e-5;
	  var rootSize = Math.max(minimumTreeSize, Math.abs(maxX - minX));
	  var halfRootSize = 0.5 * rootSize;
	  var centerX = 0.5 * (minX + maxX),
	      centerY = 0.5 * (minY + maxY);

	  // construct the barnesHutTree
	  var barnesHutTree = {
	    root: {
	      centerOfMass: { x: 0, y: 0 },
	      mass: 0,
	      range: {
	        minX: centerX - halfRootSize, maxX: centerX + halfRootSize,
	        minY: centerY - halfRootSize, maxY: centerY + halfRootSize
	      },
	      size: rootSize,
	      calcSize: 1 / rootSize,
	      children: { data: null },
	      maxWidth: 0,
	      level: 0,
	      childrenCount: 4
	    }
	  };
	  this._splitBranch(barnesHutTree.root);

	  // place the nodes one by one recursively
	  for (i = 0; i < nodeCount; i++) {
	    node = nodes[nodeIndices[i]];
	    if (node.options.mass > 0) {
	      this._placeInTree(barnesHutTree.root, node);
	    }
	  }

	  // make global
	  this.barnesHutTree = barnesHutTree;
	};

	/**
	 * this updates the mass of a branch. this is increased by adding a node.
	 *
	 * @param parentBranch
	 * @param node
	 * @private
	 */
	exports._updateBranchMass = function (parentBranch, node) {
	  var totalMass = parentBranch.mass + node.options.mass;
	  var totalMassInv = 1 / totalMass;

	  parentBranch.centerOfMass.x = parentBranch.centerOfMass.x * parentBranch.mass + node.x * node.options.mass;
	  parentBranch.centerOfMass.x *= totalMassInv;

	  parentBranch.centerOfMass.y = parentBranch.centerOfMass.y * parentBranch.mass + node.y * node.options.mass;
	  parentBranch.centerOfMass.y *= totalMassInv;

	  parentBranch.mass = totalMass;
	  var biggestSize = Math.max(Math.max(node.height, node.radius), node.width);
	  parentBranch.maxWidth = parentBranch.maxWidth < biggestSize ? biggestSize : parentBranch.maxWidth;
	};

	/**
	 * determine in which branch the node will be placed.
	 *
	 * @param parentBranch
	 * @param node
	 * @param skipMassUpdate
	 * @private
	 */
	exports._placeInTree = function (parentBranch, node, skipMassUpdate) {
	  if (skipMassUpdate != true || skipMassUpdate === undefined) {
	    // update the mass of the branch.
	    this._updateBranchMass(parentBranch, node);
	  }

	  if (parentBranch.children.NW.range.maxX > node.x) {
	    // in NW or SW
	    if (parentBranch.children.NW.range.maxY > node.y) {
	      // in NW
	      this._placeInRegion(parentBranch, node, "NW");
	    } else {
	      // in SW
	      this._placeInRegion(parentBranch, node, "SW");
	    }
	  } else {
	    // in NE or SE
	    if (parentBranch.children.NW.range.maxY > node.y) {
	      // in NE
	      this._placeInRegion(parentBranch, node, "NE");
	    } else {
	      // in SE
	      this._placeInRegion(parentBranch, node, "SE");
	    }
	  }
	};

	/**
	 * actually place the node in a region (or branch)
	 *
	 * @param parentBranch
	 * @param node
	 * @param region
	 * @private
	 */
	exports._placeInRegion = function (parentBranch, node, region) {
	  switch (parentBranch.children[region].childrenCount) {
	    case 0:
	      // place node here
	      parentBranch.children[region].children.data = node;
	      parentBranch.children[region].childrenCount = 1;
	      this._updateBranchMass(parentBranch.children[region], node);
	      break;
	    case 1:
	      // convert into children
	      // if there are two nodes exactly overlapping (on init, on opening of cluster etc.)
	      // we move one node a pixel and we do not put it in the tree.
	      if (parentBranch.children[region].children.data.x == node.x && parentBranch.children[region].children.data.y == node.y) {
	        node.x += Math.random();
	        node.y += Math.random();
	      } else {
	        this._splitBranch(parentBranch.children[region]);
	        this._placeInTree(parentBranch.children[region], node);
	      }
	      break;
	    case 4:
	      // place in branch
	      this._placeInTree(parentBranch.children[region], node);
	      break;
	  }
	};

	/**
	 * this function splits a branch into 4 sub branches. If the branch contained a node, we place it in the subbranch
	 * after the split is complete.
	 *
	 * @param parentBranch
	 * @private
	 */
	exports._splitBranch = function (parentBranch) {
	  // if the branch is shaded with a node, replace the node in the new subset.
	  var containedNode = null;
	  if (parentBranch.childrenCount == 1) {
	    containedNode = parentBranch.children.data;
	    parentBranch.mass = 0;parentBranch.centerOfMass.x = 0;parentBranch.centerOfMass.y = 0;
	  }
	  parentBranch.childrenCount = 4;
	  parentBranch.children.data = null;
	  this._insertRegion(parentBranch, "NW");
	  this._insertRegion(parentBranch, "NE");
	  this._insertRegion(parentBranch, "SW");
	  this._insertRegion(parentBranch, "SE");

	  if (containedNode != null) {
	    this._placeInTree(parentBranch, containedNode);
	  }
	};

	/**
	 * This function subdivides the region into four new segments.
	 * Specifically, this inserts a single new segment.
	 * It fills the children section of the parentBranch
	 *
	 * @param parentBranch
	 * @param region
	 * @param parentRange
	 * @private
	 */
	exports._insertRegion = function (parentBranch, region) {
	  var minX, maxX, minY, maxY;
	  var childSize = 0.5 * parentBranch.size;
	  switch (region) {
	    case "NW":
	      minX = parentBranch.range.minX;
	      maxX = parentBranch.range.minX + childSize;
	      minY = parentBranch.range.minY;
	      maxY = parentBranch.range.minY + childSize;
	      break;
	    case "NE":
	      minX = parentBranch.range.minX + childSize;
	      maxX = parentBranch.range.maxX;
	      minY = parentBranch.range.minY;
	      maxY = parentBranch.range.minY + childSize;
	      break;
	    case "SW":
	      minX = parentBranch.range.minX;
	      maxX = parentBranch.range.minX + childSize;
	      minY = parentBranch.range.minY + childSize;
	      maxY = parentBranch.range.maxY;
	      break;
	    case "SE":
	      minX = parentBranch.range.minX + childSize;
	      maxX = parentBranch.range.maxX;
	      minY = parentBranch.range.minY + childSize;
	      maxY = parentBranch.range.maxY;
	      break;
	  }

	  parentBranch.children[region] = {
	    centerOfMass: { x: 0, y: 0 },
	    mass: 0,
	    range: { minX: minX, maxX: maxX, minY: minY, maxY: maxY },
	    size: 0.5 * parentBranch.size,
	    calcSize: 2 * parentBranch.calcSize,
	    children: { data: null },
	    maxWidth: 0,
	    level: parentBranch.level + 1,
	    childrenCount: 0
	  };
	};

	/**
	 * This function is for debugging purposed, it draws the tree.
	 *
	 * @param ctx
	 * @param color
	 * @private
	 */
	exports._drawTree = function (ctx, color) {
	  if (this.barnesHutTree !== undefined) {

	    ctx.lineWidth = 1;

	    this._drawBranch(this.barnesHutTree.root, ctx, color);
	  }
	};

	/**
	 * This function is for debugging purposes. It draws the branches recursively.
	 *
	 * @param branch
	 * @param ctx
	 * @param color
	 * @private
	 */
	exports._drawBranch = function (branch, ctx, color) {
	  if (color === undefined) {
	    color = "#FF0000";
	  }

	  if (branch.childrenCount == 4) {
	    this._drawBranch(branch.children.NW, ctx);
	    this._drawBranch(branch.children.NE, ctx);
	    this._drawBranch(branch.children.SE, ctx);
	    this._drawBranch(branch.children.SW, ctx);
	  }
	  ctx.strokeStyle = color;
	  ctx.beginPath();
	  ctx.moveTo(branch.range.minX, branch.range.minY);
	  ctx.lineTo(branch.range.maxX, branch.range.minY);
	  ctx.stroke();

	  ctx.beginPath();
	  ctx.moveTo(branch.range.maxX, branch.range.minY);
	  ctx.lineTo(branch.range.maxX, branch.range.maxY);
	  ctx.stroke();

	  ctx.beginPath();
	  ctx.moveTo(branch.range.maxX, branch.range.maxY);
	  ctx.lineTo(branch.range.minX, branch.range.maxY);
	  ctx.stroke();

	  ctx.beginPath();
	  ctx.moveTo(branch.range.minX, branch.range.maxY);
	  ctx.lineTo(branch.range.minX, branch.range.minY);
	  ctx.stroke();

	  /*
	   if (branch.mass > 0) {
	   ctx.circle(branch.centerOfMass.x, branch.centerOfMass.y, 3*branch.mass);
	   ctx.stroke();
	   }
	   */
	};

/***/ },
/* 342 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Creation of the ClusterMixin var.
	 *
	 * This contains all the functions the Network object can use to employ clustering
	 */

	/**
	* This is only called in the constructor of the network object
	*
	*/
	exports.startWithClustering = function () {
	  // cluster if the data set is big
	  this.clusterToFit(this.constants.clustering.initialMaxNodes, true);

	  // updates the lables after clustering
	  this.updateLabels();

	  // this is called here because if clusterin is disabled, the start and stabilize are called in
	  // the setData function.
	  if (this.constants.stabilize == true) {
	    this._stabilize();
	  }
	  this.start();
	};

	/**
	 * This function clusters until the initialMaxNodes has been reached
	 *
	 * @param {Number}  maxNumberOfNodes
	 * @param {Boolean} reposition
	 */
	exports.clusterToFit = function (maxNumberOfNodes, reposition) {
	  var numberOfNodes = this.nodeIndices.length;

	  var maxLevels = 50;
	  var level = 0;

	  // we first cluster the hubs, then we pull in the outliers, repeat
	  while (numberOfNodes > maxNumberOfNodes && level < maxLevels) {
	    if (level % 3 == 0.0) {
	      this.forceAggregateHubs(true);
	      this.normalizeClusterLevels();
	    } else {
	      this.increaseClusterLevel(); // this also includes a cluster normalization
	    }
	    this.forceAggregateHubs(true);
	    numberOfNodes = this.nodeIndices.length;
	    level += 1;
	  }

	  // after the clustering we reposition the nodes to reduce the initial chaos
	  if (level > 0 && reposition == true) {
	    this.repositionNodes();
	  }
	  this._updateCalculationNodes();
	};

	/**
	 * This function can be called to open up a specific cluster.
	 * It will unpack the cluster back one level.
	 *
	 * @param node    | Node object: cluster to open.
	 */
	exports.openCluster = function (node) {
	  var isMovingBeforeClustering = this.moving;
	  if (node.clusterSize > this.constants.clustering.sectorThreshold && this._nodeInActiveArea(node) && !(this._sector() == "default" && this.nodeIndices.length == 1)) {
	    // this loads a new sector, loads the nodes and edges and nodeIndices of it.
	    this._addSector(node);
	    var level = 0;

	    // we decluster until we reach a decent number of nodes
	    while (this.nodeIndices.length < this.constants.clustering.initialMaxNodes && level < 10) {
	      this.decreaseClusterLevel();
	      level += 1;
	    }
	  } else {
	    this._expandClusterNode(node, false, true);

	    // update the index list and labels
	    this._updateNodeIndexList();
	    this._updateCalculationNodes();
	    this.updateLabels();
	  }

	  // if the simulation was settled, we restart the simulation if a cluster has been formed or expanded
	  if (this.moving != isMovingBeforeClustering) {
	    this.start();
	  }
	};

	/**
	 * This calls the updateClustes with default arguments
	 */
	exports.updateClustersDefault = function () {
	  if (this.constants.clustering.enabled == true && this.constants.clustering.clusterByZoom == true) {
	    this.updateClusters(0, false, false);
	  }
	};

	/**
	 * This function can be called to increase the cluster level. This means that the nodes with only one edge connection will
	 * be clustered with their connected node. This can be repeated as many times as needed.
	 * This can be called externally (by a keybind for instance) to reduce the complexity of big datasets.
	 */
	exports.increaseClusterLevel = function () {
	  this.updateClusters(-1, false, true);
	};

	/**
	 * This function can be called to decrease the cluster level. This means that the nodes with only one edge connection will
	 * be unpacked if they are a cluster. This can be repeated as many times as needed.
	 * This can be called externally (by a key-bind for instance) to look into clusters without zooming.
	 */
	exports.decreaseClusterLevel = function () {
	  this.updateClusters(1, false, true);
	};

	/**
	 * This is the main clustering function. It clusters and declusters on zoom or forced
	 * This function clusters on zoom, it can be called with a predefined zoom direction
	 * If out, check if we can form clusters, if in, check if we can open clusters.
	 * This function is only called from _zoom()
	 *
	 * @param {Number} zoomDirection  | -1 / 0 / +1   for  zoomOut / determineByZoom / zoomIn
	 * @param {Boolean} recursive     | enabled or disable recursive calling of the opening of clusters
	 * @param {Boolean} force         | enabled or disable forcing
	 * @param {Boolean} doNotStart    | if true do not call start
	 *
	 */
	exports.updateClusters = function (zoomDirection, recursive, force, doNotStart) {
	  var isMovingBeforeClustering = this.moving;
	  var amountOfNodes = this.nodeIndices.length;

	  var detectedZoomingIn = this.previousScale < this.scale && zoomDirection == 0;
	  var detectedZoomingOut = this.previousScale > this.scale && zoomDirection == 0;

	  // on zoom out collapse the sector if the scale is at the level the sector was made
	  if (detectedZoomingOut == true) {
	    this._collapseSector();
	  }

	  // check if we zoom in or out
	  if (detectedZoomingOut == true || zoomDirection == -1) {
	    // zoom out
	    // forming clusters when forced pulls outliers in. When not forced, the edge length of the
	    // outer nodes determines if it is being clustered
	    this._formClusters(force);
	  } else if (detectedZoomingIn == true || zoomDirection == 1) {
	    // zoom in
	    if (force == true) {
	      // _openClusters checks for each node if the formationScale of the cluster is smaller than
	      // the current scale and if so, declusters. When forced, all clusters are reduced by one step
	      this._openClusters(recursive, force);
	    } else {
	      // if a cluster takes up a set percentage of the active window
	      //this._openClustersBySize();
	      this._openClusters(recursive, false);
	    }
	  }
	  this._updateNodeIndexList();

	  // if a cluster was NOT formed and the user zoomed out, we try clustering by hubs
	  if (this.nodeIndices.length == amountOfNodes && (detectedZoomingOut == true || zoomDirection == -1)) {
	    this._aggregateHubs(force);
	    this._updateNodeIndexList();
	  }

	  // we now reduce chains.
	  if (detectedZoomingOut == true || zoomDirection == -1) {
	    // zoom out
	    this.handleChains();
	    this._updateNodeIndexList();
	  }

	  this.previousScale = this.scale;

	  // update labels
	  this.updateLabels();

	  // if a cluster was formed, we increase the clusterSession
	  if (this.nodeIndices.length < amountOfNodes) {
	    // this means a clustering operation has taken place
	    this.clusterSession += 1;
	    // if clusters have been made, we normalize the cluster level
	    this.normalizeClusterLevels();
	  }

	  if (doNotStart == false || doNotStart === undefined) {
	    // if the simulation was settled, we restart the simulation if a cluster has been formed or expanded
	    if (this.moving != isMovingBeforeClustering) {
	      this.start();
	    }
	  }

	  this._updateCalculationNodes();
	};

	/**
	 * This function handles the chains. It is called on every updateClusters().
	 */
	exports.handleChains = function () {
	  // after clustering we check how many chains there are
	  var chainPercentage = this._getChainFraction();
	  if (chainPercentage > this.constants.clustering.chainThreshold) {
	    this._reduceAmountOfChains(1 - this.constants.clustering.chainThreshold / chainPercentage);
	  }
	};

	/**
	 * this functions starts clustering by hubs
	 * The minimum hub threshold is set globally
	 *
	 * @private
	 */
	exports._aggregateHubs = function (force) {
	  this._getHubSize();
	  this._formClustersByHub(force, false);
	};

	/**
	 * This function forces hubs to form.
	 *
	 */
	exports.forceAggregateHubs = function (doNotStart) {
	  var isMovingBeforeClustering = this.moving;
	  var amountOfNodes = this.nodeIndices.length;

	  this._aggregateHubs(true);

	  // update the index list, dynamic edges and labels
	  this._updateNodeIndexList();
	  this.updateLabels();

	  this._updateCalculationNodes();

	  // if a cluster was formed, we increase the clusterSession
	  if (this.nodeIndices.length != amountOfNodes) {
	    this.clusterSession += 1;
	  }

	  if (doNotStart == false || doNotStart === undefined) {
	    // if the simulation was settled, we restart the simulation if a cluster has been formed or expanded
	    if (this.moving != isMovingBeforeClustering) {
	      this.start();
	    }
	  }
	};

	/**
	 * If a cluster takes up more than a set percentage of the screen, open the cluster
	 *
	 * @private
	 */
	exports._openClustersBySize = function () {
	  if (this.constants.clustering.clusterByZoom == true) {
	    for (var nodeId in this.nodes) {
	      if (this.nodes.hasOwnProperty(nodeId)) {
	        var node = this.nodes[nodeId];
	        if (node.inView() == true) {
	          if (node.width * this.scale > this.constants.clustering.screenSizeThreshold * this.frame.canvas.clientWidth || node.height * this.scale > this.constants.clustering.screenSizeThreshold * this.frame.canvas.clientHeight) {
	            this.openCluster(node);
	          }
	        }
	      }
	    }
	  }
	};

	/**
	 * This function loops over all nodes in the nodeIndices list. For each node it checks if it is a cluster and if it
	 * has to be opened based on the current zoom level.
	 *
	 * @private
	 */
	exports._openClusters = function (recursive, force) {
	  for (var i = 0; i < this.nodeIndices.length; i++) {
	    var node = this.nodes[this.nodeIndices[i]];
	    this._expandClusterNode(node, recursive, force);
	    this._updateCalculationNodes();
	  }
	};

	/**
	 * This function checks if a node has to be opened. This is done by checking the zoom level.
	 * If the node contains child nodes, this function is recursively called on the child nodes as well.
	 * This recursive behaviour is optional and can be set by the recursive argument.
	 *
	 * @param {Node}    parentNode    | to check for cluster and expand
	 * @param {Boolean} recursive     | enabled or disable recursive calling
	 * @param {Boolean} force         | enabled or disable forcing
	 * @param {Boolean} [openAll]     | This will recursively force all nodes in the parent to be released
	 * @private
	 */
	exports._expandClusterNode = function (parentNode, recursive, force, openAll) {
	  // first check if node is a cluster
	  if (parentNode.clusterSize > 1) {
	    if (openAll === undefined) {
	      openAll = false;
	    }
	    // this means that on a double tap event or a zoom event, the cluster fully unpacks if it is smaller than 20

	    recursive = openAll || recursive;
	    // if the last child has been added on a smaller scale than current scale decluster
	    if (parentNode.formationScale < this.scale || force == true) {
	      // we will check if any of the contained child nodes should be removed from the cluster
	      for (var containedNodeId in parentNode.containedNodes) {
	        if (parentNode.containedNodes.hasOwnProperty(containedNodeId)) {
	          var childNode = parentNode.containedNodes[containedNodeId];

	          // force expand will expand the largest cluster size clusters. Since we cluster from outside in, we assume that
	          // the largest cluster is the one that comes from outside
	          if (force == true) {
	            if (childNode.clusterSession == parentNode.clusterSessions[parentNode.clusterSessions.length - 1] || openAll) {
	              this._expelChildFromParent(parentNode, containedNodeId, recursive, force, openAll);
	            }
	          } else {
	            if (this._nodeInActiveArea(parentNode)) {
	              this._expelChildFromParent(parentNode, containedNodeId, recursive, force, openAll);
	            }
	          }
	        }
	      }
	    }
	  }
	};

	/**
	 * ONLY CALLED FROM _expandClusterNode
	 *
	 * This function will expel a child_node from a parent_node. This is to de-cluster the node. This function will remove
	 * the child node from the parent contained_node object and put it back into the global nodes object.
	 * The same holds for the edge that was connected to the child node. It is moved back into the global edges object.
	 *
	 * @param {Node}    parentNode        | the parent node
	 * @param {String}  containedNodeId   | child_node id as it is contained in the containedNodes object of the parent node
	 * @param {Boolean} recursive         | This will also check if the child needs to be expanded.
	 *                                      With force and recursive both true, the entire cluster is unpacked
	 * @param {Boolean} force             | This will disregard the zoom level and will expel this child from the parent
	 * @param {Boolean} openAll           | This will recursively force all nodes in the parent to be released
	 * @private
	 */
	exports._expelChildFromParent = function (parentNode, containedNodeId, recursive, force, openAll) {
	  var childNode = parentNode.containedNodes[containedNodeId];

	  // if child node has been added on smaller scale than current, kick out
	  if (childNode.formationScale < this.scale || force == true) {
	    // unselect all selected items
	    this._unselectAll();

	    // put the child node back in the global nodes object
	    this.nodes[containedNodeId] = childNode;

	    // release the contained edges from this childNode back into the global edges
	    this._releaseContainedEdges(parentNode, childNode);

	    // reconnect rerouted edges to the childNode
	    this._connectEdgeBackToChild(parentNode, childNode);

	    // validate all edges in dynamicEdges
	    this._validateEdges(parentNode);

	    // undo the changes from the clustering operation on the parent node
	    parentNode.options.mass -= childNode.options.mass;
	    parentNode.clusterSize -= childNode.clusterSize;
	    parentNode.options.fontSize = Math.min(this.constants.clustering.maxFontSize, this.constants.nodes.fontSize + this.constants.clustering.fontSizeMultiplier * (parentNode.clusterSize - 1));

	    // place the child node near the parent, not at the exact same location to avoid chaos in the system
	    childNode.x = parentNode.x + parentNode.growthIndicator * (0.5 - Math.random());
	    childNode.y = parentNode.y + parentNode.growthIndicator * (0.5 - Math.random());

	    // remove node from the list
	    delete parentNode.containedNodes[containedNodeId];

	    // check if there are other childs with this clusterSession in the parent.
	    var othersPresent = false;
	    for (var childNodeId in parentNode.containedNodes) {
	      if (parentNode.containedNodes.hasOwnProperty(childNodeId)) {
	        if (parentNode.containedNodes[childNodeId].clusterSession == childNode.clusterSession) {
	          othersPresent = true;
	          break;
	        }
	      }
	    }
	    // if there are no others, remove the cluster session from the list
	    if (othersPresent == false) {
	      parentNode.clusterSessions.pop();
	    }

	    this._repositionBezierNodes(childNode);
	    //      this._repositionBezierNodes(parentNode);

	    // remove the clusterSession from the child node
	    childNode.clusterSession = 0;

	    // recalculate the size of the node on the next time the node is rendered
	    parentNode.clearSizeCache();

	    // restart the simulation to reorganise all nodes
	    this.moving = true;
	  }

	  // check if a further expansion step is possible if recursivity is enabled
	  if (recursive == true) {
	    this._expandClusterNode(childNode, recursive, force, openAll);
	  }
	};

	/**
	 * position the bezier nodes at the center of the edges
	 *
	 * @param node
	 * @private
	 */
	exports._repositionBezierNodes = function (node) {
	  for (var i = 0; i < node.dynamicEdges.length; i++) {
	    node.dynamicEdges[i].positionBezierNode();
	  }
	};

	/**
	 * This function checks if any nodes at the end of their trees have edges below a threshold length
	 * This function is called only from updateClusters()
	 * forceLevelCollapse ignores the length of the edge and collapses one level
	 * This means that a node with only one edge will be clustered with its connected node
	 *
	 * @private
	 * @param {Boolean} force
	 */
	exports._formClusters = function (force) {
	  if (force == false) {
	    if (this.constants.clustering.clusterByZoom == true) {
	      this._formClustersByZoom();
	    }
	  } else {
	    this._forceClustersByZoom();
	  }
	};

	/**
	 * This function handles the clustering by zooming out, this is based on a minimum edge distance
	 *
	 * @private
	 */
	exports._formClustersByZoom = function () {
	  var dx, dy, length;
	  var minLength = this.constants.clustering.clusterEdgeThreshold / this.scale;

	  // check if any edges are shorter than minLength and start the clustering
	  // the clustering favours the node with the larger mass
	  for (var edgeId in this.edges) {
	    if (this.edges.hasOwnProperty(edgeId)) {
	      var edge = this.edges[edgeId];
	      if (edge.connected) {
	        if (edge.toId != edge.fromId) {
	          dx = edge.to.x - edge.from.x;
	          dy = edge.to.y - edge.from.y;
	          length = Math.sqrt(dx * dx + dy * dy);

	          if (length < minLength) {
	            // first check which node is larger
	            var parentNode = edge.from;
	            var childNode = edge.to;
	            if (edge.to.options.mass > edge.from.options.mass) {
	              parentNode = edge.to;
	              childNode = edge.from;
	            }

	            if (childNode.dynamicEdges.length == 1) {
	              this._addToCluster(parentNode, childNode, false);
	            } else if (parentNode.dynamicEdges.length == 1) {
	              this._addToCluster(childNode, parentNode, false);
	            }
	          }
	        }
	      }
	    }
	  }
	};

	/**
	 * This function forces the network to cluster all nodes with only one connecting edge to their
	 * connected node.
	 *
	 * @private
	 */
	exports._forceClustersByZoom = function () {
	  for (var nodeId in this.nodes) {
	    // another node could have absorbed this child.
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      var childNode = this.nodes[nodeId];

	      // the edges can be swallowed by another decrease
	      if (childNode.dynamicEdges.length == 1) {
	        var edge = childNode.dynamicEdges[0];
	        var parentNode = edge.toId == childNode.id ? this.nodes[edge.fromId] : this.nodes[edge.toId];
	        // group to the largest node
	        if (childNode.id != parentNode.id) {
	          if (parentNode.options.mass > childNode.options.mass) {
	            this._addToCluster(parentNode, childNode, true);
	          } else {
	            this._addToCluster(childNode, parentNode, true);
	          }
	        }
	      }
	    }
	  }
	};

	/**
	 * To keep the nodes of roughly equal size we normalize the cluster levels.
	 * This function clusters a node to its smallest connected neighbour.
	 *
	 * @param node
	 * @private
	 */
	exports._clusterToSmallestNeighbour = function (node) {
	  var smallestNeighbour = -1;
	  var smallestNeighbourNode = null;
	  for (var i = 0; i < node.dynamicEdges.length; i++) {
	    if (node.dynamicEdges[i] !== undefined) {
	      var neighbour = null;
	      if (node.dynamicEdges[i].fromId != node.id) {
	        neighbour = node.dynamicEdges[i].from;
	      } else if (node.dynamicEdges[i].toId != node.id) {
	        neighbour = node.dynamicEdges[i].to;
	      }

	      if (neighbour != null && smallestNeighbour > neighbour.clusterSessions.length) {
	        smallestNeighbour = neighbour.clusterSessions.length;
	        smallestNeighbourNode = neighbour;
	      }
	    }
	  }

	  if (neighbour != null && this.nodes[neighbour.id] !== undefined) {
	    this._addToCluster(neighbour, node, true);
	  }
	};

	/**
	 * This function forms clusters from hubs, it loops over all nodes
	 *
	 * @param {Boolean} force         |   Disregard zoom level
	 * @param {Boolean} onlyEqual     |   This only clusters a hub with a specific number of edges
	 * @private
	 */
	exports._formClustersByHub = function (force, onlyEqual) {
	  // we loop over all nodes in the list
	  for (var nodeId in this.nodes) {
	    // we check if it is still available since it can be used by the clustering in this loop
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      this._formClusterFromHub(this.nodes[nodeId], force, onlyEqual);
	    }
	  }
	};

	/**
	 * This function forms a cluster from a specific preselected hub node
	 *
	 * @param {Node}    hubNode       |   the node we will cluster as a hub
	 * @param {Boolean} force         |   Disregard zoom level
	 * @param {Boolean} onlyEqual     |   This only clusters a hub with a specific number of edges
	 * @param {Number} [absorptionSizeOffset] |
	 * @private
	 */
	exports._formClusterFromHub = function (hubNode, force, onlyEqual, absorptionSizeOffset) {
	  if (absorptionSizeOffset === undefined) {
	    absorptionSizeOffset = 0;
	  }
	  //this.hubThreshold = 43
	  //if (hubNode.dynamicEdgesLength < 0) {
	  // console.error(hubNode.dynamicEdgesLength, this.hubThreshold, onlyEqual)
	  //}
	  // we decide if the node is a hub
	  if (hubNode.dynamicEdges.length >= this.hubThreshold && onlyEqual == false || hubNode.dynamicEdges.length == this.hubThreshold && onlyEqual == true) {
	    // initialize variables
	    var dx, dy, length;
	    var minLength = this.constants.clustering.clusterEdgeThreshold / this.scale;
	    var allowCluster = false;

	    // we create a list of edges because the dynamicEdges change over the course of this loop
	    var edgesIdarray = [];
	    var amountOfInitialEdges = hubNode.dynamicEdges.length;
	    for (var j = 0; j < amountOfInitialEdges; j++) {
	      edgesIdarray.push(hubNode.dynamicEdges[j].id);
	    }

	    // if the hub clustering is not forced, we check if one of the edges connected
	    // to a cluster is small enough based on the constants.clustering.clusterEdgeThreshold
	    if (force == false) {
	      allowCluster = false;
	      for (j = 0; j < amountOfInitialEdges; j++) {
	        var edge = this.edges[edgesIdarray[j]];
	        if (edge !== undefined) {
	          if (edge.connected) {
	            if (edge.toId != edge.fromId) {
	              dx = edge.to.x - edge.from.x;
	              dy = edge.to.y - edge.from.y;
	              length = Math.sqrt(dx * dx + dy * dy);

	              if (length < minLength) {
	                allowCluster = true;
	                break;
	              }
	            }
	          }
	        }
	      }
	    }

	    // start the clustering if allowed
	    if (!force && allowCluster || force) {
	      var children = [];
	      var childrenIds = {};
	      // we loop over all edges INITIALLY connected to this hub to get a list of the childNodes
	      for (j = 0; j < amountOfInitialEdges; j++) {
	        edge = this.edges[edgesIdarray[j]];
	        var childNode = this.nodes[edge.fromId == hubNode.id ? edge.toId : edge.fromId];
	        if (childrenIds[childNode.id] === undefined) {
	          childrenIds[childNode.id] = true;
	          children.push(childNode);
	        }
	      }

	      for (j = 0; j < children.length; j++) {
	        var childNode = children[j];
	        // we do not want hubs to merge with other hubs nor do we want to cluster itself.
	        if (childNode.dynamicEdges.length <= this.hubThreshold + absorptionSizeOffset && childNode.id != hubNode.id) {
	          this._addToCluster(hubNode, childNode, force);
	        } else {
	          //console.log("WILL NOT MERGE:",childNode.dynamicEdges.length , (this.hubThreshold + absorptionSizeOffset))
	        }
	      }
	    }
	  }
	};

	/**
	 * This function adds the child node to the parent node, creating a cluster if it is not already.
	 *
	 * @param {Node} parentNode           | this is the node that will house the child node
	 * @param {Node} childNode            | this node will be deleted from the global this.nodes and stored in the parent node
	 * @param {Boolean} force             | true will only update the remainingEdges at the very end of the clustering, ensuring single level collapse
	 * @private
	 */
	exports._addToCluster = function (parentNode, childNode, force) {
	  // join child node in the parent node
	  parentNode.containedNodes[childNode.id] = childNode;
	  //console.log(parentNode.id, childNode.id)
	  // manage all the edges connected to the child and parent nodes
	  for (var i = 0; i < childNode.dynamicEdges.length; i++) {
	    var edge = childNode.dynamicEdges[i];
	    if (edge.toId == parentNode.id || edge.fromId == parentNode.id) {
	      // edge connected to parentNode
	      //console.log("COLLECT",parentNode.id, childNode.id, edge.toId, edge.fromId)
	      this._addToContainedEdges(parentNode, childNode, edge);
	    } else {
	      //console.log("REWIRE",parentNode.id, childNode.id, edge.toId, edge.fromId)
	      this._connectEdgeToCluster(parentNode, childNode, edge);
	    }
	  }
	  // a contained node has no dynamic edges.
	  childNode.dynamicEdges = [];

	  // remove circular edges from clusters
	  this._containCircularEdgesFromNode(parentNode, childNode);

	  // remove the childNode from the global nodes object
	  delete this.nodes[childNode.id];

	  // update the properties of the child and parent
	  var massBefore = parentNode.options.mass;
	  childNode.clusterSession = this.clusterSession;
	  parentNode.options.mass += childNode.options.mass;
	  parentNode.clusterSize += childNode.clusterSize;
	  parentNode.options.fontSize = Math.min(this.constants.clustering.maxFontSize, this.constants.nodes.fontSize + this.constants.clustering.fontSizeMultiplier * parentNode.clusterSize);

	  // keep track of the clustersessions so we can open the cluster up as it has been formed.
	  if (parentNode.clusterSessions[parentNode.clusterSessions.length - 1] != this.clusterSession) {
	    parentNode.clusterSessions.push(this.clusterSession);
	  }

	  // forced clusters only open from screen size and double tap
	  if (force == true) {
	    parentNode.formationScale = 0;
	  } else {
	    parentNode.formationScale = this.scale; // The latest child has been added on this scale
	  }

	  // recalculate the size of the node on the next time the node is rendered
	  parentNode.clearSizeCache();

	  // set the pop-out scale for the childnode
	  parentNode.containedNodes[childNode.id].formationScale = parentNode.formationScale;

	  // nullify the movement velocity of the child, this is to avoid hectic behaviour
	  childNode.clearVelocity();

	  // the mass has altered, preservation of energy dictates the velocity to be updated
	  parentNode.updateVelocity(massBefore);

	  // restart the simulation to reorganise all nodes
	  this.moving = true;
	};

	/**
	 * This adds an edge from the childNode to the contained edges of the parent node
	 *
	 * @param parentNode    | Node object
	 * @param childNode     | Node object
	 * @param edge          | Edge object
	 * @private
	 */
	exports._addToContainedEdges = function (parentNode, childNode, edge) {
	  // create an array object if it does not yet exist for this childNode
	  if (parentNode.containedEdges[childNode.id] === undefined) {
	    parentNode.containedEdges[childNode.id] = [];
	  }
	  // add this edge to the list
	  parentNode.containedEdges[childNode.id].push(edge);

	  // remove the edge from the global edges object
	  delete this.edges[edge.id];

	  // remove the edge from the parent object
	  for (var i = 0; i < parentNode.dynamicEdges.length; i++) {
	    if (parentNode.dynamicEdges[i].id == edge.id) {
	      parentNode.dynamicEdges.splice(i, 1);
	      break;
	    }
	  }
	};

	/**
	 * This function connects an edge that was connected to a child node to the parent node.
	 * It keeps track of which nodes it has been connected to with the originalId array.
	 *
	 * @param {Node} parentNode    | Node object
	 * @param {Node} childNode     | Node object
	 * @param {Edge} edge          | Edge object
	 * @private
	 */
	exports._connectEdgeToCluster = function (parentNode, childNode, edge) {
	  // handle circular edges
	  if (edge.toId == edge.fromId) {
	    this._addToContainedEdges(parentNode, childNode, edge);
	  } else {
	    if (edge.toId == childNode.id) {
	      // edge connected to other node on the "to" side
	      edge.originalToId.push(childNode.id);
	      edge.to = parentNode;
	      edge.toId = parentNode.id;
	    } else {
	      // edge connected to other node with the "from" side
	      edge.originalFromId.push(childNode.id);
	      edge.from = parentNode;
	      edge.fromId = parentNode.id;
	    }

	    this._addToReroutedEdges(parentNode, childNode, edge);
	  }
	};

	/**
	 * If a node is connected to itself, a circular edge is drawn. When clustering we want to contain
	 * these edges inside of the cluster.
	 *
	 * @param parentNode
	 * @param childNode
	 * @private
	 */
	exports._containCircularEdgesFromNode = function (parentNode, childNode) {
	  // manage all the edges connected to the child and parent nodes
	  for (var i = 0; i < parentNode.dynamicEdges.length; i++) {
	    var edge = parentNode.dynamicEdges[i];
	    // handle circular edges
	    if (edge.toId == edge.fromId) {
	      this._addToContainedEdges(parentNode, childNode, edge);
	    }
	  }
	};

	/**
	 * This adds an edge from the childNode to the rerouted edges of the parent node
	 *
	 * @param parentNode    | Node object
	 * @param childNode     | Node object
	 * @param edge          | Edge object
	 * @private
	 */
	exports._addToReroutedEdges = function (parentNode, childNode, edge) {
	  // create an array object if it does not yet exist for this childNode
	  // we store the edge in the rerouted edges so we can restore it when the cluster pops open
	  if (!parentNode.reroutedEdges.hasOwnProperty(childNode.id)) {
	    parentNode.reroutedEdges[childNode.id] = [];
	  }
	  parentNode.reroutedEdges[childNode.id].push(edge);

	  // this edge becomes part of the dynamicEdges of the cluster node
	  parentNode.dynamicEdges.push(edge);
	};

	/**
	 * This function connects an edge that was connected to a cluster node back to the child node.
	 *
	 * @param parentNode    | Node object
	 * @param childNode     | Node object
	 * @private
	 */
	exports._connectEdgeBackToChild = function (parentNode, childNode) {
	  if (parentNode.reroutedEdges.hasOwnProperty(childNode.id)) {
	    for (var i = 0; i < parentNode.reroutedEdges[childNode.id].length; i++) {
	      var edge = parentNode.reroutedEdges[childNode.id][i];
	      if (edge.originalFromId[edge.originalFromId.length - 1] == childNode.id) {
	        edge.originalFromId.pop();
	        edge.fromId = childNode.id;
	        edge.from = childNode;
	      } else {
	        edge.originalToId.pop();
	        edge.toId = childNode.id;
	        edge.to = childNode;
	      }

	      // append this edge to the list of edges connecting to the childnode
	      childNode.dynamicEdges.push(edge);

	      // remove the edge from the parent object
	      for (var j = 0; j < parentNode.dynamicEdges.length; j++) {
	        if (parentNode.dynamicEdges[j].id == edge.id) {
	          parentNode.dynamicEdges.splice(j, 1);
	          break;
	        }
	      }
	    }
	    // remove the entry from the rerouted edges
	    delete parentNode.reroutedEdges[childNode.id];
	  }
	};

	/**
	 * When loops are clustered, an edge can be both in the rerouted array and the contained array.
	 * This function is called last to verify that all edges in dynamicEdges are in fact connected to the
	 * parentNode
	 *
	 * @param parentNode    | Node object
	 * @private
	 */
	exports._validateEdges = function (parentNode) {
	  var dynamicEdges = [];
	  for (var i = 0; i < parentNode.dynamicEdges.length; i++) {
	    var edge = parentNode.dynamicEdges[i];
	    if (parentNode.id == edge.toId || parentNode.id == edge.fromId) {
	      dynamicEdges.push(edge);
	    }
	  }
	  parentNode.dynamicEdges = dynamicEdges;
	};

	/**
	 * This function released the contained edges back into the global domain and puts them back into the
	 * dynamic edges of both parent and child.
	 *
	 * @param {Node} parentNode    |
	 * @param {Node} childNode     |
	 * @private
	 */
	exports._releaseContainedEdges = function (parentNode, childNode) {
	  for (var i = 0; i < parentNode.containedEdges[childNode.id].length; i++) {
	    var edge = parentNode.containedEdges[childNode.id][i];

	    // put the edge back in the global edges object
	    this.edges[edge.id] = edge;

	    // put the edge back in the dynamic edges of the child and parent
	    childNode.dynamicEdges.push(edge);
	    parentNode.dynamicEdges.push(edge);
	  }
	  // remove the entry from the contained edges
	  delete parentNode.containedEdges[childNode.id];
	};

	// ------------------- UTILITY FUNCTIONS ---------------------------- //


	/**
	 * This updates the node labels for all nodes (for debugging purposes)
	 */
	exports.updateLabels = function () {
	  var nodeId;
	  // update node labels
	  for (nodeId in this.nodes) {
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      var node = this.nodes[nodeId];
	      if (node.clusterSize > 1) {
	        node.label = "[".concat(String(node.clusterSize), "]");
	      }
	    }
	  }

	  // update node labels
	  for (nodeId in this.nodes) {
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      node = this.nodes[nodeId];
	      if (node.clusterSize == 1) {
	        if (node.originalLabel !== undefined) {
	          node.label = node.originalLabel;
	        } else {
	          node.label = String(node.id);
	        }
	      }
	    }
	  }

	  //    /* Debug Override */
	  //    for (nodeId in this.nodes) {
	  //      if (this.nodes.hasOwnProperty(nodeId)) {
	  //        node = this.nodes[nodeId];
	  //        node.label = String(node.clusterSize + ":" + node.dynamicEdges.length);
	  //      }
	  //    }
	};

	/**
	 * We want to keep the cluster level distribution rather small. This means we do not want unclustered nodes
	 * if the rest of the nodes are already a few cluster levels in.
	 * To fix this we use this function. It determines the min and max cluster level and sends nodes that have not
	 * clustered enough to the clusterToSmallestNeighbours function.
	 */
	exports.normalizeClusterLevels = function () {
	  var maxLevel = 0;
	  var minLevel = 1e9;
	  var clusterLevel = 0;
	  var nodeId;

	  // we loop over all nodes in the list
	  for (nodeId in this.nodes) {
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      clusterLevel = this.nodes[nodeId].clusterSessions.length;
	      if (maxLevel < clusterLevel) {
	        maxLevel = clusterLevel;
	      }
	      if (minLevel > clusterLevel) {
	        minLevel = clusterLevel;
	      }
	    }
	  }

	  if (maxLevel - minLevel > this.constants.clustering.clusterLevelDifference) {
	    var amountOfNodes = this.nodeIndices.length;
	    var targetLevel = maxLevel - this.constants.clustering.clusterLevelDifference;
	    // we loop over all nodes in the list
	    for (nodeId in this.nodes) {
	      if (this.nodes.hasOwnProperty(nodeId)) {
	        if (this.nodes[nodeId].clusterSessions.length < targetLevel) {
	          this._clusterToSmallestNeighbour(this.nodes[nodeId]);
	        }
	      }
	    }
	    this._updateNodeIndexList();
	    // if a cluster was formed, we increase the clusterSession
	    if (this.nodeIndices.length != amountOfNodes) {
	      this.clusterSession += 1;
	    }
	  }
	};

	/**
	 * This function determines if the cluster we want to decluster is in the active area
	 * this means around the zoom center
	 *
	 * @param {Node} node
	 * @returns {boolean}
	 * @private
	 */
	exports._nodeInActiveArea = function (node) {
	  return Math.abs(node.x - this.areaCenter.x) <= this.constants.clustering.activeAreaBoxSize / this.scale && Math.abs(node.y - this.areaCenter.y) <= this.constants.clustering.activeAreaBoxSize / this.scale;
	};

	/**
	 * This is an adaptation of the original repositioning function. This is called if the system is clustered initially
	 * It puts large clusters away from the center and randomizes the order.
	 *
	 */
	exports.repositionNodes = function () {
	  for (var i = 0; i < this.nodeIndices.length; i++) {
	    var node = this.nodes[this.nodeIndices[i]];
	    if (node.xFixed == false || node.yFixed == false) {
	      var radius = 10 * 0.1 * this.nodeIndices.length * Math.min(100, node.options.mass);
	      var angle = 2 * Math.PI * Math.random();
	      if (node.xFixed == false) {
	        node.x = radius * Math.cos(angle);
	      }
	      if (node.yFixed == false) {
	        node.y = radius * Math.sin(angle);
	      }
	      this._repositionBezierNodes(node);
	    }
	  }
	};

	/**
	 * We determine how many connections denote an important hub.
	 * We take the mean + 2*std as the important hub size. (Assuming a normal distribution of data, ~2.2%)
	 *
	 * @private
	 */
	exports._getHubSize = function () {
	  var average = 0;
	  var averageSquared = 0;
	  var hubCounter = 0;
	  var largestHub = 0;

	  for (var i = 0; i < this.nodeIndices.length; i++) {

	    var node = this.nodes[this.nodeIndices[i]];
	    if (node.dynamicEdges.length > largestHub) {
	      largestHub = node.dynamicEdges.length;
	    }
	    average += node.dynamicEdges.length;
	    averageSquared += Math.pow(node.dynamicEdges.length, 2);
	    hubCounter += 1;
	  }
	  average = average / hubCounter;
	  averageSquared = averageSquared / hubCounter;

	  var variance = averageSquared - Math.pow(average, 2);

	  var standardDeviation = Math.sqrt(variance);

	  this.hubThreshold = Math.floor(average + 2 * standardDeviation);

	  // always have at least one to cluster
	  if (this.hubThreshold > largestHub) {
	    this.hubThreshold = largestHub;
	  }

	  //  console.log("average",average,"averageSQ",averageSquared,"var",variance,"std",standardDeviation);
	  //  console.log("hubThreshold:",this.hubThreshold);
	};

	/**
	 * We reduce the amount of "extension nodes" or chains. These are not quickly clustered with the outliers and hubs methods
	 * with this amount we can cluster specifically on these chains.
	 *
	 * @param   {Number} fraction     | between 0 and 1, the percentage of chains to reduce
	 * @private
	 */
	exports._reduceAmountOfChains = function (fraction) {
	  this.hubThreshold = 2;
	  var reduceAmount = Math.floor(this.nodeIndices.length * fraction);
	  for (var nodeId in this.nodes) {
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      if (this.nodes[nodeId].dynamicEdges.length == 2) {
	        if (reduceAmount > 0) {
	          this._formClusterFromHub(this.nodes[nodeId], true, true, 1);
	          reduceAmount -= 1;
	        }
	      }
	    }
	  }
	};

	/**
	 * We get the amount of "extension nodes" or chains. These are not quickly clustered with the outliers and hubs methods
	 * with this amount we can cluster specifically on these chains.
	 *
	 * @private
	 */
	exports._getChainFraction = function () {
	  var chains = 0;
	  var total = 0;
	  for (var nodeId in this.nodes) {
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      if (this.nodes[nodeId].dynamicEdges.length == 2) {
	        chains += 1;
	      }
	      total += 1;
	    }
	  }
	  return chains / total;
	};

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(175);
	var Node = __webpack_require__(334);

	/**
	 * Creation of the SectorMixin var.
	 *
	 * This contains all the functions the Network object can use to employ the sector system.
	 * The sector system is always used by Network, though the benefits only apply to the use of clustering.
	 * If clustering is not used, there is no overhead except for a duplicate object with references to nodes and edges.
	 */

	/**
	 * This function is only called by the setData function of the Network object.
	 * This loads the global references into the active sector. This initializes the sector.
	 *
	 * @private
	 */
	exports._putDataInSector = function () {
	  this.sectors["active"][this._sector()].nodes = this.nodes;
	  this.sectors["active"][this._sector()].edges = this.edges;
	  this.sectors["active"][this._sector()].nodeIndices = this.nodeIndices;
	};

	/**
	 *  /**
	 * This function sets the global references to nodes, edges and nodeIndices back to
	 * those of the supplied (active) sector. If a type is defined, do the specific type
	 *
	 * @param {String} sectorId
	 * @param {String} [sectorType] | "active" or "frozen"
	 * @private
	 */
	exports._switchToSector = function (sectorId, sectorType) {
	  if (sectorType === undefined || sectorType == "active") {
	    this._switchToActiveSector(sectorId);
	  } else {
	    this._switchToFrozenSector(sectorId);
	  }
	};

	/**
	 * This function sets the global references to nodes, edges and nodeIndices back to
	 * those of the supplied active sector.
	 *
	 * @param sectorId
	 * @private
	 */
	exports._switchToActiveSector = function (sectorId) {
	  this.nodeIndices = this.sectors["active"][sectorId]["nodeIndices"];
	  this.nodes = this.sectors["active"][sectorId]["nodes"];
	  this.edges = this.sectors["active"][sectorId]["edges"];
	};

	/**
	 * This function sets the global references to nodes, edges and nodeIndices back to
	 * those of the supplied active sector.
	 *
	 * @private
	 */
	exports._switchToSupportSector = function () {
	  this.nodeIndices = this.sectors["support"]["nodeIndices"];
	  this.nodes = this.sectors["support"]["nodes"];
	  this.edges = this.sectors["support"]["edges"];
	};

	/**
	 * This function sets the global references to nodes, edges and nodeIndices back to
	 * those of the supplied frozen sector.
	 *
	 * @param sectorId
	 * @private
	 */
	exports._switchToFrozenSector = function (sectorId) {
	  this.nodeIndices = this.sectors["frozen"][sectorId]["nodeIndices"];
	  this.nodes = this.sectors["frozen"][sectorId]["nodes"];
	  this.edges = this.sectors["frozen"][sectorId]["edges"];
	};

	/**
	 * This function sets the global references to nodes, edges and nodeIndices back to
	 * those of the currently active sector.
	 *
	 * @private
	 */
	exports._loadLatestSector = function () {
	  this._switchToSector(this._sector());
	};

	/**
	 * This function returns the currently active sector Id
	 *
	 * @returns {String}
	 * @private
	 */
	exports._sector = function () {
	  return this.activeSector[this.activeSector.length - 1];
	};

	/**
	 * This function returns the previously active sector Id
	 *
	 * @returns {String}
	 * @private
	 */
	exports._previousSector = function () {
	  if (this.activeSector.length > 1) {
	    return this.activeSector[this.activeSector.length - 2];
	  } else {
	    throw new TypeError('there are not enough sectors in the this.activeSector array.');
	  }
	};

	/**
	 * We add the active sector at the end of the this.activeSector array
	 * This ensures it is the currently active sector returned by _sector() and it reaches the top
	 * of the activeSector stack. When we reverse our steps we move from the end to the beginning of this stack.
	 *
	 * @param newId
	 * @private
	 */
	exports._setActiveSector = function (newId) {
	  this.activeSector.push(newId);
	};

	/**
	 * We remove the currently active sector id from the active sector stack. This happens when
	 * we reactivate the previously active sector
	 *
	 * @private
	 */
	exports._forgetLastSector = function () {
	  this.activeSector.pop();
	};

	/**
	 * This function creates a new active sector with the supplied newId. This newId
	 * is the expanding node id.
	 *
	 * @param {String} newId   | Id of the new active sector
	 * @private
	 */
	exports._createNewSector = function (newId) {
	  // create the new sector
	  this.sectors["active"][newId] = { "nodes": {},
	    "edges": {},
	    "nodeIndices": [],
	    "formationScale": this.scale,
	    "drawingNode": undefined };

	  // create the new sector render node. This gives visual feedback that you are in a new sector.
	  this.sectors["active"][newId]['drawingNode'] = new Node({ id: newId,
	    color: {
	      background: "#eaefef",
	      border: "495c5e"
	    }
	  }, {}, {}, this.constants);
	  this.sectors["active"][newId]['drawingNode'].clusterSize = 2;
	};

	/**
	 * This function removes the currently active sector. This is called when we create a new
	 * active sector.
	 *
	 * @param {String} sectorId   | Id of the active sector that will be removed
	 * @private
	 */
	exports._deleteActiveSector = function (sectorId) {
	  delete this.sectors["active"][sectorId];
	};

	/**
	 * This function removes the currently active sector. This is called when we reactivate
	 * the previously active sector.
	 *
	 * @param {String} sectorId   | Id of the active sector that will be removed
	 * @private
	 */
	exports._deleteFrozenSector = function (sectorId) {
	  delete this.sectors["frozen"][sectorId];
	};

	/**
	 * Freezing an active sector means moving it from the "active" object to the "frozen" object.
	 * We copy the references, then delete the active entree.
	 *
	 * @param sectorId
	 * @private
	 */
	exports._freezeSector = function (sectorId) {
	  // we move the set references from the active to the frozen stack.
	  this.sectors["frozen"][sectorId] = this.sectors["active"][sectorId];

	  // we have moved the sector data into the frozen set, we now remove it from the active set
	  this._deleteActiveSector(sectorId);
	};

	/**
	 * This is the reverse operation of _freezeSector. Activating means moving the sector from the "frozen"
	 * object to the "active" object.
	 *
	 * @param sectorId
	 * @private
	 */
	exports._activateSector = function (sectorId) {
	  // we move the set references from the frozen to the active stack.
	  this.sectors["active"][sectorId] = this.sectors["frozen"][sectorId];

	  // we have moved the sector data into the active set, we now remove it from the frozen stack
	  this._deleteFrozenSector(sectorId);
	};

	/**
	 * This function merges the data from the currently active sector with a frozen sector. This is used
	 * in the process of reverting back to the previously active sector.
	 * The data that is placed in the frozen (the previously active) sector is the node that has been removed from it
	 * upon the creation of a new active sector.
	 *
	 * @param sectorId
	 * @private
	 */
	exports._mergeThisWithFrozen = function (sectorId) {
	  // copy all nodes
	  for (var nodeId in this.nodes) {
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      this.sectors["frozen"][sectorId]["nodes"][nodeId] = this.nodes[nodeId];
	    }
	  }

	  // copy all edges (if not fully clustered, else there are no edges)
	  for (var edgeId in this.edges) {
	    if (this.edges.hasOwnProperty(edgeId)) {
	      this.sectors["frozen"][sectorId]["edges"][edgeId] = this.edges[edgeId];
	    }
	  }

	  // merge the nodeIndices
	  for (var i = 0; i < this.nodeIndices.length; i++) {
	    this.sectors["frozen"][sectorId]["nodeIndices"].push(this.nodeIndices[i]);
	  }
	};

	/**
	 * This clusters the sector to one cluster. It was a single cluster before this process started so
	 * we revert to that state. The clusterToFit function with a maximum size of 1 node does this.
	 *
	 * @private
	 */
	exports._collapseThisToSingleCluster = function () {
	  this.clusterToFit(1, false);
	};

	/**
	 * We create a new active sector from the node that we want to open.
	 *
	 * @param node
	 * @private
	 */
	exports._addSector = function (node) {
	  // this is the currently active sector
	  var sector = this._sector();

	  //    // this should allow me to select nodes from a frozen set.
	  //    if (this.sectors['active'][sector]["nodes"].hasOwnProperty(node.id)) {
	  //      console.log("the node is part of the active sector");
	  //    }
	  //    else {
	  //      console.log("I dont know what the fuck happened!!");
	  //    }

	  // when we switch to a new sector, we remove the node that will be expanded from the current nodes list.
	  delete this.nodes[node.id];

	  var unqiueIdentifier = util.randomUUID();

	  // we fully freeze the currently active sector
	  this._freezeSector(sector);

	  // we create a new active sector. This sector has the Id of the node to ensure uniqueness
	  this._createNewSector(unqiueIdentifier);

	  // we add the active sector to the sectors array to be able to revert these steps later on
	  this._setActiveSector(unqiueIdentifier);

	  // we redirect the global references to the new sector's references. this._sector() now returns unqiueIdentifier
	  this._switchToSector(this._sector());

	  // finally we add the node we removed from our previous active sector to the new active sector
	  this.nodes[node.id] = node;
	};

	/**
	 * We close the sector that is currently open and revert back to the one before.
	 * If the active sector is the "default" sector, nothing happens.
	 *
	 * @private
	 */
	exports._collapseSector = function () {
	  // the currently active sector
	  var sector = this._sector();

	  // we cannot collapse the default sector
	  if (sector != "default") {
	    if (this.nodeIndices.length == 1 || this.sectors["active"][sector]["drawingNode"].width * this.scale < this.constants.clustering.screenSizeThreshold * this.frame.canvas.clientWidth || this.sectors["active"][sector]["drawingNode"].height * this.scale < this.constants.clustering.screenSizeThreshold * this.frame.canvas.clientHeight) {
	      var previousSector = this._previousSector();

	      // we collapse the sector back to a single cluster
	      this._collapseThisToSingleCluster();

	      // we move the remaining nodes, edges and nodeIndices to the previous sector.
	      // This previous sector is the one we will reactivate
	      this._mergeThisWithFrozen(previousSector);

	      // the previously active (frozen) sector now has all the data from the currently active sector.
	      // we can now delete the active sector.
	      this._deleteActiveSector(sector);

	      // we activate the previously active (and currently frozen) sector.
	      this._activateSector(previousSector);

	      // we load the references from the newly active sector into the global references
	      this._switchToSector(previousSector);

	      // we forget the previously active sector because we reverted to the one before
	      this._forgetLastSector();

	      // finally, we update the node index list.
	      this._updateNodeIndexList();

	      // we refresh the list with calulation nodes and calculation node indices.
	      this._updateCalculationNodes();
	    }
	  }
	};

	/**
	 * This runs a function in all active sectors. This is used in _redraw() and the _initializeForceCalculation().
	 *
	 * @param {String} runFunction  |   This is the NAME of a function we want to call in all active sectors
	 *                              |   we dont pass the function itself because then the "this" is the window object
	 *                              |   instead of the Network object
	 * @param {*} [argument]            |   Optional: arguments to pass to the runFunction
	 * @private
	 */
	exports._doInAllActiveSectors = function (runFunction, argument) {
	  var returnValues = [];
	  if (argument === undefined) {
	    for (var sector in this.sectors["active"]) {
	      if (this.sectors["active"].hasOwnProperty(sector)) {
	        // switch the global references to those of this sector
	        this._switchToActiveSector(sector);
	        returnValues.push(this[runFunction]());
	      }
	    }
	  } else {
	    for (var sector in this.sectors["active"]) {
	      if (this.sectors["active"].hasOwnProperty(sector)) {
	        // switch the global references to those of this sector
	        this._switchToActiveSector(sector);
	        var args = Array.prototype.splice.call(arguments, 1);
	        if (args.length > 1) {
	          returnValues.push(this[runFunction](args[0], args[1]));
	        } else {
	          returnValues.push(this[runFunction](argument));
	        }
	      }
	    }
	  }
	  // we revert the global references back to our active sector
	  this._loadLatestSector();
	  return returnValues;
	};

	/**
	 * This runs a function in all active sectors. This is used in _redraw() and the _initializeForceCalculation().
	 *
	 * @param {String} runFunction  |   This is the NAME of a function we want to call in all active sectors
	 *                              |   we dont pass the function itself because then the "this" is the window object
	 *                              |   instead of the Network object
	 * @param {*} [argument]        |   Optional: arguments to pass to the runFunction
	 * @private
	 */
	exports._doInSupportSector = function (runFunction, argument) {
	  var returnValues = false;
	  if (argument === undefined) {
	    this._switchToSupportSector();
	    returnValues = this[runFunction]();
	  } else {
	    this._switchToSupportSector();
	    var args = Array.prototype.splice.call(arguments, 1);
	    if (args.length > 1) {
	      returnValues = this[runFunction](args[0], args[1]);
	    } else {
	      returnValues = this[runFunction](argument);
	    }
	  }
	  // we revert the global references back to our active sector
	  this._loadLatestSector();
	  return returnValues;
	};

	/**
	 * This runs a function in all frozen sectors. This is used in the _redraw().
	 *
	 * @param {String} runFunction  |   This is the NAME of a function we want to call in all active sectors
	 *                              |   we don't pass the function itself because then the "this" is the window object
	 *                              |   instead of the Network object
	 * @param {*} [argument]            |   Optional: arguments to pass to the runFunction
	 * @private
	 */
	exports._doInAllFrozenSectors = function (runFunction, argument) {
	  if (argument === undefined) {
	    for (var sector in this.sectors["frozen"]) {
	      if (this.sectors["frozen"].hasOwnProperty(sector)) {
	        // switch the global references to those of this sector
	        this._switchToFrozenSector(sector);
	        this[runFunction]();
	      }
	    }
	  } else {
	    for (var sector in this.sectors["frozen"]) {
	      if (this.sectors["frozen"].hasOwnProperty(sector)) {
	        // switch the global references to those of this sector
	        this._switchToFrozenSector(sector);
	        var args = Array.prototype.splice.call(arguments, 1);
	        if (args.length > 1) {
	          this[runFunction](args[0], args[1]);
	        } else {
	          this[runFunction](argument);
	        }
	      }
	    }
	  }
	  this._loadLatestSector();
	};

	/**
	 * This runs a function in all sectors. This is used in the _redraw().
	 *
	 * @param {String} runFunction  |   This is the NAME of a function we want to call in all active sectors
	 *                              |   we don't pass the function itself because then the "this" is the window object
	 *                              |   instead of the Network object
	 * @param {*} [argument]        |   Optional: arguments to pass to the runFunction
	 * @private
	 */
	exports._doInAllSectors = function (runFunction, argument) {
	  var args = Array.prototype.splice.call(arguments, 1);
	  if (argument === undefined) {
	    this._doInAllActiveSectors(runFunction);
	    this._doInAllFrozenSectors(runFunction);
	  } else {
	    if (args.length > 1) {
	      this._doInAllActiveSectors(runFunction, args[0], args[1]);
	      this._doInAllFrozenSectors(runFunction, args[0], args[1]);
	    } else {
	      this._doInAllActiveSectors(runFunction, argument);
	      this._doInAllFrozenSectors(runFunction, argument);
	    }
	  }
	};

	/**
	 * This clears the nodeIndices list. We cannot use this.nodeIndices = [] because we would break the link with the
	 * active sector. Thus we clear the nodeIndices in the active sector, then reconnect the this.nodeIndices to it.
	 *
	 * @private
	 */
	exports._clearNodeIndexList = function () {
	  var sector = this._sector();
	  this.sectors["active"][sector]["nodeIndices"] = [];
	  this.nodeIndices = this.sectors["active"][sector]["nodeIndices"];
	};

	/**
	 * Draw the encompassing sector node
	 *
	 * @param ctx
	 * @param sectorType
	 * @private
	 */
	exports._drawSectorNodes = function (ctx, sectorType) {
	  var minY = 1e9,
	      maxY = -1e9,
	      minX = 1e9,
	      maxX = -1e9,
	      node;
	  for (var sector in this.sectors[sectorType]) {
	    if (this.sectors[sectorType].hasOwnProperty(sector)) {
	      if (this.sectors[sectorType][sector]["drawingNode"] !== undefined) {

	        this._switchToSector(sector, sectorType);

	        minY = 1e9;maxY = -1e9;minX = 1e9;maxX = -1e9;
	        for (var nodeId in this.nodes) {
	          if (this.nodes.hasOwnProperty(nodeId)) {
	            node = this.nodes[nodeId];
	            node.resize(ctx);
	            if (minX > node.x - 0.5 * node.width) {
	              minX = node.x - 0.5 * node.width;
	            }
	            if (maxX < node.x + 0.5 * node.width) {
	              maxX = node.x + 0.5 * node.width;
	            }
	            if (minY > node.y - 0.5 * node.height) {
	              minY = node.y - 0.5 * node.height;
	            }
	            if (maxY < node.y + 0.5 * node.height) {
	              maxY = node.y + 0.5 * node.height;
	            }
	          }
	        }
	        node = this.sectors[sectorType][sector]["drawingNode"];
	        node.x = 0.5 * (maxX + minX);
	        node.y = 0.5 * (maxY + minY);
	        node.width = 2 * (node.x - minX);
	        node.height = 2 * (node.y - minY);
	        node.options.radius = Math.sqrt(Math.pow(0.5 * node.width, 2) + Math.pow(0.5 * node.height, 2));
	        node.setScale(this.scale);
	        node._drawCircle(ctx);
	      }
	    }
	  }
	};

	exports._drawAllSectorNodes = function (ctx) {
	  this._drawSectorNodes(ctx, "frozen");
	  this._drawSectorNodes(ctx, "active");
	  this._loadLatestSector();
	};

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var Node = __webpack_require__(334);

	/**
	 * This function can be called from the _doInAllSectors function
	 *
	 * @param object
	 * @param overlappingNodes
	 * @private
	 */
	exports._getNodesOverlappingWith = function (object, overlappingNodes) {
	  var nodes = this.nodes;
	  for (var nodeId in nodes) {
	    if (nodes.hasOwnProperty(nodeId)) {
	      if (nodes[nodeId].isOverlappingWith(object)) {
	        overlappingNodes.push(nodeId);
	      }
	    }
	  }
	};

	/**
	 * retrieve all nodes overlapping with given object
	 * @param {Object} object  An object with parameters left, top, right, bottom
	 * @return {Number[]}   An array with id's of the overlapping nodes
	 * @private
	 */
	exports._getAllNodesOverlappingWith = function (object) {
	  var overlappingNodes = [];
	  this._doInAllActiveSectors("_getNodesOverlappingWith", object, overlappingNodes);
	  return overlappingNodes;
	};

	/**
	 * Return a position object in canvasspace from a single point in screenspace
	 *
	 * @param pointer
	 * @returns {{left: number, top: number, right: number, bottom: number}}
	 * @private
	 */
	exports._pointerToPositionObject = function (pointer) {
	  var x = this._XconvertDOMtoCanvas(pointer.x);
	  var y = this._YconvertDOMtoCanvas(pointer.y);

	  return {
	    left: x,
	    top: y,
	    right: x,
	    bottom: y
	  };
	};

	/**
	 * Get the top node at the a specific point (like a click)
	 *
	 * @param {{x: Number, y: Number}} pointer
	 * @return {Node | null} node
	 * @private
	 */
	exports._getNodeAt = function (pointer) {
	  // we first check if this is an navigation controls element
	  var positionObject = this._pointerToPositionObject(pointer);
	  var overlappingNodes = this._getAllNodesOverlappingWith(positionObject);

	  // if there are overlapping nodes, select the last one, this is the
	  // one which is drawn on top of the others
	  if (overlappingNodes.length > 0) {
	    return this.nodes[overlappingNodes[overlappingNodes.length - 1]];
	  } else {
	    return null;
	  }
	};

	/**
	 * retrieve all edges overlapping with given object, selector is around center
	 * @param {Object} object  An object with parameters left, top, right, bottom
	 * @return {Number[]}   An array with id's of the overlapping nodes
	 * @private
	 */
	exports._getEdgesOverlappingWith = function (object, overlappingEdges) {
	  var edges = this.edges;
	  for (var edgeId in edges) {
	    if (edges.hasOwnProperty(edgeId)) {
	      if (edges[edgeId].isOverlappingWith(object)) {
	        overlappingEdges.push(edgeId);
	      }
	    }
	  }
	};

	/**
	 * retrieve all nodes overlapping with given object
	 * @param {Object} object  An object with parameters left, top, right, bottom
	 * @return {Number[]}   An array with id's of the overlapping nodes
	 * @private
	 */
	exports._getAllEdgesOverlappingWith = function (object) {
	  var overlappingEdges = [];
	  this._doInAllActiveSectors("_getEdgesOverlappingWith", object, overlappingEdges);
	  return overlappingEdges;
	};

	/**
	 * Place holder. To implement change the _getNodeAt to a _getObjectAt. Have the _getObjectAt call
	 * _getNodeAt and _getEdgesAt, then priortize the selection to user preferences.
	 *
	 * @param pointer
	 * @returns {null}
	 * @private
	 */
	exports._getEdgeAt = function (pointer) {
	  var positionObject = this._pointerToPositionObject(pointer);
	  var overlappingEdges = this._getAllEdgesOverlappingWith(positionObject);

	  if (overlappingEdges.length > 0) {
	    return this.edges[overlappingEdges[overlappingEdges.length - 1]];
	  } else {
	    return null;
	  }
	};

	/**
	 * Add object to the selection array.
	 *
	 * @param obj
	 * @private
	 */
	exports._addToSelection = function (obj) {
	  if (obj instanceof Node) {
	    this.selectionObj.nodes[obj.id] = obj;
	  } else {
	    this.selectionObj.edges[obj.id] = obj;
	  }
	};

	/**
	 * Add object to the selection array.
	 *
	 * @param obj
	 * @private
	 */
	exports._addToHover = function (obj) {
	  if (obj instanceof Node) {
	    this.hoverObj.nodes[obj.id] = obj;
	  } else {
	    this.hoverObj.edges[obj.id] = obj;
	  }
	};

	/**
	 * Remove a single option from selection.
	 *
	 * @param {Object} obj
	 * @private
	 */
	exports._removeFromSelection = function (obj) {
	  if (obj instanceof Node) {
	    delete this.selectionObj.nodes[obj.id];
	  } else {
	    delete this.selectionObj.edges[obj.id];
	  }
	};

	/**
	 * Unselect all. The selectionObj is useful for this.
	 *
	 * @param {Boolean} [doNotTrigger] | ignore trigger
	 * @private
	 */
	exports._unselectAll = function (doNotTrigger) {
	  if (doNotTrigger === undefined) {
	    doNotTrigger = false;
	  }
	  for (var nodeId in this.selectionObj.nodes) {
	    if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {
	      this.selectionObj.nodes[nodeId].unselect();
	    }
	  }
	  for (var edgeId in this.selectionObj.edges) {
	    if (this.selectionObj.edges.hasOwnProperty(edgeId)) {
	      this.selectionObj.edges[edgeId].unselect();
	    }
	  }

	  this.selectionObj = { nodes: {}, edges: {} };

	  if (doNotTrigger == false) {
	    this.emit('select', this.getSelection());
	  }
	};

	/**
	 * Unselect all clusters. The selectionObj is useful for this.
	 *
	 * @param {Boolean} [doNotTrigger] | ignore trigger
	 * @private
	 */
	exports._unselectClusters = function (doNotTrigger) {
	  if (doNotTrigger === undefined) {
	    doNotTrigger = false;
	  }

	  for (var nodeId in this.selectionObj.nodes) {
	    if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {
	      if (this.selectionObj.nodes[nodeId].clusterSize > 1) {
	        this.selectionObj.nodes[nodeId].unselect();
	        this._removeFromSelection(this.selectionObj.nodes[nodeId]);
	      }
	    }
	  }

	  if (doNotTrigger == false) {
	    this.emit('select', this.getSelection());
	  }
	};

	/**
	 * return the number of selected nodes
	 *
	 * @returns {number}
	 * @private
	 */
	exports._getSelectedNodeCount = function () {
	  var count = 0;
	  for (var nodeId in this.selectionObj.nodes) {
	    if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {
	      count += 1;
	    }
	  }
	  return count;
	};

	/**
	 * return the selected node
	 *
	 * @returns {number}
	 * @private
	 */
	exports._getSelectedNode = function () {
	  for (var nodeId in this.selectionObj.nodes) {
	    if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {
	      return this.selectionObj.nodes[nodeId];
	    }
	  }
	  return null;
	};

	/**
	 * return the selected edge
	 *
	 * @returns {number}
	 * @private
	 */
	exports._getSelectedEdge = function () {
	  for (var edgeId in this.selectionObj.edges) {
	    if (this.selectionObj.edges.hasOwnProperty(edgeId)) {
	      return this.selectionObj.edges[edgeId];
	    }
	  }
	  return null;
	};

	/**
	 * return the number of selected edges
	 *
	 * @returns {number}
	 * @private
	 */
	exports._getSelectedEdgeCount = function () {
	  var count = 0;
	  for (var edgeId in this.selectionObj.edges) {
	    if (this.selectionObj.edges.hasOwnProperty(edgeId)) {
	      count += 1;
	    }
	  }
	  return count;
	};

	/**
	 * return the number of selected objects.
	 *
	 * @returns {number}
	 * @private
	 */
	exports._getSelectedObjectCount = function () {
	  var count = 0;
	  for (var nodeId in this.selectionObj.nodes) {
	    if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {
	      count += 1;
	    }
	  }
	  for (var edgeId in this.selectionObj.edges) {
	    if (this.selectionObj.edges.hasOwnProperty(edgeId)) {
	      count += 1;
	    }
	  }
	  return count;
	};

	/**
	 * Check if anything is selected
	 *
	 * @returns {boolean}
	 * @private
	 */
	exports._selectionIsEmpty = function () {
	  for (var nodeId in this.selectionObj.nodes) {
	    if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {
	      return false;
	    }
	  }
	  for (var edgeId in this.selectionObj.edges) {
	    if (this.selectionObj.edges.hasOwnProperty(edgeId)) {
	      return false;
	    }
	  }
	  return true;
	};

	/**
	 * check if one of the selected nodes is a cluster.
	 *
	 * @returns {boolean}
	 * @private
	 */
	exports._clusterInSelection = function () {
	  for (var nodeId in this.selectionObj.nodes) {
	    if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {
	      if (this.selectionObj.nodes[nodeId].clusterSize > 1) {
	        return true;
	      }
	    }
	  }
	  return false;
	};

	/**
	 * select the edges connected to the node that is being selected
	 *
	 * @param {Node} node
	 * @private
	 */
	exports._selectConnectedEdges = function (node) {
	  for (var i = 0; i < node.dynamicEdges.length; i++) {
	    var edge = node.dynamicEdges[i];
	    edge.select();
	    this._addToSelection(edge);
	  }
	};

	/**
	 * select the edges connected to the node that is being selected
	 *
	 * @param {Node} node
	 * @private
	 */
	exports._hoverConnectedEdges = function (node) {
	  for (var i = 0; i < node.dynamicEdges.length; i++) {
	    var edge = node.dynamicEdges[i];
	    edge.hover = true;
	    this._addToHover(edge);
	  }
	};

	/**
	 * unselect the edges connected to the node that is being selected
	 *
	 * @param {Node} node
	 * @private
	 */
	exports._unselectConnectedEdges = function (node) {
	  for (var i = 0; i < node.dynamicEdges.length; i++) {
	    var edge = node.dynamicEdges[i];
	    edge.unselect();
	    this._removeFromSelection(edge);
	  }
	};

	/**
	 * This is called when someone clicks on a node. either select or deselect it.
	 * If there is an existing selection and we don't want to append to it, clear the existing selection
	 *
	 * @param {Node || Edge} object
	 * @param {Boolean} append
	 * @param {Boolean} [doNotTrigger] | ignore trigger
	 * @private
	 */
	exports._selectObject = function (object, append, doNotTrigger, highlightEdges, overrideSelectable) {
	  if (doNotTrigger === undefined) {
	    doNotTrigger = false;
	  }
	  if (highlightEdges === undefined) {
	    highlightEdges = true;
	  }

	  if (this._selectionIsEmpty() == false && append == false && this.forceAppendSelection == false) {
	    this._unselectAll(true);
	  }

	  // selectable allows the object to be selected. Override can be used if needed to bypass this.
	  if (object.selected == false && (this.constants.selectable == true || overrideSelectable)) {
	    object.select();
	    this._addToSelection(object);
	    if (object instanceof Node && this.blockConnectingEdgeSelection == false && highlightEdges == true) {
	      this._selectConnectedEdges(object);
	    }
	  }
	  // do not select the object if selectable is false, only add it to selection to allow drag to work
	  else if (object.selected == false) {
	      this._addToSelection(object);
	      doNotTrigger = true;
	    } else {
	      object.unselect();
	      this._removeFromSelection(object);
	    }

	  if (doNotTrigger == false) {
	    this.emit('select', this.getSelection());
	  }
	};

	/**
	 * This is called when someone clicks on a node. either select or deselect it.
	 * If there is an existing selection and we don't want to append to it, clear the existing selection
	 *
	 * @param {Node || Edge} object
	 * @private
	 */
	exports._blurObject = function (object) {
	  if (object.hover == true) {
	    object.hover = false;
	    this.emit("blurNode", { node: object.id });
	  }
	};

	/**
	 * This is called when someone clicks on a node. either select or deselect it.
	 * If there is an existing selection and we don't want to append to it, clear the existing selection
	 *
	 * @param {Node || Edge} object
	 * @private
	 */
	exports._hoverObject = function (object) {
	  if (object.hover == false) {
	    object.hover = true;
	    this._addToHover(object);
	    if (object instanceof Node) {
	      this.emit("hoverNode", { node: object.id });
	    }
	  }
	  if (object instanceof Node) {
	    this._hoverConnectedEdges(object);
	  }
	};

	/**
	 * handles the selection part of the touch, only for navigation controls elements;
	 * Touch is triggered before tap, also before hold. Hold triggers after a while.
	 * This is the most responsive solution
	 *
	 * @param {Object} pointer
	 * @private
	 */
	exports._handleTouch = function (pointer) {};

	/**
	 * handles the selection part of the tap;
	 *
	 * @param {Object} pointer
	 * @private
	 */
	exports._handleTap = function (pointer) {
	  var node = this._getNodeAt(pointer);
	  if (node != null) {
	    this._selectObject(node, false);
	  } else {
	    var edge = this._getEdgeAt(pointer);
	    if (edge != null) {
	      this._selectObject(edge, false);
	    } else {
	      this._unselectAll();
	    }
	  }
	  var properties = this.getSelection();
	  properties['pointer'] = {
	    DOM: { x: pointer.x, y: pointer.y },
	    canvas: { x: this._XconvertDOMtoCanvas(pointer.x), y: this._YconvertDOMtoCanvas(pointer.y) }
	  };
	  this.emit("click", properties);
	  this._requestRedraw();
	};

	/**
	 * handles the selection part of the double tap and opens a cluster if needed
	 *
	 * @param {Object} pointer
	 * @private
	 */
	exports._handleDoubleTap = function (pointer) {
	  var node = this._getNodeAt(pointer);
	  if (node != null && node !== undefined) {
	    // we reset the areaCenter here so the opening of the node will occur
	    this.areaCenter = { "x": this._XconvertDOMtoCanvas(pointer.x),
	      "y": this._YconvertDOMtoCanvas(pointer.y) };
	    this.openCluster(node);
	  }
	  var properties = this.getSelection();
	  properties['pointer'] = {
	    DOM: { x: pointer.x, y: pointer.y },
	    canvas: { x: this._XconvertDOMtoCanvas(pointer.x), y: this._YconvertDOMtoCanvas(pointer.y) }
	  };
	  this.emit("doubleClick", properties);
	};

	/**
	 * Handle the onHold selection part
	 *
	 * @param pointer
	 * @private
	 */
	exports._handleOnHold = function (pointer) {
	  var node = this._getNodeAt(pointer);
	  if (node != null) {
	    this._selectObject(node, true);
	  } else {
	    var edge = this._getEdgeAt(pointer);
	    if (edge != null) {
	      this._selectObject(edge, true);
	    }
	  }
	  this._requestRedraw();
	};

	/**
	 * handle the onRelease event. These functions are here for the navigation controls module
	 * and data manipulation module.
	 *
	  * @private
	 */
	exports._handleOnRelease = function (pointer) {
	  this._manipulationReleaseOverload(pointer);
	  this._navigationReleaseOverload(pointer);
	};

	exports._manipulationReleaseOverload = function (pointer) {};
	exports._navigationReleaseOverload = function (pointer) {};

	/**
	 *
	 * retrieve the currently selected objects
	 * @return {{nodes: Array.<String>, edges: Array.<String>}} selection
	 */
	exports.getSelection = function () {
	  var nodeIds = this.getSelectedNodes();
	  var edgeIds = this.getSelectedEdges();
	  return { nodes: nodeIds, edges: edgeIds };
	};

	/**
	 *
	 * retrieve the currently selected nodes
	 * @return {String[]} selection    An array with the ids of the
	 *                                            selected nodes.
	 */
	exports.getSelectedNodes = function () {
	  var idArray = [];
	  if (this.constants.selectable == true) {
	    for (var nodeId in this.selectionObj.nodes) {
	      if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {
	        idArray.push(nodeId);
	      }
	    }
	  }
	  return idArray;
	};

	/**
	 *
	 * retrieve the currently selected edges
	 * @return {Array} selection    An array with the ids of the
	 *                                            selected nodes.
	 */
	exports.getSelectedEdges = function () {
	  var idArray = [];
	  if (this.constants.selectable == true) {
	    for (var edgeId in this.selectionObj.edges) {
	      if (this.selectionObj.edges.hasOwnProperty(edgeId)) {
	        idArray.push(edgeId);
	      }
	    }
	  }
	  return idArray;
	};

	/**
	 * select zero or more nodes DEPRICATED
	 * @param {Number[] | String[]} selection     An array with the ids of the
	 *                                            selected nodes.
	 */
	exports.setSelection = function () {
	  console.log("setSelection is deprecated. Please use selectNodes instead.");
	};

	/**
	 * select zero or more nodes with the option to highlight edges
	 * @param {Number[] | String[]} selection     An array with the ids of the
	 *                                            selected nodes.
	 * @param {boolean} [highlightEdges]
	 */
	exports.selectNodes = function (selection, highlightEdges) {
	  var i, iMax, id;

	  if (!selection || selection.length == undefined) throw 'Selection must be an array with ids';

	  // first unselect any selected node
	  this._unselectAll(true);

	  for (i = 0, iMax = selection.length; i < iMax; i++) {
	    id = selection[i];

	    var node = this.nodes[id];
	    if (!node) {
	      throw new RangeError('Node with id "' + id + '" not found');
	    }
	    this._selectObject(node, true, true, highlightEdges, true);
	  }
	  this.redraw();
	};

	/**
	 * select zero or more edges
	 * @param {Number[] | String[]} selection     An array with the ids of the
	 *                                            selected nodes.
	 */
	exports.selectEdges = function (selection) {
	  var i, iMax, id;

	  if (!selection || selection.length == undefined) throw 'Selection must be an array with ids';

	  // first unselect any selected node
	  this._unselectAll(true);

	  for (i = 0, iMax = selection.length; i < iMax; i++) {
	    id = selection[i];

	    var edge = this.edges[id];
	    if (!edge) {
	      throw new RangeError('Edge with id "' + id + '" not found');
	    }
	    this._selectObject(edge, true, true, false, true);
	  }
	  this.redraw();
	};

	/**
	 * Validate the selection: remove ids of nodes which no longer exist
	 * @private
	 */
	exports._updateSelection = function () {
	  for (var nodeId in this.selectionObj.nodes) {
	    if (this.selectionObj.nodes.hasOwnProperty(nodeId)) {
	      if (!this.nodes.hasOwnProperty(nodeId)) {
	        delete this.selectionObj.nodes[nodeId];
	      }
	    }
	  }
	  for (var edgeId in this.selectionObj.edges) {
	    if (this.selectionObj.edges.hasOwnProperty(edgeId)) {
	      if (!this.edges.hasOwnProperty(edgeId)) {
	        delete this.selectionObj.edges[edgeId];
	      }
	    }
	  }
	};

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(175);
	var Node = __webpack_require__(334);
	var Edge = __webpack_require__(335);
	var Hammer = __webpack_require__(297);

	/**
	 * clears the toolbar div element of children
	 *
	 * @private
	 */
	exports._clearManipulatorBar = function () {
	  this._recursiveDOMDelete(this.manipulationDiv);
	  this.manipulationDOM = {};

	  this._cleanManipulatorHammers();

	  this._manipulationReleaseOverload = function () {};
	  delete this.sectors['support']['nodes']['targetNode'];
	  delete this.sectors['support']['nodes']['targetViaNode'];
	  this.controlNodesActive = false;
	  this.freezeSimulation(false);
	};

	exports._cleanManipulatorHammers = function () {
	  // clean hammer bindings
	  if (this.manipulationHammers.length != 0) {
	    for (var i = 0; i < this.manipulationHammers.length; i++) {
	      this.manipulationHammers[i].dispose();
	    }
	    this.manipulationHammers = [];
	  }
	};

	/**
	 * Manipulation UI temporarily overloads certain functions to extend or replace them. To be able to restore
	 * these functions to their original functionality, we saved them in this.cachedFunctions.
	 * This function restores these functions to their original function.
	 *
	 * @private
	 */
	exports._restoreOverloadedFunctions = function () {
	  for (var functionName in this.cachedFunctions) {
	    if (this.cachedFunctions.hasOwnProperty(functionName)) {
	      this[functionName] = this.cachedFunctions[functionName];
	      delete this.cachedFunctions[functionName];
	    }
	  }
	};

	/**
	 * Enable or disable edit-mode.
	 *
	 * @private
	 */
	exports._toggleEditMode = function () {
	  this.editMode = !this.editMode;
	  var toolbar = this.manipulationDiv;
	  var closeDiv = this.closeDiv;
	  var editModeDiv = this.editModeDiv;
	  if (this.editMode == true) {
	    toolbar.style.display = "block";
	    closeDiv.style.display = "block";
	    editModeDiv.style.display = "none";
	    this._bindHammerToDiv(closeDiv, '_toggleEditMode');
	  } else {
	    toolbar.style.display = "none";
	    closeDiv.style.display = "none";
	    editModeDiv.style.display = "block";
	  }
	  this._createManipulatorBar();
	};

	/**
	 * main function, creates the main toolbar. Removes functions bound to the select event. Binds all the buttons of the toolbar.
	 *
	 * @private
	 */
	exports._createManipulatorBar = function () {
	  // remove bound functions
	  if (this.boundFunction) {
	    this.off('select', this.boundFunction);
	  }

	  this._cleanManipulatorHammers();

	  var locale = this.constants.locales[this.constants.locale];

	  if (this.edgeBeingEdited !== undefined) {
	    this.edgeBeingEdited._disableControlNodes();
	    this.edgeBeingEdited = undefined;
	    this.selectedControlNode = null;
	    this.controlNodesActive = false;
	    this._redraw();
	  }

	  // restore overloaded functions
	  this._restoreOverloadedFunctions();

	  // resume calculation
	  this.freezeSimulation(false);

	  // reset global variables
	  this.blockConnectingEdgeSelection = false;
	  this.forceAppendSelection = false;
	  this.manipulationDOM = {};

	  if (this.editMode == true) {
	    while (this.manipulationDiv.hasChildNodes()) {
	      this.manipulationDiv.removeChild(this.manipulationDiv.firstChild);
	    }

	    this.manipulationDOM['addNodeSpan'] = document.createElement('div');
	    this.manipulationDOM['addNodeSpan'].className = 'network-manipulationUI add';

	    this.manipulationDOM['addNodeLabelSpan'] = document.createElement('div');
	    this.manipulationDOM['addNodeLabelSpan'].className = 'network-manipulationLabel';
	    this.manipulationDOM['addNodeLabelSpan'].innerHTML = locale['addNode'];
	    this.manipulationDOM['addNodeSpan'].appendChild(this.manipulationDOM['addNodeLabelSpan']);

	    this.manipulationDOM['seperatorLineDiv1'] = document.createElement('div');
	    this.manipulationDOM['seperatorLineDiv1'].className = 'network-seperatorLine';

	    this.manipulationDOM['addEdgeSpan'] = document.createElement('div');
	    this.manipulationDOM['addEdgeSpan'].className = 'network-manipulationUI connect';
	    this.manipulationDOM['addEdgeLabelSpan'] = document.createElement('div');
	    this.manipulationDOM['addEdgeLabelSpan'].className = 'network-manipulationLabel';
	    this.manipulationDOM['addEdgeLabelSpan'].innerHTML = locale['addEdge'];
	    this.manipulationDOM['addEdgeSpan'].appendChild(this.manipulationDOM['addEdgeLabelSpan']);

	    this.manipulationDiv.appendChild(this.manipulationDOM['addNodeSpan']);
	    this.manipulationDiv.appendChild(this.manipulationDOM['seperatorLineDiv1']);
	    this.manipulationDiv.appendChild(this.manipulationDOM['addEdgeSpan']);

	    if (this._getSelectedNodeCount() == 1 && this.triggerFunctions.edit) {
	      this.manipulationDOM['seperatorLineDiv2'] = document.createElement('div');
	      this.manipulationDOM['seperatorLineDiv2'].className = 'network-seperatorLine';

	      this.manipulationDOM['editNodeSpan'] = document.createElement('div');
	      this.manipulationDOM['editNodeSpan'].className = 'network-manipulationUI edit node';
	      this.manipulationDOM['editNodeLabelSpan'] = document.createElement('div');
	      this.manipulationDOM['editNodeLabelSpan'].className = 'network-manipulationLabel';
	      this.manipulationDOM['editNodeLabelSpan'].innerHTML = locale['editNode'];
	      this.manipulationDOM['editNodeSpan'].appendChild(this.manipulationDOM['editNodeLabelSpan']);

	      this.manipulationDiv.appendChild(this.manipulationDOM['seperatorLineDiv2']);
	      this.manipulationDiv.appendChild(this.manipulationDOM['editNodeSpan']);
	    } else if (this._getSelectedEdgeCount() == 1 && this._getSelectedNodeCount() == 0) {
	      this.manipulationDOM['seperatorLineDiv3'] = document.createElement('div');
	      this.manipulationDOM['seperatorLineDiv3'].className = 'network-seperatorLine';

	      this.manipulationDOM['editEdgeSpan'] = document.createElement('div');
	      this.manipulationDOM['editEdgeSpan'].className = 'network-manipulationUI edit edge';
	      this.manipulationDOM['editEdgeLabelSpan'] = document.createElement('div');
	      this.manipulationDOM['editEdgeLabelSpan'].className = 'network-manipulationLabel';
	      this.manipulationDOM['editEdgeLabelSpan'].innerHTML = locale['editEdge'];
	      this.manipulationDOM['editEdgeSpan'].appendChild(this.manipulationDOM['editEdgeLabelSpan']);

	      this.manipulationDiv.appendChild(this.manipulationDOM['seperatorLineDiv3']);
	      this.manipulationDiv.appendChild(this.manipulationDOM['editEdgeSpan']);
	    }
	    if (this._selectionIsEmpty() == false) {
	      this.manipulationDOM['seperatorLineDiv4'] = document.createElement('div');
	      this.manipulationDOM['seperatorLineDiv4'].className = 'network-seperatorLine';

	      this.manipulationDOM['deleteSpan'] = document.createElement('div');
	      this.manipulationDOM['deleteSpan'].className = 'network-manipulationUI delete';
	      this.manipulationDOM['deleteLabelSpan'] = document.createElement('div');
	      this.manipulationDOM['deleteLabelSpan'].className = 'network-manipulationLabel';
	      this.manipulationDOM['deleteLabelSpan'].innerHTML = locale['del'];
	      this.manipulationDOM['deleteSpan'].appendChild(this.manipulationDOM['deleteLabelSpan']);

	      this.manipulationDiv.appendChild(this.manipulationDOM['seperatorLineDiv4']);
	      this.manipulationDiv.appendChild(this.manipulationDOM['deleteSpan']);
	    }

	    // bind the icons
	    this._bindHammerToDiv(this.manipulationDOM['addNodeSpan'], '_createAddNodeToolbar');
	    this._bindHammerToDiv(this.manipulationDOM['addEdgeSpan'], '_createAddEdgeToolbar');
	    this._bindHammerToDiv(this.closeDiv, '_toggleEditMode');

	    if (this._getSelectedNodeCount() == 1 && this.triggerFunctions.edit) {
	      this._bindHammerToDiv(this.manipulationDOM['editNodeSpan'], '_editNode');
	    } else if (this._getSelectedEdgeCount() == 1 && this._getSelectedNodeCount() == 0) {
	      this._bindHammerToDiv(this.manipulationDOM['editEdgeSpan'], '_createEditEdgeToolbar');
	    }
	    if (this._selectionIsEmpty() == false) {
	      this._bindHammerToDiv(this.manipulationDOM['deleteSpan'], '_deleteSelected');
	    }

	    var me = this;
	    this.boundFunction = me._createManipulatorBar;
	    this.on('select', this.boundFunction);
	  } else {
	    while (this.editModeDiv.hasChildNodes()) {
	      this.editModeDiv.removeChild(this.editModeDiv.firstChild);
	    }

	    this.manipulationDOM['editModeSpan'] = document.createElement('div');
	    this.manipulationDOM['editModeSpan'].className = 'network-manipulationUI edit editmode';
	    this.manipulationDOM['editModeLabelSpan'] = document.createElement('div');
	    this.manipulationDOM['editModeLabelSpan'].className = 'network-manipulationLabel';
	    this.manipulationDOM['editModeLabelSpan'].innerHTML = locale['edit'];
	    this.manipulationDOM['editModeSpan'].appendChild(this.manipulationDOM['editModeLabelSpan']);

	    this.editModeDiv.appendChild(this.manipulationDOM['editModeSpan']);

	    this._bindHammerToDiv(this.manipulationDOM['editModeSpan'], '_toggleEditMode');
	  }
	};

	exports._bindHammerToDiv = function (domElement, funct) {
	  var hammer = Hammer(domElement, { prevent_default: true });
	  hammer.on('touch', this[funct].bind(this));
	  this.manipulationHammers.push(hammer);
	};

	/**
	 * Create the toolbar for adding Nodes
	 *
	 * @private
	 */
	exports._createAddNodeToolbar = function () {
	  // clear the toolbar
	  this._clearManipulatorBar();
	  if (this.boundFunction) {
	    this.off('select', this.boundFunction);
	  }

	  var locale = this.constants.locales[this.constants.locale];

	  this.manipulationDOM = {};
	  this.manipulationDOM['backSpan'] = document.createElement('div');
	  this.manipulationDOM['backSpan'].className = 'network-manipulationUI back';
	  this.manipulationDOM['backLabelSpan'] = document.createElement('div');
	  this.manipulationDOM['backLabelSpan'].className = 'network-manipulationLabel';
	  this.manipulationDOM['backLabelSpan'].innerHTML = locale['back'];
	  this.manipulationDOM['backSpan'].appendChild(this.manipulationDOM['backLabelSpan']);

	  this.manipulationDOM['seperatorLineDiv1'] = document.createElement('div');
	  this.manipulationDOM['seperatorLineDiv1'].className = 'network-seperatorLine';

	  this.manipulationDOM['descriptionSpan'] = document.createElement('div');
	  this.manipulationDOM['descriptionSpan'].className = 'network-manipulationUI none';
	  this.manipulationDOM['descriptionLabelSpan'] = document.createElement('div');
	  this.manipulationDOM['descriptionLabelSpan'].className = 'network-manipulationLabel';
	  this.manipulationDOM['descriptionLabelSpan'].innerHTML = locale['addDescription'];
	  this.manipulationDOM['descriptionSpan'].appendChild(this.manipulationDOM['descriptionLabelSpan']);

	  this.manipulationDiv.appendChild(this.manipulationDOM['backSpan']);
	  this.manipulationDiv.appendChild(this.manipulationDOM['seperatorLineDiv1']);
	  this.manipulationDiv.appendChild(this.manipulationDOM['descriptionSpan']);

	  // bind the icon
	  this._bindHammerToDiv(this.manipulationDOM['backSpan'], '_createManipulatorBar');

	  // we use the boundFunction so we can reference it when we unbind it from the "select" event.
	  var me = this;
	  this.boundFunction = me._addNode;
	  this.on('select', this.boundFunction);
	};

	/**
	 * create the toolbar to connect nodes
	 *
	 * @private
	 */
	exports._createAddEdgeToolbar = function () {
	  // clear the toolbar
	  this._clearManipulatorBar();
	  this._unselectAll(true);
	  this.freezeSimulation(true);

	  if (this.boundFunction) {
	    this.off('select', this.boundFunction);
	  }

	  var locale = this.constants.locales[this.constants.locale];

	  this._unselectAll();
	  this.forceAppendSelection = false;
	  this.blockConnectingEdgeSelection = true;

	  this.manipulationDOM = {};
	  this.manipulationDOM['backSpan'] = document.createElement('div');
	  this.manipulationDOM['backSpan'].className = 'network-manipulationUI back';
	  this.manipulationDOM['backLabelSpan'] = document.createElement('div');
	  this.manipulationDOM['backLabelSpan'].className = 'network-manipulationLabel';
	  this.manipulationDOM['backLabelSpan'].innerHTML = locale['back'];
	  this.manipulationDOM['backSpan'].appendChild(this.manipulationDOM['backLabelSpan']);

	  this.manipulationDOM['seperatorLineDiv1'] = document.createElement('div');
	  this.manipulationDOM['seperatorLineDiv1'].className = 'network-seperatorLine';

	  this.manipulationDOM['descriptionSpan'] = document.createElement('div');
	  this.manipulationDOM['descriptionSpan'].className = 'network-manipulationUI none';
	  this.manipulationDOM['descriptionLabelSpan'] = document.createElement('div');
	  this.manipulationDOM['descriptionLabelSpan'].className = 'network-manipulationLabel';
	  this.manipulationDOM['descriptionLabelSpan'].innerHTML = locale['edgeDescription'];
	  this.manipulationDOM['descriptionSpan'].appendChild(this.manipulationDOM['descriptionLabelSpan']);

	  this.manipulationDiv.appendChild(this.manipulationDOM['backSpan']);
	  this.manipulationDiv.appendChild(this.manipulationDOM['seperatorLineDiv1']);
	  this.manipulationDiv.appendChild(this.manipulationDOM['descriptionSpan']);

	  // bind the icon
	  this._bindHammerToDiv(this.manipulationDOM['backSpan'], '_createManipulatorBar');

	  // we use the boundFunction so we can reference it when we unbind it from the "select" event.
	  var me = this;
	  this.boundFunction = me._handleConnect;
	  this.on('select', this.boundFunction);

	  // temporarily overload functions
	  this.cachedFunctions["_handleTouch"] = this._handleTouch;
	  this.cachedFunctions["_manipulationReleaseOverload"] = this._manipulationReleaseOverload;
	  this.cachedFunctions["_handleDragStart"] = this._handleDragStart;
	  this.cachedFunctions["_handleDragEnd"] = this._handleDragEnd;
	  this.cachedFunctions["_handleOnHold"] = this._handleOnHold;
	  this._handleTouch = this._handleConnect;
	  this._manipulationReleaseOverload = function () {};
	  this._handleOnHold = function () {};
	  this._handleDragStart = function () {};
	  this._handleDragEnd = this._finishConnect;

	  // redraw to show the unselect
	  this._redraw();
	};

	/**
	 * create the toolbar to edit edges
	 *
	 * @private
	 */
	exports._createEditEdgeToolbar = function () {
	  // clear the toolbar
	  this._clearManipulatorBar();
	  this.controlNodesActive = true;

	  if (this.boundFunction) {
	    this.off('select', this.boundFunction);
	  }

	  this.edgeBeingEdited = this._getSelectedEdge();
	  this.edgeBeingEdited._enableControlNodes();

	  var locale = this.constants.locales[this.constants.locale];

	  this.manipulationDOM = {};
	  this.manipulationDOM['backSpan'] = document.createElement('div');
	  this.manipulationDOM['backSpan'].className = 'network-manipulationUI back';
	  this.manipulationDOM['backLabelSpan'] = document.createElement('div');
	  this.manipulationDOM['backLabelSpan'].className = 'network-manipulationLabel';
	  this.manipulationDOM['backLabelSpan'].innerHTML = locale['back'];
	  this.manipulationDOM['backSpan'].appendChild(this.manipulationDOM['backLabelSpan']);

	  this.manipulationDOM['seperatorLineDiv1'] = document.createElement('div');
	  this.manipulationDOM['seperatorLineDiv1'].className = 'network-seperatorLine';

	  this.manipulationDOM['descriptionSpan'] = document.createElement('div');
	  this.manipulationDOM['descriptionSpan'].className = 'network-manipulationUI none';
	  this.manipulationDOM['descriptionLabelSpan'] = document.createElement('div');
	  this.manipulationDOM['descriptionLabelSpan'].className = 'network-manipulationLabel';
	  this.manipulationDOM['descriptionLabelSpan'].innerHTML = locale['editEdgeDescription'];
	  this.manipulationDOM['descriptionSpan'].appendChild(this.manipulationDOM['descriptionLabelSpan']);

	  this.manipulationDiv.appendChild(this.manipulationDOM['backSpan']);
	  this.manipulationDiv.appendChild(this.manipulationDOM['seperatorLineDiv1']);
	  this.manipulationDiv.appendChild(this.manipulationDOM['descriptionSpan']);

	  // bind the icon
	  this._bindHammerToDiv(this.manipulationDOM['backSpan'], '_createManipulatorBar');

	  // temporarily overload functions
	  this.cachedFunctions["_handleTouch"] = this._handleTouch;
	  this.cachedFunctions["_manipulationReleaseOverload"] = this._manipulationReleaseOverload;
	  this.cachedFunctions["_handleTap"] = this._handleTap;
	  this.cachedFunctions["_handleDragStart"] = this._handleDragStart;
	  this.cachedFunctions["_handleOnDrag"] = this._handleOnDrag;
	  this._handleTouch = this._selectControlNode;
	  this._handleTap = function () {};
	  this._handleOnDrag = this._controlNodeDrag;
	  this._handleDragStart = function () {};
	  this._manipulationReleaseOverload = this._releaseControlNode;

	  // redraw to show the unselect
	  this._redraw();
	};

	/**
	 * the function bound to the selection event. It checks if you want to connect a cluster and changes the description
	 * to walk the user through the process.
	 *
	 * @private
	 */
	exports._selectControlNode = function (pointer) {
	  this.edgeBeingEdited.controlNodes.from.unselect();
	  this.edgeBeingEdited.controlNodes.to.unselect();
	  this.selectedControlNode = this.edgeBeingEdited._getSelectedControlNode(this._XconvertDOMtoCanvas(pointer.x), this._YconvertDOMtoCanvas(pointer.y));
	  if (this.selectedControlNode !== null) {
	    this.selectedControlNode.select();
	    this.freezeSimulation(true);
	  }
	  this._redraw();
	};

	/**
	 * the function bound to the selection event. It checks if you want to connect a cluster and changes the description
	 * to walk the user through the process.
	 *
	 * @private
	 */
	exports._controlNodeDrag = function (event) {
	  var pointer = this._getPointer(event.gesture.center);
	  if (this.selectedControlNode !== null && this.selectedControlNode !== undefined) {
	    this.selectedControlNode.x = this._XconvertDOMtoCanvas(pointer.x);
	    this.selectedControlNode.y = this._YconvertDOMtoCanvas(pointer.y);
	  }
	  this._redraw();
	};

	/**
	 *
	 * @param pointer
	 * @private
	 */
	exports._releaseControlNode = function (pointer) {
	  var newNode = this._getNodeAt(pointer);
	  if (newNode !== null) {
	    if (this.edgeBeingEdited.controlNodes.from.selected == true) {
	      this.edgeBeingEdited._restoreControlNodes();
	      this._editEdge(newNode.id, this.edgeBeingEdited.to.id);
	      this.edgeBeingEdited.controlNodes.from.unselect();
	    }
	    if (this.edgeBeingEdited.controlNodes.to.selected == true) {
	      this.edgeBeingEdited._restoreControlNodes();
	      this._editEdge(this.edgeBeingEdited.from.id, newNode.id);
	      this.edgeBeingEdited.controlNodes.to.unselect();
	    }
	  } else {
	    this.edgeBeingEdited._restoreControlNodes();
	  }
	  this.freezeSimulation(false);
	  this._redraw();
	};

	/**
	 * the function bound to the selection event. It checks if you want to connect a cluster and changes the description
	 * to walk the user through the process.
	 *
	 * @private
	 */
	exports._handleConnect = function (pointer) {
	  if (this._getSelectedNodeCount() == 0) {
	    var node = this._getNodeAt(pointer);

	    if (node != null) {
	      if (node.clusterSize > 1) {
	        alert(this.constants.locales[this.constants.locale]['createEdgeError']);
	      } else {
	        this._selectObject(node, false);
	        var supportNodes = this.sectors['support']['nodes'];

	        // create a node the temporary line can look at
	        supportNodes['targetNode'] = new Node({ id: 'targetNode' }, {}, {}, this.constants);
	        var targetNode = supportNodes['targetNode'];
	        targetNode.x = node.x;
	        targetNode.y = node.y;

	        // create a temporary edge
	        this.edges['connectionEdge'] = new Edge({ id: "connectionEdge", from: node.id, to: targetNode.id }, this, this.constants);
	        var connectionEdge = this.edges['connectionEdge'];
	        connectionEdge.from = node;
	        connectionEdge.connected = true;
	        connectionEdge.options.smoothCurves = { enabled: true,
	          dynamic: false,
	          type: "continuous",
	          roundness: 0.5
	        };
	        connectionEdge.selected = true;
	        connectionEdge.to = targetNode;

	        this.cachedFunctions["_handleOnDrag"] = this._handleOnDrag;
	        var me = this;
	        this._handleOnDrag = function (event) {
	          var pointer = this._getPointer(event.gesture.center);
	          var connectionEdge = me.edges['connectionEdge'];
	          connectionEdge.to.x = me._XconvertDOMtoCanvas(pointer.x);
	          connectionEdge.to.y = me._YconvertDOMtoCanvas(pointer.y);
	          me._redraw();
	        };

	        this.moving = true;
	        this.start();
	      }
	    }
	  }
	};

	exports._finishConnect = function (event) {
	  if (this._getSelectedNodeCount() == 1) {
	    var pointer = this._getPointer(event.gesture.center);
	    // restore the drag function
	    this._handleOnDrag = this.cachedFunctions["_handleOnDrag"];
	    delete this.cachedFunctions["_handleOnDrag"];

	    // remember the edge id
	    var connectFromId = this.edges['connectionEdge'].fromId;

	    // remove the temporary nodes and edge
	    delete this.edges['connectionEdge'];
	    delete this.sectors['support']['nodes']['targetNode'];
	    delete this.sectors['support']['nodes']['targetViaNode'];

	    var node = this._getNodeAt(pointer);
	    if (node != null) {
	      if (node.clusterSize > 1) {
	        alert(this.constants.locales[this.constants.locale]["createEdgeError"]);
	      } else {
	        this._createEdge(connectFromId, node.id);
	        this._createManipulatorBar();
	      }
	    }
	    this._unselectAll();
	  }
	};

	/**
	 * Adds a node on the specified location
	 */
	exports._addNode = function () {
	  if (this._selectionIsEmpty() && this.editMode == true) {
	    var positionObject = this._pointerToPositionObject(this.pointerPosition);
	    var defaultData = { id: util.randomUUID(), x: positionObject.left, y: positionObject.top, label: "new", allowedToMoveX: true, allowedToMoveY: true };
	    if (this.triggerFunctions.add) {
	      if (this.triggerFunctions.add.length == 2) {
	        var me = this;
	        this.triggerFunctions.add(defaultData, function (finalizedData) {
	          me.nodesData.add(finalizedData);
	          me._createManipulatorBar();
	          me.moving = true;
	          me.start();
	        });
	      } else {
	        throw new Error('The function for add does not support two arguments (data,callback)');
	        this._createManipulatorBar();
	        this.moving = true;
	        this.start();
	      }
	    } else {
	      this.nodesData.add(defaultData);
	      this._createManipulatorBar();
	      this.moving = true;
	      this.start();
	    }
	  }
	};

	/**
	 * connect two nodes with a new edge.
	 *
	 * @private
	 */
	exports._createEdge = function (sourceNodeId, targetNodeId) {
	  if (this.editMode == true) {
	    var defaultData = { from: sourceNodeId, to: targetNodeId };
	    if (this.triggerFunctions.connect) {
	      if (this.triggerFunctions.connect.length == 2) {
	        var me = this;
	        this.triggerFunctions.connect(defaultData, function (finalizedData) {
	          me.edgesData.add(finalizedData);
	          me.moving = true;
	          me.start();
	        });
	      } else {
	        throw new Error('The function for connect does not support two arguments (data,callback)');
	        this.moving = true;
	        this.start();
	      }
	    } else {
	      this.edgesData.add(defaultData);
	      this.moving = true;
	      this.start();
	    }
	  }
	};

	/**
	 * connect two nodes with a new edge.
	 *
	 * @private
	 */
	exports._editEdge = function (sourceNodeId, targetNodeId) {
	  if (this.editMode == true) {
	    var defaultData = { id: this.edgeBeingEdited.id, from: sourceNodeId, to: targetNodeId };
	    if (this.triggerFunctions.editEdge) {
	      if (this.triggerFunctions.editEdge.length == 2) {
	        var me = this;
	        this.triggerFunctions.editEdge(defaultData, function (finalizedData) {
	          me.edgesData.update(finalizedData);
	          me.moving = true;
	          me.start();
	        });
	      } else {
	        throw new Error('The function for edit does not support two arguments (data, callback)');
	        this.moving = true;
	        this.start();
	      }
	    } else {
	      this.edgesData.update(defaultData);
	      this.moving = true;
	      this.start();
	    }
	  }
	};

	/**
	 * Create the toolbar to edit the selected node. The label and the color can be changed. Other colors are derived from the chosen color.
	 *
	 * @private
	 */
	exports._editNode = function () {
	  if (this.triggerFunctions.edit && this.editMode == true) {
	    var node = this._getSelectedNode();
	    var data = { id: node.id,
	      label: node.label,
	      group: node.options.group,
	      shape: node.options.shape,
	      color: {
	        background: node.options.color.background,
	        border: node.options.color.border,
	        highlight: {
	          background: node.options.color.highlight.background,
	          border: node.options.color.highlight.border
	        }
	      } };
	    if (this.triggerFunctions.edit.length == 2) {
	      var me = this;
	      this.triggerFunctions.edit(data, function (finalizedData) {
	        me.nodesData.update(finalizedData);
	        me._createManipulatorBar();
	        me.moving = true;
	        me.start();
	      });
	    } else {
	      throw new Error('The function for edit does not support two arguments (data, callback)');
	    }
	  } else {
	    throw new Error('No edit function has been bound to this button');
	  }
	};

	/**
	 * delete everything in the selection
	 *
	 * @private
	 */
	exports._deleteSelected = function () {
	  if (!this._selectionIsEmpty() && this.editMode == true) {
	    if (!this._clusterInSelection()) {
	      var selectedNodes = this.getSelectedNodes();
	      var selectedEdges = this.getSelectedEdges();
	      if (this.triggerFunctions.del) {
	        var me = this;
	        var data = { nodes: selectedNodes, edges: selectedEdges };
	        if (this.triggerFunctions.del.length == 2) {
	          this.triggerFunctions.del(data, function (finalizedData) {
	            me.edgesData.remove(finalizedData.edges);
	            me.nodesData.remove(finalizedData.nodes);
	            me._unselectAll();
	            me.moving = true;
	            me.start();
	          });
	        } else {
	          throw new Error('The function for delete does not support two arguments (data, callback)');
	        }
	      } else {
	        this.edgesData.remove(selectedEdges);
	        this.nodesData.remove(selectedNodes);
	        this._unselectAll();
	        this.moving = true;
	        this.start();
	      }
	    } else {
	      alert(this.constants.locales[this.constants.locale]["deleteClusterError"]);
	    }
	  }
	};

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var util = __webpack_require__(175);
	var Hammer = __webpack_require__(297);

	exports._cleanNavigation = function () {
	  // clean hammer bindings
	  if (this.navigationHammers.length != 0) {
	    for (var i = 0; i < this.navigationHammers.length; i++) {
	      this.navigationHammers[i].dispose();
	    }
	    this.navigationHammers = [];
	  }

	  this._navigationReleaseOverload = function () {};

	  // clean up previous navigation items
	  if (this.navigationDOM && this.navigationDOM['wrapper'] && this.navigationDOM['wrapper'].parentNode) {
	    this.navigationDOM['wrapper'].parentNode.removeChild(this.navigationDOM['wrapper']);
	  }
	};

	/**
	 * Creation of the navigation controls nodes. They are drawn over the rest of the nodes and are not affected by scale and translation
	 * they have a triggerFunction which is called on click. If the position of the navigation controls is dependent
	 * on this.frame.canvas.clientWidth or this.frame.canvas.clientHeight, we flag horizontalAlignLeft and verticalAlignTop false.
	 * This means that the location will be corrected by the _relocateNavigation function on a size change of the canvas.
	 *
	 * @private
	 */
	exports._loadNavigationElements = function () {
	  this._cleanNavigation();

	  this.navigationDOM = {};
	  var navigationDivs = ['up', 'down', 'left', 'right', 'zoomIn', 'zoomOut', 'zoomExtends'];
	  var navigationDivActions = ['_moveUp', '_moveDown', '_moveLeft', '_moveRight', '_zoomIn', '_zoomOut', '_zoomExtent'];

	  this.navigationDOM['wrapper'] = document.createElement('div');
	  this.frame.appendChild(this.navigationDOM['wrapper']);

	  for (var i = 0; i < navigationDivs.length; i++) {
	    this.navigationDOM[navigationDivs[i]] = document.createElement('div');
	    this.navigationDOM[navigationDivs[i]].className = 'network-navigation ' + navigationDivs[i];
	    this.navigationDOM['wrapper'].appendChild(this.navigationDOM[navigationDivs[i]]);

	    var hammer = Hammer(this.navigationDOM[navigationDivs[i]], { prevent_default: true });
	    hammer.on('touch', this[navigationDivActions[i]].bind(this));
	    this.navigationHammers.push(hammer);
	  }

	  this._navigationReleaseOverload = this._stopMovement;
	};

	/**
	 * this stops all movement induced by the navigation buttons
	 *
	 * @private
	 */
	exports._zoomExtent = function (event) {
	  this.zoomExtent({ duration: 700 });
	  event.stopPropagation();
	};

	/**
	 * this stops all movement induced by the navigation buttons
	 *
	 * @private
	 */
	exports._stopMovement = function () {
	  this._xStopMoving();
	  this._yStopMoving();
	  this._stopZoom();
	};

	/**
	 * move the screen up
	 * By using the increments, instead of adding a fixed number to the translation, we keep fluent and
	 * instant movement. The onKeypress event triggers immediately, then pauses, then triggers frequently
	 * To avoid this behaviour, we do the translation in the start loop.
	 *
	 * @private
	 */
	exports._moveUp = function (event) {
	  this.yIncrement = this.constants.keyboard.speed.y;
	  this.start(); // if there is no node movement, the calculation wont be done
	  event.preventDefault();
	};

	/**
	 * move the screen down
	 * @private
	 */
	exports._moveDown = function (event) {
	  this.yIncrement = -this.constants.keyboard.speed.y;
	  this.start(); // if there is no node movement, the calculation wont be done
	  event.preventDefault();
	};

	/**
	 * move the screen left
	 * @private
	 */
	exports._moveLeft = function (event) {
	  this.xIncrement = this.constants.keyboard.speed.x;
	  this.start(); // if there is no node movement, the calculation wont be done
	  event.preventDefault();
	};

	/**
	 * move the screen right
	 * @private
	 */
	exports._moveRight = function (event) {
	  this.xIncrement = -this.constants.keyboard.speed.y;
	  this.start(); // if there is no node movement, the calculation wont be done
	  event.preventDefault();
	};

	/**
	 * Zoom in, using the same method as the movement.
	 * @private
	 */
	exports._zoomIn = function (event) {
	  this.zoomIncrement = this.constants.keyboard.speed.zoom;
	  this.start(); // if there is no node movement, the calculation wont be done
	  event.preventDefault();
	};

	/**
	 * Zoom out
	 * @private
	 */
	exports._zoomOut = function (event) {
	  this.zoomIncrement = -this.constants.keyboard.speed.zoom;
	  this.start(); // if there is no node movement, the calculation wont be done
	  event.preventDefault();
	};

	/**
	 * Stop zooming and unhighlight the zoom controls
	 * @private
	 */
	exports._stopZoom = function (event) {
	  this.zoomIncrement = 0;
	  event && event.preventDefault();
	};

	/**
	 * Stop moving in the Y direction and unHighlight the up and down
	 * @private
	 */
	exports._yStopMoving = function (event) {
	  this.yIncrement = 0;
	  event && event.preventDefault();
	};

	/**
	 * Stop moving in the X direction and unHighlight left and right.
	 * @private
	 */
	exports._xStopMoving = function (event) {
	  this.xIncrement = 0;
	  event && event.preventDefault();
	};

/***/ },
/* 347 */
/***/ function(module, exports) {

	"use strict";

	exports._resetLevels = function () {
	  for (var nodeId in this.nodes) {
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      var node = this.nodes[nodeId];
	      if (node.preassignedLevel == false) {
	        node.level = -1;
	        node.hierarchyEnumerated = false;
	      }
	    }
	  }
	};

	/**
	 * This is the main function to layout the nodes in a hierarchical way.
	 * It checks if the node details are supplied correctly
	 *
	 * @private
	 */
	exports._setupHierarchicalLayout = function () {
	  if (this.constants.hierarchicalLayout.enabled == true && this.nodeIndices.length > 0) {
	    // get the size of the largest hubs and check if the user has defined a level for a node.
	    var hubsize = 0;
	    var node, nodeId;
	    var definedLevel = false;
	    var undefinedLevel = false;

	    for (nodeId in this.nodes) {
	      if (this.nodes.hasOwnProperty(nodeId)) {
	        node = this.nodes[nodeId];
	        if (node.level != -1) {
	          definedLevel = true;
	        } else {
	          undefinedLevel = true;
	        }
	        if (hubsize < node.edges.length) {
	          hubsize = node.edges.length;
	        }
	      }
	    }

	    // if the user defined some levels but not all, alert and run without hierarchical layout
	    if (undefinedLevel == true && definedLevel == true) {
	      throw new Error("To use the hierarchical layout, nodes require either no predefined levels or levels have to be defined for all nodes.");
	      this.zoomExtent({ duration: 0 }, true, this.constants.clustering.enabled);
	      if (!this.constants.clustering.enabled) {
	        this.start();
	      }
	    } else {
	      // setup the system to use hierarchical method.
	      this._changeConstants();

	      // define levels if undefined by the users. Based on hubsize
	      if (undefinedLevel == true) {
	        if (this.constants.hierarchicalLayout.layout == "hubsize") {
	          this._determineLevels(hubsize);
	        } else {
	          this._determineLevelsDirected(false);
	        }
	      }
	      // check the distribution of the nodes per level.
	      var distribution = this._getDistribution();

	      // place the nodes on the canvas. This also stablilizes the system.
	      this._placeNodesByHierarchy(distribution);

	      // start the simulation.
	      this.start();
	    }
	  }
	};

	/**
	 * This function places the nodes on the canvas based on the hierarchial distribution.
	 *
	 * @param {Object} distribution | obtained by the function this._getDistribution()
	 * @private
	 */
	exports._placeNodesByHierarchy = function (distribution) {
	  var nodeId, node;

	  // start placing all the level 0 nodes first. Then recursively position their branches.
	  for (var level in distribution) {
	    if (distribution.hasOwnProperty(level)) {

	      for (nodeId in distribution[level].nodes) {
	        if (distribution[level].nodes.hasOwnProperty(nodeId)) {
	          node = distribution[level].nodes[nodeId];
	          if (this.constants.hierarchicalLayout.direction == "UD" || this.constants.hierarchicalLayout.direction == "DU") {
	            if (node.xFixed) {
	              node.x = distribution[level].minPos;
	              node.xFixed = false;

	              distribution[level].minPos += distribution[level].nodeSpacing;
	            }
	          } else {
	            if (node.yFixed) {
	              node.y = distribution[level].minPos;
	              node.yFixed = false;

	              distribution[level].minPos += distribution[level].nodeSpacing;
	            }
	          }
	          this._placeBranchNodes(node.edges, node.id, distribution, node.level);
	        }
	      }
	    }
	  }

	  // stabilize the system after positioning. This function calls zoomExtent.
	  this._stabilize();
	};

	/**
	 * This function get the distribution of levels based on hubsize
	 *
	 * @returns {Object}
	 * @private
	 */
	exports._getDistribution = function () {
	  var distribution = {};
	  var nodeId, node, level;

	  // we fix Y because the hierarchy is vertical, we fix X so we do not give a node an x position for a second time.
	  // the fix of X is removed after the x value has been set.
	  for (nodeId in this.nodes) {
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      node = this.nodes[nodeId];
	      node.xFixed = true;
	      node.yFixed = true;
	      if (this.constants.hierarchicalLayout.direction == "UD" || this.constants.hierarchicalLayout.direction == "DU") {
	        node.y = this.constants.hierarchicalLayout.levelSeparation * node.level;
	      } else {
	        node.x = this.constants.hierarchicalLayout.levelSeparation * node.level;
	      }
	      if (distribution[node.level] === undefined) {
	        distribution[node.level] = { amount: 0, nodes: {}, minPos: 0, nodeSpacing: 0 };
	      }
	      distribution[node.level].amount += 1;
	      distribution[node.level].nodes[nodeId] = node;
	    }
	  }

	  // determine the largest amount of nodes of all levels
	  var maxCount = 0;
	  for (level in distribution) {
	    if (distribution.hasOwnProperty(level)) {
	      if (maxCount < distribution[level].amount) {
	        maxCount = distribution[level].amount;
	      }
	    }
	  }

	  // set the initial position and spacing of each nodes accordingly
	  for (level in distribution) {
	    if (distribution.hasOwnProperty(level)) {
	      distribution[level].nodeSpacing = (maxCount + 1) * this.constants.hierarchicalLayout.nodeSpacing;
	      distribution[level].nodeSpacing /= distribution[level].amount + 1;
	      distribution[level].minPos = distribution[level].nodeSpacing - 0.5 * (distribution[level].amount + 1) * distribution[level].nodeSpacing;
	    }
	  }

	  return distribution;
	};

	/**
	 * this function allocates nodes in levels based on the recursive branching from the largest hubs.
	 *
	 * @param hubsize
	 * @private
	 */
	exports._determineLevels = function (hubsize) {
	  var nodeId, node;

	  // determine hubs
	  for (nodeId in this.nodes) {
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      node = this.nodes[nodeId];
	      if (node.edges.length == hubsize) {
	        node.level = 0;
	      }
	    }
	  }

	  // branch from hubs
	  for (nodeId in this.nodes) {
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      node = this.nodes[nodeId];
	      if (node.level == 0) {
	        this._setLevel(1, node.edges, node.id);
	      }
	    }
	  }
	};

	/**
	 * this function allocates nodes in levels based on the direction of the edges
	 *
	 * @param hubsize
	 * @private
	 */
	exports._determineLevelsDirected = function () {
	  var nodeId, node, firstNode;
	  var minLevel = 10000;

	  // set first node to source
	  firstNode = this.nodes[this.nodeIndices[0]];
	  firstNode.level = minLevel;
	  this._setLevelDirected(minLevel, firstNode.edges, firstNode.id);

	  // get the minimum level
	  for (nodeId in this.nodes) {
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      node = this.nodes[nodeId];
	      minLevel = node.level < minLevel ? node.level : minLevel;
	    }
	  }

	  // subtract the minimum from the set so we have a range starting from 0
	  for (nodeId in this.nodes) {
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      node = this.nodes[nodeId];
	      node.level -= minLevel;
	    }
	  }
	};

	/**
	 * Since hierarchical layout does not support:
	 *    - smooth curves (based on the physics),
	 *    - clustering (based on dynamic node counts)
	 *
	 * We disable both features so there will be no problems.
	 *
	 * @private
	 */
	exports._changeConstants = function () {
	  this.constants.clustering.enabled = false;
	  this.constants.physics.barnesHut.enabled = false;
	  this.constants.physics.hierarchicalRepulsion.enabled = true;
	  this._loadSelectedForceSolver();
	  if (this.constants.smoothCurves.enabled == true) {
	    this.constants.smoothCurves.dynamic = false;
	  }
	  this._configureSmoothCurves();

	  var config = this.constants.hierarchicalLayout;
	  config.levelSeparation = Math.abs(config.levelSeparation);
	  if (config.direction == "RL" || config.direction == "DU") {
	    config.levelSeparation *= -1;
	  }

	  if (config.direction == "RL" || config.direction == "LR") {
	    if (this.constants.smoothCurves.enabled == true) {
	      this.constants.smoothCurves.type = "vertical";
	    }
	  } else {
	    if (this.constants.smoothCurves.enabled == true) {
	      this.constants.smoothCurves.type = "horizontal";
	    }
	  }
	};

	/**
	 * This is a recursively called function to enumerate the branches from the largest hubs and place the nodes
	 * on a X position that ensures there will be no overlap.
	 *
	 * @param edges
	 * @param parentId
	 * @param distribution
	 * @param parentLevel
	 * @private
	 */
	exports._placeBranchNodes = function (edges, parentId, distribution, parentLevel) {
	  for (var i = 0; i < edges.length; i++) {
	    var childNode = null;
	    if (edges[i].toId == parentId) {
	      childNode = edges[i].from;
	    } else {
	      childNode = edges[i].to;
	    }

	    // if a node is conneceted to another node on the same level (or higher (means lower level))!, this is not handled here.
	    var nodeMoved = false;
	    if (this.constants.hierarchicalLayout.direction == "UD" || this.constants.hierarchicalLayout.direction == "DU") {
	      if (childNode.xFixed && childNode.level > parentLevel) {
	        childNode.xFixed = false;
	        childNode.x = distribution[childNode.level].minPos;
	        nodeMoved = true;
	      }
	    } else {
	      if (childNode.yFixed && childNode.level > parentLevel) {
	        childNode.yFixed = false;
	        childNode.y = distribution[childNode.level].minPos;
	        nodeMoved = true;
	      }
	    }

	    if (nodeMoved == true) {
	      distribution[childNode.level].minPos += distribution[childNode.level].nodeSpacing;
	      if (childNode.edges.length > 1) {
	        this._placeBranchNodes(childNode.edges, childNode.id, distribution, childNode.level);
	      }
	    }
	  }
	};

	/**
	 * this function is called recursively to enumerate the barnches of the largest hubs and give each node a level.
	 *
	 * @param level
	 * @param edges
	 * @param parentId
	 * @private
	 */
	exports._setLevel = function (level, edges, parentId) {
	  for (var i = 0; i < edges.length; i++) {
	    var childNode = null;
	    if (edges[i].toId == parentId) {
	      childNode = edges[i].from;
	    } else {
	      childNode = edges[i].to;
	    }
	    if (childNode.level == -1 || childNode.level > level) {
	      childNode.level = level;
	      if (childNode.edges.length > 1) {
	        this._setLevel(level + 1, childNode.edges, childNode.id);
	      }
	    }
	  }
	};

	/**
	 * this function is called recursively to enumerate the branched of the first node and give each node a level based on edge direction
	 *
	 * @param level
	 * @param edges
	 * @param parentId
	 * @private
	 */
	exports._setLevelDirected = function (level, edges, parentId) {
	  this.nodes[parentId].hierarchyEnumerated = true;
	  var childNode, direction;
	  for (var i = 0; i < edges.length; i++) {
	    direction = 1;
	    if (edges[i].toId == parentId) {
	      childNode = edges[i].from;
	      direction = -1;
	    } else {
	      childNode = edges[i].to;
	    }
	    if (childNode.level == -1) {
	      childNode.level = level + direction;
	    }
	  }

	  for (var i = 0; i < edges.length; i++) {
	    if (edges[i].toId == parentId) {
	      childNode = edges[i].from;
	    } else {
	      childNode = edges[i].to;
	    }

	    if (childNode.edges.length > 1 && childNode.hierarchyEnumerated === false) {
	      this._setLevelDirected(childNode.level, childNode.edges, childNode.id);
	    }
	  }
	};

	/**
	 * Unfix nodes
	 *
	 * @private
	 */
	exports._restoreNodes = function () {
	  for (var nodeId in this.nodes) {
	    if (this.nodes.hasOwnProperty(nodeId)) {
	      this.nodes[nodeId].xFixed = false;
	      this.nodes[nodeId].yFixed = false;
	    }
	  }
	};

/***/ },
/* 348 */
/***/ function(module, exports) {

	'use strict';

	// English
	exports['en'] = {
	  edit: 'Edit',
	  del: 'Delete selected',
	  back: 'Back',
	  addNode: 'Add Node',
	  addEdge: 'Add Edge',
	  editNode: 'Edit Node',
	  editEdge: 'Edit Edge',
	  addDescription: 'Click in an empty space to place a new node.',
	  edgeDescription: 'Click on a node and drag the edge to another node to connect them.',
	  editEdgeDescription: 'Click on the control points and drag them to a node to connect to it.',
	  createEdgeError: 'Cannot link edges to a cluster.',
	  deleteClusterError: 'Clusters cannot be deleted.'
	};
	exports['en_EN'] = exports['en'];
	exports['en_US'] = exports['en'];

	// Dutch
	exports['nl'] = {
	  edit: 'Wijzigen',
	  del: 'Selectie verwijderen',
	  back: 'Terug',
	  addNode: 'Node toevoegen',
	  addEdge: 'Link toevoegen',
	  editNode: 'Node wijzigen',
	  editEdge: 'Link wijzigen',
	  addDescription: 'Klik op een leeg gebied om een nieuwe node te maken.',
	  edgeDescription: 'Klik op een node en sleep de link naar een andere node om ze te verbinden.',
	  editEdgeDescription: 'Klik op de verbindingspunten en sleep ze naar een node om daarmee te verbinden.',
	  createEdgeError: 'Kan geen link maken naar een cluster.',
	  deleteClusterError: 'Clusters kunnen niet worden verwijderd.'
	};
	exports['nl_NL'] = exports['nl'];
	exports['nl_BE'] = exports['nl'];

/***/ },
/* 349 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Canvas shapes used by Network
	 */
	if (typeof CanvasRenderingContext2D !== 'undefined') {

	  /**
	   * Draw a circle shape
	   */
	  CanvasRenderingContext2D.prototype.circle = function (x, y, r) {
	    this.beginPath();
	    this.arc(x, y, r, 0, 2 * Math.PI, false);
	  };

	  /**
	   * Draw a square shape
	   * @param {Number} x horizontal center
	   * @param {Number} y vertical center
	   * @param {Number} r   size, width and height of the square
	   */
	  CanvasRenderingContext2D.prototype.square = function (x, y, r) {
	    this.beginPath();
	    this.rect(x - r, y - r, r * 2, r * 2);
	  };

	  /**
	   * Draw a triangle shape
	   * @param {Number} x horizontal center
	   * @param {Number} y vertical center
	   * @param {Number} r   radius, half the length of the sides of the triangle
	   */
	  CanvasRenderingContext2D.prototype.triangle = function (x, y, r) {
	    // http://en.wikipedia.org/wiki/Equilateral_triangle
	    this.beginPath();

	    var s = r * 2;
	    var s2 = s / 2;
	    var ir = Math.sqrt(3) / 6 * s; // radius of inner circle
	    var h = Math.sqrt(s * s - s2 * s2); // height

	    this.moveTo(x, y - (h - ir));
	    this.lineTo(x + s2, y + ir);
	    this.lineTo(x - s2, y + ir);
	    this.lineTo(x, y - (h - ir));
	    this.closePath();
	  };

	  /**
	   * Draw a triangle shape in downward orientation
	   * @param {Number} x horizontal center
	   * @param {Number} y vertical center
	   * @param {Number} r radius
	   */
	  CanvasRenderingContext2D.prototype.triangleDown = function (x, y, r) {
	    // http://en.wikipedia.org/wiki/Equilateral_triangle
	    this.beginPath();

	    var s = r * 2;
	    var s2 = s / 2;
	    var ir = Math.sqrt(3) / 6 * s; // radius of inner circle
	    var h = Math.sqrt(s * s - s2 * s2); // height

	    this.moveTo(x, y + (h - ir));
	    this.lineTo(x + s2, y - ir);
	    this.lineTo(x - s2, y - ir);
	    this.lineTo(x, y + (h - ir));
	    this.closePath();
	  };

	  /**
	   * Draw a star shape, a star with 5 points
	   * @param {Number} x horizontal center
	   * @param {Number} y vertical center
	   * @param {Number} r   radius, half the length of the sides of the triangle
	   */
	  CanvasRenderingContext2D.prototype.star = function (x, y, r) {
	    // http://www.html5canvastutorials.com/labs/html5-canvas-star-spinner/
	    this.beginPath();

	    for (var n = 0; n < 10; n++) {
	      var radius = n % 2 === 0 ? r * 1.3 : r * 0.5;
	      this.lineTo(x + radius * Math.sin(n * 2 * Math.PI / 10), y - radius * Math.cos(n * 2 * Math.PI / 10));
	    }

	    this.closePath();
	  };

	  /**
	   * http://stackoverflow.com/questions/1255512/how-to-draw-a-rounded-rectangle-on-html-canvas
	   */
	  CanvasRenderingContext2D.prototype.roundRect = function (x, y, w, h, r) {
	    var r2d = Math.PI / 180;
	    if (w - 2 * r < 0) {
	      r = w / 2;
	    } //ensure that the radius isn't too large for x
	    if (h - 2 * r < 0) {
	      r = h / 2;
	    } //ensure that the radius isn't too large for y
	    this.beginPath();
	    this.moveTo(x + r, y);
	    this.lineTo(x + w - r, y);
	    this.arc(x + w - r, y + r, r, r2d * 270, r2d * 360, false);
	    this.lineTo(x + w, y + h - r);
	    this.arc(x + w - r, y + h - r, r, 0, r2d * 90, false);
	    this.lineTo(x + r, y + h);
	    this.arc(x + r, y + h - r, r, r2d * 90, r2d * 180, false);
	    this.lineTo(x, y + r);
	    this.arc(x + r, y + r, r, r2d * 180, r2d * 270, false);
	  };

	  /**
	   * http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas
	   */
	  CanvasRenderingContext2D.prototype.ellipse = function (x, y, w, h) {
	    var kappa = .5522848,
	        ox = w / 2 * kappa,
	        // control point offset horizontal
	    oy = h / 2 * kappa,
	        // control point offset vertical
	    xe = x + w,
	        // x-end
	    ye = y + h,
	        // y-end
	    xm = x + w / 2,
	        // x-middle
	    ym = y + h / 2; // y-middle

	    this.beginPath();
	    this.moveTo(x, ym);
	    this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);
	    this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);
	    this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);
	    this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);
	  };

	  /**
	   * http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas
	   */
	  CanvasRenderingContext2D.prototype.database = function (x, y, w, h) {
	    var f = 1 / 3;
	    var wEllipse = w;
	    var hEllipse = h * f;

	    var kappa = .5522848,
	        ox = wEllipse / 2 * kappa,
	        // control point offset horizontal
	    oy = hEllipse / 2 * kappa,
	        // control point offset vertical
	    xe = x + wEllipse,
	        // x-end
	    ye = y + hEllipse,
	        // y-end
	    xm = x + wEllipse / 2,
	        // x-middle
	    ym = y + hEllipse / 2,
	        // y-middle
	    ymb = y + (h - hEllipse / 2),
	        // y-midlle, bottom ellipse
	    yeb = y + h; // y-end, bottom ellipse

	    this.beginPath();
	    this.moveTo(xe, ym);

	    this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);
	    this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);

	    this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);
	    this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);

	    this.lineTo(xe, ymb);

	    this.bezierCurveTo(xe, ymb + oy, xm + ox, yeb, xm, yeb);
	    this.bezierCurveTo(xm - ox, yeb, x, ymb + oy, x, ymb);

	    this.lineTo(x, ym);
	  };

	  /**
	   * Draw an arrow point (no line)
	   */
	  CanvasRenderingContext2D.prototype.arrow = function (x, y, angle, length) {
	    // tail
	    var xt = x - length * Math.cos(angle);
	    var yt = y - length * Math.sin(angle);

	    // inner tail
	    // TODO: allow to customize different shapes
	    var xi = x - length * 0.9 * Math.cos(angle);
	    var yi = y - length * 0.9 * Math.sin(angle);

	    // left
	    var xl = xt + length / 3 * Math.cos(angle + 0.5 * Math.PI);
	    var yl = yt + length / 3 * Math.sin(angle + 0.5 * Math.PI);

	    // right
	    var xr = xt + length / 3 * Math.cos(angle - 0.5 * Math.PI);
	    var yr = yt + length / 3 * Math.sin(angle - 0.5 * Math.PI);

	    this.beginPath();
	    this.moveTo(x, y);
	    this.lineTo(xl, yl);
	    this.lineTo(xi, yi);
	    this.lineTo(xr, yr);
	    this.closePath();
	  };

	  /**
	   * Sets up the dashedLine functionality for drawing
	   * Original code came from http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas
	   * @author David Jordan
	   * @date 2012-08-08
	   */
	  CanvasRenderingContext2D.prototype.dashedLine = function (x, y, x2, y2, dashArray) {
	    if (!dashArray) dashArray = [10, 5];
	    if (dashLength == 0) dashLength = 0.001; // Hack for Safari
	    var dashCount = dashArray.length;
	    this.moveTo(x, y);
	    var dx = x2 - x,
	        dy = y2 - y;
	    var slope = dy / dx;
	    var distRemaining = Math.sqrt(dx * dx + dy * dy);
	    var dashIndex = 0,
	        draw = true;
	    while (distRemaining >= 0.1) {
	      var dashLength = dashArray[dashIndex++ % dashCount];
	      if (dashLength > distRemaining) dashLength = distRemaining;
	      var xStep = Math.sqrt(dashLength * dashLength / (1 + slope * slope));
	      if (dx < 0) xStep = -xStep;
	      x += xStep;
	      y += slope * xStep;
	      this[draw ? 'lineTo' : 'moveTo'](x, y);
	      distRemaining -= dashLength;
	      draw = !draw;
	    }
	  };

	  // TODO: add diamond shape
	}

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	//     uuid.js
	//
	//     Copyright (c) 2010-2012 Robert Kieffer
	//     MIT License - http://opensource.org/licenses/mit-license.php

	// Unique ID creation requires a high quality random # generator.  We feature
	// detect to determine the best RNG source, normalizing to a function that
	// returns 128-bits of randomness, since that's what's usually required
	var _rng = __webpack_require__(351);

	// Maps for number <-> hex string conversion
	var _byteToHex = [];
	var _hexToByte = {};
	for (var i = 0; i < 256; i++) {
	  _byteToHex[i] = (i + 0x100).toString(16).substr(1);
	  _hexToByte[_byteToHex[i]] = i;
	}

	// **`parse()` - Parse a UUID into it's component bytes**
	function parse(s, buf, offset) {
	  var i = buf && offset || 0,
	      ii = 0;

	  buf = buf || [];
	  s.toLowerCase().replace(/[0-9a-f]{2}/g, function (oct) {
	    if (ii < 16) {
	      // Don't overflow!
	      buf[i + ii++] = _hexToByte[oct];
	    }
	  });

	  // Zero out remaining bytes if string was short
	  while (ii < 16) {
	    buf[i + ii++] = 0;
	  }

	  return buf;
	}

	// **`unparse()` - Convert UUID byte array (ala parse()) into a string**
	function unparse(buf, offset) {
	  var i = offset || 0,
	      bth = _byteToHex;
	  return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];
	}

	// **`v1()` - Generate time-based UUID**
	//
	// Inspired by https://github.com/LiosK/UUID.js
	// and http://docs.python.org/library/uuid.html

	// random #'s we need to init node and clockseq
	var _seedBytes = _rng();

	// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
	var _nodeId = [_seedBytes[0] | 0x01, _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]];

	// Per 4.2.2, randomize (14 bit) clockseq
	var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;

	// Previous uuid creation time
	var _lastMSecs = 0,
	    _lastNSecs = 0;

	// See https://github.com/broofa/node-uuid for API details
	function v1(options, buf, offset) {
	  var i = buf && offset || 0;
	  var b = buf || [];

	  options = options || {};

	  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;

	  // UUID timestamps are 100 nano-second units since the Gregorian epoch,
	  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
	  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
	  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
	  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();

	  // Per 4.2.1.2, use count of uuid's generated during the current clock
	  // cycle to simulate higher resolution clock
	  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;

	  // Time since last uuid creation (in msecs)
	  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;

	  // Per 4.2.1.2, Bump clockseq on clock regression
	  if (dt < 0 && options.clockseq === undefined) {
	    clockseq = clockseq + 1 & 0x3fff;
	  }

	  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
	  // time interval
	  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
	    nsecs = 0;
	  }

	  // Per 4.2.1.2 Throw error if too many uuids are requested
	  if (nsecs >= 10000) {
	    throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
	  }

	  _lastMSecs = msecs;
	  _lastNSecs = nsecs;
	  _clockseq = clockseq;

	  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
	  msecs += 12219292800000;

	  // `time_low`
	  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
	  b[i++] = tl >>> 24 & 0xff;
	  b[i++] = tl >>> 16 & 0xff;
	  b[i++] = tl >>> 8 & 0xff;
	  b[i++] = tl & 0xff;

	  // `time_mid`
	  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
	  b[i++] = tmh >>> 8 & 0xff;
	  b[i++] = tmh & 0xff;

	  // `time_high_and_version`
	  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
	  b[i++] = tmh >>> 16 & 0xff;

	  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
	  b[i++] = clockseq >>> 8 | 0x80;

	  // `clock_seq_low`
	  b[i++] = clockseq & 0xff;

	  // `node`
	  var node = options.node || _nodeId;
	  for (var n = 0; n < 6; n++) {
	    b[i + n] = node[n];
	  }

	  return buf ? buf : unparse(b);
	}

	// **`v4()` - Generate random UUID**

	// See https://github.com/broofa/node-uuid for API details
	function v4(options, buf, offset) {
	  // Deprecated - 'format' argument, as supported in v1.2
	  var i = buf && offset || 0;

	  if (typeof options == 'string') {
	    buf = options == 'binary' ? new Array(16) : null;
	    options = null;
	  }
	  options = options || {};

	  var rnds = options.random || (options.rng || _rng)();

	  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
	  rnds[6] = rnds[6] & 0x0f | 0x40;
	  rnds[8] = rnds[8] & 0x3f | 0x80;

	  // Copy bytes to buffer, if provided
	  if (buf) {
	    for (var ii = 0; ii < 16; ii++) {
	      buf[i + ii] = rnds[ii];
	    }
	  }

	  return buf || unparse(rnds);
	}

	// Export public API
	var uuid = v4;
	uuid.v1 = v1;
	uuid.v4 = v4;
	uuid.parse = parse;
	uuid.unparse = unparse;

	module.exports = uuid;

/***/ },
/* 351 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";

	var rng;

	var crypto = global.crypto || global.msCrypto; // for IE 11
	if (crypto && crypto.getRandomValues) {
	  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
	  // Moderately fast, high quality
	  var _rnds8 = new Uint8Array(16);
	  rng = function whatwgRNG() {
	    crypto.getRandomValues(_rnds8);
	    return _rnds8;
	  };
	}

	if (!rng) {
	  // Math.random()-based (RNG)
	  //
	  // If all else fails, use Math.random().  It's fast, but is of unspecified
	  // quality.
	  var _rnds = new Array(16);
	  rng = function rng() {
	    for (var i = 0, r; i < 16; i++) {
	      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
	      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
	    }

	    return _rnds;
	  };
	}

	module.exports = rng;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {'use strict';

	var React = __webpack_require__(1);
	var warn = __webpack_require__(353);
	var hasLocalStorage = 'localStorage' in global;
	var ls, testKey;

	if (hasLocalStorage) {
	  testKey = 'react-localstorage.mixin.test-key';
	  try {
	    // Access to global `localStorage` property must be guarded as it
	    // fails under iOS private session mode.
	    ls = global.localStorage;
	    ls.setItem(testKey, 'foo');
	    ls.removeItem(testKey);
	  } catch (e) {
	    hasLocalStorage = false;
	  }
	}

	// Warn if localStorage cannot be found or accessed.
	if (process.browser) {
	  warn(hasLocalStorage, 'localStorage not found. Component state will not be stored to localStorage.');
	}

	var Mixin = module.exports = {
	  /**
	   * Error checking. On update, ensure that the last state stored in localStorage is equal
	   * to the state on the component. We skip the check the first time around as state is left
	   * alone until mount to keep server rendering working.
	   *
	   * If it is not consistent, we know that someone else is modifying localStorage out from under us, so we throw
	   * an error.
	   *
	   * There are a lot of ways this can happen, so it is worth throwing the error.
	   */
	  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
	    if (!hasLocalStorage || !this.__stateLoadedFromLS) return;
	    var key = getLocalStorageKey(this);
	    if (key === false) return;
	    var prevStoredState = ls.getItem(key);
	    if (prevStoredState && ({}).NODE_ENV !== "production") {
	      warn(prevStoredState === JSON.stringify(getSyncState(this, this.state)), 'While component ' + getDisplayName(this) + ' was saving state to localStorage, ' + 'the localStorage entry was modified by another actor. This can happen when multiple ' + 'components are using the same localStorage key. Set the property `localStorageKey` ' + 'on ' + getDisplayName(this) + '.');
	    }
	    // Since setState() can't be called in CWU, it's a fine time to save the state.
	    ls.setItem(key, JSON.stringify(getSyncState(this, nextState)));
	  },

	  /**
	   * Load data.
	   * This seems odd to do this on componentDidMount, but it prevents server checksum errors.
	   * This is because the server has no way to know what is in your localStorage. So instead
	   * of breaking the checksum and causing a full rerender, we instead change the component after mount
	   * for an efficient diff.
	   */
	  componentDidMount: function componentDidMount() {
	    if (!hasLocalStorage) return;
	    var me = this;
	    loadStateFromLocalStorage(this, function () {
	      // After setting state, mirror back to localstorage.
	      // This prevents invariants if the developer has changed the initial state of the component.
	      ls.setItem(getLocalStorageKey(me), JSON.stringify(getSyncState(me, me.state)));
	    });
	  }
	};

	function loadStateFromLocalStorage(component, cb) {
	  if (!ls) return;
	  var key = getLocalStorageKey(component);
	  if (key === false) return;
	  var settingState = false;
	  try {
	    var storedState = JSON.parse(ls.getItem(key));
	    if (storedState) {
	      settingState = true;
	      component.setState(storedState, done);
	    }
	  } catch (e) {
	    if (console) console.warn("Unable to load state for", getDisplayName(component), "from localStorage.");
	  }
	  // If we didn't set state, run the callback right away.
	  if (!settingState) done();

	  function done() {
	    // Flag this component as loaded.
	    component.__stateLoadedFromLS = true;
	    cb();
	  }
	}

	function getDisplayName(component) {
	  // at least, we cannot get displayname
	  // via this.displayname in react 0.12
	  return component.displayName || component.constructor.displayName || component.constructor.name;
	}

	function getLocalStorageKey(component) {
	  if (component.getLocalStorageKey) return component.getLocalStorageKey();
	  if (component.props.localStorageKey === false) return false;
	  if (typeof component.props.localStorageKey === 'function') return component.props.localStorageKey.call(component);
	  return component.props.localStorageKey || getDisplayName(component) || 'react-localstorage';
	}

	function getStateFilterKeys(component) {
	  if (component.getStateFilterKeys) {
	    return typeof component.getStateFilterKeys() === 'string' ? [component.getStateFilterKeys()] : component.getStateFilterKeys();
	  }
	  return typeof component.props.stateFilterKeys === 'string' ? [component.props.stateFilterKeys] : component.props.stateFilterKeys;
	}

	/**
	* Filters state to only save keys defined in stateFilterKeys.
	* If stateFilterKeys is not set, returns full state.
	*/
	function getSyncState(component, state) {
	  var stateFilterKeys = getStateFilterKeys(component);
	  if (!stateFilterKeys) return state;
	  var result = {};
	  stateFilterKeys.forEach(function (sk) {
	    for (var key in state) {
	      if (state.hasOwnProperty(key) && sk === key) result[key] = state[key];
	    }
	  });
	  return result;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(29)))

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule warning
	 */

	"use strict";

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = function warning() {};

	if ("production" !== ({}).NODE_ENV) {
	  warning = function warning(condition, format) {
	    var args = Array.prototype.slice.call(arguments, 2);
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (!condition) {
	      var argIndex = 0;
	      console.warn('Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	    }
	  };
	}

	module.exports = warning;

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Buffer, module) {'use strict';var _typeof2=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};/*!
	 * Quill Editor v1.0.6
	 * https://quilljs.com/
	 * Copyright (c) 2014, Jason Chen
	 * Copyright (c) 2013, salesforce.com
	 */(function webpackUniversalModuleDefinition(root,factory){if(( false?'undefined':_typeof2(exports))==='object'&&( false?'undefined':_typeof2(module))==='object')module.exports=factory();else if(true)!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else if((typeof exports==='undefined'?'undefined':_typeof2(exports))==='object')exports["Quill"]=factory();else root["Quill"]=factory();})(undefined,function(){return(/******/function(modules){// webpackBootstrap
	/******/// The module cache
	/******/var installedModules={};/******/// The require function
	/******/function __webpack_require__(moduleId){/******/// Check if module is in cache
	/******/if(installedModules[moduleId])/******/return installedModules[moduleId].exports;/******/// Create a new module (and put it into the cache)
	/******/var module=installedModules[moduleId]={/******/exports:{},/******/id:moduleId,/******/loaded:false/******/};/******/// Execute the module function
	/******/modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);/******/// Flag the module as loaded
	/******/module.loaded=true;/******/// Return the exports of the module
	/******/return module.exports;/******/}/******/// expose the modules object (__webpack_modules__)
	/******/__webpack_require__.m=modules;/******/// expose the module cache
	/******/__webpack_require__.c=installedModules;/******/// __webpack_public_path__
	/******/__webpack_require__.p="";/******/// Load entry module and return exports
	/******/return __webpack_require__(0);/******/}(/************************************************************************//******/[/* 0 *//***/function(module,exports,__webpack_require__){module.exports=__webpack_require__(53);/***/},/* 1 *//***/function(module,exports,__webpack_require__){'use strict';var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _quill=__webpack_require__(18);var _quill2=_interopRequireDefault(_quill);var _block=__webpack_require__(32);var _block2=_interopRequireDefault(_block);var _break=__webpack_require__(33);var _break2=_interopRequireDefault(_break);var _container=__webpack_require__(42);var _container2=_interopRequireDefault(_container);var _cursor=__webpack_require__(37);var _cursor2=_interopRequireDefault(_cursor);var _embed=__webpack_require__(34);var _embed2=_interopRequireDefault(_embed);var _inline=__webpack_require__(35);var _inline2=_interopRequireDefault(_inline);var _scroll=__webpack_require__(43);var _scroll2=_interopRequireDefault(_scroll);var _text=__webpack_require__(36);var _text2=_interopRequireDefault(_text);var _clipboard=__webpack_require__(44);var _clipboard2=_interopRequireDefault(_clipboard);var _history=__webpack_require__(51);var _history2=_interopRequireDefault(_history);var _keyboard=__webpack_require__(52);var _keyboard2=_interopRequireDefault(_keyboard);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}_quill2.default.register({'blots/block':_block2.default,'blots/block/embed':_block.BlockEmbed,'blots/break':_break2.default,'blots/container':_container2.default,'blots/cursor':_cursor2.default,'blots/embed':_embed2.default,'blots/inline':_inline2.default,'blots/scroll':_scroll2.default,'blots/text':_text2.default,'modules/clipboard':_clipboard2.default,'modules/history':_history2.default,'modules/keyboard':_keyboard2.default});_parchment2.default.register(_block2.default,_break2.default,_cursor2.default,_inline2.default,_scroll2.default,_text2.default);module.exports=_quill2.default;/***/},/* 2 *//***/function(module,exports,__webpack_require__){"use strict";var container_1=__webpack_require__(3);var format_1=__webpack_require__(7);var leaf_1=__webpack_require__(12);var scroll_1=__webpack_require__(13);var inline_1=__webpack_require__(14);var block_1=__webpack_require__(15);var embed_1=__webpack_require__(16);var text_1=__webpack_require__(17);var attributor_1=__webpack_require__(8);var class_1=__webpack_require__(10);var style_1=__webpack_require__(11);var store_1=__webpack_require__(9);var Registry=__webpack_require__(6);var Parchment={Scope:Registry.Scope,create:Registry.create,find:Registry.find,query:Registry.query,register:Registry.register,Container:container_1.default,Format:format_1.default,Leaf:leaf_1.default,Embed:embed_1.default,Scroll:scroll_1.default,Block:block_1.default,Inline:inline_1.default,Text:text_1.default,Attributor:{Attribute:attributor_1.default,Class:class_1.default,Style:style_1.default,Store:store_1.default}};Object.defineProperty(exports,"__esModule",{value:true});exports.default=Parchment;/***/},/* 3 *//***/function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var linked_list_1=__webpack_require__(4);var shadow_1=__webpack_require__(5);var Registry=__webpack_require__(6);var ContainerBlot=function(_super){__extends(ContainerBlot,_super);function ContainerBlot(){_super.apply(this,arguments);}ContainerBlot.prototype.appendChild=function(other){this.insertBefore(other);};ContainerBlot.prototype.attach=function(){var _this=this;_super.prototype.attach.call(this);this.children=new linked_list_1.default();// Need to be reversed for if DOM nodes already in order
	[].slice.call(this.domNode.childNodes).reverse().forEach(function(node){try{var child=makeBlot(node);_this.insertBefore(child,_this.children.head);}catch(err){if(err instanceof Registry.ParchmentError)return;else throw err;}});};ContainerBlot.prototype.deleteAt=function(index,length){if(index===0&&length===this.length()){return this.remove();}this.children.forEachAt(index,length,function(child,offset,length){child.deleteAt(offset,length);});};ContainerBlot.prototype.descendant=function(criteria,index){var _a=this.children.find(index),child=_a[0],offset=_a[1];if(criteria.blotName==null&&criteria(child)||criteria.blotName!=null&&child instanceof criteria){return[child,offset];}else if(child instanceof ContainerBlot){return child.descendant(criteria,offset);}else{return[null,-1];}};ContainerBlot.prototype.descendants=function(criteria,index,length){if(index===void 0){index=0;}if(length===void 0){length=Number.MAX_VALUE;}var descendants=[],lengthLeft=length;this.children.forEachAt(index,length,function(child,index,length){if(criteria.blotName==null&&criteria(child)||criteria.blotName!=null&&child instanceof criteria){descendants.push(child);}if(child instanceof ContainerBlot){descendants=descendants.concat(child.descendants(criteria,index,lengthLeft));}lengthLeft-=length;});return descendants;};ContainerBlot.prototype.detach=function(){this.children.forEach(function(child){child.detach();});_super.prototype.detach.call(this);};ContainerBlot.prototype.formatAt=function(index,length,name,value){this.children.forEachAt(index,length,function(child,offset,length){child.formatAt(offset,length,name,value);});};ContainerBlot.prototype.insertAt=function(index,value,def){var _a=this.children.find(index),child=_a[0],offset=_a[1];if(child){child.insertAt(offset,value,def);}else{var blot=def==null?Registry.create('text',value):Registry.create(value,def);this.appendChild(blot);}};ContainerBlot.prototype.insertBefore=function(childBlot,refBlot){if(this.statics.allowedChildren!=null&&!this.statics.allowedChildren.some(function(child){return childBlot instanceof child;})){throw new Registry.ParchmentError("Cannot insert "+childBlot.statics.blotName+" into "+this.statics.blotName);}childBlot.insertInto(this,refBlot);};ContainerBlot.prototype.length=function(){return this.children.reduce(function(memo,child){return memo+child.length();},0);};ContainerBlot.prototype.moveChildren=function(targetParent,refNode){this.children.forEach(function(child){targetParent.insertBefore(child,refNode);});};ContainerBlot.prototype.optimize=function(){_super.prototype.optimize.call(this);if(this.children.length===0){if(this.statics.defaultChild!=null){var child=Registry.create(this.statics.defaultChild);this.appendChild(child);child.optimize();}else{this.remove();}}};ContainerBlot.prototype.path=function(index,inclusive){if(inclusive===void 0){inclusive=false;}var _a=this.children.find(index,inclusive),child=_a[0],offset=_a[1];var position=[[this,index]];if(child instanceof ContainerBlot){return position.concat(child.path(offset,inclusive));}else if(child!=null){position.push([child,offset]);}return position;};ContainerBlot.prototype.removeChild=function(child){this.children.remove(child);};ContainerBlot.prototype.replace=function(target){if(target instanceof ContainerBlot){target.moveChildren(this);}_super.prototype.replace.call(this,target);};ContainerBlot.prototype.split=function(index,force){if(force===void 0){force=false;}if(!force){if(index===0)return this;if(index===this.length())return this.next;}var after=this.clone();this.parent.insertBefore(after,this.next);this.children.forEachAt(index,this.length(),function(child,offset,length){child=child.split(offset,force);after.appendChild(child);});return after;};ContainerBlot.prototype.unwrap=function(){this.moveChildren(this.parent,this.next);this.remove();};ContainerBlot.prototype.update=function(mutations){var _this=this;var addedNodes=[],removedNodes=[];mutations.forEach(function(mutation){if(mutation.target===_this.domNode&&mutation.type==='childList'){addedNodes.push.apply(addedNodes,mutation.addedNodes);removedNodes.push.apply(removedNodes,mutation.removedNodes);}});removedNodes.forEach(function(node){var blot=Registry.find(node);if(blot==null)return;if(blot.domNode.parentNode==null||blot.domNode.parentNode===_this.domNode){blot.detach();}});addedNodes.filter(function(node){return node.parentNode==_this.domNode;}).sort(function(a,b){if(a===b)return 0;if(a.compareDocumentPosition(b)&Node.DOCUMENT_POSITION_FOLLOWING){return 1;}return-1;}).forEach(function(node){var refBlot=null;if(node.nextSibling!=null){refBlot=Registry.find(node.nextSibling);}var blot=makeBlot(node);if(blot.next!=refBlot||blot.next==null){if(blot.parent!=null){blot.parent.removeChild(_this);}_this.insertBefore(blot,refBlot);}});};return ContainerBlot;}(shadow_1.default);function makeBlot(node){var blot=Registry.find(node);if(blot==null){try{blot=Registry.create(node);}catch(e){blot=Registry.create(Registry.Scope.INLINE);[].slice.call(node.childNodes).forEach(function(child){blot.domNode.appendChild(child);});node.parentNode.replaceChild(blot.domNode,node);blot.attach();}}return blot;}Object.defineProperty(exports,"__esModule",{value:true});exports.default=ContainerBlot;/***/},/* 4 *//***/function(module,exports){"use strict";var LinkedList=function(){function LinkedList(){this.head=this.tail=undefined;this.length=0;}LinkedList.prototype.append=function(){var nodes=[];for(var _i=0;_i<arguments.length;_i++){nodes[_i-0]=arguments[_i];}this.insertBefore(nodes[0],undefined);if(nodes.length>1){this.append.apply(this,nodes.slice(1));}};LinkedList.prototype.contains=function(node){var cur,next=this.iterator();while(cur=next()){if(cur===node)return true;}return false;};LinkedList.prototype.insertBefore=function(node,refNode){node.next=refNode;if(refNode!=null){node.prev=refNode.prev;if(refNode.prev!=null){refNode.prev.next=node;}refNode.prev=node;if(refNode===this.head){this.head=node;}}else if(this.tail!=null){this.tail.next=node;node.prev=this.tail;this.tail=node;}else{node.prev=undefined;this.head=this.tail=node;}this.length+=1;};LinkedList.prototype.offset=function(target){var index=0,cur=this.head;while(cur!=null){if(cur===target)return index;index+=cur.length();cur=cur.next;}return-1;};LinkedList.prototype.remove=function(node){if(!this.contains(node))return;if(node.prev!=null)node.prev.next=node.next;if(node.next!=null)node.next.prev=node.prev;if(node===this.head)this.head=node.next;if(node===this.tail)this.tail=node.prev;this.length-=1;};LinkedList.prototype.iterator=function(curNode){if(curNode===void 0){curNode=this.head;}// TODO use yield when we can
	return function(){var ret=curNode;if(curNode!=null)curNode=curNode.next;return ret;};};LinkedList.prototype.find=function(index,inclusive){if(inclusive===void 0){inclusive=false;}var cur,next=this.iterator();while(cur=next()){var length_1=cur.length();if(index<length_1||inclusive&&index===length_1&&(cur.next==null||cur.next.length()!==0)){return[cur,index];}index-=length_1;}return[null,0];};LinkedList.prototype.forEach=function(callback){var cur,next=this.iterator();while(cur=next()){callback(cur);}};LinkedList.prototype.forEachAt=function(index,length,callback){if(length<=0)return;var _a=this.find(index),startNode=_a[0],offset=_a[1];var cur,curIndex=index-offset,next=this.iterator(startNode);while((cur=next())&&curIndex<index+length){var curLength=cur.length();if(index>curIndex){callback(cur,index-curIndex,Math.min(length,curIndex+curLength-index));}else{callback(cur,0,Math.min(curLength,index+length-curIndex));}curIndex+=curLength;}};LinkedList.prototype.map=function(callback){return this.reduce(function(memo,cur){memo.push(callback(cur));return memo;},[]);};LinkedList.prototype.reduce=function(callback,memo){var cur,next=this.iterator();while(cur=next()){memo=callback(memo,cur);}return memo;};return LinkedList;}();Object.defineProperty(exports,"__esModule",{value:true});exports.default=LinkedList;/***/},/* 5 *//***/function(module,exports,__webpack_require__){"use strict";var Registry=__webpack_require__(6);var ShadowBlot=function(){function ShadowBlot(domNode){this.domNode=domNode;this.attach();}Object.defineProperty(ShadowBlot.prototype,"statics",{// Hack for accessing inherited static methods
	get:function get(){return this.constructor;},enumerable:true,configurable:true});ShadowBlot.create=function(value){if(this.tagName==null){throw new Registry.ParchmentError('Blot definition missing tagName');}var node;if(Array.isArray(this.tagName)){if(typeof value==='string'){value=value.toUpperCase();if(parseInt(value).toString()===value){value=parseInt(value);}}if(typeof value==='number'){node=document.createElement(this.tagName[value-1]);}else if(this.tagName.indexOf(value)>-1){node=document.createElement(value);}else{node=document.createElement(this.tagName[0]);}}else{node=document.createElement(this.tagName);}if(this.className){node.classList.add(this.className);}return node;};ShadowBlot.prototype.attach=function(){this.domNode[Registry.DATA_KEY]={blot:this};};ShadowBlot.prototype.clone=function(){var domNode=this.domNode.cloneNode();return Registry.create(domNode);};ShadowBlot.prototype.detach=function(){if(this.parent!=null)this.parent.removeChild(this);delete this.domNode[Registry.DATA_KEY];};ShadowBlot.prototype.deleteAt=function(index,length){var blot=this.isolate(index,length);blot.remove();};ShadowBlot.prototype.formatAt=function(index,length,name,value){var blot=this.isolate(index,length);if(Registry.query(name,Registry.Scope.BLOT)!=null&&value){blot.wrap(name,value);}else if(Registry.query(name,Registry.Scope.ATTRIBUTE)!=null){var parent_1=Registry.create(this.statics.scope);blot.wrap(parent_1);parent_1.format(name,value);}};ShadowBlot.prototype.insertAt=function(index,value,def){var blot=def==null?Registry.create('text',value):Registry.create(value,def);var ref=this.split(index);this.parent.insertBefore(blot,ref);};ShadowBlot.prototype.insertInto=function(parentBlot,refBlot){if(this.parent!=null){this.parent.children.remove(this);}parentBlot.children.insertBefore(this,refBlot);if(refBlot!=null){var refDomNode=refBlot.domNode;}if(this.next==null||this.domNode.nextSibling!=refDomNode){parentBlot.domNode.insertBefore(this.domNode,refDomNode);}this.parent=parentBlot;};ShadowBlot.prototype.isolate=function(index,length){var target=this.split(index);target.split(length);return target;};ShadowBlot.prototype.length=function(){return 1;};;ShadowBlot.prototype.offset=function(root){if(root===void 0){root=this.parent;}if(this.parent==null||this==root)return 0;return this.parent.children.offset(this)+this.parent.offset(root);};ShadowBlot.prototype.optimize=function(){// TODO clean up once we use WeakMap
	if(this.domNode[Registry.DATA_KEY]!=null){delete this.domNode[Registry.DATA_KEY].mutations;}};ShadowBlot.prototype.remove=function(){if(this.domNode.parentNode!=null){this.domNode.parentNode.removeChild(this.domNode);}this.detach();};ShadowBlot.prototype.replace=function(target){if(target.parent==null)return;target.parent.insertBefore(this,target.next);target.remove();};ShadowBlot.prototype.replaceWith=function(name,value){var replacement=typeof name==='string'?Registry.create(name,value):name;replacement.replace(this);return replacement;};ShadowBlot.prototype.split=function(index,force){return index===0?this:this.next;};ShadowBlot.prototype.update=function(mutations){if(mutations===void 0){mutations=[];}// Nothing to do by default
	};ShadowBlot.prototype.wrap=function(name,value){var wrapper=typeof name==='string'?Registry.create(name,value):name;if(this.parent!=null){this.parent.insertBefore(wrapper,this.next);}wrapper.appendChild(this);return wrapper;};ShadowBlot.blotName='abstract';return ShadowBlot;}();Object.defineProperty(exports,"__esModule",{value:true});exports.default=ShadowBlot;/***/},/* 6 *//***/function(module,exports){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var ParchmentError=function(_super){__extends(ParchmentError,_super);function ParchmentError(message){message='[Parchment] '+message;_super.call(this,message);this.message=message;this.name=this.constructor.name;}return ParchmentError;}(Error);exports.ParchmentError=ParchmentError;var attributes={};var classes={};var tags={};var types={};exports.DATA_KEY='__blot';(function(Scope){Scope[Scope["TYPE"]=3]="TYPE";Scope[Scope["LEVEL"]=12]="LEVEL";Scope[Scope["ATTRIBUTE"]=13]="ATTRIBUTE";Scope[Scope["BLOT"]=14]="BLOT";Scope[Scope["INLINE"]=7]="INLINE";Scope[Scope["BLOCK"]=11]="BLOCK";Scope[Scope["BLOCK_BLOT"]=10]="BLOCK_BLOT";Scope[Scope["INLINE_BLOT"]=6]="INLINE_BLOT";Scope[Scope["BLOCK_ATTRIBUTE"]=9]="BLOCK_ATTRIBUTE";Scope[Scope["INLINE_ATTRIBUTE"]=5]="INLINE_ATTRIBUTE";Scope[Scope["ANY"]=15]="ANY";})(exports.Scope||(exports.Scope={}));var Scope=exports.Scope;;function create(input,value){var match=query(input);if(match==null){throw new ParchmentError("Unable to create "+input+" blot");}var BlotClass=match;var node=input instanceof Node?input:BlotClass.create(value);return new BlotClass(node,value);}exports.create=create;function find(node,bubble){if(bubble===void 0){bubble=false;}if(node==null)return null;if(node[exports.DATA_KEY]!=null)return node[exports.DATA_KEY].blot;if(bubble)return find(node.parentNode,bubble);return null;}exports.find=find;function query(query,scope){if(scope===void 0){scope=Scope.ANY;}var match;if(typeof query==='string'){match=types[query]||attributes[query];}else if(query instanceof Text){match=types['text'];}else if(typeof query==='number'){if(query&Scope.LEVEL&Scope.BLOCK){match=types['block'];}else if(query&Scope.LEVEL&Scope.INLINE){match=types['inline'];}}else if(query instanceof HTMLElement){var names=(query.getAttribute('class')||'').split(/\s+/);for(var i in names){match=classes[names[i]];if(match)break;}match=match||tags[query.tagName];}if(match==null)return null;if(scope&Scope.LEVEL&match.scope&&scope&Scope.TYPE&match.scope)return match;return null;}exports.query=query;function register(){var Definitions=[];for(var _i=0;_i<arguments.length;_i++){Definitions[_i-0]=arguments[_i];}if(Definitions.length>1){return Definitions.map(function(d){return register(d);});}var Definition=Definitions[0];if(typeof Definition.blotName!=='string'&&typeof Definition.attrName!=='string'){throw new ParchmentError('Invalid definition');}else if(Definition.blotName==='abstract'){throw new ParchmentError('Cannot register abstract class');}types[Definition.blotName||Definition.attrName]=Definition;if(typeof Definition.keyName==='string'){attributes[Definition.keyName]=Definition;}else{if(Definition.className!=null){classes[Definition.className]=Definition;}if(Definition.tagName!=null){if(Array.isArray(Definition.tagName)){Definition.tagName=Definition.tagName.map(function(tagName){return tagName.toUpperCase();});}else{Definition.tagName=Definition.tagName.toUpperCase();}var tagNames=Array.isArray(Definition.tagName)?Definition.tagName:[Definition.tagName];tagNames.forEach(function(tag){if(tags[tag]==null||Definition.className==null){tags[tag]=Definition;}});}}return Definition;}exports.register=register;/***/},/* 7 *//***/function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var attributor_1=__webpack_require__(8);var store_1=__webpack_require__(9);var container_1=__webpack_require__(3);var Registry=__webpack_require__(6);var FormatBlot=function(_super){__extends(FormatBlot,_super);function FormatBlot(){_super.apply(this,arguments);}FormatBlot.formats=function(domNode){if(typeof this.tagName==='string'){return true;}else if(Array.isArray(this.tagName)){return domNode.tagName.toLowerCase();}return undefined;};FormatBlot.prototype.attach=function(){_super.prototype.attach.call(this);this.attributes=new store_1.default(this.domNode);};FormatBlot.prototype.format=function(name,value){var format=Registry.query(name);if(format instanceof attributor_1.default){this.attributes.attribute(format,value);}else if(value){if(format!=null&&(name!==this.statics.blotName||this.formats()[name]!==value)){this.replaceWith(name,value);}}};FormatBlot.prototype.formats=function(){var formats=this.attributes.values();var format=this.statics.formats(this.domNode);if(format!=null){formats[this.statics.blotName]=format;}return formats;};FormatBlot.prototype.replaceWith=function(name,value){var replacement=_super.prototype.replaceWith.call(this,name,value);this.attributes.copy(replacement);return replacement;};FormatBlot.prototype.update=function(mutations){var _this=this;_super.prototype.update.call(this,mutations);if(mutations.some(function(mutation){return mutation.target===_this.domNode&&mutation.type==='attributes';})){this.attributes.build();}};FormatBlot.prototype.wrap=function(name,value){var wrapper=_super.prototype.wrap.call(this,name,value);if(wrapper instanceof FormatBlot&&wrapper.statics.scope===this.statics.scope){this.attributes.move(wrapper);}return wrapper;};return FormatBlot;}(container_1.default);Object.defineProperty(exports,"__esModule",{value:true});exports.default=FormatBlot;/***/},/* 8 *//***/function(module,exports,__webpack_require__){"use strict";var Registry=__webpack_require__(6);var Attributor=function(){function Attributor(attrName,keyName,options){if(options===void 0){options={};}this.attrName=attrName;this.keyName=keyName;var attributeBit=Registry.Scope.TYPE&Registry.Scope.ATTRIBUTE;if(options.scope!=null){// Ignore type bits, force attribute bit
	this.scope=options.scope&Registry.Scope.LEVEL|attributeBit;}else{this.scope=Registry.Scope.ATTRIBUTE;}if(options.whitelist!=null)this.whitelist=options.whitelist;}Attributor.keys=function(node){return[].map.call(node.attributes,function(item){return item.name;});};Attributor.prototype.add=function(node,value){if(!this.canAdd(node,value))return false;node.setAttribute(this.keyName,value);return true;};Attributor.prototype.canAdd=function(node,value){var match=Registry.query(node,Registry.Scope.BLOT&(this.scope|Registry.Scope.TYPE));if(match!=null&&(this.whitelist==null||this.whitelist.indexOf(value)>-1)){return true;}return false;};Attributor.prototype.remove=function(node){node.removeAttribute(this.keyName);};Attributor.prototype.value=function(node){return node.getAttribute(this.keyName);};return Attributor;}();Object.defineProperty(exports,"__esModule",{value:true});exports.default=Attributor;/***/},/* 9 *//***/function(module,exports,__webpack_require__){"use strict";var attributor_1=__webpack_require__(8);var class_1=__webpack_require__(10);var style_1=__webpack_require__(11);var Registry=__webpack_require__(6);var AttributorStore=function(){function AttributorStore(domNode){this.attributes={};this.domNode=domNode;this.build();}AttributorStore.prototype.attribute=function(attribute,value){if(value){if(attribute.add(this.domNode,value)){if(attribute.value(this.domNode)!=null){this.attributes[attribute.attrName]=attribute;}else{delete this.attributes[attribute.attrName];}}}else{attribute.remove(this.domNode);delete this.attributes[attribute.attrName];}};AttributorStore.prototype.build=function(){var _this=this;this.attributes={};var attributes=attributor_1.default.keys(this.domNode);var classes=class_1.default.keys(this.domNode);var styles=style_1.default.keys(this.domNode);attributes.concat(classes).concat(styles).forEach(function(name){var attr=Registry.query(name,Registry.Scope.ATTRIBUTE);if(attr instanceof attributor_1.default){_this.attributes[attr.attrName]=attr;}});};AttributorStore.prototype.copy=function(target){var _this=this;Object.keys(this.attributes).forEach(function(key){var value=_this.attributes[key].value(_this.domNode);target.format(key,value);});};AttributorStore.prototype.move=function(target){var _this=this;this.copy(target);Object.keys(this.attributes).forEach(function(key){_this.attributes[key].remove(_this.domNode);});this.attributes={};};AttributorStore.prototype.values=function(){var _this=this;return Object.keys(this.attributes).reduce(function(attributes,name){attributes[name]=_this.attributes[name].value(_this.domNode);return attributes;},{});};return AttributorStore;}();Object.defineProperty(exports,"__esModule",{value:true});exports.default=AttributorStore;/***/},/* 10 *//***/function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var attributor_1=__webpack_require__(8);function match(node,prefix){var className=node.getAttribute('class')||'';return className.split(/\s+/).filter(function(name){return name.indexOf(prefix+"-")===0;});}var ClassAttributor=function(_super){__extends(ClassAttributor,_super);function ClassAttributor(){_super.apply(this,arguments);}ClassAttributor.keys=function(node){return(node.getAttribute('class')||'').split(/\s+/).map(function(name){return name.split('-').slice(0,-1).join('-');});};ClassAttributor.prototype.add=function(node,value){if(!this.canAdd(node,value))return false;this.remove(node);node.classList.add(this.keyName+"-"+value);return true;};ClassAttributor.prototype.remove=function(node){var matches=match(node,this.keyName);matches.forEach(function(name){node.classList.remove(name);});if(node.classList.length===0){node.removeAttribute('class');}};ClassAttributor.prototype.value=function(node){var result=match(node,this.keyName)[0]||'';return result.slice(this.keyName.length+1);// +1 for hyphen
	};return ClassAttributor;}(attributor_1.default);Object.defineProperty(exports,"__esModule",{value:true});exports.default=ClassAttributor;/***/},/* 11 *//***/function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var attributor_1=__webpack_require__(8);function camelize(name){var parts=name.split('-');var rest=parts.slice(1).map(function(part){return part[0].toUpperCase()+part.slice(1);}).join('');return parts[0]+rest;}var StyleAttributor=function(_super){__extends(StyleAttributor,_super);function StyleAttributor(){_super.apply(this,arguments);}StyleAttributor.keys=function(node){return(node.getAttribute('style')||'').split(';').map(function(value){var arr=value.split(':');return arr[0].trim();});};StyleAttributor.prototype.add=function(node,value){if(!this.canAdd(node,value))return false;node.style[camelize(this.keyName)]=value;return true;};StyleAttributor.prototype.remove=function(node){node.style[camelize(this.keyName)]='';if(!node.getAttribute('style')){node.removeAttribute('style');}};StyleAttributor.prototype.value=function(node){return node.style[camelize(this.keyName)];};return StyleAttributor;}(attributor_1.default);Object.defineProperty(exports,"__esModule",{value:true});exports.default=StyleAttributor;/***/},/* 12 *//***/function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var shadow_1=__webpack_require__(5);var Registry=__webpack_require__(6);var LeafBlot=function(_super){__extends(LeafBlot,_super);function LeafBlot(){_super.apply(this,arguments);}LeafBlot.value=function(domNode){return true;};LeafBlot.prototype.index=function(node,offset){if(node!==this.domNode)return-1;return Math.min(offset,1);};LeafBlot.prototype.position=function(index,inclusive){var offset=[].indexOf.call(this.parent.domNode.childNodes,this.domNode);if(index>0)offset+=1;return[this.parent.domNode,offset];};LeafBlot.prototype.value=function(){return _a={},_a[this.statics.blotName]=this.statics.value(this.domNode)||true,_a;var _a;};LeafBlot.scope=Registry.Scope.INLINE_BLOT;return LeafBlot;}(shadow_1.default);Object.defineProperty(exports,"__esModule",{value:true});exports.default=LeafBlot;/***/},/* 13 *//***/function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var container_1=__webpack_require__(3);var Registry=__webpack_require__(6);var OBSERVER_CONFIG={attributes:true,characterData:true,characterDataOldValue:true,childList:true,subtree:true};var MAX_OPTIMIZE_ITERATIONS=100;var ScrollBlot=function(_super){__extends(ScrollBlot,_super);function ScrollBlot(node){var _this=this;_super.call(this,node);this.parent=null;this.observer=new MutationObserver(function(mutations){_this.update(mutations);});this.observer.observe(this.domNode,OBSERVER_CONFIG);}ScrollBlot.prototype.detach=function(){_super.prototype.detach.call(this);this.observer.disconnect();};ScrollBlot.prototype.deleteAt=function(index,length){this.update();if(index===0&&length===this.length()){this.children.forEach(function(child){child.remove();});}else{_super.prototype.deleteAt.call(this,index,length);}};ScrollBlot.prototype.formatAt=function(index,length,name,value){this.update();_super.prototype.formatAt.call(this,index,length,name,value);};ScrollBlot.prototype.insertAt=function(index,value,def){this.update();_super.prototype.insertAt.call(this,index,value,def);};ScrollBlot.prototype.optimize=function(mutations){var _this=this;if(mutations===void 0){mutations=[];}_super.prototype.optimize.call(this);mutations.push.apply(mutations,this.observer.takeRecords());// TODO use WeakMap
	var mark=function mark(blot,markParent){if(markParent===void 0){markParent=true;}if(blot==null||blot===_this)return;if(blot.domNode.parentNode==null)return;if(blot.domNode[Registry.DATA_KEY].mutations==null){blot.domNode[Registry.DATA_KEY].mutations=[];}if(markParent)mark(blot.parent);};var optimize=function optimize(blot){if(blot.domNode[Registry.DATA_KEY]==null||blot.domNode[Registry.DATA_KEY].mutations==null){return;}if(blot instanceof container_1.default){blot.children.forEach(optimize);}blot.optimize();};var remaining=mutations;for(var i=0;remaining.length>0;i+=1){if(i>=MAX_OPTIMIZE_ITERATIONS){throw new Error('[Parchment] Maximum optimize iterations reached');}remaining.forEach(function(mutation){var blot=Registry.find(mutation.target,true);if(blot==null)return;if(blot.domNode===mutation.target){if(mutation.type==='childList'){mark(Registry.find(mutation.previousSibling,false));[].forEach.call(mutation.addedNodes,function(node){var child=Registry.find(node,false);mark(child,false);if(child instanceof container_1.default){child.children.forEach(function(grandChild){mark(grandChild,false);});}});}else if(mutation.type==='attributes'){mark(blot.prev);}}mark(blot);});this.children.forEach(optimize);remaining=this.observer.takeRecords();mutations.push.apply(mutations,remaining);}};ScrollBlot.prototype.update=function(mutations){var _this=this;mutations=mutations||this.observer.takeRecords();// TODO use WeakMap
	mutations.map(function(mutation){var blot=Registry.find(mutation.target,true);if(blot==null)return;if(blot.domNode[Registry.DATA_KEY].mutations==null){blot.domNode[Registry.DATA_KEY].mutations=[mutation];return blot;}else{blot.domNode[Registry.DATA_KEY].mutations.push(mutation);return null;}}).forEach(function(blot){if(blot==null||blot===_this)return;blot.update(blot.domNode[Registry.DATA_KEY].mutations||[]);});if(this.domNode[Registry.DATA_KEY].mutations!=null){_super.prototype.update.call(this,this.domNode[Registry.DATA_KEY].mutations);}this.optimize(mutations);};ScrollBlot.blotName='scroll';ScrollBlot.defaultChild='block';ScrollBlot.scope=Registry.Scope.BLOCK_BLOT;ScrollBlot.tagName='DIV';return ScrollBlot;}(container_1.default);Object.defineProperty(exports,"__esModule",{value:true});exports.default=ScrollBlot;/***/},/* 14 *//***/function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var format_1=__webpack_require__(7);var Registry=__webpack_require__(6);// Shallow object comparison
	function isEqual(obj1,obj2){if(Object.keys(obj1).length!==Object.keys(obj2).length)return false;for(var prop in obj1){if(obj1[prop]!==obj2[prop])return false;}return true;}var InlineBlot=function(_super){__extends(InlineBlot,_super);function InlineBlot(){_super.apply(this,arguments);}InlineBlot.formats=function(domNode){if(domNode.tagName===InlineBlot.tagName)return undefined;return _super.formats.call(this,domNode);};InlineBlot.prototype.format=function(name,value){var _this=this;if(name===this.statics.blotName&&!value){this.children.forEach(function(child){if(!(child instanceof format_1.default)){child=child.wrap(InlineBlot.blotName,true);}_this.attributes.copy(child);});this.unwrap();}else{_super.prototype.format.call(this,name,value);}};InlineBlot.prototype.formatAt=function(index,length,name,value){if(this.formats()[name]!=null||Registry.query(name,Registry.Scope.ATTRIBUTE)){var blot=this.isolate(index,length);blot.format(name,value);}else{_super.prototype.formatAt.call(this,index,length,name,value);}};InlineBlot.prototype.optimize=function(){_super.prototype.optimize.call(this);var formats=this.formats();if(Object.keys(formats).length===0){return this.unwrap();// unformatted span
	}var next=this.next;if(next instanceof InlineBlot&&next.prev===this&&isEqual(formats,next.formats())){next.moveChildren(this);next.remove();}};InlineBlot.blotName='inline';InlineBlot.scope=Registry.Scope.INLINE_BLOT;InlineBlot.tagName='SPAN';return InlineBlot;}(format_1.default);Object.defineProperty(exports,"__esModule",{value:true});exports.default=InlineBlot;/***/},/* 15 *//***/function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var format_1=__webpack_require__(7);var Registry=__webpack_require__(6);var BlockBlot=function(_super){__extends(BlockBlot,_super);function BlockBlot(){_super.apply(this,arguments);}BlockBlot.formats=function(domNode){var tagName=Registry.query(BlockBlot.blotName).tagName;if(domNode.tagName===tagName)return undefined;return _super.formats.call(this,domNode);};BlockBlot.prototype.format=function(name,value){if(Registry.query(name,Registry.Scope.BLOCK)==null){return;}else if(name===this.statics.blotName&&!value){this.replaceWith(BlockBlot.blotName);}else{_super.prototype.format.call(this,name,value);}};BlockBlot.prototype.formatAt=function(index,length,name,value){if(Registry.query(name,Registry.Scope.BLOCK)!=null){this.format(name,value);}else{_super.prototype.formatAt.call(this,index,length,name,value);}};BlockBlot.prototype.insertAt=function(index,value,def){if(def==null||Registry.query(value,Registry.Scope.INLINE)!=null){// Insert text or inline
	_super.prototype.insertAt.call(this,index,value,def);}else{var after=this.split(index);var blot=Registry.create(value,def);after.parent.insertBefore(blot,after);}};BlockBlot.blotName='block';BlockBlot.scope=Registry.Scope.BLOCK_BLOT;BlockBlot.tagName='P';return BlockBlot;}(format_1.default);Object.defineProperty(exports,"__esModule",{value:true});exports.default=BlockBlot;/***/},/* 16 *//***/function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var leaf_1=__webpack_require__(12);var EmbedBlot=function(_super){__extends(EmbedBlot,_super);function EmbedBlot(){_super.apply(this,arguments);}EmbedBlot.formats=function(domNode){return undefined;};EmbedBlot.prototype.format=function(name,value){// super.formatAt wraps, which is what we want in general,
	// but this allows subclasses to overwrite for formats
	// that just apply to particular embeds
	_super.prototype.formatAt.call(this,0,this.length(),name,value);};EmbedBlot.prototype.formatAt=function(index,length,name,value){if(index===0&&length===this.length()){this.format(name,value);}else{_super.prototype.formatAt.call(this,index,length,name,value);}};EmbedBlot.prototype.formats=function(){return this.statics.formats(this.domNode);};return EmbedBlot;}(leaf_1.default);Object.defineProperty(exports,"__esModule",{value:true});exports.default=EmbedBlot;/***/},/* 17 *//***/function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var leaf_1=__webpack_require__(12);var Registry=__webpack_require__(6);var TextBlot=function(_super){__extends(TextBlot,_super);function TextBlot(node){_super.call(this,node);this.text=this.statics.value(this.domNode);}TextBlot.create=function(value){return document.createTextNode(value);};TextBlot.value=function(domNode){return domNode.data;};TextBlot.prototype.deleteAt=function(index,length){this.domNode.data=this.text=this.text.slice(0,index)+this.text.slice(index+length);};TextBlot.prototype.index=function(node,offset){if(this.domNode===node){return offset;}return-1;};TextBlot.prototype.insertAt=function(index,value,def){if(def==null){this.text=this.text.slice(0,index)+value+this.text.slice(index);this.domNode.data=this.text;}else{_super.prototype.insertAt.call(this,index,value,def);}};TextBlot.prototype.length=function(){return this.text.length;};TextBlot.prototype.optimize=function(){_super.prototype.optimize.call(this);this.text=this.statics.value(this.domNode);if(this.text.length===0){this.remove();}else if(this.next instanceof TextBlot&&this.next.prev===this){this.insertAt(this.length(),this.next.value());this.next.remove();}};TextBlot.prototype.position=function(index,inclusive){if(inclusive===void 0){inclusive=false;}return[this.domNode,index];};TextBlot.prototype.split=function(index,force){if(force===void 0){force=false;}if(!force){if(index===0)return this;if(index===this.length())return this.next;}var after=Registry.create(this.domNode.splitText(index));this.parent.insertBefore(after,this.next);this.text=this.statics.value(this.domNode);return after;};TextBlot.prototype.update=function(mutations){var _this=this;if(mutations.some(function(mutation){return mutation.type==='characterData'&&mutation.target===_this.domNode;})){this.text=this.statics.value(this.domNode);}};TextBlot.prototype.value=function(){return this.text;};TextBlot.blotName='text';TextBlot.scope=Registry.Scope.INLINE_BLOT;return TextBlot;}(leaf_1.default);Object.defineProperty(exports,"__esModule",{value:true});exports.default=TextBlot;/***/},/* 18 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.overload=exports.expandConfig=undefined;var _typeof=typeof Symbol==="function"&&_typeof2(Symbol.iterator)==="symbol"?function(obj){return typeof obj==='undefined'?'undefined':_typeof2(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj==='undefined'?'undefined':_typeof2(obj);};var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();__webpack_require__(19);var _delta=__webpack_require__(20);var _delta2=_interopRequireDefault(_delta);var _editor=__webpack_require__(27);var _editor2=_interopRequireDefault(_editor);var _emitter=__webpack_require__(28);var _emitter2=_interopRequireDefault(_emitter);var _module=__webpack_require__(39);var _module2=_interopRequireDefault(_module);var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _selection=__webpack_require__(40);var _selection2=_interopRequireDefault(_selection);var _extend=__webpack_require__(25);var _extend2=_interopRequireDefault(_extend);var _logger=__webpack_require__(30);var _logger2=_interopRequireDefault(_logger);var _theme=__webpack_require__(41);var _theme2=_interopRequireDefault(_theme);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var debug=(0,_logger2.default)('quill');var Quill=function(){_createClass(Quill,null,[{key:'debug',value:function debug(limit){_logger2.default.level(limit);}},{key:'import',value:function _import(name){if(this.imports[name]==null){debug.error('Cannot import '+name+'. Are you sure it was registered?');}return this.imports[name];}},{key:'register',value:function register(path,target){var _this=this;var overwrite=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(typeof path!=='string'){var name=path.attrName||path.blotName;if(typeof name==='string'){// register(Blot | Attributor, overwrite)
	this.register('formats/'+name,path,target);}else{Object.keys(path).forEach(function(key){_this.register(key,path[key],target);});}}else{if(this.imports[path]!=null&&!overwrite){debug.warn('Overwriting '+path+' with',target);}this.imports[path]=target;if((path.startsWith('blots/')||path.startsWith('formats/'))&&target.blotName!=='abstract'){_parchment2.default.register(target);}}}}]);function Quill(container){var _this2=this;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,Quill);options=expandConfig(container,options);this.container=options.container;if(this.container==null){return debug.error('Invalid Quill container',container);}if(options.debug){Quill.debug(options.debug);}var html=this.container.innerHTML.trim();this.container.classList.add('ql-container');this.container.innerHTML='';this.root=this.addContainer('ql-editor');this.emitter=new _emitter2.default();this.scroll=_parchment2.default.create(this.root,{emitter:this.emitter,whitelist:options.formats});this.editor=new _editor2.default(this.scroll,this.emitter);this.selection=new _selection2.default(this.scroll,this.emitter);this.theme=new options.theme(this,options);this.keyboard=this.theme.addModule('keyboard');this.clipboard=this.theme.addModule('clipboard');this.history=this.theme.addModule('history');this.theme.init();var contents=this.clipboard.convert('<div class=\'ql-editor\' style="white-space: normal;">'+html+'<p><br></p></div>');this.setContents(contents);this.history.clear();if(options.readOnly){this.disable();}if(options.placeholder){this.root.setAttribute('data-placeholder',options.placeholder);}this.root.classList.toggle('ql-blank',this.editor.isBlank());this.emitter.on(_emitter2.default.events.TEXT_CHANGE,function(delta){_this2.root.classList.toggle('ql-blank',_this2.editor.isBlank());});}_createClass(Quill,[{key:'addContainer',value:function addContainer(container){var refNode=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(typeof container==='string'){var className=container;container=document.createElement('div');container.classList.add(className);}this.container.insertBefore(container,refNode);return container;}},{key:'blur',value:function blur(){this.selection.setRange(null);}},{key:'deleteText',value:function deleteText(index,length,source){var _overload=overload(index,length,source);var _overload2=_slicedToArray(_overload,4);index=_overload2[0];length=_overload2[1];source=_overload2[3];var range=this.getSelection();var change=this.editor.deleteText(index,length,source);range=shiftRange(range,index,-1*length,source);this.setSelection(range,_emitter2.default.sources.SILENT);return change;}},{key:'disable',value:function disable(){this.enable(false);}},{key:'enable',value:function enable(){var enabled=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;this.editor.enable(enabled);if(!enabled){this.blur();}}},{key:'focus',value:function focus(){this.selection.focus();this.selection.scrollIntoView();}},{key:'format',value:function format(name,value){var source=arguments.length>2&&arguments[2]!==undefined?arguments[2]:_emitter2.default.sources.API;var range=this.getSelection(true);var change=new _delta2.default();if(range==null)return change;if(_parchment2.default.query(name,_parchment2.default.Scope.BLOCK)){change=this.formatLine(range,name,value,source);}else if(range.length===0){this.selection.format(name,value);return change;}else{change=this.formatText(range,name,value,source);}this.setSelection(range,_emitter2.default.sources.SILENT);return change;}},{key:'formatLine',value:function formatLine(index,length,name,value,source){var formats=void 0;var _overload3=overload(index,length,name,value,source);var _overload4=_slicedToArray(_overload3,4);index=_overload4[0];length=_overload4[1];formats=_overload4[2];source=_overload4[3];var range=this.getSelection();var change=this.editor.formatLine(index,length,formats,source);this.selection.setRange(range,true,_emitter2.default.sources.SILENT);this.selection.scrollIntoView();return change;}},{key:'formatText',value:function formatText(index,length,name,value,source){var formats=void 0;var _overload5=overload(index,length,name,value,source);var _overload6=_slicedToArray(_overload5,4);index=_overload6[0];length=_overload6[1];formats=_overload6[2];source=_overload6[3];var range=this.getSelection();var change=this.editor.formatText(index,length,formats,source);this.selection.setRange(range,true,_emitter2.default.sources.SILENT);this.selection.scrollIntoView();return change;}},{key:'getBounds',value:function getBounds(index){var length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;if(typeof index==='number'){return this.selection.getBounds(index,length);}else{return this.selection.getBounds(index.index,index.length);}}},{key:'getContents',value:function getContents(){var index=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.getLength()-index;var _overload7=overload(index,length);var _overload8=_slicedToArray(_overload7,2);index=_overload8[0];length=_overload8[1];return this.editor.getContents(index,length);}},{key:'getFormat',value:function getFormat(){var index=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.getSelection();var length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;if(typeof index==='number'){return this.editor.getFormat(index,length);}else{return this.editor.getFormat(index.index,index.length);}}},{key:'getLength',value:function getLength(){return this.scroll.length();}},{key:'getModule',value:function getModule(name){return this.theme.modules[name];}},{key:'getSelection',value:function getSelection(){var focus=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(focus)this.focus();this.update();// Make sure we access getRange with editor in consistent state
	return this.selection.getRange()[0];}},{key:'getText',value:function getText(){var index=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.getLength()-index;var _overload9=overload(index,length);var _overload10=_slicedToArray(_overload9,2);index=_overload10[0];length=_overload10[1];return this.editor.getText(index,length);}},{key:'hasFocus',value:function hasFocus(){return this.selection.hasFocus();}},{key:'insertEmbed',value:function insertEmbed(index,embed,value){var source=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Quill.sources.API;var range=this.getSelection();var change=this.editor.insertEmbed(index,embed,value,source);range=shiftRange(range,change,source);this.setSelection(range,_emitter2.default.sources.SILENT);return change;}},{key:'insertText',value:function insertText(index,text,name,value,source){var formats=void 0,range=this.getSelection();var _overload11=overload(index,0,name,value,source);var _overload12=_slicedToArray(_overload11,4);index=_overload12[0];formats=_overload12[2];source=_overload12[3];var change=this.editor.insertText(index,text,formats,source);range=shiftRange(range,index,text.length,source);this.setSelection(range,_emitter2.default.sources.SILENT);return change;}},{key:'off',value:function off(){return this.emitter.off.apply(this.emitter,arguments);}},{key:'on',value:function on(){return this.emitter.on.apply(this.emitter,arguments);}},{key:'once',value:function once(){return this.emitter.once.apply(this.emitter,arguments);}},{key:'pasteHTML',value:function pasteHTML(index,html,source){this.clipboard.dangerouslyPasteHTML(index,html,source);}},{key:'removeFormat',value:function removeFormat(index,length,source){var range=this.getSelection();var _overload13=overload(index,length,source);var _overload14=_slicedToArray(_overload13,4);index=_overload14[0];length=_overload14[1];source=_overload14[3];var change=this.editor.removeFormat(index,length,source);range=shiftRange(range,change,source);this.setSelection(range,_emitter2.default.sources.SILENT);return change;}},{key:'setContents',value:function setContents(delta){var source=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_emitter2.default.sources.API;delta=new _delta2.default(delta).slice();var lastOp=delta.ops[delta.ops.length-1];// Quill contents must always end with newline
	if(lastOp==null||lastOp.insert[lastOp.insert.length-1]!=='\n'){delta.insert('\n');}delta.delete(this.getLength());return this.editor.applyDelta(delta,source);}},{key:'setSelection',value:function setSelection(index,length,source){if(index==null){this.selection.setRange(null,length||Quill.sources.API);}else{var _overload15=overload(index,length,source);var _overload16=_slicedToArray(_overload15,4);index=_overload16[0];length=_overload16[1];source=_overload16[3];this.selection.setRange(new _selection.Range(index,length),source);}this.selection.scrollIntoView();}},{key:'setText',value:function setText(text){var source=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_emitter2.default.sources.API;var delta=new _delta2.default().insert(text);return this.setContents(delta,source);}},{key:'update',value:function update(){var source=arguments.length>0&&arguments[0]!==undefined?arguments[0]:_emitter2.default.sources.USER;var change=this.scroll.update(source);// Will update selection before selection.update() does if text changes
	this.selection.update(source);return change;}},{key:'updateContents',value:function updateContents(delta){var source=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_emitter2.default.sources.API;var range=this.getSelection();if(Array.isArray(delta)){delta=new _delta2.default(delta.slice());}var change=this.editor.applyDelta(delta,source);if(range!=null){range=shiftRange(range,change,source);this.setSelection(range,_emitter2.default.sources.SILENT);}return change;}}]);return Quill;}();Quill.DEFAULTS={bounds:null,formats:null,modules:{},placeholder:'',readOnly:false,theme:'default'};Quill.events=_emitter2.default.events;Quill.sources=_emitter2.default.sources;Quill.version=false?'dev':"1.0.6";Quill.imports={'delta':_delta2.default,'parchment':_parchment2.default,'core/module':_module2.default,'core/theme':_theme2.default};function expandConfig(container,userConfig){userConfig=(0,_extend2.default)(true,{container:container,modules:{clipboard:true,keyboard:true,history:true}},userConfig);if(!userConfig.theme||userConfig.theme===Quill.DEFAULTS.theme){userConfig.theme=_theme2.default;}else{userConfig.theme=Quill.import('themes/'+userConfig.theme);if(userConfig.theme==null){throw new Error('Invalid theme '+userConfig.theme+'. Did you register it?');}}var themeConfig=(0,_extend2.default)(true,{},userConfig.theme.DEFAULTS);[themeConfig,userConfig].forEach(function(config){config.modules=config.modules||{};Object.keys(config.modules).forEach(function(module){if(config.modules[module]===true){config.modules[module]={};}});});var moduleNames=Object.keys(themeConfig.modules).concat(Object.keys(userConfig.modules));var moduleConfig=moduleNames.reduce(function(config,name){var moduleClass=Quill.import('modules/'+name);if(moduleClass==null){debug.error('Cannot load '+name+' module. Are you sure you registered it?');}else{config[name]=moduleClass.DEFAULTS||{};}return config;},{});// Special case toolbar shorthand
	if(userConfig.modules!=null&&userConfig.modules.toolbar&&userConfig.modules.toolbar.constructor!==Object){userConfig.modules.toolbar={container:userConfig.modules.toolbar};}userConfig=(0,_extend2.default)(true,{},Quill.DEFAULTS,{modules:moduleConfig},themeConfig,userConfig);['bounds','container'].forEach(function(key){if(typeof userConfig[key]==='string'){userConfig[key]=document.querySelector(userConfig[key]);}});userConfig.modules=Object.keys(userConfig.modules).reduce(function(config,name){if(userConfig.modules[name]){config[name]=userConfig.modules[name];}return config;},{});return userConfig;}function overload(index,length,name,value,source){var formats={};if(typeof index.index==='number'&&typeof index.length==='number'){// Allow for throwaway end (used by insertText/insertEmbed)
	if(typeof length!=='number'){source=value,value=name,name=length,length=index.length,index=index.index;}else{length=index.length,index=index.index;}}else if(typeof length!=='number'){source=value,value=name,name=length,length=0;}// Handle format being object, two format name/value strings or excluded
	if((typeof name==='undefined'?'undefined':_typeof(name))==='object'){formats=name;source=value;}else if(typeof name==='string'){if(value!=null){formats[name]=value;}else{source=name;}}// Handle optional source
	source=source||_emitter2.default.sources.API;return[index,length,formats,source];}function shiftRange(range,index,length,source){if(range==null)return null;var start=void 0,end=void 0;if(index instanceof _delta2.default){var _map=[range.index,range.index+range.length].map(function(pos){return index.transformPosition(pos,source===_emitter2.default.sources.USER);});var _map2=_slicedToArray(_map,2);start=_map2[0];end=_map2[1];}else{var _map3=[range.index,range.index+range.length].map(function(pos){if(pos<index||pos===index&&source!==_emitter2.default.sources.USER)return pos;if(length>=0){return pos+length;}else{return Math.max(index,pos+length);}});var _map4=_slicedToArray(_map3,2);start=_map4[0];end=_map4[1];}return new _selection.Range(start,end-start);}exports.expandConfig=expandConfig;exports.overload=overload;exports.default=Quill;/***/},/* 19 *//***/function(module,exports){'use strict';var elem=document.createElement('div');elem.classList.toggle('test-class',false);if(elem.classList.contains('test-class')){(function(){var _toggle=DOMTokenList.prototype.toggle;DOMTokenList.prototype.toggle=function(token,force){if(arguments.length>1&&!this.contains(token)===!force){return force;}else{return _toggle.call(this,token);}};})();}if(!String.prototype.startsWith){String.prototype.startsWith=function(searchString,position){position=position||0;return this.substr(position,searchString.length)===searchString;};}if(!String.prototype.endsWith){String.prototype.endsWith=function(searchString,position){var subjectString=this.toString();if(typeof position!=='number'||!isFinite(position)||Math.floor(position)!==position||position>subjectString.length){position=subjectString.length;}position-=searchString.length;var lastIndex=subjectString.indexOf(searchString,position);return lastIndex!==-1&&lastIndex===position;};}if(!Array.prototype.find){Object.defineProperty(Array.prototype,"find",{value:function value(predicate){if(this===null){throw new TypeError('Array.prototype.find called on null or undefined');}if(typeof predicate!=='function'){throw new TypeError('predicate must be a function');}var list=Object(this);var length=list.length>>>0;var thisArg=arguments[1];var value;for(var i=0;i<length;i++){value=list[i];if(predicate.call(thisArg,value,i,list)){return value;}}return undefined;}});}// Disable resizing in Firefox
	document.addEventListener("DOMContentLoaded",function(){document.execCommand("enableObjectResizing",false,false);});/***/},/* 20 *//***/function(module,exports,__webpack_require__){var diff=__webpack_require__(21);var equal=__webpack_require__(22);var extend=__webpack_require__(25);var op=__webpack_require__(26);var NULL_CHARACTER=String.fromCharCode(0);// Placeholder char for embed in diff()
	var Delta=function Delta(ops){// Assume we are given a well formed ops
	if(Array.isArray(ops)){this.ops=ops;}else if(ops!=null&&Array.isArray(ops.ops)){this.ops=ops.ops;}else{this.ops=[];}};Delta.prototype.insert=function(text,attributes){var newOp={};if(text.length===0)return this;newOp.insert=text;if((typeof attributes==='undefined'?'undefined':_typeof2(attributes))==='object'&&Object.keys(attributes).length>0)newOp.attributes=attributes;return this.push(newOp);};Delta.prototype['delete']=function(length){if(length<=0)return this;return this.push({'delete':length});};Delta.prototype.retain=function(length,attributes){if(length<=0)return this;var newOp={retain:length};if((typeof attributes==='undefined'?'undefined':_typeof2(attributes))==='object'&&Object.keys(attributes).length>0)newOp.attributes=attributes;return this.push(newOp);};Delta.prototype.push=function(newOp){var index=this.ops.length;var lastOp=this.ops[index-1];newOp=extend(true,{},newOp);if((typeof lastOp==='undefined'?'undefined':_typeof2(lastOp))==='object'){if(typeof newOp['delete']==='number'&&typeof lastOp['delete']==='number'){this.ops[index-1]={'delete':lastOp['delete']+newOp['delete']};return this;}// Since it does not matter if we insert before or after deleting at the same index,
	// always prefer to insert first
	if(typeof lastOp['delete']==='number'&&newOp.insert!=null){index-=1;lastOp=this.ops[index-1];if((typeof lastOp==='undefined'?'undefined':_typeof2(lastOp))!=='object'){this.ops.unshift(newOp);return this;}}if(equal(newOp.attributes,lastOp.attributes)){if(typeof newOp.insert==='string'&&typeof lastOp.insert==='string'){this.ops[index-1]={insert:lastOp.insert+newOp.insert};if(_typeof2(newOp.attributes)==='object')this.ops[index-1].attributes=newOp.attributes;return this;}else if(typeof newOp.retain==='number'&&typeof lastOp.retain==='number'){this.ops[index-1]={retain:lastOp.retain+newOp.retain};if(_typeof2(newOp.attributes)==='object')this.ops[index-1].attributes=newOp.attributes;return this;}}}if(index===this.ops.length){this.ops.push(newOp);}else{this.ops.splice(index,0,newOp);}return this;};Delta.prototype.chop=function(){var lastOp=this.ops[this.ops.length-1];if(lastOp&&lastOp.retain&&!lastOp.attributes){this.ops.pop();}return this;};Delta.prototype.length=function(){return this.ops.reduce(function(length,elem){return length+op.length(elem);},0);};Delta.prototype.slice=function(start,end){start=start||0;if(typeof end!=='number')end=Infinity;var ops=[];var iter=op.iterator(this.ops);var index=0;while(index<end&&iter.hasNext()){var nextOp;if(index<start){nextOp=iter.next(start-index);}else{nextOp=iter.next(end-index);ops.push(nextOp);}index+=op.length(nextOp);}return new Delta(ops);};Delta.prototype.compose=function(other){var thisIter=op.iterator(this.ops);var otherIter=op.iterator(other.ops);var delta=new Delta();while(thisIter.hasNext()||otherIter.hasNext()){if(otherIter.peekType()==='insert'){delta.push(otherIter.next());}else if(thisIter.peekType()==='delete'){delta.push(thisIter.next());}else{var length=Math.min(thisIter.peekLength(),otherIter.peekLength());var thisOp=thisIter.next(length);var otherOp=otherIter.next(length);if(typeof otherOp.retain==='number'){var newOp={};if(typeof thisOp.retain==='number'){newOp.retain=length;}else{newOp.insert=thisOp.insert;}// Preserve null when composing with a retain, otherwise remove it for inserts
	var attributes=op.attributes.compose(thisOp.attributes,otherOp.attributes,typeof thisOp.retain==='number');if(attributes)newOp.attributes=attributes;delta.push(newOp);// Other op should be delete, we could be an insert or retain
	// Insert + delete cancels out
	}else if(typeof otherOp['delete']==='number'&&typeof thisOp.retain==='number'){delta.push(otherOp);}}}return delta.chop();};Delta.prototype.concat=function(other){var delta=new Delta(this.ops.slice());if(other.ops.length>0){delta.push(other.ops[0]);delta.ops=delta.ops.concat(other.ops.slice(1));}return delta;};Delta.prototype.diff=function(other){var delta=new Delta();if(this.ops===other.ops){return delta;}var strings=[this.ops,other.ops].map(function(ops){return ops.map(function(op){if(op.insert!=null){return typeof op.insert==='string'?op.insert:NULL_CHARACTER;}var prep=ops===other.ops?'on':'with';throw new Error('diff() called '+prep+' non-document');}).join('');});var diffResult=diff(strings[0],strings[1]);var thisIter=op.iterator(this.ops);var otherIter=op.iterator(other.ops);diffResult.forEach(function(component){var length=component[1].length;while(length>0){var opLength=0;switch(component[0]){case diff.INSERT:opLength=Math.min(otherIter.peekLength(),length);delta.push(otherIter.next(opLength));break;case diff.DELETE:opLength=Math.min(length,thisIter.peekLength());thisIter.next(opLength);delta['delete'](opLength);break;case diff.EQUAL:opLength=Math.min(thisIter.peekLength(),otherIter.peekLength(),length);var thisOp=thisIter.next(opLength);var otherOp=otherIter.next(opLength);if(equal(thisOp.insert,otherOp.insert)){delta.retain(opLength,op.attributes.diff(thisOp.attributes,otherOp.attributes));}else{delta.push(otherOp)['delete'](opLength);}break;}length-=opLength;}});return delta.chop();};Delta.prototype.transform=function(other,priority){priority=!!priority;if(typeof other==='number'){return this.transformPosition(other,priority);}var thisIter=op.iterator(this.ops);var otherIter=op.iterator(other.ops);var delta=new Delta();while(thisIter.hasNext()||otherIter.hasNext()){if(thisIter.peekType()==='insert'&&(priority||otherIter.peekType()!=='insert')){delta.retain(op.length(thisIter.next()));}else if(otherIter.peekType()==='insert'){delta.push(otherIter.next());}else{var length=Math.min(thisIter.peekLength(),otherIter.peekLength());var thisOp=thisIter.next(length);var otherOp=otherIter.next(length);if(thisOp['delete']){// Our delete either makes their delete redundant or removes their retain
	continue;}else if(otherOp['delete']){delta.push(otherOp);}else{// We retain either their retain or insert
	delta.retain(length,op.attributes.transform(thisOp.attributes,otherOp.attributes,priority));}}}return delta.chop();};Delta.prototype.transformPosition=function(index,priority){priority=!!priority;var thisIter=op.iterator(this.ops);var offset=0;while(thisIter.hasNext()&&offset<=index){var length=thisIter.peekLength();var nextType=thisIter.peekType();thisIter.next();if(nextType==='delete'){index-=Math.min(length,index-offset);continue;}else if(nextType==='insert'&&(offset<index||!priority)){index+=length;}offset+=length;}return index;};module.exports=Delta;/***/},/* 21 *//***/function(module,exports){/**
		 * This library modifies the diff-patch-match library by Neil Fraser
		 * by removing the patch and match functionality and certain advanced
		 * options in the diff function. The original license is as follows:
		 *
		 * ===
		 *
		 * Diff Match and Patch
		 *
		 * Copyright 2006 Google Inc.
		 * http://code.google.com/p/google-diff-match-patch/
		 *
		 * Licensed under the Apache License, Version 2.0 (the "License");
		 * you may not use this file except in compliance with the License.
		 * You may obtain a copy of the License at
		 *
		 *   http://www.apache.org/licenses/LICENSE-2.0
		 *
		 * Unless required by applicable law or agreed to in writing, software
		 * distributed under the License is distributed on an "AS IS" BASIS,
		 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
		 * See the License for the specific language governing permissions and
		 * limitations under the License.
		 *//**
		 * The data structure representing a diff is an array of tuples:
		 * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]
		 * which means: delete 'Hello', add 'Goodbye' and keep ' world.'
		 */var DIFF_DELETE=-1;var DIFF_INSERT=1;var DIFF_EQUAL=0;/**
		 * Find the differences between two texts.  Simplifies the problem by stripping
		 * any common prefix or suffix off the texts before diffing.
		 * @param {string} text1 Old string to be diffed.
		 * @param {string} text2 New string to be diffed.
		 * @return {Array} Array of diff tuples.
		 */function diff_main(text1,text2){// Check for equality (speedup).
	if(text1==text2){if(text1){return[[DIFF_EQUAL,text1]];}return[];}// Trim off common prefix (speedup).
	var commonlength=diff_commonPrefix(text1,text2);var commonprefix=text1.substring(0,commonlength);text1=text1.substring(commonlength);text2=text2.substring(commonlength);// Trim off common suffix (speedup).
	commonlength=diff_commonSuffix(text1,text2);var commonsuffix=text1.substring(text1.length-commonlength);text1=text1.substring(0,text1.length-commonlength);text2=text2.substring(0,text2.length-commonlength);// Compute the diff on the middle block.
	var diffs=diff_compute_(text1,text2);// Restore the prefix and suffix.
	if(commonprefix){diffs.unshift([DIFF_EQUAL,commonprefix]);}if(commonsuffix){diffs.push([DIFF_EQUAL,commonsuffix]);}diff_cleanupMerge(diffs);return diffs;};/**
		 * Find the differences between two texts.  Assumes that the texts do not
		 * have any common prefix or suffix.
		 * @param {string} text1 Old string to be diffed.
		 * @param {string} text2 New string to be diffed.
		 * @return {Array} Array of diff tuples.
		 */function diff_compute_(text1,text2){var diffs;if(!text1){// Just add some text (speedup).
	return[[DIFF_INSERT,text2]];}if(!text2){// Just delete some text (speedup).
	return[[DIFF_DELETE,text1]];}var longtext=text1.length>text2.length?text1:text2;var shorttext=text1.length>text2.length?text2:text1;var i=longtext.indexOf(shorttext);if(i!=-1){// Shorter text is inside the longer text (speedup).
	diffs=[[DIFF_INSERT,longtext.substring(0,i)],[DIFF_EQUAL,shorttext],[DIFF_INSERT,longtext.substring(i+shorttext.length)]];// Swap insertions for deletions if diff is reversed.
	if(text1.length>text2.length){diffs[0][0]=diffs[2][0]=DIFF_DELETE;}return diffs;}if(shorttext.length==1){// Single character string.
	// After the previous speedup, the character can't be an equality.
	return[[DIFF_DELETE,text1],[DIFF_INSERT,text2]];}// Check to see if the problem can be split in two.
	var hm=diff_halfMatch_(text1,text2);if(hm){// A half-match was found, sort out the return data.
	var text1_a=hm[0];var text1_b=hm[1];var text2_a=hm[2];var text2_b=hm[3];var mid_common=hm[4];// Send both pairs off for separate processing.
	var diffs_a=diff_main(text1_a,text2_a);var diffs_b=diff_main(text1_b,text2_b);// Merge the results.
	return diffs_a.concat([[DIFF_EQUAL,mid_common]],diffs_b);}return diff_bisect_(text1,text2);};/**
		 * Find the 'middle snake' of a diff, split the problem in two
		 * and return the recursively constructed diff.
		 * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.
		 * @param {string} text1 Old string to be diffed.
		 * @param {string} text2 New string to be diffed.
		 * @return {Array} Array of diff tuples.
		 * @private
		 */function diff_bisect_(text1,text2){// Cache the text lengths to prevent multiple calls.
	var text1_length=text1.length;var text2_length=text2.length;var max_d=Math.ceil((text1_length+text2_length)/2);var v_offset=max_d;var v_length=2*max_d;var v1=new Array(v_length);var v2=new Array(v_length);// Setting all elements to -1 is faster in Chrome & Firefox than mixing
	// integers and undefined.
	for(var x=0;x<v_length;x++){v1[x]=-1;v2[x]=-1;}v1[v_offset+1]=0;v2[v_offset+1]=0;var delta=text1_length-text2_length;// If the total number of characters is odd, then the front path will collide
	// with the reverse path.
	var front=delta%2!=0;// Offsets for start and end of k loop.
	// Prevents mapping of space beyond the grid.
	var k1start=0;var k1end=0;var k2start=0;var k2end=0;for(var d=0;d<max_d;d++){// Walk the front path one step.
	for(var k1=-d+k1start;k1<=d-k1end;k1+=2){var k1_offset=v_offset+k1;var x1;if(k1==-d||k1!=d&&v1[k1_offset-1]<v1[k1_offset+1]){x1=v1[k1_offset+1];}else{x1=v1[k1_offset-1]+1;}var y1=x1-k1;while(x1<text1_length&&y1<text2_length&&text1.charAt(x1)==text2.charAt(y1)){x1++;y1++;}v1[k1_offset]=x1;if(x1>text1_length){// Ran off the right of the graph.
	k1end+=2;}else if(y1>text2_length){// Ran off the bottom of the graph.
	k1start+=2;}else if(front){var k2_offset=v_offset+delta-k1;if(k2_offset>=0&&k2_offset<v_length&&v2[k2_offset]!=-1){// Mirror x2 onto top-left coordinate system.
	var x2=text1_length-v2[k2_offset];if(x1>=x2){// Overlap detected.
	return diff_bisectSplit_(text1,text2,x1,y1);}}}}// Walk the reverse path one step.
	for(var k2=-d+k2start;k2<=d-k2end;k2+=2){var k2_offset=v_offset+k2;var x2;if(k2==-d||k2!=d&&v2[k2_offset-1]<v2[k2_offset+1]){x2=v2[k2_offset+1];}else{x2=v2[k2_offset-1]+1;}var y2=x2-k2;while(x2<text1_length&&y2<text2_length&&text1.charAt(text1_length-x2-1)==text2.charAt(text2_length-y2-1)){x2++;y2++;}v2[k2_offset]=x2;if(x2>text1_length){// Ran off the left of the graph.
	k2end+=2;}else if(y2>text2_length){// Ran off the top of the graph.
	k2start+=2;}else if(!front){var k1_offset=v_offset+delta-k2;if(k1_offset>=0&&k1_offset<v_length&&v1[k1_offset]!=-1){var x1=v1[k1_offset];var y1=v_offset+x1-k1_offset;// Mirror x2 onto top-left coordinate system.
	x2=text1_length-x2;if(x1>=x2){// Overlap detected.
	return diff_bisectSplit_(text1,text2,x1,y1);}}}}}// Diff took too long and hit the deadline or
	// number of diffs equals number of characters, no commonality at all.
	return[[DIFF_DELETE,text1],[DIFF_INSERT,text2]];};/**
		 * Given the location of the 'middle snake', split the diff in two parts
		 * and recurse.
		 * @param {string} text1 Old string to be diffed.
		 * @param {string} text2 New string to be diffed.
		 * @param {number} x Index of split point in text1.
		 * @param {number} y Index of split point in text2.
		 * @return {Array} Array of diff tuples.
		 */function diff_bisectSplit_(text1,text2,x,y){var text1a=text1.substring(0,x);var text2a=text2.substring(0,y);var text1b=text1.substring(x);var text2b=text2.substring(y);// Compute both diffs serially.
	var diffs=diff_main(text1a,text2a);var diffsb=diff_main(text1b,text2b);return diffs.concat(diffsb);};/**
		 * Determine the common prefix of two strings.
		 * @param {string} text1 First string.
		 * @param {string} text2 Second string.
		 * @return {number} The number of characters common to the start of each
		 *     string.
		 */function diff_commonPrefix(text1,text2){// Quick check for common null cases.
	if(!text1||!text2||text1.charAt(0)!=text2.charAt(0)){return 0;}// Binary search.
	// Performance analysis: http://neil.fraser.name/news/2007/10/09/
	var pointermin=0;var pointermax=Math.min(text1.length,text2.length);var pointermid=pointermax;var pointerstart=0;while(pointermin<pointermid){if(text1.substring(pointerstart,pointermid)==text2.substring(pointerstart,pointermid)){pointermin=pointermid;pointerstart=pointermin;}else{pointermax=pointermid;}pointermid=Math.floor((pointermax-pointermin)/2+pointermin);}return pointermid;};/**
		 * Determine the common suffix of two strings.
		 * @param {string} text1 First string.
		 * @param {string} text2 Second string.
		 * @return {number} The number of characters common to the end of each string.
		 */function diff_commonSuffix(text1,text2){// Quick check for common null cases.
	if(!text1||!text2||text1.charAt(text1.length-1)!=text2.charAt(text2.length-1)){return 0;}// Binary search.
	// Performance analysis: http://neil.fraser.name/news/2007/10/09/
	var pointermin=0;var pointermax=Math.min(text1.length,text2.length);var pointermid=pointermax;var pointerend=0;while(pointermin<pointermid){if(text1.substring(text1.length-pointermid,text1.length-pointerend)==text2.substring(text2.length-pointermid,text2.length-pointerend)){pointermin=pointermid;pointerend=pointermin;}else{pointermax=pointermid;}pointermid=Math.floor((pointermax-pointermin)/2+pointermin);}return pointermid;};/**
		 * Do the two texts share a substring which is at least half the length of the
		 * longer text?
		 * This speedup can produce non-minimal diffs.
		 * @param {string} text1 First string.
		 * @param {string} text2 Second string.
		 * @return {Array.<string>} Five element Array, containing the prefix of
		 *     text1, the suffix of text1, the prefix of text2, the suffix of
		 *     text2 and the common middle.  Or null if there was no match.
		 */function diff_halfMatch_(text1,text2){var longtext=text1.length>text2.length?text1:text2;var shorttext=text1.length>text2.length?text2:text1;if(longtext.length<4||shorttext.length*2<longtext.length){return null;// Pointless.
	}/**
		   * Does a substring of shorttext exist within longtext such that the substring
		   * is at least half the length of longtext?
		   * Closure, but does not reference any external variables.
		   * @param {string} longtext Longer string.
		   * @param {string} shorttext Shorter string.
		   * @param {number} i Start index of quarter length substring within longtext.
		   * @return {Array.<string>} Five element Array, containing the prefix of
		   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix
		   *     of shorttext and the common middle.  Or null if there was no match.
		   * @private
		   */function diff_halfMatchI_(longtext,shorttext,i){// Start with a 1/4 length substring at position i as a seed.
	var seed=longtext.substring(i,i+Math.floor(longtext.length/4));var j=-1;var best_common='';var best_longtext_a,best_longtext_b,best_shorttext_a,best_shorttext_b;while((j=shorttext.indexOf(seed,j+1))!=-1){var prefixLength=diff_commonPrefix(longtext.substring(i),shorttext.substring(j));var suffixLength=diff_commonSuffix(longtext.substring(0,i),shorttext.substring(0,j));if(best_common.length<suffixLength+prefixLength){best_common=shorttext.substring(j-suffixLength,j)+shorttext.substring(j,j+prefixLength);best_longtext_a=longtext.substring(0,i-suffixLength);best_longtext_b=longtext.substring(i+prefixLength);best_shorttext_a=shorttext.substring(0,j-suffixLength);best_shorttext_b=shorttext.substring(j+prefixLength);}}if(best_common.length*2>=longtext.length){return[best_longtext_a,best_longtext_b,best_shorttext_a,best_shorttext_b,best_common];}else{return null;}}// First check if the second quarter is the seed for a half-match.
	var hm1=diff_halfMatchI_(longtext,shorttext,Math.ceil(longtext.length/4));// Check again based on the third quarter.
	var hm2=diff_halfMatchI_(longtext,shorttext,Math.ceil(longtext.length/2));var hm;if(!hm1&&!hm2){return null;}else if(!hm2){hm=hm1;}else if(!hm1){hm=hm2;}else{// Both matched.  Select the longest.
	hm=hm1[4].length>hm2[4].length?hm1:hm2;}// A half-match was found, sort out the return data.
	var text1_a,text1_b,text2_a,text2_b;if(text1.length>text2.length){text1_a=hm[0];text1_b=hm[1];text2_a=hm[2];text2_b=hm[3];}else{text2_a=hm[0];text2_b=hm[1];text1_a=hm[2];text1_b=hm[3];}var mid_common=hm[4];return[text1_a,text1_b,text2_a,text2_b,mid_common];};/**
		 * Reorder and merge like edit sections.  Merge equalities.
		 * Any edit section can move as long as it doesn't cross an equality.
		 * @param {Array} diffs Array of diff tuples.
		 */function diff_cleanupMerge(diffs){diffs.push([DIFF_EQUAL,'']);// Add a dummy entry at the end.
	var pointer=0;var count_delete=0;var count_insert=0;var text_delete='';var text_insert='';var commonlength;while(pointer<diffs.length){switch(diffs[pointer][0]){case DIFF_INSERT:count_insert++;text_insert+=diffs[pointer][1];pointer++;break;case DIFF_DELETE:count_delete++;text_delete+=diffs[pointer][1];pointer++;break;case DIFF_EQUAL:// Upon reaching an equality, check for prior redundancies.
	if(count_delete+count_insert>1){if(count_delete!==0&&count_insert!==0){// Factor out any common prefixies.
	commonlength=diff_commonPrefix(text_insert,text_delete);if(commonlength!==0){if(pointer-count_delete-count_insert>0&&diffs[pointer-count_delete-count_insert-1][0]==DIFF_EQUAL){diffs[pointer-count_delete-count_insert-1][1]+=text_insert.substring(0,commonlength);}else{diffs.splice(0,0,[DIFF_EQUAL,text_insert.substring(0,commonlength)]);pointer++;}text_insert=text_insert.substring(commonlength);text_delete=text_delete.substring(commonlength);}// Factor out any common suffixies.
	commonlength=diff_commonSuffix(text_insert,text_delete);if(commonlength!==0){diffs[pointer][1]=text_insert.substring(text_insert.length-commonlength)+diffs[pointer][1];text_insert=text_insert.substring(0,text_insert.length-commonlength);text_delete=text_delete.substring(0,text_delete.length-commonlength);}}// Delete the offending records and add the merged ones.
	if(count_delete===0){diffs.splice(pointer-count_insert,count_delete+count_insert,[DIFF_INSERT,text_insert]);}else if(count_insert===0){diffs.splice(pointer-count_delete,count_delete+count_insert,[DIFF_DELETE,text_delete]);}else{diffs.splice(pointer-count_delete-count_insert,count_delete+count_insert,[DIFF_DELETE,text_delete],[DIFF_INSERT,text_insert]);}pointer=pointer-count_delete-count_insert+(count_delete?1:0)+(count_insert?1:0)+1;}else if(pointer!==0&&diffs[pointer-1][0]==DIFF_EQUAL){// Merge this equality with the previous one.
	diffs[pointer-1][1]+=diffs[pointer][1];diffs.splice(pointer,1);}else{pointer++;}count_insert=0;count_delete=0;text_delete='';text_insert='';break;}}if(diffs[diffs.length-1][1]===''){diffs.pop();// Remove the dummy entry at the end.
	}// Second pass: look for single edits surrounded on both sides by equalities
	// which can be shifted sideways to eliminate an equality.
	// e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC
	var changes=false;pointer=1;// Intentionally ignore the first and last element (don't need checking).
	while(pointer<diffs.length-1){if(diffs[pointer-1][0]==DIFF_EQUAL&&diffs[pointer+1][0]==DIFF_EQUAL){// This is a single edit surrounded by equalities.
	if(diffs[pointer][1].substring(diffs[pointer][1].length-diffs[pointer-1][1].length)==diffs[pointer-1][1]){// Shift the edit over the previous equality.
	diffs[pointer][1]=diffs[pointer-1][1]+diffs[pointer][1].substring(0,diffs[pointer][1].length-diffs[pointer-1][1].length);diffs[pointer+1][1]=diffs[pointer-1][1]+diffs[pointer+1][1];diffs.splice(pointer-1,1);changes=true;}else if(diffs[pointer][1].substring(0,diffs[pointer+1][1].length)==diffs[pointer+1][1]){// Shift the edit over the next equality.
	diffs[pointer-1][1]+=diffs[pointer+1][1];diffs[pointer][1]=diffs[pointer][1].substring(diffs[pointer+1][1].length)+diffs[pointer+1][1];diffs.splice(pointer+1,1);changes=true;}}pointer++;}// If shifts were made, the diff needs reordering and another shift sweep.
	if(changes){diff_cleanupMerge(diffs);}};var diff=diff_main;diff.INSERT=DIFF_INSERT;diff.DELETE=DIFF_DELETE;diff.EQUAL=DIFF_EQUAL;module.exports=diff;/***/},/* 22 *//***/function(module,exports,__webpack_require__){var pSlice=Array.prototype.slice;var objectKeys=__webpack_require__(23);var isArguments=__webpack_require__(24);var deepEqual=module.exports=function(actual,expected,opts){if(!opts)opts={};// 7.1. All identical values are equivalent, as determined by ===.
	if(actual===expected){return true;}else if(actual instanceof Date&&expected instanceof Date){return actual.getTime()===expected.getTime();// 7.3. Other pairs that do not both pass typeof value == 'object',
	// equivalence is determined by ==.
	}else if(!actual||!expected||(typeof actual==='undefined'?'undefined':_typeof2(actual))!='object'&&(typeof expected==='undefined'?'undefined':_typeof2(expected))!='object'){return opts.strict?actual===expected:actual==expected;// 7.4. For all other Object pairs, including Array objects, equivalence is
	// determined by having the same number of owned properties (as verified
	// with Object.prototype.hasOwnProperty.call), the same set of keys
	// (although not necessarily the same order), equivalent values for every
	// corresponding key, and an identical 'prototype' property. Note: this
	// accounts for both named and indexed properties on Arrays.
	}else{return objEquiv(actual,expected,opts);}};function isUndefinedOrNull(value){return value===null||value===undefined;}function isBuffer(x){if(!x||(typeof x==='undefined'?'undefined':_typeof2(x))!=='object'||typeof x.length!=='number')return false;if(typeof x.copy!=='function'||typeof x.slice!=='function'){return false;}if(x.length>0&&typeof x[0]!=='number')return false;return true;}function objEquiv(a,b,opts){var i,key;if(isUndefinedOrNull(a)||isUndefinedOrNull(b))return false;// an identical 'prototype' property.
	if(a.prototype!==b.prototype)return false;//~~~I've managed to break Object.keys through screwy arguments passing.
	//   Converting to array solves the problem.
	if(isArguments(a)){if(!isArguments(b)){return false;}a=pSlice.call(a);b=pSlice.call(b);return deepEqual(a,b,opts);}if(isBuffer(a)){if(!isBuffer(b)){return false;}if(a.length!==b.length)return false;for(i=0;i<a.length;i++){if(a[i]!==b[i])return false;}return true;}try{var ka=objectKeys(a),kb=objectKeys(b);}catch(e){//happens when one is a string literal and the other isn't
	return false;}// having the same number of owned properties (keys incorporates
	// hasOwnProperty)
	if(ka.length!=kb.length)return false;//the same set of keys (although not necessarily the same order),
	ka.sort();kb.sort();//~~~cheap key test
	for(i=ka.length-1;i>=0;i--){if(ka[i]!=kb[i])return false;}//equivalent values for every corresponding key, and
	//~~~possibly expensive deep test
	for(i=ka.length-1;i>=0;i--){key=ka[i];if(!deepEqual(a[key],b[key],opts))return false;}return(typeof a==='undefined'?'undefined':_typeof2(a))===(typeof b==='undefined'?'undefined':_typeof2(b));}/***/},/* 23 *//***/function(module,exports){exports=module.exports=typeof Object.keys==='function'?Object.keys:shim;exports.shim=shim;function shim(obj){var keys=[];for(var key in obj){keys.push(key);}return keys;}/***/},/* 24 *//***/function(module,exports){var supportsArgumentsClass=function(){return Object.prototype.toString.call(arguments);}()=='[object Arguments]';exports=module.exports=supportsArgumentsClass?supported:unsupported;exports.supported=supported;function supported(object){return Object.prototype.toString.call(object)=='[object Arguments]';};exports.unsupported=unsupported;function unsupported(object){return object&&(typeof object==='undefined'?'undefined':_typeof2(object))=='object'&&typeof object.length=='number'&&Object.prototype.hasOwnProperty.call(object,'callee')&&!Object.prototype.propertyIsEnumerable.call(object,'callee')||false;};/***/},/* 25 *//***/function(module,exports){'use strict';var hasOwn=Object.prototype.hasOwnProperty;var toStr=Object.prototype.toString;var isArray=function isArray(arr){if(typeof Array.isArray==='function'){return Array.isArray(arr);}return toStr.call(arr)==='[object Array]';};var isPlainObject=function isPlainObject(obj){if(!obj||toStr.call(obj)!=='[object Object]'){return false;}var hasOwnConstructor=hasOwn.call(obj,'constructor');var hasIsPrototypeOf=obj.constructor&&obj.constructor.prototype&&hasOwn.call(obj.constructor.prototype,'isPrototypeOf');// Not own constructor property must be Object
	if(obj.constructor&&!hasOwnConstructor&&!hasIsPrototypeOf){return false;}// Own properties are enumerated firstly, so to speed up,
	// if last one is own, then all properties are own.
	var key;for(key in obj){/**/}return typeof key==='undefined'||hasOwn.call(obj,key);};module.exports=function extend(){var options,name,src,copy,copyIsArray,clone,target=arguments[0],i=1,length=arguments.length,deep=false;// Handle a deep copy situation
	if(typeof target==='boolean'){deep=target;target=arguments[1]||{};// skip the boolean and the target
	i=2;}else if((typeof target==='undefined'?'undefined':_typeof2(target))!=='object'&&typeof target!=='function'||target==null){target={};}for(;i<length;++i){options=arguments[i];// Only deal with non-null/undefined values
	if(options!=null){// Extend the base object
	for(name in options){src=target[name];copy=options[name];// Prevent never-ending loop
	if(target!==copy){// Recurse if we're merging plain objects or arrays
	if(deep&&copy&&(isPlainObject(copy)||(copyIsArray=isArray(copy)))){if(copyIsArray){copyIsArray=false;clone=src&&isArray(src)?src:[];}else{clone=src&&isPlainObject(src)?src:{};}// Never move original objects, clone them
	target[name]=extend(deep,clone,copy);// Don't bring in undefined values
	}else if(typeof copy!=='undefined'){target[name]=copy;}}}}}// Return the modified object
	return target;};/***/},/* 26 *//***/function(module,exports,__webpack_require__){var equal=__webpack_require__(22);var extend=__webpack_require__(25);var lib={attributes:{compose:function compose(a,b,keepNull){if((typeof a==='undefined'?'undefined':_typeof2(a))!=='object')a={};if((typeof b==='undefined'?'undefined':_typeof2(b))!=='object')b={};var attributes=extend(true,{},b);if(!keepNull){attributes=Object.keys(attributes).reduce(function(copy,key){if(attributes[key]!=null){copy[key]=attributes[key];}return copy;},{});}for(var key in a){if(a[key]!==undefined&&b[key]===undefined){attributes[key]=a[key];}}return Object.keys(attributes).length>0?attributes:undefined;},diff:function diff(a,b){if((typeof a==='undefined'?'undefined':_typeof2(a))!=='object')a={};if((typeof b==='undefined'?'undefined':_typeof2(b))!=='object')b={};var attributes=Object.keys(a).concat(Object.keys(b)).reduce(function(attributes,key){if(!equal(a[key],b[key])){attributes[key]=b[key]===undefined?null:b[key];}return attributes;},{});return Object.keys(attributes).length>0?attributes:undefined;},transform:function transform(a,b,priority){if((typeof a==='undefined'?'undefined':_typeof2(a))!=='object')return b;if((typeof b==='undefined'?'undefined':_typeof2(b))!=='object')return undefined;if(!priority)return b;// b simply overwrites us without priority
	var attributes=Object.keys(b).reduce(function(attributes,key){if(a[key]===undefined)attributes[key]=b[key];// null is a valid value
	return attributes;},{});return Object.keys(attributes).length>0?attributes:undefined;}},iterator:function iterator(ops){return new Iterator(ops);},length:function length(op){if(typeof op['delete']==='number'){return op['delete'];}else if(typeof op.retain==='number'){return op.retain;}else{return typeof op.insert==='string'?op.insert.length:1;}}};function Iterator(ops){this.ops=ops;this.index=0;this.offset=0;};Iterator.prototype.hasNext=function(){return this.peekLength()<Infinity;};Iterator.prototype.next=function(length){if(!length)length=Infinity;var nextOp=this.ops[this.index];if(nextOp){var offset=this.offset;var opLength=lib.length(nextOp);if(length>=opLength-offset){length=opLength-offset;this.index+=1;this.offset=0;}else{this.offset+=length;}if(typeof nextOp['delete']==='number'){return{'delete':length};}else{var retOp={};if(nextOp.attributes){retOp.attributes=nextOp.attributes;}if(typeof nextOp.retain==='number'){retOp.retain=length;}else if(typeof nextOp.insert==='string'){retOp.insert=nextOp.insert.substr(offset,length);}else{// offset should === 0, length should === 1
	retOp.insert=nextOp.insert;}return retOp;}}else{return{retain:Infinity};}};Iterator.prototype.peekLength=function(){if(this.ops[this.index]){// Should never return 0 if our index is being managed correctly
	return lib.length(this.ops[this.index])-this.offset;}else{return Infinity;}};Iterator.prototype.peekType=function(){if(this.ops[this.index]){if(typeof this.ops[this.index]['delete']==='number'){return'delete';}else if(typeof this.ops[this.index].retain==='number'){return'retain';}else{return'insert';}}return'retain';};module.exports=lib;/***/},/* 27 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _typeof=typeof Symbol==="function"&&_typeof2(Symbol.iterator)==="symbol"?function(obj){return typeof obj==='undefined'?'undefined':_typeof2(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj==='undefined'?'undefined':_typeof2(obj);};var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _delta=__webpack_require__(20);var _delta2=_interopRequireDefault(_delta);var _op=__webpack_require__(26);var _op2=_interopRequireDefault(_op);var _emitter3=__webpack_require__(28);var _emitter4=_interopRequireDefault(_emitter3);var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _code=__webpack_require__(31);var _code2=_interopRequireDefault(_code);var _cursor=__webpack_require__(37);var _cursor2=_interopRequireDefault(_cursor);var _block=__webpack_require__(32);var _block2=_interopRequireDefault(_block);var _clone=__webpack_require__(38);var _clone2=_interopRequireDefault(_clone);var _deepEqual=__webpack_require__(22);var _deepEqual2=_interopRequireDefault(_deepEqual);var _extend=__webpack_require__(25);var _extend2=_interopRequireDefault(_extend);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Editor=function(){function Editor(scroll,emitter){_classCallCheck(this,Editor);this.scroll=scroll;this.emitter=emitter;this.emitter.on(_emitter4.default.events.SCROLL_UPDATE,this.update.bind(this,null));this.delta=this.getDelta();this.enable();}_createClass(Editor,[{key:'applyDelta',value:function applyDelta(delta){var _this=this;var source=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_emitter4.default.sources.API;var consumeNextNewline=false;this.scroll.update();var scrollLength=this.scroll.length();this.scroll.batch=true;delta=normalizeDelta(delta);delta.ops.reduce(function(index,op){var length=op.retain||op.delete||op.insert.length||1;var attributes=op.attributes||{};if(op.insert!=null){if(typeof op.insert==='string'){var text=op.insert;if(text.endsWith('\n')&&consumeNextNewline){consumeNextNewline=false;text=text.slice(0,-1);}if(index>=scrollLength&&!text.endsWith('\n')){consumeNextNewline=true;}_this.scroll.insertAt(index,text);var _scroll$line=_this.scroll.line(index);var _scroll$line2=_slicedToArray(_scroll$line,2);var line=_scroll$line2[0];var offset=_scroll$line2[1];var formats=(0,_extend2.default)({},(0,_block.bubbleFormats)(line));if(line instanceof _block2.default){var _line$descendant=line.descendant(_parchment2.default.Leaf,offset);var _line$descendant2=_slicedToArray(_line$descendant,1);var leaf=_line$descendant2[0];formats=(0,_extend2.default)(formats,(0,_block.bubbleFormats)(leaf));}attributes=_op2.default.attributes.diff(formats,attributes)||{};}else if(_typeof(op.insert)==='object'){var key=Object.keys(op.insert)[0];// There should only be one key
	if(key==null)return index;_this.scroll.insertAt(index,key,op.insert[key]);}scrollLength+=length;}Object.keys(attributes).forEach(function(name){_this.scroll.formatAt(index,length,name,attributes[name]);});return index+length;},0);delta.ops.reduce(function(index,op){if(typeof op.delete==='number'){_this.scroll.deleteAt(index,op.delete);return index;}return index+(op.retain||op.insert.length||1);},0);this.scroll.batch=false;this.scroll.optimize();return this.update(delta,source);}},{key:'deleteText',value:function deleteText(index,length){var source=arguments.length>2&&arguments[2]!==undefined?arguments[2]:_emitter4.default.sources.API;this.scroll.deleteAt(index,length);return this.update(new _delta2.default().retain(index).delete(length),source);}},{key:'enable',value:function enable(){var enabled=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;this.scroll.domNode.setAttribute('contenteditable',enabled);}},{key:'formatLine',value:function formatLine(index,length){var _this2=this;var formats=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var source=arguments.length>3&&arguments[3]!==undefined?arguments[3]:_emitter4.default.sources.API;this.scroll.update();Object.keys(formats).forEach(function(format){var lines=_this2.scroll.lines(index,Math.max(length,1));var lengthRemaining=length;lines.forEach(function(line,i){var lineLength=line.length();if(!(line instanceof _code2.default)){line.format(format,formats[format]);}else{var codeIndex=index-line.offset(_this2.scroll);var codeLength=line.newlineIndex(codeIndex+lengthRemaining)-codeIndex+1;line.formatAt(codeIndex,codeLength,format,formats[format]);}lengthRemaining-=lineLength;});});this.scroll.optimize();return this.update(new _delta2.default().retain(index).retain(length,(0,_clone2.default)(formats)),source);}},{key:'formatText',value:function formatText(index,length){var _this3=this;var formats=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var source=arguments.length>3&&arguments[3]!==undefined?arguments[3]:_emitter4.default.sources.API;Object.keys(formats).forEach(function(format){_this3.scroll.formatAt(index,length,format,formats[format]);});return this.update(new _delta2.default().retain(index).retain(length,(0,_clone2.default)(formats)),source);}},{key:'getContents',value:function getContents(index,length){return this.delta.slice(index,index+length);}},{key:'getDelta',value:function getDelta(){return this.scroll.lines().reduce(function(delta,line){return delta.concat(line.delta());},new _delta2.default());}},{key:'getFormat',value:function getFormat(index){var length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var lines=[],leaves=[];if(length===0){this.scroll.path(index).forEach(function(path){var _path=_slicedToArray(path,1);var blot=_path[0];if(blot instanceof _block2.default){lines.push(blot);}else if(blot instanceof _parchment2.default.Leaf){leaves.push(blot);}});}else{lines=this.scroll.lines(index,length);leaves=this.scroll.descendants(_parchment2.default.Leaf,index,length);}var formatsArr=[lines,leaves].map(function(blots){if(blots.length===0)return{};var formats=(0,_block.bubbleFormats)(blots.shift());while(Object.keys(formats).length>0){var blot=blots.shift();if(blot==null)return formats;formats=combineFormats((0,_block.bubbleFormats)(blot),formats);}return formats;});return _extend2.default.apply(_extend2.default,formatsArr);}},{key:'getText',value:function getText(index,length){return this.getContents(index,length).ops.map(function(op){return typeof op.insert==='string'?op.insert:'';}).join('');}},{key:'insertEmbed',value:function insertEmbed(index,embed,value){var source=arguments.length>3&&arguments[3]!==undefined?arguments[3]:_emitter4.default.sources.API;this.scroll.insertAt(index,embed,value);return this.update(new _delta2.default().retain(index).insert(_defineProperty({},embed,value)),source);}},{key:'insertText',value:function insertText(index,text){var _this4=this;var formats=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var source=arguments.length>3&&arguments[3]!==undefined?arguments[3]:_emitter4.default.sources.API;text=text.replace(/\r\n/g,'\n').replace(/\r/g,'\n');this.scroll.insertAt(index,text);Object.keys(formats).forEach(function(format){_this4.scroll.formatAt(index,text.length,format,formats[format]);});return this.update(new _delta2.default().retain(index).insert(text,(0,_clone2.default)(formats)),source);}},{key:'isBlank',value:function isBlank(){if(this.scroll.children.length==0)return true;if(this.scroll.children.length>1)return false;var child=this.scroll.children.head;return child.length()<=1&&Object.keys(child.formats()).length==0;}},{key:'removeFormat',value:function removeFormat(index,length,source){var text=this.getText(index,length);var _scroll$line3=this.scroll.line(index+length);var _scroll$line4=_slicedToArray(_scroll$line3,2);var line=_scroll$line4[0];var offset=_scroll$line4[1];var suffixLength=0,suffix=new _delta2.default();if(line!=null){if(!(line instanceof _code2.default)){suffixLength=line.length()-offset;}else{suffixLength=line.newlineIndex(offset)-offset+1;}suffix=line.delta().slice(offset,offset+suffixLength-1).insert('\n');}var contents=this.getContents(index,length+suffixLength);var diff=contents.diff(new _delta2.default().insert(text).concat(suffix));var delta=new _delta2.default().retain(index).concat(diff);return this.applyDelta(delta,source);}},{key:'update',value:function update(change){var _this5=this;var source=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_emitter4.default.sources.USER;var mutations=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var oldDelta=this.delta;if(mutations.length===1&&mutations[0].type==='characterData'&&_parchment2.default.find(mutations[0].target)){(function(){// Optimization for character changes
	var textBlot=_parchment2.default.find(mutations[0].target);var formats=(0,_block.bubbleFormats)(textBlot);var index=textBlot.offset(_this5.scroll);var oldValue=mutations[0].oldValue.replace(_cursor2.default.CONTENTS,'');var oldText=new _delta2.default().insert(oldValue);var newText=new _delta2.default().insert(textBlot.value());var diffDelta=new _delta2.default().retain(index).concat(oldText.diff(newText));change=diffDelta.ops.reduce(function(delta,op){if(op.insert){return delta.insert(op.insert,formats);}else{return delta.push(op);}},new _delta2.default());_this5.delta=oldDelta.compose(change);})();}else{this.delta=this.getDelta();if(!change||!(0,_deepEqual2.default)(oldDelta.compose(change),this.delta)){change=oldDelta.diff(this.delta);}}if(change.length()>0){var _emitter;var args=[_emitter4.default.events.TEXT_CHANGE,change,oldDelta,source];(_emitter=this.emitter).emit.apply(_emitter,[_emitter4.default.events.EDITOR_CHANGE].concat(args));if(source!==_emitter4.default.sources.SILENT){var _emitter2;(_emitter2=this.emitter).emit.apply(_emitter2,args);}}return change;}}]);return Editor;}();function combineFormats(formats,combined){return Object.keys(combined).reduce(function(merged,name){if(formats[name]==null)return merged;if(combined[name]===formats[name]){merged[name]=combined[name];}else if(Array.isArray(combined[name])){if(combined[name].indexOf(formats[name])<0){merged[name]=combined[name].concat([formats[name]]);}}else{merged[name]=[combined[name],formats[name]];}return merged;},{});}function normalizeDelta(delta){return delta.ops.reduce(function(delta,op){if(op.insert===1){var attributes=(0,_clone2.default)(op.attributes);delete attributes['image'];return delta.insert({image:op.attributes.image},attributes);}if(op.attributes!=null&&(op.attributes.list===true||op.attributes.bullet===true)){op=(0,_clone2.default)(op);if(op.attributes.list){op.attributes.list='ordered';}else{op.attributes.list='bullet';delete op.attributes.bullet;}}if(typeof op.insert==='string'){var text=op.insert.replace(/\r\n/g,'\n').replace(/\r/g,'\n');return delta.insert(text,op.attributes);}return delta.push(op);},new _delta2.default());}exports.default=Editor;/***/},/* 28 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _eventemitter=__webpack_require__(29);var _eventemitter2=_interopRequireDefault(_eventemitter);var _logger=__webpack_require__(30);var _logger2=_interopRequireDefault(_logger);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var debug=(0,_logger2.default)('quill:events');var Emitter=function(_EventEmitter){_inherits(Emitter,_EventEmitter);function Emitter(){_classCallCheck(this,Emitter);var _this=_possibleConstructorReturn(this,(Emitter.__proto__||Object.getPrototypeOf(Emitter)).call(this));_this.on('error',debug.error);return _this;}_createClass(Emitter,[{key:'emit',value:function emit(){debug.log.apply(debug,arguments);_get(Emitter.prototype.__proto__||Object.getPrototypeOf(Emitter.prototype),'emit',this).apply(this,arguments);}}]);return Emitter;}(_eventemitter2.default);Emitter.events={EDITOR_CHANGE:'editor-change',SCROLL_BEFORE_UPDATE:'scroll-before-update',SCROLL_OPTIMIZE:'scroll-optimize',SCROLL_UPDATE:'scroll-update',SELECTION_CHANGE:'selection-change',TEXT_CHANGE:'text-change'};Emitter.sources={API:'api',SILENT:'silent',USER:'user'};exports.default=Emitter;/***/},/* 29 *//***/function(module,exports){'use strict';var has=Object.prototype.hasOwnProperty,prefix='~';/**
		 * Constructor to create a storage for our `EE` objects.
		 * An `Events` instance is a plain object whose properties are event names.
		 *
		 * @constructor
		 * @api private
		 */function Events(){}//
	// We try to not inherit from `Object.prototype`. In some engines creating an
	// instance in this way is faster than calling `Object.create(null)` directly.
	// If `Object.create(null)` is not supported we prefix the event names with a
	// character to make sure that the built-in object properties are not
	// overridden or used as an attack vector.
	//
	if(Object.create){Events.prototype=Object.create(null);//
	// This hack is needed because the `__proto__` property is still inherited in
	// some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
	//
	if(!new Events().__proto__)prefix=false;}/**
		 * Representation of a single event listener.
		 *
		 * @param {Function} fn The listener function.
		 * @param {Mixed} context The context to invoke the listener with.
		 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
		 * @constructor
		 * @api private
		 */function EE(fn,context,once){this.fn=fn;this.context=context;this.once=once||false;}/**
		 * Minimal `EventEmitter` interface that is molded against the Node.js
		 * `EventEmitter` interface.
		 *
		 * @constructor
		 * @api public
		 */function EventEmitter(){this._events=new Events();this._eventsCount=0;}/**
		 * Return an array listing the events for which the emitter has registered
		 * listeners.
		 *
		 * @returns {Array}
		 * @api public
		 */EventEmitter.prototype.eventNames=function eventNames(){var names=[],events,name;if(this._eventsCount===0)return names;for(name in events=this._events){if(has.call(events,name))names.push(prefix?name.slice(1):name);}if(Object.getOwnPropertySymbols){return names.concat(Object.getOwnPropertySymbols(events));}return names;};/**
		 * Return the listeners registered for a given event.
		 *
		 * @param {String|Symbol} event The event name.
		 * @param {Boolean} exists Only check if there are listeners.
		 * @returns {Array|Boolean}
		 * @api public
		 */EventEmitter.prototype.listeners=function listeners(event,exists){var evt=prefix?prefix+event:event,available=this._events[evt];if(exists)return!!available;if(!available)return[];if(available.fn)return[available.fn];for(var i=0,l=available.length,ee=new Array(l);i<l;i++){ee[i]=available[i].fn;}return ee;};/**
		 * Calls each of the listeners registered for a given event.
		 *
		 * @param {String|Symbol} event The event name.
		 * @returns {Boolean} `true` if the event had listeners, else `false`.
		 * @api public
		 */EventEmitter.prototype.emit=function emit(event,a1,a2,a3,a4,a5){var evt=prefix?prefix+event:event;if(!this._events[evt])return false;var listeners=this._events[evt],len=arguments.length,args,i;if(listeners.fn){if(listeners.once)this.removeListener(event,listeners.fn,undefined,true);switch(len){case 1:return listeners.fn.call(listeners.context),true;case 2:return listeners.fn.call(listeners.context,a1),true;case 3:return listeners.fn.call(listeners.context,a1,a2),true;case 4:return listeners.fn.call(listeners.context,a1,a2,a3),true;case 5:return listeners.fn.call(listeners.context,a1,a2,a3,a4),true;case 6:return listeners.fn.call(listeners.context,a1,a2,a3,a4,a5),true;}for(i=1,args=new Array(len-1);i<len;i++){args[i-1]=arguments[i];}listeners.fn.apply(listeners.context,args);}else{var length=listeners.length,j;for(i=0;i<length;i++){if(listeners[i].once)this.removeListener(event,listeners[i].fn,undefined,true);switch(len){case 1:listeners[i].fn.call(listeners[i].context);break;case 2:listeners[i].fn.call(listeners[i].context,a1);break;case 3:listeners[i].fn.call(listeners[i].context,a1,a2);break;case 4:listeners[i].fn.call(listeners[i].context,a1,a2,a3);break;default:if(!args)for(j=1,args=new Array(len-1);j<len;j++){args[j-1]=arguments[j];}listeners[i].fn.apply(listeners[i].context,args);}}}return true;};/**
		 * Add a listener for a given event.
		 *
		 * @param {String|Symbol} event The event name.
		 * @param {Function} fn The listener function.
		 * @param {Mixed} [context=this] The context to invoke the listener with.
		 * @returns {EventEmitter} `this`.
		 * @api public
		 */EventEmitter.prototype.on=function on(event,fn,context){var listener=new EE(fn,context||this),evt=prefix?prefix+event:event;if(!this._events[evt])this._events[evt]=listener,this._eventsCount++;else if(!this._events[evt].fn)this._events[evt].push(listener);else this._events[evt]=[this._events[evt],listener];return this;};/**
		 * Add a one-time listener for a given event.
		 *
		 * @param {String|Symbol} event The event name.
		 * @param {Function} fn The listener function.
		 * @param {Mixed} [context=this] The context to invoke the listener with.
		 * @returns {EventEmitter} `this`.
		 * @api public
		 */EventEmitter.prototype.once=function once(event,fn,context){var listener=new EE(fn,context||this,true),evt=prefix?prefix+event:event;if(!this._events[evt])this._events[evt]=listener,this._eventsCount++;else if(!this._events[evt].fn)this._events[evt].push(listener);else this._events[evt]=[this._events[evt],listener];return this;};/**
		 * Remove the listeners of a given event.
		 *
		 * @param {String|Symbol} event The event name.
		 * @param {Function} fn Only remove the listeners that match this function.
		 * @param {Mixed} context Only remove the listeners that have this context.
		 * @param {Boolean} once Only remove one-time listeners.
		 * @returns {EventEmitter} `this`.
		 * @api public
		 */EventEmitter.prototype.removeListener=function removeListener(event,fn,context,once){var evt=prefix?prefix+event:event;if(!this._events[evt])return this;if(!fn){if(--this._eventsCount===0)this._events=new Events();else delete this._events[evt];return this;}var listeners=this._events[evt];if(listeners.fn){if(listeners.fn===fn&&(!once||listeners.once)&&(!context||listeners.context===context)){if(--this._eventsCount===0)this._events=new Events();else delete this._events[evt];}}else{for(var i=0,events=[],length=listeners.length;i<length;i++){if(listeners[i].fn!==fn||once&&!listeners[i].once||context&&listeners[i].context!==context){events.push(listeners[i]);}}//
	// Reset the array, or remove it completely if we have no more listeners.
	//
	if(events.length)this._events[evt]=events.length===1?events[0]:events;else if(--this._eventsCount===0)this._events=new Events();else delete this._events[evt];}return this;};/**
		 * Remove all listeners, or those of the specified event.
		 *
		 * @param {String|Symbol} [event] The event name.
		 * @returns {EventEmitter} `this`.
		 * @api public
		 */EventEmitter.prototype.removeAllListeners=function removeAllListeners(event){var evt;if(event){evt=prefix?prefix+event:event;if(this._events[evt]){if(--this._eventsCount===0)this._events=new Events();else delete this._events[evt];}}else{this._events=new Events();this._eventsCount=0;}return this;};//
	// Alias methods names because people roll like that.
	//
	EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.addListener=EventEmitter.prototype.on;//
	// This function doesn't apply anymore.
	//
	EventEmitter.prototype.setMaxListeners=function setMaxListeners(){return this;};//
	// Expose the prefix.
	//
	EventEmitter.prefixed=prefix;//
	// Allow `EventEmitter` to be imported as module namespace.
	//
	EventEmitter.EventEmitter=EventEmitter;//
	// Expose the module.
	//
	if('undefined'!==typeof module){module.exports=EventEmitter;}/***/},/* 30 *//***/function(module,exports){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var levels=['error','warn','log','info'];var level='warn';function debug(method){if(levels.indexOf(method)<=levels.indexOf(level)){for(var _len=arguments.length,args=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}console[method].apply(console,args);}}function namespace(ns){return levels.reduce(function(logger,method){logger[method]=debug.bind(console,method,ns);return logger;},{});}debug.level=namespace.level=function(newLevel){level=newLevel;};exports.default=namespace;/***/},/* 31 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.Code=undefined;var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _delta=__webpack_require__(20);var _delta2=_interopRequireDefault(_delta);var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _block=__webpack_require__(32);var _block2=_interopRequireDefault(_block);var _inline=__webpack_require__(35);var _inline2=_interopRequireDefault(_inline);var _text=__webpack_require__(36);var _text2=_interopRequireDefault(_text);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Code=function(_Inline){_inherits(Code,_Inline);function Code(){_classCallCheck(this,Code);return _possibleConstructorReturn(this,(Code.__proto__||Object.getPrototypeOf(Code)).apply(this,arguments));}return Code;}(_inline2.default);Code.blotName='code';Code.tagName='CODE';var CodeBlock=function(_Block){_inherits(CodeBlock,_Block);function CodeBlock(){_classCallCheck(this,CodeBlock);return _possibleConstructorReturn(this,(CodeBlock.__proto__||Object.getPrototypeOf(CodeBlock)).apply(this,arguments));}_createClass(CodeBlock,[{key:'delta',value:function delta(){var _this3=this;var text=this.domNode.textContent;if(text.endsWith('\n')){// Should always be true
	text=text.slice(0,-1);}return text.split('\n').reduce(function(delta,frag){return delta.insert(frag).insert('\n',_this3.formats());},new _delta2.default());}},{key:'format',value:function format(name,value){if(name===this.statics.blotName&&value)return;var _descendant=this.descendant(_text2.default,this.length()-1);var _descendant2=_slicedToArray(_descendant,1);var text=_descendant2[0];if(text!=null){text.deleteAt(text.length()-1,1);}_get(CodeBlock.prototype.__proto__||Object.getPrototypeOf(CodeBlock.prototype),'format',this).call(this,name,value);}},{key:'formatAt',value:function formatAt(index,length,name,value){if(length===0)return;if(_parchment2.default.query(name,_parchment2.default.Scope.BLOCK)==null||name===this.statics.blotName&&value===this.statics.formats(this.domNode)){return;}var nextNewline=this.newlineIndex(index);if(nextNewline<0||nextNewline>=index+length)return;var prevNewline=this.newlineIndex(index,true)+1;var isolateLength=nextNewline-prevNewline+1;var blot=this.isolate(prevNewline,isolateLength);var next=blot.next;blot.format(name,value);if(next instanceof CodeBlock){next.formatAt(0,index-prevNewline+length-isolateLength,name,value);}}},{key:'insertAt',value:function insertAt(index,value,def){if(def!=null)return;var _descendant3=this.descendant(_text2.default,index);var _descendant4=_slicedToArray(_descendant3,2);var text=_descendant4[0];var offset=_descendant4[1];text.insertAt(offset,value);}},{key:'length',value:function length(){var length=this.domNode.textContent.length;if(!this.domNode.textContent.endsWith('\n')){return length+1;}return length;}},{key:'newlineIndex',value:function newlineIndex(searchIndex){var reverse=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!reverse){var offset=this.domNode.textContent.slice(searchIndex).indexOf('\n');return offset>-1?searchIndex+offset:-1;}else{return this.domNode.textContent.slice(0,searchIndex).lastIndexOf('\n');}}},{key:'optimize',value:function optimize(){if(!this.domNode.textContent.endsWith('\n')){this.appendChild(_parchment2.default.create('text','\n'));}_get(CodeBlock.prototype.__proto__||Object.getPrototypeOf(CodeBlock.prototype),'optimize',this).call(this);var next=this.next;if(next!=null&&next.prev===this&&next.statics.blotName===this.statics.blotName&&this.statics.formats(this.domNode)===next.statics.formats(next.domNode)){next.optimize();next.moveChildren(this);next.remove();}}},{key:'replace',value:function replace(target){_get(CodeBlock.prototype.__proto__||Object.getPrototypeOf(CodeBlock.prototype),'replace',this).call(this,target);[].slice.call(this.domNode.querySelectorAll('*')).forEach(function(node){var blot=_parchment2.default.find(node);if(blot==null){node.parentNode.removeChild(node);}else if(blot instanceof _parchment2.default.Embed){blot.remove();}else{blot.unwrap();}});}}],[{key:'create',value:function create(value){var domNode=_get(CodeBlock.__proto__||Object.getPrototypeOf(CodeBlock),'create',this).call(this,value);domNode.setAttribute('spellcheck',false);return domNode;}},{key:'formats',value:function formats(domNode){return true;}}]);return CodeBlock;}(_block2.default);CodeBlock.blotName='code-block';CodeBlock.tagName='PRE';CodeBlock.TAB='  ';exports.Code=Code;exports.default=CodeBlock;/***/},/* 32 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.BlockEmbed=exports.bubbleFormats=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _extend=__webpack_require__(25);var _extend2=_interopRequireDefault(_extend);var _delta=__webpack_require__(20);var _delta2=_interopRequireDefault(_delta);var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _break=__webpack_require__(33);var _break2=_interopRequireDefault(_break);var _embed=__webpack_require__(34);var _embed2=_interopRequireDefault(_embed);var _inline=__webpack_require__(35);var _inline2=_interopRequireDefault(_inline);var _text=__webpack_require__(36);var _text2=_interopRequireDefault(_text);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var NEWLINE_LENGTH=1;var BlockEmbed=function(_Embed){_inherits(BlockEmbed,_Embed);function BlockEmbed(){_classCallCheck(this,BlockEmbed);return _possibleConstructorReturn(this,(BlockEmbed.__proto__||Object.getPrototypeOf(BlockEmbed)).apply(this,arguments));}_createClass(BlockEmbed,[{key:'attach',value:function attach(){_get(BlockEmbed.prototype.__proto__||Object.getPrototypeOf(BlockEmbed.prototype),'attach',this).call(this);this.attributes=new _parchment2.default.Attributor.Store(this.domNode);}},{key:'delta',value:function delta(){return new _delta2.default().insert(this.value(),(0,_extend2.default)(this.formats(),this.attributes.values()));}},{key:'format',value:function format(name,value){var attribute=_parchment2.default.query(name,_parchment2.default.Scope.BLOCK_ATTRIBUTE);if(attribute!=null){this.attributes.attribute(attribute,value);}}},{key:'formatAt',value:function formatAt(index,length,name,value){this.format(name,value);}},{key:'insertAt',value:function insertAt(index,value,def){if(typeof value==='string'&&value.endsWith('\n')){var block=_parchment2.default.create(Block.blotName);this.parent.insertBefore(block,index===0?this:this.next);block.insertAt(0,value.slice(0,-1));}else{_get(BlockEmbed.prototype.__proto__||Object.getPrototypeOf(BlockEmbed.prototype),'insertAt',this).call(this,index,value,def);}}}]);return BlockEmbed;}(_embed2.default);BlockEmbed.scope=_parchment2.default.Scope.BLOCK_BLOT;// It is important for cursor behavior BlockEmbeds use tags that are block level elements
	var Block=function(_Parchment$Block){_inherits(Block,_Parchment$Block);function Block(domNode){_classCallCheck(this,Block);var _this2=_possibleConstructorReturn(this,(Block.__proto__||Object.getPrototypeOf(Block)).call(this,domNode));_this2.cache={};return _this2;}_createClass(Block,[{key:'delta',value:function delta(){if(this.cache.delta==null){this.cache.delta=this.descendants(_parchment2.default.Leaf).reduce(function(delta,leaf){if(leaf.length()===0){return delta;}else{return delta.insert(leaf.value(),bubbleFormats(leaf));}},new _delta2.default()).insert('\n',bubbleFormats(this));}return this.cache.delta;}},{key:'deleteAt',value:function deleteAt(index,length){_get(Block.prototype.__proto__||Object.getPrototypeOf(Block.prototype),'deleteAt',this).call(this,index,length);this.cache={};}},{key:'formatAt',value:function formatAt(index,length,name,value){if(length<=0)return;if(_parchment2.default.query(name,_parchment2.default.Scope.BLOCK)){if(index+length===this.length()){this.format(name,value);}}else{_get(Block.prototype.__proto__||Object.getPrototypeOf(Block.prototype),'formatAt',this).call(this,index,Math.min(length,this.length()-index-1),name,value);}this.cache={};}},{key:'insertAt',value:function insertAt(index,value,def){if(def!=null)return _get(Block.prototype.__proto__||Object.getPrototypeOf(Block.prototype),'insertAt',this).call(this,index,value,def);if(value.length===0)return;var lines=value.split('\n');var text=lines.shift();if(text.length>0){if(index<this.length()-1||this.children.tail==null){_get(Block.prototype.__proto__||Object.getPrototypeOf(Block.prototype),'insertAt',this).call(this,Math.min(index,this.length()-1),text);}else{this.children.tail.insertAt(this.children.tail.length(),text);}this.cache={};}var block=this;lines.reduce(function(index,line){block=block.split(index,true);block.insertAt(0,line);return line.length;},index+text.length);}},{key:'insertBefore',value:function insertBefore(blot,ref){var head=this.children.head;_get(Block.prototype.__proto__||Object.getPrototypeOf(Block.prototype),'insertBefore',this).call(this,blot,ref);if(head instanceof _break2.default){head.remove();}this.cache={};}},{key:'length',value:function length(){if(this.cache.length==null){this.cache.length=_get(Block.prototype.__proto__||Object.getPrototypeOf(Block.prototype),'length',this).call(this)+NEWLINE_LENGTH;}return this.cache.length;}},{key:'moveChildren',value:function moveChildren(target,ref){_get(Block.prototype.__proto__||Object.getPrototypeOf(Block.prototype),'moveChildren',this).call(this,target,ref);this.cache={};}},{key:'optimize',value:function optimize(){_get(Block.prototype.__proto__||Object.getPrototypeOf(Block.prototype),'optimize',this).call(this);this.cache={};}},{key:'path',value:function path(index){return _get(Block.prototype.__proto__||Object.getPrototypeOf(Block.prototype),'path',this).call(this,index,true);}},{key:'removeChild',value:function removeChild(child){_get(Block.prototype.__proto__||Object.getPrototypeOf(Block.prototype),'removeChild',this).call(this,child);this.cache={};}},{key:'split',value:function split(index){var force=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(force&&(index===0||index>=this.length()-NEWLINE_LENGTH)){var clone=this.clone();if(index===0){this.parent.insertBefore(clone,this);return this;}else{this.parent.insertBefore(clone,this.next);return clone;}}else{var next=_get(Block.prototype.__proto__||Object.getPrototypeOf(Block.prototype),'split',this).call(this,index,force);this.cache={};return next;}}}]);return Block;}(_parchment2.default.Block);Block.blotName='block';Block.tagName='P';Block.defaultChild='break';Block.allowedChildren=[_inline2.default,_embed2.default,_text2.default];function bubbleFormats(blot){var formats=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(blot==null)return formats;if(typeof blot.formats==='function'){formats=(0,_extend2.default)(formats,blot.formats());}if(blot.parent==null||blot.parent.blotName=='scroll'||blot.parent.statics.scope!==blot.statics.scope){return formats;}return bubbleFormats(blot.parent,formats);}exports.bubbleFormats=bubbleFormats;exports.BlockEmbed=BlockEmbed;exports.default=Block;/***/},/* 33 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _embed=__webpack_require__(34);var _embed2=_interopRequireDefault(_embed);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Break=function(_Embed){_inherits(Break,_Embed);function Break(){_classCallCheck(this,Break);return _possibleConstructorReturn(this,(Break.__proto__||Object.getPrototypeOf(Break)).apply(this,arguments));}_createClass(Break,[{key:'insertInto',value:function insertInto(parent,ref){if(parent.children.length===0){_get(Break.prototype.__proto__||Object.getPrototypeOf(Break.prototype),'insertInto',this).call(this,parent,ref);}}},{key:'length',value:function length(){return 0;}},{key:'value',value:function value(){return'';}}],[{key:'value',value:function value(domNode){return undefined;}}]);return Break;}(_embed2.default);Break.blotName='break';Break.tagName='BR';exports.default=Break;/***/},/* 34 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Embed=function(_Parchment$Embed){_inherits(Embed,_Parchment$Embed);function Embed(){_classCallCheck(this,Embed);return _possibleConstructorReturn(this,(Embed.__proto__||Object.getPrototypeOf(Embed)).apply(this,arguments));}return Embed;}(_parchment2.default.Embed);exports.default=Embed;/***/},/* 35 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _extend=__webpack_require__(25);var _extend2=_interopRequireDefault(_extend);var _embed=__webpack_require__(34);var _embed2=_interopRequireDefault(_embed);var _text=__webpack_require__(36);var _text2=_interopRequireDefault(_text);var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Inline=function(_Parchment$Inline){_inherits(Inline,_Parchment$Inline);function Inline(){_classCallCheck(this,Inline);return _possibleConstructorReturn(this,(Inline.__proto__||Object.getPrototypeOf(Inline)).apply(this,arguments));}_createClass(Inline,[{key:'formatAt',value:function formatAt(index,length,name,value){if(Inline.compare(this.statics.blotName,name)<0&&_parchment2.default.query(name,_parchment2.default.Scope.BLOT)){var blot=this.isolate(index,length);if(value){blot.wrap(name,value);}}else{_get(Inline.prototype.__proto__||Object.getPrototypeOf(Inline.prototype),'formatAt',this).call(this,index,length,name,value);}}},{key:'optimize',value:function optimize(){_get(Inline.prototype.__proto__||Object.getPrototypeOf(Inline.prototype),'optimize',this).call(this);var ref=this.parent.parent;if(this.parent instanceof Inline&&Inline.compare(this.statics.blotName,this.parent.statics.blotName)>0){var parent=this.parent.isolate(this.offset(),this.length());this.moveChildren(parent);parent.wrap(this);}}}],[{key:'compare',value:function compare(self,other){var selfIndex=Inline.order.indexOf(self);var otherIndex=Inline.order.indexOf(other);if(selfIndex>=0||otherIndex>=0){return selfIndex-otherIndex;}else if(self===other){return 0;}else if(self<other){return-1;}else{return 1;}}}]);return Inline;}(_parchment2.default.Inline);Inline.allowedChildren=[Inline,_embed2.default,_text2.default];// Lower index means deeper in the DOM tree, since not found (-1) is for embeds
	Inline.order=['cursor','inline',// Must be lower
	'code','underline','strike','italic','bold','script','link'// Must be higher
	];exports.default=Inline;/***/},/* 36 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TextBlot=function(_Parchment$Text){_inherits(TextBlot,_Parchment$Text);function TextBlot(){_classCallCheck(this,TextBlot);return _possibleConstructorReturn(this,(TextBlot.__proto__||Object.getPrototypeOf(TextBlot)).apply(this,arguments));}return TextBlot;}(_parchment2.default.Text);exports.default=TextBlot;/***/},/* 37 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _embed=__webpack_require__(34);var _embed2=_interopRequireDefault(_embed);var _emitter=__webpack_require__(28);var _emitter2=_interopRequireDefault(_emitter);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Cursor=function(_Embed){_inherits(Cursor,_Embed);_createClass(Cursor,null,[{key:'value',value:function value(domNode){return undefined;}}]);function Cursor(domNode,selection){_classCallCheck(this,Cursor);var _this=_possibleConstructorReturn(this,(Cursor.__proto__||Object.getPrototypeOf(Cursor)).call(this,domNode));_this.selection=selection;_this.textNode=document.createTextNode(Cursor.CONTENTS);_this.domNode.appendChild(_this.textNode);_this._length=0;return _this;}_createClass(Cursor,[{key:'detach',value:function detach(){// super.detach() will also clear domNode.__blot
	if(this.parent!=null)this.parent.removeChild(this);}},{key:'format',value:function format(name,value){if(this._length!==0){return _get(Cursor.prototype.__proto__||Object.getPrototypeOf(Cursor.prototype),'format',this).call(this,name,value);}var target=this,index=0;while(target!=null&&target.statics.scope!==_parchment2.default.Scope.BLOCK_BLOT){index+=target.offset(target.parent);target=target.parent;}if(target!=null){this._length=Cursor.CONTENTS.length;target.optimize();target.formatAt(index,Cursor.CONTENTS.length,name,value);this._length=0;}}},{key:'index',value:function index(node,offset){if(node===this.textNode)return 0;return _get(Cursor.prototype.__proto__||Object.getPrototypeOf(Cursor.prototype),'index',this).call(this,node,offset);}},{key:'length',value:function length(){return this._length;}},{key:'position',value:function position(index){return[this.textNode,this.textNode.data.length];}},{key:'remove',value:function remove(){_get(Cursor.prototype.__proto__||Object.getPrototypeOf(Cursor.prototype),'remove',this).call(this);this.parent=null;}},{key:'restore',value:function restore(){var _this2=this;if(this.selection.composing)return;if(this.parent==null)return;var textNode=this.textNode;var range=this.selection.getNativeRange();// Link format will insert text outside of anchor tag
	while(this.domNode.lastChild!=null&&this.domNode.lastChild!==this.textNode){this.domNode.parentNode.insertBefore(this.domNode.lastChild,this.domNode);}if(this.textNode.data!==Cursor.CONTENTS){this.textNode.data=this.textNode.data.split(Cursor.CONTENTS).join('');this.parent.insertBefore(_parchment2.default.create(this.textNode),this);this.textNode=document.createTextNode(Cursor.CONTENTS);this.domNode.appendChild(this.textNode);}this.remove();if(range!=null&&range.start.node===textNode&&range.end.node===textNode){this.selection.emitter.once(_emitter2.default.events.SCROLL_OPTIMIZE,function(){var _map=[range.start.offset,range.end.offset].map(function(offset){return Math.max(0,Math.min(textNode.data.length,offset-1));});var _map2=_slicedToArray(_map,2);var start=_map2[0];var end=_map2[1];_this2.selection.setNativeRange(textNode,start,textNode,end);});}}},{key:'update',value:function update(mutations){var _this3=this;mutations.forEach(function(mutation){if(mutation.type==='characterData'&&mutation.target===_this3.textNode){_this3.restore();}});}},{key:'value',value:function value(){return'';}}]);return Cursor;}(_embed2.default);Cursor.blotName='cursor';Cursor.className='ql-cursor';Cursor.tagName='span';Cursor.CONTENTS='\uFEFF';// Zero width no break space
	exports.default=Cursor;/***/},/* 38 *//***/function(module,exports){var clone=function(){'use strict';var nativeMap;try{nativeMap=Map;}catch(_){// maybe a reference error because no `Map`. Give it a dummy value that no
	// value will ever be an instanceof.
	nativeMap=function nativeMap(){};}var nativeSet;try{nativeSet=Set;}catch(_){nativeSet=function nativeSet(){};}var nativePromise;try{nativePromise=Promise;}catch(_){nativePromise=function nativePromise(){};}/**
		 * Clones (copies) an Object using deep copying.
		 *
		 * This function supports circular references by default, but if you are certain
		 * there are no circular references in your object, you can save some CPU time
		 * by calling clone(obj, false).
		 *
		 * Caution: if `circular` is false and `parent` contains circular references,
		 * your program may enter an infinite loop and crash.
		 *
		 * @param `parent` - the object to be cloned
		 * @param `circular` - set to true if the object to be cloned may contain
		 *    circular references. (optional - true by default)
		 * @param `depth` - set to a number if the object is only to be cloned to
		 *    a particular depth. (optional - defaults to Infinity)
		 * @param `prototype` - sets the prototype to be used when cloning an object.
		 *    (optional - defaults to parent prototype).
		*/function clone(parent,circular,depth,prototype){var filter;if((typeof circular==='undefined'?'undefined':_typeof2(circular))==='object'){depth=circular.depth;prototype=circular.prototype;filter=circular.filter;circular=circular.circular;}// maintain two arrays for circular references, where corresponding parents
	// and children have the same index
	var allParents=[];var allChildren=[];var useBuffer=typeof Buffer!='undefined';if(typeof circular=='undefined')circular=true;if(typeof depth=='undefined')depth=Infinity;// recurse this function so we don't reset allParents and allChildren
	function _clone(parent,depth){// cloning null always returns null
	if(parent===null)return null;if(depth===0)return parent;var child;var proto;if((typeof parent==='undefined'?'undefined':_typeof2(parent))!='object'){return parent;}if(parent instanceof nativeMap){child=new nativeMap();}else if(parent instanceof nativeSet){child=new nativeSet();}else if(parent instanceof nativePromise){child=new nativePromise(function(resolve,reject){parent.then(function(value){resolve(_clone(value,depth-1));},function(err){reject(_clone(err,depth-1));});});}else if(clone.__isArray(parent)){child=[];}else if(clone.__isRegExp(parent)){child=new RegExp(parent.source,__getRegExpFlags(parent));if(parent.lastIndex)child.lastIndex=parent.lastIndex;}else if(clone.__isDate(parent)){child=new Date(parent.getTime());}else if(useBuffer&&Buffer.isBuffer(parent)){child=new Buffer(parent.length);parent.copy(child);return child;}else{if(typeof prototype=='undefined'){proto=Object.getPrototypeOf(parent);child=Object.create(proto);}else{child=Object.create(prototype);proto=prototype;}}if(circular){var index=allParents.indexOf(parent);if(index!=-1){return allChildren[index];}allParents.push(parent);allChildren.push(child);}if(parent instanceof nativeMap){var keyIterator=parent.keys();while(true){var next=keyIterator.next();if(next.done){break;}var keyChild=_clone(next.value,depth-1);var valueChild=_clone(parent.get(next.value),depth-1);child.set(keyChild,valueChild);}}if(parent instanceof nativeSet){var iterator=parent.keys();while(true){var next=iterator.next();if(next.done){break;}var entryChild=_clone(next.value,depth-1);child.add(entryChild);}}for(var i in parent){var attrs;if(proto){attrs=Object.getOwnPropertyDescriptor(proto,i);}if(attrs&&attrs.set==null){continue;}child[i]=_clone(parent[i],depth-1);}if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(parent);for(var i=0;i<symbols.length;i++){// Don't need to worry about cloning a symbol because it is a primitive,
	// like a number or string.
	var symbol=symbols[i];child[symbol]=_clone(parent[symbol],depth-1);}}return child;}return _clone(parent,depth);}/**
		 * Simple flat clone using prototype, accepts only objects, usefull for property
		 * override on FLAT configuration object (no nested props).
		 *
		 * USE WITH CAUTION! This may not behave as you wish if you do not know how this
		 * works.
		 */clone.clonePrototype=function clonePrototype(parent){if(parent===null)return null;var c=function c(){};c.prototype=parent;return new c();};// private utility functions
	function __objToStr(o){return Object.prototype.toString.call(o);}clone.__objToStr=__objToStr;function __isDate(o){return(typeof o==='undefined'?'undefined':_typeof2(o))==='object'&&__objToStr(o)==='[object Date]';}clone.__isDate=__isDate;function __isArray(o){return(typeof o==='undefined'?'undefined':_typeof2(o))==='object'&&__objToStr(o)==='[object Array]';}clone.__isArray=__isArray;function __isRegExp(o){return(typeof o==='undefined'?'undefined':_typeof2(o))==='object'&&__objToStr(o)==='[object RegExp]';}clone.__isRegExp=__isRegExp;function __getRegExpFlags(re){var flags='';if(re.global)flags+='g';if(re.ignoreCase)flags+='i';if(re.multiline)flags+='m';return flags;}clone.__getRegExpFlags=__getRegExpFlags;return clone;}();if((typeof module==='undefined'?'undefined':_typeof2(module))==='object'&&module.exports){module.exports=clone;}/***/},/* 39 *//***/function(module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Module=function Module(quill){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,Module);this.quill=quill;this.options=options;};Module.DEFAULTS={};exports.default=Module;/***/},/* 40 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.Range=undefined;var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _clone=__webpack_require__(38);var _clone2=_interopRequireDefault(_clone);var _deepEqual=__webpack_require__(22);var _deepEqual2=_interopRequireDefault(_deepEqual);var _break=__webpack_require__(33);var _break2=_interopRequireDefault(_break);var _emitter3=__webpack_require__(28);var _emitter4=_interopRequireDefault(_emitter3);var _logger=__webpack_require__(30);var _logger2=_interopRequireDefault(_logger);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var debug=(0,_logger2.default)('quill:selection');var Range=function Range(index){var length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;_classCallCheck(this,Range);this.index=index;this.length=length;};var Selection=function(){function Selection(scroll,emitter){var _this=this;_classCallCheck(this,Selection);this.emitter=emitter;this.scroll=scroll;this.composing=false;this.root=this.scroll.domNode;this.root.addEventListener('compositionstart',function(){_this.composing=true;});this.root.addEventListener('compositionend',function(){_this.composing=false;});this.cursor=_parchment2.default.create('cursor',this);// savedRange is last non-null range
	this.lastRange=this.savedRange=new Range(0,0);['keyup','mouseup','mouseleave','touchend','touchleave','focus','blur'].forEach(function(eventName){_this.root.addEventListener(eventName,function(){// When range used to be a selection and user click within the selection,
	// the range now being a cursor has not updated yet without setTimeout
	setTimeout(_this.update.bind(_this,_emitter4.default.sources.USER),100);});});this.emitter.on(_emitter4.default.events.EDITOR_CHANGE,function(type,delta){if(type===_emitter4.default.events.TEXT_CHANGE&&delta.length()>0){_this.update(_emitter4.default.sources.SILENT);}});this.emitter.on(_emitter4.default.events.SCROLL_BEFORE_UPDATE,function(){var native=_this.getNativeRange();if(native==null)return;if(native.start.node===_this.cursor.textNode)return;// cursor.restore() will handle
	// TODO unclear if this has negative side effects
	_this.emitter.once(_emitter4.default.events.SCROLL_UPDATE,function(){try{_this.setNativeRange(native.start.node,native.start.offset,native.end.node,native.end.offset);}catch(ignored){}});});this.update(_emitter4.default.sources.SILENT);}_createClass(Selection,[{key:'focus',value:function focus(){if(this.hasFocus())return;var bodyTop=document.body.scrollTop;this.root.focus();document.body.scrollTop=bodyTop;this.setRange(this.savedRange);}},{key:'format',value:function format(_format,value){this.scroll.update();var nativeRange=this.getNativeRange();if(nativeRange==null||!nativeRange.native.collapsed||_parchment2.default.query(_format,_parchment2.default.Scope.BLOCK))return;if(nativeRange.start.node!==this.cursor.textNode){var blot=_parchment2.default.find(nativeRange.start.node,false);if(blot==null)return;// TODO Give blot ability to not split
	if(blot instanceof _parchment2.default.Leaf){var after=blot.split(nativeRange.start.offset);blot.parent.insertBefore(this.cursor,after);}else{blot.insertBefore(this.cursor,nativeRange.start.node);// Should never happen
	}this.cursor.attach();}this.cursor.format(_format,value);this.scroll.optimize();this.setNativeRange(this.cursor.textNode,this.cursor.textNode.data.length);this.update();}},{key:'getBounds',value:function getBounds(index){var length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var scrollLength=this.scroll.length();index=Math.min(index,scrollLength-1);length=Math.min(index+length,scrollLength-1)-index;var bounds=void 0;var node=void 0;var _scroll$leaf=this.scroll.leaf(index);var _scroll$leaf2=_slicedToArray(_scroll$leaf,2);var leaf=_scroll$leaf2[0];var offset=_scroll$leaf2[1];if(leaf==null)return null;var _leaf$position=leaf.position(offset,true);var _leaf$position2=_slicedToArray(_leaf$position,2);node=_leaf$position2[0];offset=_leaf$position2[1];var range=document.createRange();if(length>0){range.setStart(node,offset);var _scroll$leaf3=this.scroll.leaf(index+length);var _scroll$leaf4=_slicedToArray(_scroll$leaf3,2);leaf=_scroll$leaf4[0];offset=_scroll$leaf4[1];if(leaf==null)return null;var _leaf$position3=leaf.position(offset,true);var _leaf$position4=_slicedToArray(_leaf$position3,2);node=_leaf$position4[0];offset=_leaf$position4[1];range.setEnd(node,offset);bounds=range.getBoundingClientRect();}else{var side='left';if(node instanceof Text){if(offset<node.data.length){range.setStart(node,offset);range.setEnd(node,offset+1);}else{range.setStart(node,offset-1);range.setEnd(node,offset);side='right';}var rect=range.getBoundingClientRect();}else{var rect=leaf.domNode.getBoundingClientRect();if(offset>0)side='right';}bounds={height:rect.height,left:rect[side],width:0,top:rect.top};}var containerBounds=this.root.parentNode.getBoundingClientRect();return{left:bounds.left-containerBounds.left,right:bounds.left+bounds.width-containerBounds.left,top:bounds.top-containerBounds.top,bottom:bounds.top+bounds.height-containerBounds.top,height:bounds.height,width:bounds.width};}},{key:'getNativeRange',value:function getNativeRange(){var selection=document.getSelection();if(selection==null||selection.rangeCount<=0)return null;var nativeRange=selection.getRangeAt(0);if(nativeRange==null)return null;if(!contains(this.root,nativeRange.startContainer)||!nativeRange.collapsed&&!contains(this.root,nativeRange.endContainer)){return null;}var range={start:{node:nativeRange.startContainer,offset:nativeRange.startOffset},end:{node:nativeRange.endContainer,offset:nativeRange.endOffset},native:nativeRange};[range.start,range.end].forEach(function(position){var node=position.node,offset=position.offset;while(!(node instanceof Text)&&node.childNodes.length>0){if(node.childNodes.length>offset){node=node.childNodes[offset];offset=0;}else if(node.childNodes.length===offset){node=node.lastChild;offset=node instanceof Text?node.data.length:node.childNodes.length+1;}else{break;}}position.node=node,position.offset=offset;});debug.info('getNativeRange',range);return range;}},{key:'getRange',value:function getRange(){var _this2=this;var range=this.getNativeRange();if(range==null)return[null,null];var positions=[[range.start.node,range.start.offset]];if(!range.native.collapsed){positions.push([range.end.node,range.end.offset]);}var indexes=positions.map(function(position){var _position=_slicedToArray(position,2);var node=_position[0];var offset=_position[1];var blot=_parchment2.default.find(node,true);var index=blot.offset(_this2.scroll);if(offset===0){return index;}else if(blot instanceof _parchment2.default.Container){return index+blot.length();}else{return index+blot.index(node,offset);}});var start=Math.min.apply(Math,_toConsumableArray(indexes)),end=Math.max.apply(Math,_toConsumableArray(indexes));return[new Range(start,end-start),range];}},{key:'hasFocus',value:function hasFocus(){return document.activeElement===this.root;}},{key:'scrollIntoView',value:function scrollIntoView(){var range=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.lastRange;if(range==null)return;var bounds=this.getBounds(range.index,range.length);if(bounds==null)return;if(this.root.offsetHeight<bounds.bottom){var _scroll$line=this.scroll.line(Math.min(range.index+range.length,this.scroll.length()-1));var _scroll$line2=_slicedToArray(_scroll$line,1);var line=_scroll$line2[0];this.root.scrollTop=line.domNode.offsetTop+line.domNode.offsetHeight-this.root.offsetHeight;}else if(bounds.top<0){var _scroll$line3=this.scroll.line(Math.min(range.index,this.scroll.length()-1));var _scroll$line4=_slicedToArray(_scroll$line3,1);var _line=_scroll$line4[0];this.root.scrollTop=_line.domNode.offsetTop;}}},{key:'setNativeRange',value:function setNativeRange(startNode,startOffset){var endNode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:startNode;var endOffset=arguments.length>3&&arguments[3]!==undefined?arguments[3]:startOffset;var force=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;debug.info('setNativeRange',startNode,startOffset,endNode,endOffset);if(startNode!=null&&(this.root.parentNode==null||startNode.parentNode==null||endNode.parentNode==null)){return;}var selection=document.getSelection();if(selection==null)return;if(startNode!=null){if(!this.hasFocus())this.root.focus();var nativeRange=this.getNativeRange();if(nativeRange==null||force||startNode!==nativeRange.start.node||startOffset!==nativeRange.start.offset||endNode!==nativeRange.end.node||endOffset!==nativeRange.end.offset){var range=document.createRange();range.setStart(startNode,startOffset);range.setEnd(endNode,endOffset);selection.removeAllRanges();selection.addRange(range);}}else{selection.removeAllRanges();this.root.blur();document.body.focus();// root.blur() not enough on IE11+Travis+SauceLabs (but not local VMs)
	}}},{key:'setRange',value:function setRange(range){var _this3=this;var force=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var source=arguments.length>2&&arguments[2]!==undefined?arguments[2]:_emitter4.default.sources.API;if(typeof force==='string'){source=force;force=false;}debug.info('setRange',range);if(range!=null){(function(){var indexes=range.collapsed?[range.index]:[range.index,range.index+range.length];var args=[];var scrollLength=_this3.scroll.length();indexes.forEach(function(index,i){index=Math.min(scrollLength-1,index);var node=void 0;var _scroll$leaf5=_this3.scroll.leaf(index);var _scroll$leaf6=_slicedToArray(_scroll$leaf5,2);var leaf=_scroll$leaf6[0];var offset=_scroll$leaf6[1];var _leaf$position5=leaf.position(offset,i!==0);var _leaf$position6=_slicedToArray(_leaf$position5,2);node=_leaf$position6[0];offset=_leaf$position6[1];args.push(node,offset);});if(args.length<2){args=args.concat(args);}_this3.setNativeRange.apply(_this3,_toConsumableArray(args).concat([force]));})();}else{this.setNativeRange(null);}this.update(source);}},{key:'update',value:function update(){var source=arguments.length>0&&arguments[0]!==undefined?arguments[0]:_emitter4.default.sources.USER;var nativeRange=void 0,oldRange=this.lastRange;var _getRange=this.getRange();var _getRange2=_slicedToArray(_getRange,2);this.lastRange=_getRange2[0];nativeRange=_getRange2[1];if(this.lastRange!=null){this.savedRange=this.lastRange;}if(!(0,_deepEqual2.default)(oldRange,this.lastRange)){var _emitter;if(!this.composing&&nativeRange!=null&&nativeRange.native.collapsed&&nativeRange.start.node!==this.cursor.textNode){this.cursor.restore();}var args=[_emitter4.default.events.SELECTION_CHANGE,(0,_clone2.default)(this.lastRange),(0,_clone2.default)(oldRange),source];(_emitter=this.emitter).emit.apply(_emitter,[_emitter4.default.events.EDITOR_CHANGE].concat(args));if(source!==_emitter4.default.sources.SILENT){var _emitter2;(_emitter2=this.emitter).emit.apply(_emitter2,args);}}}}]);return Selection;}();function contains(parent,descendant){try{// Firefox inserts inaccessible nodes around video elements
	descendant.parentNode;}catch(e){return false;}// IE11 has bug with Text nodes
	// https://connect.microsoft.com/IE/feedback/details/780874/node-contains-is-incorrect
	if(descendant instanceof Text){descendant=descendant.parentNode;}return parent.contains(descendant);}exports.Range=Range;exports.default=Selection;/***/},/* 41 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _extend=__webpack_require__(25);var _extend2=_interopRequireDefault(_extend);var _emitter=__webpack_require__(28);var _emitter2=_interopRequireDefault(_emitter);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Theme=function(){function Theme(quill,options){_classCallCheck(this,Theme);this.quill=quill;this.options=options;this.modules={};}_createClass(Theme,[{key:'init',value:function init(){var _this=this;Object.keys(this.options.modules).forEach(function(name){if(_this.modules[name]==null){_this.addModule(name);}});}},{key:'addModule',value:function addModule(name){var moduleClass=this.quill.constructor.import('modules/'+name);this.modules[name]=new moduleClass(this.quill,this.options.modules[name]||{});return this.modules[name];}}]);return Theme;}();Theme.DEFAULTS={modules:{}};Theme.themes={'default':Theme};exports.default=Theme;/***/},/* 42 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _block=__webpack_require__(32);var _block2=_interopRequireDefault(_block);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Container=function(_Parchment$Container){_inherits(Container,_Parchment$Container);function Container(){_classCallCheck(this,Container);return _possibleConstructorReturn(this,(Container.__proto__||Object.getPrototypeOf(Container)).apply(this,arguments));}return Container;}(_parchment2.default.Container);Container.allowedChildren=[_block2.default,_block.BlockEmbed,Container];exports.default=Container;/***/},/* 43 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _emitter=__webpack_require__(28);var _emitter2=_interopRequireDefault(_emitter);var _block=__webpack_require__(32);var _block2=_interopRequireDefault(_block);var _break=__webpack_require__(33);var _break2=_interopRequireDefault(_break);var _container=__webpack_require__(42);var _container2=_interopRequireDefault(_container);var _code=__webpack_require__(31);var _code2=_interopRequireDefault(_code);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function isLine(blot){return blot instanceof _block2.default||blot instanceof _block.BlockEmbed;}var Scroll=function(_Parchment$Scroll){_inherits(Scroll,_Parchment$Scroll);function Scroll(domNode,config){_classCallCheck(this,Scroll);var _this=_possibleConstructorReturn(this,(Scroll.__proto__||Object.getPrototypeOf(Scroll)).call(this,domNode));_this.emitter=config.emitter;if(Array.isArray(config.whitelist)){_this.whitelist=config.whitelist.reduce(function(whitelist,format){whitelist[format]=true;return whitelist;},{});}_this.optimize();return _this;}_createClass(Scroll,[{key:'deleteAt',value:function deleteAt(index,length){var _line=this.line(index);var _line2=_slicedToArray(_line,2);var first=_line2[0];var offset=_line2[1];var _line3=this.line(index+length);var _line4=_slicedToArray(_line3,1);var last=_line4[0];_get(Scroll.prototype.__proto__||Object.getPrototypeOf(Scroll.prototype),'deleteAt',this).call(this,index,length);if(last!=null&&first!==last&&offset>0&&!(first instanceof _block.BlockEmbed)&&!(last instanceof _block.BlockEmbed)){if(last instanceof _code2.default){last.deleteAt(last.length()-1,1);}var ref=last.children.head instanceof _break2.default?null:last.children.head;first.moveChildren(last,ref);first.remove();}this.optimize();}},{key:'formatAt',value:function formatAt(index,length,format,value){if(this.whitelist!=null&&!this.whitelist[format])return;_get(Scroll.prototype.__proto__||Object.getPrototypeOf(Scroll.prototype),'formatAt',this).call(this,index,length,format,value);this.optimize();}},{key:'insertAt',value:function insertAt(index,value,def){if(def!=null&&this.whitelist!=null&&!this.whitelist[value])return;if(index>=this.length()){if(def==null||_parchment2.default.query(value,_parchment2.default.Scope.BLOCK)==null){var blot=_parchment2.default.create(this.statics.defaultChild);this.appendChild(blot);if(def==null&&value.endsWith('\n')){value=value.slice(0,-1);}blot.insertAt(0,value,def);}else{var embed=_parchment2.default.create(value,def);this.appendChild(embed);}}else{_get(Scroll.prototype.__proto__||Object.getPrototypeOf(Scroll.prototype),'insertAt',this).call(this,index,value,def);}this.optimize();}},{key:'insertBefore',value:function insertBefore(blot,ref){if(blot.statics.scope===_parchment2.default.Scope.INLINE_BLOT){var wrapper=_parchment2.default.create(this.statics.defaultChild);wrapper.appendChild(blot);blot=wrapper;}_get(Scroll.prototype.__proto__||Object.getPrototypeOf(Scroll.prototype),'insertBefore',this).call(this,blot,ref);}},{key:'leaf',value:function leaf(index){return this.path(index).pop()||[null,-1];}},{key:'line',value:function line(index){return this.descendant(isLine,index);}},{key:'lines',value:function lines(){var index=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Number.MAX_VALUE;var getLines=function getLines(blot,index,length){var lines=[],lengthLeft=length;blot.children.forEachAt(index,length,function(child,index,length){if(isLine(child)){lines.push(child);}else if(child instanceof _parchment2.default.Container){lines=lines.concat(getLines(child,index,lengthLeft));}lengthLeft-=length;});return lines;};return getLines(this,index,length);}},{key:'optimize',value:function optimize(){var mutations=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];if(this.batch===true)return;_get(Scroll.prototype.__proto__||Object.getPrototypeOf(Scroll.prototype),'optimize',this).call(this,mutations);if(mutations.length>0){this.emitter.emit(_emitter2.default.events.SCROLL_OPTIMIZE,mutations);}}},{key:'path',value:function path(index){return _get(Scroll.prototype.__proto__||Object.getPrototypeOf(Scroll.prototype),'path',this).call(this,index).slice(1);// Exclude self
	}},{key:'update',value:function update(mutations){if(this.batch===true)return;var source=_emitter2.default.sources.USER;if(typeof mutations==='string'){source=mutations;}if(!Array.isArray(mutations)){mutations=this.observer.takeRecords();}if(mutations.length>0){this.emitter.emit(_emitter2.default.events.SCROLL_BEFORE_UPDATE,source,mutations);}_get(Scroll.prototype.__proto__||Object.getPrototypeOf(Scroll.prototype),'update',this).call(this,mutations.concat([]));// pass copy
	if(mutations.length>0){this.emitter.emit(_emitter2.default.events.SCROLL_UPDATE,source,mutations);}}}]);return Scroll;}(_parchment2.default.Scroll);Scroll.blotName='scroll';Scroll.className='ql-editor';Scroll.tagName='DIV';Scroll.defaultChild='block';Scroll.allowedChildren=[_block2.default,_block.BlockEmbed,_container2.default];exports.default=Scroll;/***/},/* 44 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.matchText=exports.matchSpacing=exports.matchNewline=exports.matchBlot=exports.matchAttributor=exports.default=undefined;var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _delta=__webpack_require__(20);var _delta2=_interopRequireDefault(_delta);var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _quill=__webpack_require__(18);var _quill2=_interopRequireDefault(_quill);var _logger=__webpack_require__(30);var _logger2=_interopRequireDefault(_logger);var _module=__webpack_require__(39);var _module2=_interopRequireDefault(_module);var _align=__webpack_require__(45);var _background=__webpack_require__(46);var _color=__webpack_require__(47);var _direction=__webpack_require__(48);var _font=__webpack_require__(49);var _size=__webpack_require__(50);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var debug=(0,_logger2.default)('quill:clipboard');var CLIPBOARD_CONFIG=[[Node.TEXT_NODE,matchText],['br',matchBreak],[Node.ELEMENT_NODE,matchNewline],[Node.ELEMENT_NODE,matchBlot],[Node.ELEMENT_NODE,matchSpacing],[Node.ELEMENT_NODE,matchAttributor],[Node.ELEMENT_NODE,matchStyles],['b',matchAlias.bind(matchAlias,'bold')],['i',matchAlias.bind(matchAlias,'italic')],['style',matchIgnore]];var ATTRIBUTE_ATTRIBUTORS=[_align.AlignAttribute,_direction.DirectionAttribute].reduce(function(memo,attr){memo[attr.keyName]=attr;return memo;},{});var STYLE_ATTRIBUTORS=[_align.AlignStyle,_background.BackgroundStyle,_color.ColorStyle,_direction.DirectionStyle,_font.FontStyle,_size.SizeStyle].reduce(function(memo,attr){memo[attr.keyName]=attr;return memo;},{});var Clipboard=function(_Module){_inherits(Clipboard,_Module);function Clipboard(quill,options){_classCallCheck(this,Clipboard);var _this=_possibleConstructorReturn(this,(Clipboard.__proto__||Object.getPrototypeOf(Clipboard)).call(this,quill,options));_this.quill.root.addEventListener('paste',_this.onPaste.bind(_this));_this.container=_this.quill.addContainer('ql-clipboard');_this.container.setAttribute('contenteditable',true);_this.container.setAttribute('tabindex',-1);_this.matchers=[];CLIPBOARD_CONFIG.concat(_this.options.matchers).forEach(function(pair){_this.addMatcher.apply(_this,_toConsumableArray(pair));});return _this;}_createClass(Clipboard,[{key:'addMatcher',value:function addMatcher(selector,matcher){this.matchers.push([selector,matcher]);}},{key:'convert',value:function convert(html){var _this2=this;var DOM_KEY='__ql-matcher';if(typeof html==='string'){this.container.innerHTML=html;}var textMatchers=[],elementMatchers=[];this.matchers.forEach(function(pair){var _pair=_slicedToArray(pair,2);var selector=_pair[0];var matcher=_pair[1];switch(selector){case Node.TEXT_NODE:textMatchers.push(matcher);break;case Node.ELEMENT_NODE:elementMatchers.push(matcher);break;default:[].forEach.call(_this2.container.querySelectorAll(selector),function(node){// TODO use weakmap
	node[DOM_KEY]=node[DOM_KEY]||[];node[DOM_KEY].push(matcher);});break;}});var traverse=function traverse(node){// Post-order
	if(node.nodeType===node.TEXT_NODE){return textMatchers.reduce(function(delta,matcher){return matcher(node,delta);},new _delta2.default());}else if(node.nodeType===node.ELEMENT_NODE){return[].reduce.call(node.childNodes||[],function(delta,childNode){var childrenDelta=traverse(childNode);if(childNode.nodeType===node.ELEMENT_NODE){childrenDelta=elementMatchers.reduce(function(childrenDelta,matcher){return matcher(childNode,childrenDelta);},childrenDelta);childrenDelta=(childNode[DOM_KEY]||[]).reduce(function(childrenDelta,matcher){return matcher(childNode,childrenDelta);},childrenDelta);}return delta.concat(childrenDelta);},new _delta2.default());}else{return new _delta2.default();}};var delta=traverse(this.container);// Remove trailing newline
	if(deltaEndsWith(delta,'\n')&&delta.ops[delta.ops.length-1].attributes==null){delta=delta.compose(new _delta2.default().retain(delta.length()-1).delete(1));}debug.log('convert',this.container.innerHTML,delta);this.container.innerHTML='';return delta;}},{key:'dangerouslyPasteHTML',value:function dangerouslyPasteHTML(index,html){var source=arguments.length>2&&arguments[2]!==undefined?arguments[2]:_quill2.default.sources.API;if(typeof index==='string'){return this.quill.setContents(this.convert(index),html);}else{var paste=this.convert(html);return this.quill.updateContents(new _delta2.default().retain(index).concat(paste),source);}}},{key:'onPaste',value:function onPaste(e){var _this3=this;if(e.defaultPrevented)return;var range=this.quill.getSelection();var delta=new _delta2.default().retain(range.index).delete(range.length);var bodyTop=document.body.scrollTop;this.container.focus();setTimeout(function(){_this3.quill.selection.update(_quill2.default.sources.SILENT);delta=delta.concat(_this3.convert());_this3.quill.updateContents(delta,_quill2.default.sources.USER);// range.length contributes to delta.length()
	_this3.quill.setSelection(delta.length()-range.length,_quill2.default.sources.SILENT);document.body.scrollTop=bodyTop;_this3.quill.selection.scrollIntoView();},1);}}]);return Clipboard;}(_module2.default);Clipboard.DEFAULTS={matchers:[]};function computeStyle(node){if(node.nodeType!==Node.ELEMENT_NODE)return{};var DOM_KEY='__ql-computed-style';return node[DOM_KEY]||(node[DOM_KEY]=window.getComputedStyle(node));}function deltaEndsWith(delta,text){var endText="";for(var i=delta.ops.length-1;i>=0&&endText.length<text.length;--i){var op=delta.ops[i];if(typeof op.insert!=='string')break;endText=op.insert+endText;}return endText.slice(-1*text.length)===text;}function isLine(node){if(node.childNodes.length===0)return false;// Exclude embed blocks
	var style=computeStyle(node);return['block','list-item'].indexOf(style.display)>-1;}function matchAlias(format,node,delta){return delta.compose(new _delta2.default().retain(delta.length(),_defineProperty({},format,true)));}function matchAttributor(node,delta){var attributes=_parchment2.default.Attributor.Attribute.keys(node);var classes=_parchment2.default.Attributor.Class.keys(node);var styles=_parchment2.default.Attributor.Style.keys(node);var formats={};attributes.concat(classes).concat(styles).forEach(function(name){var attr=_parchment2.default.query(name,_parchment2.default.Scope.ATTRIBUTE);if(attr!=null){formats[attr.attrName]=attr.value(node);if(formats[attr.attrName])return;}if(ATTRIBUTE_ATTRIBUTORS[name]!=null){attr=ATTRIBUTE_ATTRIBUTORS[name];formats[attr.attrName]=attr.value(node);}if(STYLE_ATTRIBUTORS[name]!=null){attr=STYLE_ATTRIBUTORS[name];formats[attr.attrName]=attr.value(node);}});if(Object.keys(formats).length>0){delta=delta.compose(new _delta2.default().retain(delta.length(),formats));}return delta;}function matchBlot(node,delta){var match=_parchment2.default.query(node);if(match==null)return delta;if(match.prototype instanceof _parchment2.default.Embed){var embed={};var value=match.value(node);if(value!=null){embed[match.blotName]=value;delta=new _delta2.default().insert(embed,match.formats(node));}}else if(typeof match.formats==='function'){var formats=_defineProperty({},match.blotName,match.formats(node));delta=delta.compose(new _delta2.default().retain(delta.length(),formats));}return delta;}function matchBreak(node,delta){if(!deltaEndsWith(delta,'\n')){delta.insert('\n');}return delta;}function matchIgnore(node,delta){return new _delta2.default();}function matchNewline(node,delta){if(isLine(node)&&!deltaEndsWith(delta,'\n')){delta.insert('\n');}return delta;}function matchSpacing(node,delta){if(isLine(node)&&node.nextElementSibling!=null&&!deltaEndsWith(delta,'\n\n')){var nodeHeight=node.offsetHeight+parseFloat(computeStyle(node).marginTop)+parseFloat(computeStyle(node).marginBottom);if(node.nextElementSibling.offsetTop>node.offsetTop+nodeHeight*1.5){delta.insert('\n');}}return delta;}function matchStyles(node,delta){var formats={};var style=node.style||{};if(style.fontWeight&&computeStyle(node).fontWeight==='bold'){formats.bold=true;}if(Object.keys(formats).length>0){delta=delta.compose(new _delta2.default().retain(delta.length(),formats));}if(parseFloat(style.textIndent||0)>0){// Could be 0.5in
	delta=new _delta2.default().insert('\t').concat(delta);}return delta;}function matchText(node,delta){var text=node.data;// Word represents empty line with <o:p>&nbsp;</o:p>
	if(node.parentNode.tagName==='O:P'){return delta.insert(text.trim());}if(!computeStyle(node.parentNode).whiteSpace.startsWith('pre')){var replacer=function replacer(collapse,match){match=match.replace(/[^\u00a0]/g,'');// \u00a0 is nbsp;
	return match.length<1&&collapse?' ':match;};text=text.replace(/\r\n/g,' ').replace(/\n/g,' ');text=text.replace(/\s\s+/g,replacer.bind(replacer,true));// collapse whitespace
	if(node.previousSibling==null&&isLine(node.parentNode)||node.previousSibling!=null&&isLine(node.previousSibling)){text=text.replace(/^\s+/,replacer.bind(replacer,false));}if(node.nextSibling==null&&isLine(node.parentNode)||node.nextSibling!=null&&isLine(node.nextSibling)){text=text.replace(/\s+$/,replacer.bind(replacer,false));}}return delta.insert(text);}exports.default=Clipboard;exports.matchAttributor=matchAttributor;exports.matchBlot=matchBlot;exports.matchNewline=matchNewline;exports.matchSpacing=matchSpacing;exports.matchText=matchText;/***/},/* 45 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.AlignStyle=exports.AlignClass=exports.AlignAttribute=undefined;var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var config={scope:_parchment2.default.Scope.BLOCK,whitelist:['right','center','justify']};var AlignAttribute=new _parchment2.default.Attributor.Attribute('align','align',config);var AlignClass=new _parchment2.default.Attributor.Class('align','ql-align',config);var AlignStyle=new _parchment2.default.Attributor.Style('align','text-align',config);exports.AlignAttribute=AlignAttribute;exports.AlignClass=AlignClass;exports.AlignStyle=AlignStyle;/***/},/* 46 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.BackgroundStyle=exports.BackgroundClass=undefined;var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _color=__webpack_require__(47);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var BackgroundClass=new _parchment2.default.Attributor.Class('background','ql-bg',{scope:_parchment2.default.Scope.INLINE});var BackgroundStyle=new _color.ColorAttributor('background','background-color',{scope:_parchment2.default.Scope.INLINE});exports.BackgroundClass=BackgroundClass;exports.BackgroundStyle=BackgroundStyle;/***/},/* 47 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.ColorStyle=exports.ColorClass=exports.ColorAttributor=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var ColorAttributor=function(_Parchment$Attributor){_inherits(ColorAttributor,_Parchment$Attributor);function ColorAttributor(){_classCallCheck(this,ColorAttributor);return _possibleConstructorReturn(this,(ColorAttributor.__proto__||Object.getPrototypeOf(ColorAttributor)).apply(this,arguments));}_createClass(ColorAttributor,[{key:'value',value:function value(domNode){var value=_get(ColorAttributor.prototype.__proto__||Object.getPrototypeOf(ColorAttributor.prototype),'value',this).call(this,domNode);if(!value.startsWith('rgb('))return value;value=value.replace(/^[^\d]+/,'').replace(/[^\d]+$/,'');return'#'+value.split(',').map(function(component){return('00'+parseInt(component).toString(16)).slice(-2);}).join('');}}]);return ColorAttributor;}(_parchment2.default.Attributor.Style);var ColorClass=new _parchment2.default.Attributor.Class('color','ql-color',{scope:_parchment2.default.Scope.INLINE});var ColorStyle=new ColorAttributor('color','color',{scope:_parchment2.default.Scope.INLINE});exports.ColorAttributor=ColorAttributor;exports.ColorClass=ColorClass;exports.ColorStyle=ColorStyle;/***/},/* 48 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.DirectionStyle=exports.DirectionClass=exports.DirectionAttribute=undefined;var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var config={scope:_parchment2.default.Scope.BLOCK,whitelist:['rtl']};var DirectionAttribute=new _parchment2.default.Attributor.Attribute('direction','dir',config);var DirectionClass=new _parchment2.default.Attributor.Class('direction','ql-direction',config);var DirectionStyle=new _parchment2.default.Attributor.Style('direction','direction',config);exports.DirectionAttribute=DirectionAttribute;exports.DirectionClass=DirectionClass;exports.DirectionStyle=DirectionStyle;/***/},/* 49 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.FontClass=exports.FontStyle=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var config={scope:_parchment2.default.Scope.INLINE,whitelist:['serif','monospace']};var FontClass=new _parchment2.default.Attributor.Class('font','ql-font',config);var FontStyleAttributor=function(_Parchment$Attributor){_inherits(FontStyleAttributor,_Parchment$Attributor);function FontStyleAttributor(){_classCallCheck(this,FontStyleAttributor);return _possibleConstructorReturn(this,(FontStyleAttributor.__proto__||Object.getPrototypeOf(FontStyleAttributor)).apply(this,arguments));}_createClass(FontStyleAttributor,[{key:'value',value:function value(node){return _get(FontStyleAttributor.prototype.__proto__||Object.getPrototypeOf(FontStyleAttributor.prototype),'value',this).call(this,node).replace(/["']/g,'');}}]);return FontStyleAttributor;}(_parchment2.default.Attributor.Style);var FontStyle=new FontStyleAttributor('font','font-family',config);exports.FontStyle=FontStyle;exports.FontClass=FontClass;/***/},/* 50 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.SizeStyle=exports.SizeClass=undefined;var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var SizeClass=new _parchment2.default.Attributor.Class('size','ql-size',{scope:_parchment2.default.Scope.INLINE,whitelist:['small','large','huge']});var SizeStyle=new _parchment2.default.Attributor.Style('size','font-size',{scope:_parchment2.default.Scope.INLINE,whitelist:['10px','18px','32px']});exports.SizeClass=SizeClass;exports.SizeStyle=SizeStyle;/***/},/* 51 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.getLastChangeIndex=exports.default=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _quill=__webpack_require__(18);var _quill2=_interopRequireDefault(_quill);var _module=__webpack_require__(39);var _module2=_interopRequireDefault(_module);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var History=function(_Module){_inherits(History,_Module);function History(quill,options){_classCallCheck(this,History);var _this=_possibleConstructorReturn(this,(History.__proto__||Object.getPrototypeOf(History)).call(this,quill,options));_this.lastRecorded=0;_this.ignoreChange=false;_this.clear();_this.quill.on(_quill2.default.events.EDITOR_CHANGE,function(eventName,delta,oldDelta,source){if(eventName!==_quill2.default.events.TEXT_CHANGE||_this.ignoreChange)return;if(!_this.options.userOnly||source===_quill2.default.sources.USER){_this.record(delta,oldDelta);}else{_this.transform(delta);}});_this.quill.keyboard.addBinding({key:'Z',shortKey:true},_this.undo.bind(_this));_this.quill.keyboard.addBinding({key:'Z',shortKey:true,shiftKey:true},_this.redo.bind(_this));if(/Win/i.test(navigator.platform)){_this.quill.keyboard.addBinding({key:'Y',shortKey:true},_this.redo.bind(_this));}return _this;}_createClass(History,[{key:'change',value:function change(source,dest){if(this.stack[source].length===0)return;var delta=this.stack[source].pop();this.lastRecorded=0;this.ignoreChange=true;this.quill.updateContents(delta[source],_quill2.default.sources.USER);this.ignoreChange=false;var index=getLastChangeIndex(delta[source]);this.quill.setSelection(index);this.quill.selection.scrollIntoView();this.stack[dest].push(delta);}},{key:'clear',value:function clear(){this.stack={undo:[],redo:[]};}},{key:'record',value:function record(changeDelta,oldDelta){if(changeDelta.ops.length===0)return;this.stack.redo=[];var undoDelta=this.quill.getContents().diff(oldDelta);var timestamp=Date.now();if(this.lastRecorded+this.options.delay>timestamp&&this.stack.undo.length>0){var delta=this.stack.undo.pop();undoDelta=undoDelta.compose(delta.undo);changeDelta=delta.redo.compose(changeDelta);}else{this.lastRecorded=timestamp;}this.stack.undo.push({redo:changeDelta,undo:undoDelta});if(this.stack.undo.length>this.options.maxStack){this.stack.undo.shift();}}},{key:'redo',value:function redo(){this.change('redo','undo');}},{key:'transform',value:function transform(delta){this.stack.undo.forEach(function(change){change.undo=delta.transform(change.undo,true);change.redo=delta.transform(change.redo,true);});this.stack.redo.forEach(function(change){change.undo=delta.transform(change.undo,true);change.redo=delta.transform(change.redo,true);});}},{key:'undo',value:function undo(){this.change('undo','redo');}}]);return History;}(_module2.default);History.DEFAULTS={delay:1000,maxStack:100,userOnly:false};function endsWithNewlineChange(delta){var lastOp=delta.ops[delta.ops.length-1];if(lastOp==null)return false;if(lastOp.insert!=null){return typeof lastOp.insert==='string'&&lastOp.insert.endsWith('\n');}if(lastOp.attributes!=null){return Object.keys(lastOp.attributes).some(function(attr){return _parchment2.default.query(attr,_parchment2.default.Scope.BLOCK)!=null;});}return false;}function getLastChangeIndex(delta){var deleteLength=delta.ops.reduce(function(length,op){length+=op.delete||0;return length;},0);var changeIndex=delta.length()-deleteLength;if(endsWithNewlineChange(delta)){changeIndex-=1;}return changeIndex;}exports.default=History;exports.getLastChangeIndex=getLastChangeIndex;/***/},/* 52 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _typeof=typeof Symbol==="function"&&_typeof2(Symbol.iterator)==="symbol"?function(obj){return typeof obj==='undefined'?'undefined':_typeof2(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj==='undefined'?'undefined':_typeof2(obj);};var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _clone=__webpack_require__(38);var _clone2=_interopRequireDefault(_clone);var _deepEqual=__webpack_require__(22);var _deepEqual2=_interopRequireDefault(_deepEqual);var _extend=__webpack_require__(25);var _extend2=_interopRequireDefault(_extend);var _delta=__webpack_require__(20);var _delta2=_interopRequireDefault(_delta);var _op=__webpack_require__(26);var _op2=_interopRequireDefault(_op);var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _quill=__webpack_require__(18);var _quill2=_interopRequireDefault(_quill);var _logger=__webpack_require__(30);var _logger2=_interopRequireDefault(_logger);var _module=__webpack_require__(39);var _module2=_interopRequireDefault(_module);var _block=__webpack_require__(32);var _block2=_interopRequireDefault(_block);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var debug=(0,_logger2.default)('quill:keyboard');var SHORTKEY=/Mac/i.test(navigator.platform)?'metaKey':'ctrlKey';var Keyboard=function(_Module){_inherits(Keyboard,_Module);_createClass(Keyboard,null,[{key:'match',value:function match(evt,binding){binding=normalize(binding);if(!!binding.shortKey!==evt[SHORTKEY]&&binding.shortKey!==null)return false;if(['altKey','ctrlKey','metaKey','shiftKey'].some(function(key){return key!=SHORTKEY&&!!binding[key]!==evt[key]&&binding[key]!==null;})){return false;}return binding.key===(evt.which||evt.keyCode);}}]);function Keyboard(quill,options){_classCallCheck(this,Keyboard);var _this=_possibleConstructorReturn(this,(Keyboard.__proto__||Object.getPrototypeOf(Keyboard)).call(this,quill,options));_this.bindings={};Object.keys(_this.options.bindings).forEach(function(name){if(_this.options.bindings[name]){_this.addBinding(_this.options.bindings[name]);}});_this.addBinding({key:Keyboard.keys.ENTER,shiftKey:null},handleEnter);_this.addBinding({key:Keyboard.keys.ENTER,metaKey:null,ctrlKey:null,altKey:null},function(){});_this.addBinding({key:Keyboard.keys.BACKSPACE},{collapsed:true,prefix:/^.?$/},function(range,context){if(range.index===0)return;var _quill$scroll$line=this.quill.scroll.line(range.index);var _quill$scroll$line2=_slicedToArray(_quill$scroll$line,1);var line=_quill$scroll$line2[0];var formats={};if(context.offset===0){var curFormats=line.formats();var prevFormats=this.quill.getFormat(range.index-1,1);formats=_op2.default.attributes.diff(curFormats,prevFormats)||{};}this.quill.deleteText(range.index-1,1,_quill2.default.sources.USER);if(Object.keys(formats).length>0){this.quill.formatLine(range.index-1,1,formats,_quill2.default.sources.USER);}this.quill.selection.scrollIntoView();});_this.addBinding({key:Keyboard.keys.DELETE},{collapsed:true,suffix:/^$/},function(range){if(range.index>=this.quill.getLength()-1)return;this.quill.deleteText(range.index,1,_quill2.default.sources.USER);});_this.addBinding({key:Keyboard.keys.BACKSPACE},{collapsed:false},handleDelete);_this.addBinding({key:Keyboard.keys.DELETE},{collapsed:false},handleDelete);_this.listen();return _this;}_createClass(Keyboard,[{key:'addBinding',value:function addBinding(key){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var handler=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var binding=normalize(key);if(binding==null||binding.key==null){return debug.warn('Attempted to add invalid keyboard binding',binding);}if(typeof context==='function'){context={handler:context};}if(typeof handler==='function'){handler={handler:handler};}binding=(0,_extend2.default)(binding,context,handler);this.bindings[binding.key]=this.bindings[binding.key]||[];this.bindings[binding.key].push(binding);}},{key:'listen',value:function listen(){var _this2=this;this.quill.root.addEventListener('keydown',function(evt){if(evt.defaultPrevented)return;var which=evt.which||evt.keyCode;var bindings=(_this2.bindings[which]||[]).filter(function(binding){return Keyboard.match(evt,binding);});if(bindings.length===0)return;var range=_this2.quill.getSelection();if(range==null)return;// implies we do not have focus
	var _quill$scroll$line3=_this2.quill.scroll.line(range.index);var _quill$scroll$line4=_slicedToArray(_quill$scroll$line3,2);var line=_quill$scroll$line4[0];var offset=_quill$scroll$line4[1];var _quill$scroll$leaf=_this2.quill.scroll.leaf(range.index);var _quill$scroll$leaf2=_slicedToArray(_quill$scroll$leaf,2);var leafStart=_quill$scroll$leaf2[0];var offsetStart=_quill$scroll$leaf2[1];var _ref=range.length===0?[leafStart,offsetStart]:_this2.quill.scroll.leaf(range.index+range.length);var _ref2=_slicedToArray(_ref,2);var leafEnd=_ref2[0];var offsetEnd=_ref2[1];var prefixText=leafStart instanceof _parchment2.default.Text?leafStart.value().slice(0,offsetStart):'';var suffixText=leafEnd instanceof _parchment2.default.Text?leafEnd.value().slice(offsetEnd):'';var curContext={collapsed:range.length===0,empty:range.length===0&&line.length()<=1,format:_this2.quill.getFormat(range),offset:offset,prefix:prefixText,suffix:suffixText};var prevented=bindings.some(function(binding){if(binding.collapsed!=null&&binding.collapsed!==curContext.collapsed)return false;if(binding.empty!=null&&binding.empty!==curContext.empty)return false;if(binding.offset!=null&&binding.offset!==curContext.offset)return false;if(Array.isArray(binding.format)){// any format is present
	if(binding.format.every(function(name){return curContext.format[name]==null;})){return false;}}else if(_typeof(binding.format)==='object'){// all formats must match
	if(!Object.keys(binding.format).every(function(name){if(binding.format[name]===true)return curContext.format[name]!=null;if(binding.format[name]===false)return curContext.format[name]==null;return(0,_deepEqual2.default)(binding.format[name],curContext.format[name]);})){return false;}}if(binding.prefix!=null&&!binding.prefix.test(curContext.prefix))return false;if(binding.suffix!=null&&!binding.suffix.test(curContext.suffix))return false;return binding.handler.call(_this2,range,curContext)!==true;});if(prevented){evt.preventDefault();}});}}]);return Keyboard;}(_module2.default);Keyboard.keys={BACKSPACE:8,TAB:9,ENTER:13,ESCAPE:27,LEFT:37,UP:38,RIGHT:39,DOWN:40,DELETE:46};Keyboard.DEFAULTS={bindings:{'bold':makeFormatHandler('bold'),'italic':makeFormatHandler('italic'),'underline':makeFormatHandler('underline'),'indent':{// highlight tab or tab at beginning of list, indent or blockquote
	key:Keyboard.keys.TAB,format:['blockquote','indent','list'],handler:function handler(range,context){if(context.collapsed&&context.offset!==0)return true;this.quill.format('indent','+1',_quill2.default.sources.USER);}},'outdent':{key:Keyboard.keys.TAB,shiftKey:true,format:['blockquote','indent','list'],// highlight tab or tab at beginning of list, indent or blockquote
	handler:function handler(range,context){if(context.collapsed&&context.offset!==0)return true;this.quill.format('indent','-1',_quill2.default.sources.USER);}},'outdent backspace':{key:Keyboard.keys.BACKSPACE,collapsed:true,format:['blockquote','indent','list'],offset:0,handler:function handler(range,context){if(context.format.indent!=null){this.quill.format('indent','-1',_quill2.default.sources.USER);}else if(context.format.blockquote!=null){this.quill.format('blockquote',false,_quill2.default.sources.USER);}else if(context.format.list!=null){this.quill.format('list',false,_quill2.default.sources.USER);}}},'indent code-block':makeCodeBlockHandler(true),'outdent code-block':makeCodeBlockHandler(false),'remove tab':{key:Keyboard.keys.TAB,shiftKey:true,collapsed:true,prefix:/\t$/,handler:function handler(range,context){this.quill.deleteText(range.index-1,1,_quill2.default.sources.USER);}},'tab':{key:Keyboard.keys.TAB,handler:function handler(range,context){if(!context.collapsed){this.quill.scroll.deleteAt(range.index,range.length);}this.quill.insertText(range.index,'\t',_quill2.default.sources.USER);this.quill.setSelection(range.index+1,_quill2.default.sources.SILENT);}},'list empty enter':{key:Keyboard.keys.ENTER,collapsed:true,format:['list'],empty:true,handler:function handler(range,context){this.quill.format('list',false,_quill2.default.sources.USER);if(context.format.indent){this.quill.format('indent',false,_quill2.default.sources.USER);}}},'header enter':{key:Keyboard.keys.ENTER,collapsed:true,format:['header'],suffix:/^$/,handler:function handler(range){this.quill.scroll.insertAt(range.index,'\n');this.quill.formatText(range.index+1,1,'header',false,_quill2.default.sources.USER);this.quill.setSelection(range.index+1,_quill2.default.sources.SILENT);this.quill.selection.scrollIntoView();}},'list autofill':{key:' ',collapsed:true,format:{list:false},prefix:/^(1\.|-)$/,handler:function handler(range,context){var length=context.prefix.length;this.quill.scroll.deleteAt(range.index-length,length);this.quill.formatLine(range.index-length,1,'list',length===1?'bullet':'ordered',_quill2.default.sources.USER);this.quill.setSelection(range.index-length,_quill2.default.sources.SILENT);}}}};function handleDelete(range){this.quill.deleteText(range,_quill2.default.sources.USER);this.quill.setSelection(range.index,_quill2.default.sources.SILENT);this.quill.selection.scrollIntoView();}function handleEnter(range,context){var _this3=this;if(range.length>0){this.quill.scroll.deleteAt(range.index,range.length);// So we do not trigger text-change
	}var lineFormats=Object.keys(context.format).reduce(function(lineFormats,format){if(_parchment2.default.query(format,_parchment2.default.Scope.BLOCK)&&!Array.isArray(context.format[format])){lineFormats[format]=context.format[format];}return lineFormats;},{});this.quill.insertText(range.index,'\n',lineFormats,_quill2.default.sources.USER);this.quill.selection.scrollIntoView();Object.keys(context.format).forEach(function(name){if(lineFormats[name]!=null)return;if(Array.isArray(context.format[name]))return;if(name==='link')return;_this3.quill.format(name,context.format[name],_quill2.default.sources.USER);});}function makeCodeBlockHandler(indent){return{key:Keyboard.keys.TAB,shiftKey:!indent,format:{'code-block':true},handler:function handler(range){var CodeBlock=_parchment2.default.query('code-block');var index=range.index,length=range.length;var _quill$scroll$descend=this.quill.scroll.descendant(CodeBlock,index);var _quill$scroll$descend2=_slicedToArray(_quill$scroll$descend,2);var block=_quill$scroll$descend2[0];var offset=_quill$scroll$descend2[1];if(block==null)return;var scrollOffset=this.quill.scroll.offset(block);var start=block.newlineIndex(offset,true)+1;var end=block.newlineIndex(scrollOffset+offset+length);var lines=block.domNode.textContent.slice(start,end).split('\n');offset=0;lines.forEach(function(line,i){if(indent){block.insertAt(start+offset,CodeBlock.TAB);offset+=CodeBlock.TAB.length;if(i===0){index+=CodeBlock.TAB.length;}else{length+=CodeBlock.TAB.length;}}else if(line.startsWith(CodeBlock.TAB)){block.deleteAt(start+offset,CodeBlock.TAB.length);offset-=CodeBlock.TAB.length;if(i===0){index-=CodeBlock.TAB.length;}else{length-=CodeBlock.TAB.length;}}offset+=line.length+1;});this.quill.update(_quill2.default.sources.USER);this.quill.setSelection(index,length,_quill2.default.sources.SILENT);}};}function makeFormatHandler(format){return{key:format[0].toUpperCase(),shortKey:true,handler:function handler(range,context){this.quill.format(format,!context.format[format],_quill2.default.sources.USER);}};}function normalize(binding){if(typeof binding==='string'||typeof binding==='number'){return normalize({key:binding});}if((typeof binding==='undefined'?'undefined':_typeof(binding))==='object'){binding=(0,_clone2.default)(binding,false);}if(typeof binding.key==='string'){if(Keyboard.keys[binding.key.toUpperCase()]!=null){binding.key=Keyboard.keys[binding.key.toUpperCase()];}else if(binding.key.length===1){binding.key=binding.key.toUpperCase().charCodeAt(0);}else{return null;}}return binding;}exports.default=Keyboard;/***/},/* 53 *//***/function(module,exports,__webpack_require__){'use strict';var _core=__webpack_require__(1);var _core2=_interopRequireDefault(_core);var _align=__webpack_require__(45);var _direction=__webpack_require__(48);var _indent=__webpack_require__(54);var _blockquote=__webpack_require__(55);var _blockquote2=_interopRequireDefault(_blockquote);var _header=__webpack_require__(56);var _header2=_interopRequireDefault(_header);var _list=__webpack_require__(57);var _list2=_interopRequireDefault(_list);var _background=__webpack_require__(46);var _color=__webpack_require__(47);var _font=__webpack_require__(49);var _size=__webpack_require__(50);var _bold=__webpack_require__(58);var _bold2=_interopRequireDefault(_bold);var _italic=__webpack_require__(59);var _italic2=_interopRequireDefault(_italic);var _link=__webpack_require__(60);var _link2=_interopRequireDefault(_link);var _script=__webpack_require__(61);var _script2=_interopRequireDefault(_script);var _strike=__webpack_require__(62);var _strike2=_interopRequireDefault(_strike);var _underline=__webpack_require__(63);var _underline2=_interopRequireDefault(_underline);var _image=__webpack_require__(64);var _image2=_interopRequireDefault(_image);var _video=__webpack_require__(65);var _video2=_interopRequireDefault(_video);var _code=__webpack_require__(31);var _code2=_interopRequireDefault(_code);var _formula=__webpack_require__(66);var _formula2=_interopRequireDefault(_formula);var _syntax=__webpack_require__(67);var _syntax2=_interopRequireDefault(_syntax);var _toolbar=__webpack_require__(68);var _toolbar2=_interopRequireDefault(_toolbar);var _icons=__webpack_require__(69);var _icons2=_interopRequireDefault(_icons);var _picker=__webpack_require__(101);var _picker2=_interopRequireDefault(_picker);var _colorPicker=__webpack_require__(103);var _colorPicker2=_interopRequireDefault(_colorPicker);var _iconPicker=__webpack_require__(104);var _iconPicker2=_interopRequireDefault(_iconPicker);var _tooltip=__webpack_require__(105);var _tooltip2=_interopRequireDefault(_tooltip);var _bubble=__webpack_require__(106);var _bubble2=_interopRequireDefault(_bubble);var _snow=__webpack_require__(108);var _snow2=_interopRequireDefault(_snow);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}_core2.default.register({'attributors/attribute/direction':_direction.DirectionAttribute,'attributors/class/align':_align.AlignClass,'attributors/class/background':_background.BackgroundClass,'attributors/class/color':_color.ColorClass,'attributors/class/direction':_direction.DirectionClass,'attributors/class/font':_font.FontClass,'attributors/class/size':_size.SizeClass,'attributors/style/align':_align.AlignStyle,'attributors/style/background':_background.BackgroundStyle,'attributors/style/color':_color.ColorStyle,'attributors/style/direction':_direction.DirectionStyle,'attributors/style/font':_font.FontStyle,'attributors/style/size':_size.SizeStyle},true);_core2.default.register({'formats/align':_align.AlignClass,'formats/direction':_direction.DirectionClass,'formats/indent':_indent.IndentClass,'formats/background':_background.BackgroundStyle,'formats/color':_color.ColorStyle,'formats/font':_font.FontClass,'formats/size':_size.SizeClass,'formats/blockquote':_blockquote2.default,'formats/code-block':_code2.default,'formats/header':_header2.default,'formats/list':_list2.default,'formats/bold':_bold2.default,'formats/code':_code.Code,'formats/italic':_italic2.default,'formats/link':_link2.default,'formats/script':_script2.default,'formats/strike':_strike2.default,'formats/underline':_underline2.default,'formats/image':_image2.default,'formats/video':_video2.default,'formats/list/item':_list.ListItem,'modules/formula':_formula2.default,'modules/syntax':_syntax2.default,'modules/toolbar':_toolbar2.default,'themes/bubble':_bubble2.default,'themes/snow':_snow2.default,'ui/icons':_icons2.default,'ui/picker':_picker2.default,'ui/icon-picker':_iconPicker2.default,'ui/color-picker':_colorPicker2.default,'ui/tooltip':_tooltip2.default},true);module.exports=_core2.default;/***/},/* 54 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.IndentClass=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var IdentAttributor=function(_Parchment$Attributor){_inherits(IdentAttributor,_Parchment$Attributor);function IdentAttributor(){_classCallCheck(this,IdentAttributor);return _possibleConstructorReturn(this,(IdentAttributor.__proto__||Object.getPrototypeOf(IdentAttributor)).apply(this,arguments));}_createClass(IdentAttributor,[{key:'add',value:function add(node,value){if(value==='+1'||value==='-1'){var indent=this.value(node)||0;value=value==='+1'?indent+1:indent-1;}if(value===0){this.remove(node);return true;}else{return _get(IdentAttributor.prototype.__proto__||Object.getPrototypeOf(IdentAttributor.prototype),'add',this).call(this,node,value);}}},{key:'value',value:function value(node){return parseInt(_get(IdentAttributor.prototype.__proto__||Object.getPrototypeOf(IdentAttributor.prototype),'value',this).call(this,node))||undefined;// Don't return NaN
	}}]);return IdentAttributor;}(_parchment2.default.Attributor.Class);var IndentClass=new IdentAttributor('indent','ql-indent',{scope:_parchment2.default.Scope.BLOCK,whitelist:[1,2,3,4,5,6,7,8]});exports.IndentClass=IndentClass;/***/},/* 55 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _block=__webpack_require__(32);var _block2=_interopRequireDefault(_block);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Blockquote=function(_Block){_inherits(Blockquote,_Block);function Blockquote(){_classCallCheck(this,Blockquote);return _possibleConstructorReturn(this,(Blockquote.__proto__||Object.getPrototypeOf(Blockquote)).apply(this,arguments));}return Blockquote;}(_block2.default);Blockquote.blotName='blockquote';Blockquote.tagName='blockquote';exports.default=Blockquote;/***/},/* 56 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _block=__webpack_require__(32);var _block2=_interopRequireDefault(_block);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Header=function(_Block){_inherits(Header,_Block);function Header(){_classCallCheck(this,Header);return _possibleConstructorReturn(this,(Header.__proto__||Object.getPrototypeOf(Header)).apply(this,arguments));}_createClass(Header,null,[{key:'formats',value:function formats(domNode){return this.tagName.indexOf(domNode.tagName)+1;}}]);return Header;}(_block2.default);Header.blotName='header';Header.tagName=['H1','H2','H3','H4','H5','H6'];exports.default=Header;/***/},/* 57 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.ListItem=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _extend=__webpack_require__(25);var _extend2=_interopRequireDefault(_extend);var _delta=__webpack_require__(20);var _delta2=_interopRequireDefault(_delta);var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _block=__webpack_require__(32);var _block2=_interopRequireDefault(_block);var _container=__webpack_require__(42);var _container2=_interopRequireDefault(_container);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var ListItem=function(_Block){_inherits(ListItem,_Block);function ListItem(){_classCallCheck(this,ListItem);return _possibleConstructorReturn(this,(ListItem.__proto__||Object.getPrototypeOf(ListItem)).apply(this,arguments));}_createClass(ListItem,[{key:'format',value:function format(name,value){if(name===List.blotName&&!value){this.replaceWith(_parchment2.default.create(this.statics.scope));}else{_get(ListItem.prototype.__proto__||Object.getPrototypeOf(ListItem.prototype),'format',this).call(this,name,value);}}},{key:'remove',value:function remove(){if(this.prev==null&&this.next==null){this.parent.remove();}else{_get(ListItem.prototype.__proto__||Object.getPrototypeOf(ListItem.prototype),'remove',this).call(this);}}},{key:'replaceWith',value:function replaceWith(name,value){this.parent.isolate(this.offset(this.parent),this.length());if(name===this.parent.statics.blotName){this.parent.replaceWith(name,value);return this;}else{this.parent.unwrap();return _get(ListItem.prototype.__proto__||Object.getPrototypeOf(ListItem.prototype),'replaceWith',this).call(this,name,value);}}}],[{key:'formats',value:function formats(domNode){return domNode.tagName===this.tagName?undefined:_get(ListItem.__proto__||Object.getPrototypeOf(ListItem),'formats',this).call(this,domNode);}}]);return ListItem;}(_block2.default);ListItem.blotName='list-item';ListItem.tagName='LI';var List=function(_Container){_inherits(List,_Container);function List(){_classCallCheck(this,List);return _possibleConstructorReturn(this,(List.__proto__||Object.getPrototypeOf(List)).apply(this,arguments));}_createClass(List,[{key:'format',value:function format(name,value){if(this.children.length>0){this.children.tail.format(name,value);}}},{key:'formats',value:function formats(){// We don't inherit from FormatBlot
	return _defineProperty({},this.statics.blotName,this.statics.formats(this.domNode));}},{key:'insertBefore',value:function insertBefore(blot,ref){if(blot instanceof ListItem){_get(List.prototype.__proto__||Object.getPrototypeOf(List.prototype),'insertBefore',this).call(this,blot,ref);}else{var index=ref==null?this.length():ref.offset(this);var after=this.split(index);after.parent.insertBefore(blot,after);}}},{key:'optimize',value:function optimize(){_get(List.prototype.__proto__||Object.getPrototypeOf(List.prototype),'optimize',this).call(this);var next=this.next;if(next!=null&&next.prev===this&&next.statics.blotName===this.statics.blotName&&next.domNode.tagName===this.domNode.tagName){next.moveChildren(this);next.remove();}}},{key:'replace',value:function replace(target){if(target.statics.blotName!==this.statics.blotName){var item=_parchment2.default.create(this.statics.defaultChild);target.moveChildren(item);this.appendChild(item);}_get(List.prototype.__proto__||Object.getPrototypeOf(List.prototype),'replace',this).call(this,target);}}],[{key:'create',value:function create(value){if(value==='ordered'){value='OL';}else if(value==='bullet'){value='UL';}return _get(List.__proto__||Object.getPrototypeOf(List),'create',this).call(this,value);}},{key:'formats',value:function formats(domNode){if(domNode.tagName==='OL')return'ordered';if(domNode.tagName==='UL')return'bullet';return undefined;}}]);return List;}(_container2.default);List.blotName='list';List.scope=_parchment2.default.Scope.BLOCK_BLOT;List.tagName=['OL','UL'];List.defaultChild='list-item';List.allowedChildren=[ListItem];exports.ListItem=ListItem;exports.default=List;/***/},/* 58 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _inline=__webpack_require__(35);var _inline2=_interopRequireDefault(_inline);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Bold=function(_Inline){_inherits(Bold,_Inline);function Bold(){_classCallCheck(this,Bold);return _possibleConstructorReturn(this,(Bold.__proto__||Object.getPrototypeOf(Bold)).apply(this,arguments));}_createClass(Bold,[{key:'optimize',value:function optimize(){_get(Bold.prototype.__proto__||Object.getPrototypeOf(Bold.prototype),'optimize',this).call(this);if(this.domNode.tagName!==this.statics.tagName[0]){this.replaceWith(this.statics.blotName);}}}],[{key:'create',value:function create(value){return _get(Bold.__proto__||Object.getPrototypeOf(Bold),'create',this).call(this);}},{key:'formats',value:function formats(domNode){return true;}}]);return Bold;}(_inline2.default);Bold.blotName='bold';Bold.tagName=['STRONG','B'];exports.default=Bold;/***/},/* 59 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _bold=__webpack_require__(58);var _bold2=_interopRequireDefault(_bold);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Italic=function(_Bold){_inherits(Italic,_Bold);function Italic(){_classCallCheck(this,Italic);return _possibleConstructorReturn(this,(Italic.__proto__||Object.getPrototypeOf(Italic)).apply(this,arguments));}return Italic;}(_bold2.default);Italic.blotName='italic';Italic.tagName=['EM','I'];exports.default=Italic;/***/},/* 60 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.sanitize=exports.default=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _inline=__webpack_require__(35);var _inline2=_interopRequireDefault(_inline);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Link=function(_Inline){_inherits(Link,_Inline);function Link(){_classCallCheck(this,Link);return _possibleConstructorReturn(this,(Link.__proto__||Object.getPrototypeOf(Link)).apply(this,arguments));}_createClass(Link,[{key:'format',value:function format(name,value){if(name!==this.statics.blotName||!value)return _get(Link.prototype.__proto__||Object.getPrototypeOf(Link.prototype),'format',this).call(this,name,value);value=this.constructor.sanitize(value);this.domNode.setAttribute('href',value);}}],[{key:'create',value:function create(value){var node=_get(Link.__proto__||Object.getPrototypeOf(Link),'create',this).call(this,value);value=this.sanitize(value);node.setAttribute('href',value);node.setAttribute('target','_blank');return node;}},{key:'formats',value:function formats(domNode){return domNode.getAttribute('href');}},{key:'sanitize',value:function sanitize(url){return _sanitize(url,['http','https','mailto'])?url:this.SANITIZED_URL;}}]);return Link;}(_inline2.default);Link.blotName='link';Link.tagName='A';Link.SANITIZED_URL='about:blank';function _sanitize(url,protocols){var anchor=document.createElement('a');anchor.href=url;var protocol=anchor.href.slice(0,anchor.href.indexOf(':'));return protocols.indexOf(protocol)>-1;}exports.default=Link;exports.sanitize=_sanitize;/***/},/* 61 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _inline=__webpack_require__(35);var _inline2=_interopRequireDefault(_inline);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Script=function(_Inline){_inherits(Script,_Inline);function Script(){_classCallCheck(this,Script);return _possibleConstructorReturn(this,(Script.__proto__||Object.getPrototypeOf(Script)).apply(this,arguments));}_createClass(Script,null,[{key:'create',value:function create(value){if(value==='super'){return document.createElement('sup');}else if(value==='sub'){return document.createElement('sub');}else{return _get(Script.__proto__||Object.getPrototypeOf(Script),'create',this).call(this,value);}}},{key:'formats',value:function formats(domNode){if(domNode.tagName==='SUB')return'sub';if(domNode.tagName==='SUP')return'super';return undefined;}}]);return Script;}(_inline2.default);Script.blotName='script';Script.tagName=['SUB','SUP'];exports.default=Script;/***/},/* 62 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _inline=__webpack_require__(35);var _inline2=_interopRequireDefault(_inline);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Strike=function(_Inline){_inherits(Strike,_Inline);function Strike(){_classCallCheck(this,Strike);return _possibleConstructorReturn(this,(Strike.__proto__||Object.getPrototypeOf(Strike)).apply(this,arguments));}return Strike;}(_inline2.default);Strike.blotName='strike';Strike.tagName='S';exports.default=Strike;/***/},/* 63 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _inline=__webpack_require__(35);var _inline2=_interopRequireDefault(_inline);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Underline=function(_Inline){_inherits(Underline,_Inline);function Underline(){_classCallCheck(this,Underline);return _possibleConstructorReturn(this,(Underline.__proto__||Object.getPrototypeOf(Underline)).apply(this,arguments));}return Underline;}(_inline2.default);Underline.blotName='underline';Underline.tagName='U';exports.default=Underline;/***/},/* 64 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _embed=__webpack_require__(34);var _embed2=_interopRequireDefault(_embed);var _link=__webpack_require__(60);var _link2=_interopRequireDefault(_link);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var ATTRIBUTES=['alt','height','width'];var Image=function(_Embed){_inherits(Image,_Embed);function Image(){_classCallCheck(this,Image);return _possibleConstructorReturn(this,(Image.__proto__||Object.getPrototypeOf(Image)).apply(this,arguments));}_createClass(Image,[{key:'format',value:function format(name,value){if(ATTRIBUTES.indexOf(name)>-1){if(value){this.domNode.setAttribute(name,value);}else{this.domNode.removeAttribute(name);}}else{_get(Image.prototype.__proto__||Object.getPrototypeOf(Image.prototype),'format',this).call(this,name,value);}}}],[{key:'create',value:function create(value){var node=_get(Image.__proto__||Object.getPrototypeOf(Image),'create',this).call(this,value);if(typeof value==='string'){node.setAttribute('src',this.sanitize(value));}return node;}},{key:'formats',value:function formats(domNode){return ATTRIBUTES.reduce(function(formats,attribute){if(domNode.hasAttribute(attribute)){formats[attribute]=domNode.getAttribute(attribute);}return formats;},{});}},{key:'match',value:function match(url){return /\.(jpe?g|gif|png)$/.test(url)||/^data:image\/.+;base64/.test(url);}},{key:'sanitize',value:function sanitize(url){return(0,_link.sanitize)(url,['http','https','data'])?url:'//:0';}},{key:'value',value:function value(domNode){return domNode.getAttribute('src');}}]);return Image;}(_embed2.default);Image.blotName='image';Image.tagName='IMG';exports.default=Image;/***/},/* 65 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _block=__webpack_require__(32);var _link=__webpack_require__(60);var _link2=_interopRequireDefault(_link);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var ATTRIBUTES=['height','width'];var Video=function(_BlockEmbed){_inherits(Video,_BlockEmbed);function Video(){_classCallCheck(this,Video);return _possibleConstructorReturn(this,(Video.__proto__||Object.getPrototypeOf(Video)).apply(this,arguments));}_createClass(Video,[{key:'format',value:function format(name,value){if(ATTRIBUTES.indexOf(name)>-1){if(value){this.domNode.setAttribute(name,value);}else{this.domNode.removeAttribute(name);}}else{_get(Video.prototype.__proto__||Object.getPrototypeOf(Video.prototype),'format',this).call(this,name,value);}}}],[{key:'create',value:function create(value){var node=_get(Video.__proto__||Object.getPrototypeOf(Video),'create',this).call(this,value);node.setAttribute('frameborder','0');node.setAttribute('allowfullscreen',true);node.setAttribute('src',this.sanitize(value));return node;}},{key:'formats',value:function formats(domNode){return ATTRIBUTES.reduce(function(formats,attribute){if(domNode.hasAttribute(attribute)){formats[attribute]=domNode.getAttribute(attribute);}return formats;},{});}},{key:'sanitize',value:function sanitize(url){return _link2.default.sanitize(url);}},{key:'value',value:function value(domNode){return domNode.getAttribute('src');}}]);return Video;}(_block.BlockEmbed);Video.blotName='video';Video.className='ql-video';Video.tagName='IFRAME';exports.default=Video;/***/},/* 66 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.FormulaBlot=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _embed=__webpack_require__(34);var _embed2=_interopRequireDefault(_embed);var _quill=__webpack_require__(18);var _quill2=_interopRequireDefault(_quill);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var FormulaBlot=function(_Embed){_inherits(FormulaBlot,_Embed);function FormulaBlot(){_classCallCheck(this,FormulaBlot);return _possibleConstructorReturn(this,(FormulaBlot.__proto__||Object.getPrototypeOf(FormulaBlot)).apply(this,arguments));}_createClass(FormulaBlot,[{key:'index',value:function index(node,offset){return 1;}}],[{key:'create',value:function create(value){var node=_get(FormulaBlot.__proto__||Object.getPrototypeOf(FormulaBlot),'create',this).call(this,value);if(typeof value==='string'){katex.render(value,node);node.setAttribute('data-value',value);}node.setAttribute('contenteditable',false);return node;}},{key:'value',value:function value(domNode){return domNode.getAttribute('data-value');}}]);return FormulaBlot;}(_embed2.default);FormulaBlot.blotName='formula';FormulaBlot.className='ql-formula';FormulaBlot.tagName='SPAN';function Formula(){if(window.katex==null){throw new Error('Formula module requires KaTeX.');}_quill2.default.register(FormulaBlot,true);}exports.FormulaBlot=FormulaBlot;exports.default=Formula;/***/},/* 67 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.CodeToken=exports.CodeBlock=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _quill=__webpack_require__(18);var _quill2=_interopRequireDefault(_quill);var _module=__webpack_require__(39);var _module2=_interopRequireDefault(_module);var _code=__webpack_require__(31);var _code2=_interopRequireDefault(_code);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var SyntaxCodeBlock=function(_CodeBlock){_inherits(SyntaxCodeBlock,_CodeBlock);function SyntaxCodeBlock(){_classCallCheck(this,SyntaxCodeBlock);return _possibleConstructorReturn(this,(SyntaxCodeBlock.__proto__||Object.getPrototypeOf(SyntaxCodeBlock)).apply(this,arguments));}_createClass(SyntaxCodeBlock,[{key:'replaceWith',value:function replaceWith(block){this.domNode.textContent=this.domNode.textContent;this.attach();_get(SyntaxCodeBlock.prototype.__proto__||Object.getPrototypeOf(SyntaxCodeBlock.prototype),'replaceWith',this).call(this,block);}},{key:'highlight',value:function highlight(_highlight){if(this.cachedHTML!==this.domNode.innerHTML){var text=this.domNode.textContent;if(text.trim().length>0||this.cachedHTML==null){this.domNode.innerHTML=_highlight(text);this.attach();}this.cachedHTML=this.domNode.innerHTML;}}}]);return SyntaxCodeBlock;}(_code2.default);SyntaxCodeBlock.className='ql-syntax';var CodeToken=new _parchment2.default.Attributor.Class('token','hljs',{scope:_parchment2.default.Scope.INLINE});var Syntax=function(_Module){_inherits(Syntax,_Module);function Syntax(quill,options){_classCallCheck(this,Syntax);var _this2=_possibleConstructorReturn(this,(Syntax.__proto__||Object.getPrototypeOf(Syntax)).call(this,quill,options));if(typeof _this2.options.highlight!=='function'){throw new Error('Syntax module requires highlight.js. Please include the library on the page before Quill.');}_quill2.default.register(CodeToken,true);_quill2.default.register(SyntaxCodeBlock,true);var timer=null;_this2.quill.on(_quill2.default.events.SCROLL_OPTIMIZE,function(){if(timer!=null)return;timer=setTimeout(function(){_this2.highlight();timer=null;},100);});_this2.highlight();return _this2;}_createClass(Syntax,[{key:'highlight',value:function highlight(){var _this3=this;if(this.quill.selection.composing)return;var range=this.quill.getSelection();this.quill.scroll.descendants(SyntaxCodeBlock).forEach(function(code){code.highlight(_this3.options.highlight);});this.quill.update(_quill2.default.sources.SILENT);if(range!=null){this.quill.setSelection(range,_quill2.default.sources.SILENT);}}}]);return Syntax;}(_module2.default);Syntax.DEFAULTS={highlight:function(){if(window.hljs==null)return null;return function(text){var result=window.hljs.highlightAuto(text);return result.value;};}()};exports.CodeBlock=SyntaxCodeBlock;exports.CodeToken=CodeToken;exports.default=Syntax;/***/},/* 68 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.addControls=exports.default=undefined;var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _extend=__webpack_require__(25);var _extend2=_interopRequireDefault(_extend);var _delta=__webpack_require__(20);var _delta2=_interopRequireDefault(_delta);var _parchment=__webpack_require__(2);var _parchment2=_interopRequireDefault(_parchment);var _quill=__webpack_require__(18);var _quill2=_interopRequireDefault(_quill);var _logger=__webpack_require__(30);var _logger2=_interopRequireDefault(_logger);var _module=__webpack_require__(39);var _module2=_interopRequireDefault(_module);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var debug=(0,_logger2.default)('quill:toolbar');var Toolbar=function(_Module){_inherits(Toolbar,_Module);function Toolbar(quill,options){_classCallCheck(this,Toolbar);var _this=_possibleConstructorReturn(this,(Toolbar.__proto__||Object.getPrototypeOf(Toolbar)).call(this,quill,options));if(Array.isArray(_this.options.container)){var container=document.createElement('div');addControls(container,_this.options.container);quill.container.parentNode.insertBefore(container,quill.container);_this.container=container;}else if(typeof _this.options.container==='string'){_this.container=document.querySelector(_this.options.container);}else{_this.container=_this.options.container;}if(!(_this.container instanceof HTMLElement)){var _ret;return _ret=debug.error('Container required for toolbar',_this.options),_possibleConstructorReturn(_this,_ret);}_this.container.classList.add('ql-toolbar');_this.controls=[];_this.handlers={};Object.keys(_this.options.handlers).forEach(function(format){_this.addHandler(format,_this.options.handlers[format]);});[].forEach.call(_this.container.querySelectorAll('button, select'),function(input){_this.attach(input);});_this.quill.on(_quill2.default.events.EDITOR_CHANGE,function(type,range){if(type===_quill2.default.events.SELECTION_CHANGE){_this.update(range);}});_this.quill.on(_quill2.default.events.SCROLL_OPTIMIZE,function(){var _this$quill$selection=_this.quill.selection.getRange();var _this$quill$selection2=_slicedToArray(_this$quill$selection,1);var range=_this$quill$selection2[0];// quill.getSelection triggers update
	_this.update(range);});return _this;}_createClass(Toolbar,[{key:'addHandler',value:function addHandler(format,handler){this.handlers[format]=handler;}},{key:'attach',value:function attach(input){var _this2=this;var format=[].find.call(input.classList,function(className){return className.indexOf('ql-')===0;});if(!format)return;format=format.slice('ql-'.length);if(input.tagName==='BUTTON'){input.setAttribute('type','button');}if(this.handlers[format]==null){if(this.quill.scroll.whitelist!=null&&this.quill.scroll.whitelist[format]==null){debug.warn('ignoring attaching to disabled format',format,input);return;}if(_parchment2.default.query(format)==null){debug.warn('ignoring attaching to nonexistent format',format,input);return;}}var eventName=input.tagName==='SELECT'?'change':'click';input.addEventListener(eventName,function(e){var value=void 0;if(input.tagName==='SELECT'){if(input.selectedIndex<0)return;var selected=input.options[input.selectedIndex];if(selected.hasAttribute('selected')){value=false;}else{value=selected.value||false;}}else{if(input.classList.contains('ql-active')){value=false;}else{value=input.value||!input.hasAttribute('value');}e.preventDefault();}_this2.quill.focus();var _quill$selection$getR=_this2.quill.selection.getRange();var _quill$selection$getR2=_slicedToArray(_quill$selection$getR,1);var range=_quill$selection$getR2[0];if(_this2.handlers[format]!=null){_this2.handlers[format].call(_this2,value);}else if(_parchment2.default.query(format).prototype instanceof _parchment2.default.Embed){value=prompt('Enter '+format);if(!value)return;_this2.quill.updateContents(new _delta2.default().retain(range.index).delete(range.length).insert(_defineProperty({},format,value)),_quill2.default.sources.USER);}else{_this2.quill.format(format,value,_quill2.default.sources.USER);}_this2.update(range);});// TODO use weakmap
	this.controls.push([format,input]);}},{key:'update',value:function update(range){var formats=range==null?{}:this.quill.getFormat(range);this.controls.forEach(function(pair){var _pair=_slicedToArray(pair,2);var format=_pair[0];var input=_pair[1];if(input.tagName==='SELECT'){var option=void 0;if(range==null){option=null;}else if(formats[format]==null){option=input.querySelector('option[selected]');}else if(!Array.isArray(formats[format])){var value=formats[format];if(typeof value==='string'){value=value.replace(/\"/g,'\\"');}option=input.querySelector('option[value="'+value+'"]');}if(option==null){input.value='';// TODO make configurable?
	input.selectedIndex=-1;}else{option.selected=true;}}else{if(range==null){input.classList.remove('ql-active');}else if(input.hasAttribute('value')){// both being null should match (default values)
	// '1' should match with 1 (headers)
	var isActive=formats[format]===input.getAttribute('value')||formats[format]!=null&&formats[format].toString()===input.getAttribute('value')||formats[format]==null&&!input.getAttribute('value');input.classList.toggle('ql-active',isActive);}else{input.classList.toggle('ql-active',formats[format]!=null);}}});}}]);return Toolbar;}(_module2.default);Toolbar.DEFAULTS={};function addButton(container,format,value){var input=document.createElement('button');input.setAttribute('type','button');input.classList.add('ql-'+format);if(value!=null){input.value=value;}container.appendChild(input);}function addControls(container,groups){if(!Array.isArray(groups[0])){groups=[groups];}groups.forEach(function(controls){var group=document.createElement('span');group.classList.add('ql-formats');controls.forEach(function(control){if(typeof control==='string'){addButton(group,control);}else{var format=Object.keys(control)[0];var value=control[format];if(Array.isArray(value)){addSelect(group,format,value);}else{addButton(group,format,value);}}});container.appendChild(group);});}function addSelect(container,format,values){var input=document.createElement('select');input.classList.add('ql-'+format);values.forEach(function(value){var option=document.createElement('option');if(value!==false){option.setAttribute('value',value);}else{option.setAttribute('selected','selected');}input.appendChild(option);});container.appendChild(input);}Toolbar.DEFAULTS={container:null,handlers:{clean:function clean(value){var _this3=this;var range=this.quill.getSelection();if(range==null)return;if(range.length==0){var formats=this.quill.getFormat();Object.keys(formats).forEach(function(name){// Clean functionality in existing apps only clean inline formats
	if(_parchment2.default.query(name,_parchment2.default.Scope.INLINE)!=null){_this3.quill.format(name,false);}});}else{this.quill.removeFormat(range,_quill2.default.sources.USER);}},direction:function direction(value){var align=this.quill.getFormat()['align'];if(value==='rtl'&&align==null){this.quill.format('align','right',_quill2.default.sources.USER);}else if(!value&&align==='right'){this.quill.format('align',false,_quill2.default.sources.USER);}this.quill.format('direction',value,_quill2.default.sources.USER);},link:function link(value){if(value===true){value=prompt('Enter link URL:');}this.quill.format('link',value,_quill2.default.sources.USER);},indent:function indent(value){var range=this.quill.getSelection();var formats=this.quill.getFormat(range);var indent=parseInt(formats.indent||0);if(value==='+1'||value==='-1'){var modifier=value==='+1'?1:-1;if(formats.direction==='rtl')modifier*=-1;this.quill.format('indent',indent+modifier,_quill2.default.sources.USER);}}}};exports.default=Toolbar;exports.addControls=addControls;/***/},/* 69 *//***/function(module,exports,__webpack_require__){'use strict';module.exports={'align':{'':__webpack_require__(70),'center':__webpack_require__(71),'right':__webpack_require__(72),'justify':__webpack_require__(73)},'background':__webpack_require__(74),'blockquote':__webpack_require__(75),'bold':__webpack_require__(76),'clean':__webpack_require__(77),'code':__webpack_require__(78),'code-block':__webpack_require__(78),'color':__webpack_require__(79),'direction':{'':__webpack_require__(80),'rtl':__webpack_require__(81)},'float':{'center':__webpack_require__(82),'full':__webpack_require__(83),'left':__webpack_require__(84),'right':__webpack_require__(85)},'formula':__webpack_require__(86),'header':{'1':__webpack_require__(87),'2':__webpack_require__(88)},'italic':__webpack_require__(89),'image':__webpack_require__(90),'indent':{'+1':__webpack_require__(91),'-1':__webpack_require__(92)},'link':__webpack_require__(93),'list':{'ordered':__webpack_require__(94),'bullet':__webpack_require__(95)},'script':{'sub':__webpack_require__(96),'super':__webpack_require__(97)},'strike':__webpack_require__(98),'underline':__webpack_require__(99),'video':__webpack_require__(100)};/***/},/* 70 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=13 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=9 y1=4 y2=4></line> </svg>";/***/},/* 71 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=14 x2=4 y1=14 y2=14></line> <line class=ql-stroke x1=12 x2=6 y1=4 y2=4></line> </svg>";/***/},/* 72 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=5 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=9 y1=4 y2=4></line> </svg>";/***/},/* 73 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=3 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=3 y1=4 y2=4></line> </svg>";/***/},/* 74 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <g class=\"ql-fill ql-color-label\"> <polygon points=\"6 6.868 6 6 5 6 5 7 5.942 7 6 6.868\"></polygon> <rect height=1 width=1 x=4 y=4></rect> <polygon points=\"6.817 5 6 5 6 6 6.38 6 6.817 5\"></polygon> <rect height=1 width=1 x=2 y=6></rect> <rect height=1 width=1 x=3 y=5></rect> <rect height=1 width=1 x=4 y=7></rect> <polygon points=\"4 11.439 4 11 3 11 3 12 3.755 12 4 11.439\"></polygon> <rect height=1 width=1 x=2 y=12></rect> <rect height=1 width=1 x=2 y=9></rect> <rect height=1 width=1 x=2 y=15></rect> <polygon points=\"4.63 10 4 10 4 11 4.192 11 4.63 10\"></polygon> <rect height=1 width=1 x=3 y=8></rect> <path d=M10.832,4.2L11,4.582V4H10.708A1.948,1.948,0,0,1,10.832,4.2Z></path> <path d=M7,4.582L7.168,4.2A1.929,1.929,0,0,1,7.292,4H7V4.582Z></path> <path d=M8,13H7.683l-0.351.8a1.933,1.933,0,0,1-.124.2H8V13Z></path> <rect height=1 width=1 x=12 y=2></rect> <rect height=1 width=1 x=11 y=3></rect> <path d=M9,3H8V3.282A1.985,1.985,0,0,1,9,3Z></path> <rect height=1 width=1 x=2 y=3></rect> <rect height=1 width=1 x=6 y=2></rect> <rect height=1 width=1 x=3 y=2></rect> <rect height=1 width=1 x=5 y=3></rect> <rect height=1 width=1 x=9 y=2></rect> <rect height=1 width=1 x=15 y=14></rect> <polygon points=\"13.447 10.174 13.469 10.225 13.472 10.232 13.808 11 14 11 14 10 13.37 10 13.447 10.174\"></polygon> <rect height=1 width=1 x=13 y=7></rect> <rect height=1 width=1 x=15 y=5></rect> <rect height=1 width=1 x=14 y=6></rect> <rect height=1 width=1 x=15 y=8></rect> <rect height=1 width=1 x=14 y=9></rect> <path d=M3.775,14H3v1H4V14.314A1.97,1.97,0,0,1,3.775,14Z></path> <rect height=1 width=1 x=14 y=3></rect> <polygon points=\"12 6.868 12 6 11.62 6 12 6.868\"></polygon> <rect height=1 width=1 x=15 y=2></rect> <rect height=1 width=1 x=12 y=5></rect> <rect height=1 width=1 x=13 y=4></rect> <polygon points=\"12.933 9 13 9 13 8 12.495 8 12.933 9\"></polygon> <rect height=1 width=1 x=9 y=14></rect> <rect height=1 width=1 x=8 y=15></rect> <path d=M6,14.926V15H7V14.316A1.993,1.993,0,0,1,6,14.926Z></path> <rect height=1 width=1 x=5 y=15></rect> <path d=M10.668,13.8L10.317,13H10v1h0.792A1.947,1.947,0,0,1,10.668,13.8Z></path> <rect height=1 width=1 x=11 y=15></rect> <path d=M14.332,12.2a1.99,1.99,0,0,1,.166.8H15V12H14.245Z></path> <rect height=1 width=1 x=14 y=15></rect> <rect height=1 width=1 x=15 y=11></rect> </g> <polyline class=ql-stroke points=\"5.5 13 9 5 12.5 13\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=11 y2=11></line> </svg>";/***/},/* 75 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <rect class=\"ql-fill ql-stroke\" height=3 width=3 x=4 y=5></rect> <rect class=\"ql-fill ql-stroke\" height=3 width=3 x=11 y=5></rect> <path class=\"ql-even ql-fill ql-stroke\" d=M7,8c0,4.031-3,5-3,5></path> <path class=\"ql-even ql-fill ql-stroke\" d=M14,8c0,4.031-3,5-3,5></path> </svg>";/***/},/* 76 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <path class=ql-stroke d=M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z></path> <path class=ql-stroke d=M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z></path> </svg>";/***/},/* 77 *//***/function(module,exports){module.exports="<svg class=\"\" viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=5 x2=13 y1=3 y2=3></line> <line class=ql-stroke x1=6 x2=9.35 y1=12 y2=3></line> <line class=ql-stroke x1=11 x2=15 y1=11 y2=15></line> <line class=ql-stroke x1=15 x2=11 y1=11 y2=15></line> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=7 x=2 y=14></rect> </svg>";/***/},/* 78 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <polyline class=\"ql-even ql-stroke\" points=\"5 7 3 9 5 11\"></polyline> <polyline class=\"ql-even ql-stroke\" points=\"13 7 15 9 13 11\"></polyline> <line class=ql-stroke x1=10 x2=8 y1=5 y2=13></line> </svg>";/***/},/* 79 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <line class=\"ql-color-label ql-stroke ql-transparent\" x1=3 x2=15 y1=15 y2=15></line> <polyline class=ql-stroke points=\"5.5 11 9 3 12.5 11\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=9 y2=9></line> </svg>";/***/},/* 80 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <polygon class=\"ql-stroke ql-fill\" points=\"3 11 5 9 3 7 3 11\"></polygon> <line class=\"ql-stroke ql-fill\" x1=15 x2=11 y1=4 y2=4></line> <path class=ql-fill d=M11,3a3,3,0,0,0,0,6h1V3H11Z></path> <rect class=ql-fill height=11 width=1 x=11 y=4></rect> <rect class=ql-fill height=11 width=1 x=13 y=4></rect> </svg>";/***/},/* 81 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <polygon class=\"ql-stroke ql-fill\" points=\"15 12 13 10 15 8 15 12\"></polygon> <line class=\"ql-stroke ql-fill\" x1=9 x2=5 y1=4 y2=4></line> <path class=ql-fill d=M5,3A3,3,0,0,0,5,9H6V3H5Z></path> <rect class=ql-fill height=11 width=1 x=5 y=4></rect> <rect class=ql-fill height=11 width=1 x=7 y=4></rect> </svg>";/***/},/* 82 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M14,16H4a1,1,0,0,1,0-2H14A1,1,0,0,1,14,16Z /> <path class=ql-fill d=M14,4H4A1,1,0,0,1,4,2H14A1,1,0,0,1,14,4Z /> <rect class=ql-fill x=3 y=6 width=12 height=6 rx=1 ry=1 /> </svg>";/***/},/* 83 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M13,16H5a1,1,0,0,1,0-2h8A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H5A1,1,0,0,1,5,2h8A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=2 y=6 width=14 height=6 rx=1 ry=1 /> </svg>";/***/},/* 84 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15,8H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,8Z /> <path class=ql-fill d=M15,12H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,12Z /> <path class=ql-fill d=M15,16H5a1,1,0,0,1,0-2H15A1,1,0,0,1,15,16Z /> <path class=ql-fill d=M15,4H5A1,1,0,0,1,5,2H15A1,1,0,0,1,15,4Z /> <rect class=ql-fill x=2 y=6 width=8 height=6 rx=1 ry=1 /> </svg>";/***/},/* 85 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M5,8H3A1,1,0,0,1,3,6H5A1,1,0,0,1,5,8Z /> <path class=ql-fill d=M5,12H3a1,1,0,0,1,0-2H5A1,1,0,0,1,5,12Z /> <path class=ql-fill d=M13,16H3a1,1,0,0,1,0-2H13A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H3A1,1,0,0,1,3,2H13A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=8 y=6 width=8 height=6 rx=1 ry=1 transform=\"translate(24 18) rotate(-180)\"/> </svg>";/***/},/* 86 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M11.759,2.482a2.561,2.561,0,0,0-3.53.607A7.656,7.656,0,0,0,6.8,6.2C6.109,9.188,5.275,14.677,4.15,14.927a1.545,1.545,0,0,0-1.3-.933A0.922,0.922,0,0,0,2,15.036S1.954,16,4.119,16s3.091-2.691,3.7-5.553c0.177-.826.36-1.726,0.554-2.6L8.775,6.2c0.381-1.421.807-2.521,1.306-2.676a1.014,1.014,0,0,0,1.02.56A0.966,0.966,0,0,0,11.759,2.482Z></path> <rect class=ql-fill height=1.6 rx=0.8 ry=0.8 width=5 x=5.15 y=6.2></rect> <path class=ql-fill d=M13.663,12.027a1.662,1.662,0,0,1,.266-0.276q0.193,0.069.456,0.138a2.1,2.1,0,0,0,.535.069,1.075,1.075,0,0,0,.767-0.3,1.044,1.044,0,0,0,.314-0.8,0.84,0.84,0,0,0-.238-0.619,0.8,0.8,0,0,0-.594-0.239,1.154,1.154,0,0,0-.781.3,4.607,4.607,0,0,0-.781,1q-0.091.15-.218,0.346l-0.246.38c-0.068-.288-0.137-0.582-0.212-0.885-0.459-1.847-2.494-.984-2.941-0.8-0.482.2-.353,0.647-0.094,0.529a0.869,0.869,0,0,1,1.281.585c0.217,0.751.377,1.436,0.527,2.038a5.688,5.688,0,0,1-.362.467,2.69,2.69,0,0,1-.264.271q-0.221-.08-0.471-0.147a2.029,2.029,0,0,0-.522-0.066,1.079,1.079,0,0,0-.768.3A1.058,1.058,0,0,0,9,15.131a0.82,0.82,0,0,0,.832.852,1.134,1.134,0,0,0,.787-0.3,5.11,5.11,0,0,0,.776-0.993q0.141-.219.215-0.34c0.046-.076.122-0.194,0.223-0.346a2.786,2.786,0,0,0,.918,1.726,2.582,2.582,0,0,0,2.376-.185c0.317-.181.212-0.565,0-0.494A0.807,0.807,0,0,1,14.176,15a5.159,5.159,0,0,1-.913-2.446l0,0Q13.487,12.24,13.663,12.027Z></path> </svg>";/***/},/* 87 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=3 y1=4 y2=14></line> <line class=ql-stroke x1=11 x2=11 y1=4 y2=14></line> <line class=ql-stroke x1=11 x2=3 y1=9 y2=9></line> <line class=\"ql-stroke ql-thin\" x1=13.5 x2=15.5 y1=14.5 y2=14.5></line> <path class=ql-fill d=M14.5,15a0.5,0.5,0,0,1-.5-0.5V12.085l-0.276.138A0.5,0.5,0,0,1,13.053,12c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,15,11.5v3A0.5,0.5,0,0,1,14.5,15Z></path> </svg>";/***/},/* 88 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=3 y1=4 y2=14></line> <line class=ql-stroke x1=11 x2=11 y1=4 y2=14></line> <line class=ql-stroke x1=11 x2=3 y1=9 y2=9></line> <path class=\"ql-stroke ql-thin\" d=M15.5,14.5h-2c0-.234,1.85-1.076,1.85-2.234a0.959,0.959,0,0,0-1.85-.109></path> </svg>";/***/},/* 89 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=13 y1=4 y2=4></line> <line class=ql-stroke x1=5 x2=11 y1=14 y2=14></line> <line class=ql-stroke x1=8 x2=10 y1=14 y2=4></line> </svg>";/***/},/* 90 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <rect class=ql-stroke height=10 width=12 x=3 y=4></rect> <circle class=ql-fill cx=6 cy=7 r=1></circle> <polyline class=\"ql-even ql-fill\" points=\"5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12\"></polyline> </svg>";/***/},/* 91 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=\"ql-fill ql-stroke\" points=\"3 7 3 11 5 9 3 7\"></polyline> </svg>";/***/},/* 92 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\"5 7 5 11 3 9 5 7\"></polyline> </svg>";/***/},/* 93 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=11 y1=7 y2=11></line> <path class=\"ql-even ql-stroke\" d=M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z></path> <path class=\"ql-even ql-stroke\" d=M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z></path> </svg>";/***/},/* 94 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=7 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=7 x2=15 y1=14 y2=14></line> <line class=\"ql-stroke ql-thin\" x1=2.5 x2=4.5 y1=5.5 y2=5.5></line> <path class=ql-fill d=M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z></path> <path class=\"ql-stroke ql-thin\" d=M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156></path> <path class=\"ql-stroke ql-thin\" d=M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109></path> </svg>";/***/},/* 95 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=6 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=6 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=6 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=3 y1=4 y2=4></line> <line class=ql-stroke x1=3 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=3 y1=14 y2=14></line> </svg>";/***/},/* 96 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15.5,15H13.861a3.858,3.858,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.921,1.921,0,0,0,12.021,11.7a0.50013,0.50013,0,1,0,.957.291h0a0.914,0.914,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.076-1.16971,1.86982-1.93971,2.43082A1.45639,1.45639,0,0,0,12,15.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,15Z /> <path class=ql-fill d=M9.65,5.241a1,1,0,0,0-1.409.108L6,7.964,3.759,5.349A1,1,0,0,0,2.192,6.59178Q2.21541,6.6213,2.241,6.649L4.684,9.5,2.241,12.35A1,1,0,0,0,3.71,13.70722q0.02557-.02768.049-0.05722L6,11.036,8.241,13.65a1,1,0,1,0,1.567-1.24277Q9.78459,12.3777,9.759,12.35L7.316,9.5,9.759,6.651A1,1,0,0,0,9.65,5.241Z /> </svg>";/***/},/* 97 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15.5,7H13.861a4.015,4.015,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.922,1.922,0,0,0,12.021,3.7a0.5,0.5,0,1,0,.957.291,0.917,0.917,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.077-1.164,1.925-1.934,2.486A1.423,1.423,0,0,0,12,7.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,7Z /> <path class=ql-fill d=M9.651,5.241a1,1,0,0,0-1.41.108L6,7.964,3.759,5.349a1,1,0,1,0-1.519,1.3L4.683,9.5,2.241,12.35a1,1,0,1,0,1.519,1.3L6,11.036,8.241,13.65a1,1,0,0,0,1.519-1.3L7.317,9.5,9.759,6.651A1,1,0,0,0,9.651,5.241Z /> </svg>";/***/},/* 98 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <line class=\"ql-stroke ql-thin\" x1=15.5 x2=2.5 y1=8.5 y2=9.5></line> <path class=ql-fill d=M9.007,8C6.542,7.791,6,7.519,6,6.5,6,5.792,7.283,5,9,5c1.571,0,2.765.679,2.969,1.309a1,1,0,0,0,1.9-.617C13.356,4.106,11.354,3,9,3,6.2,3,4,4.538,4,6.5a3.2,3.2,0,0,0,.5,1.843Z></path> <path class=ql-fill d=M8.984,10C11.457,10.208,12,10.479,12,11.5c0,0.708-1.283,1.5-3,1.5-1.571,0-2.765-.679-2.969-1.309a1,1,0,1,0-1.9.617C4.644,13.894,6.646,15,9,15c2.8,0,5-1.538,5-3.5a3.2,3.2,0,0,0-.5-1.843Z></path> </svg>";/***/},/* 99 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <path class=ql-stroke d=M5,3V9a4.012,4.012,0,0,0,4,4H9a4.012,4.012,0,0,0,4-4V3></path> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=12 x=3 y=15></rect> </svg>";/***/},/* 100 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <rect class=ql-stroke height=12 width=12 x=3 y=3></rect> <rect class=ql-fill height=12 width=1 x=5 y=3></rect> <rect class=ql-fill height=12 width=1 x=12 y=3></rect> <rect class=ql-fill height=2 width=8 x=5 y=8></rect> <rect class=ql-fill height=1 width=3 x=3 y=5></rect> <rect class=ql-fill height=1 width=3 x=3 y=7></rect> <rect class=ql-fill height=1 width=3 x=3 y=10></rect> <rect class=ql-fill height=1 width=3 x=3 y=12></rect> <rect class=ql-fill height=1 width=3 x=12 y=5></rect> <rect class=ql-fill height=1 width=3 x=12 y=7></rect> <rect class=ql-fill height=1 width=3 x=12 y=10></rect> <rect class=ql-fill height=1 width=3 x=12 y=12></rect> </svg>";/***/},/* 101 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _typeof=typeof Symbol==="function"&&_typeof2(Symbol.iterator)==="symbol"?function(obj){return typeof obj==='undefined'?'undefined':_typeof2(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj==='undefined'?'undefined':_typeof2(obj);};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _dropdown=__webpack_require__(102);var _dropdown2=_interopRequireDefault(_dropdown);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Picker=function(){function Picker(select){var _this=this;_classCallCheck(this,Picker);this.select=select;this.container=document.createElement('span');this.buildPicker();this.select.style.display='none';this.select.parentNode.insertBefore(this.container,this.select);this.label.addEventListener('click',function(event){_this.container.classList.toggle('ql-expanded');});this.select.addEventListener('change',this.update.bind(this));}_createClass(Picker,[{key:'buildItem',value:function buildItem(option){var _this2=this;var item=document.createElement('span');item.classList.add('ql-picker-item');if(option.hasAttribute('value')){item.setAttribute('data-value',option.getAttribute('value'));}if(option.textContent){item.setAttribute('data-label',option.textContent);}item.addEventListener('click',function(event){_this2.selectItem(item,true);});return item;}},{key:'buildLabel',value:function buildLabel(){var label=document.createElement('span');label.classList.add('ql-picker-label');label.innerHTML=_dropdown2.default;this.container.appendChild(label);return label;}},{key:'buildOptions',value:function buildOptions(){var _this3=this;var options=document.createElement('span');options.classList.add('ql-picker-options');[].slice.call(this.select.options).forEach(function(option){var item=_this3.buildItem(option);options.appendChild(item);if(option.hasAttribute('selected')){_this3.selectItem(item);}});this.container.appendChild(options);}},{key:'buildPicker',value:function buildPicker(){var _this4=this;[].slice.call(this.select.attributes).forEach(function(item){_this4.container.setAttribute(item.name,item.value);});this.container.classList.add('ql-picker');this.label=this.buildLabel();this.buildOptions();}},{key:'close',value:function close(){this.container.classList.remove('ql-expanded');}},{key:'selectItem',value:function selectItem(item){var trigger=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var selected=this.container.querySelector('.ql-selected');if(item===selected)return;if(selected!=null){selected.classList.remove('ql-selected');}if(item!=null){item.classList.add('ql-selected');this.select.selectedIndex=[].indexOf.call(item.parentNode.children,item);if(item.hasAttribute('data-value')){this.label.setAttribute('data-value',item.getAttribute('data-value'));}else{this.label.removeAttribute('data-value');}if(item.hasAttribute('data-label')){this.label.setAttribute('data-label',item.getAttribute('data-label'));}else{this.label.removeAttribute('data-label');}if(trigger){if(typeof Event==='function'){this.select.dispatchEvent(new Event('change'));}else if((typeof Event==='undefined'?'undefined':_typeof(Event))==='object'){// IE11
	var event=document.createEvent('Event');event.initEvent('change',true,true);this.select.dispatchEvent(event);}this.close();}}else{this.label.removeAttribute('data-value');this.label.removeAttribute('data-label');}}},{key:'update',value:function update(){var option=void 0;if(this.select.selectedIndex>-1){var item=this.container.querySelector('.ql-picker-options').children[this.select.selectedIndex];option=this.select.options[this.select.selectedIndex];this.selectItem(item);}else{this.selectItem(null);}var isActive=option!=null&&option!==this.select.querySelector('option[selected]');this.label.classList.toggle('ql-active',isActive);}}]);return Picker;}();exports.default=Picker;/***/},/* 102 *//***/function(module,exports){module.exports="<svg viewbox=\"0 0 18 18\"> <polygon class=ql-stroke points=\"7 11 9 13 11 11 7 11\"></polygon> <polygon class=ql-stroke points=\"7 7 9 5 11 7 7 7\"></polygon> </svg>";/***/},/* 103 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _picker=__webpack_require__(101);var _picker2=_interopRequireDefault(_picker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var ColorPicker=function(_Picker){_inherits(ColorPicker,_Picker);function ColorPicker(select,label){_classCallCheck(this,ColorPicker);var _this=_possibleConstructorReturn(this,(ColorPicker.__proto__||Object.getPrototypeOf(ColorPicker)).call(this,select));_this.label.innerHTML=label;_this.container.classList.add('ql-color-picker');[].slice.call(_this.container.querySelectorAll('.ql-picker-item'),0,7).forEach(function(item){item.classList.add('ql-primary');});return _this;}_createClass(ColorPicker,[{key:'buildItem',value:function buildItem(option){var item=_get(ColorPicker.prototype.__proto__||Object.getPrototypeOf(ColorPicker.prototype),'buildItem',this).call(this,option);item.style.backgroundColor=option.getAttribute('value')||'';return item;}},{key:'selectItem',value:function selectItem(item,trigger){_get(ColorPicker.prototype.__proto__||Object.getPrototypeOf(ColorPicker.prototype),'selectItem',this).call(this,item,trigger);var colorLabel=this.label.querySelector('.ql-color-label');var value=item?item.getAttribute('data-value')||'':'';if(colorLabel){if(colorLabel.tagName==='line'){colorLabel.style.stroke=value;}else{colorLabel.style.fill=value;}}}}]);return ColorPicker;}(_picker2.default);exports.default=ColorPicker;/***/},/* 104 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _picker=__webpack_require__(101);var _picker2=_interopRequireDefault(_picker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var IconPicker=function(_Picker){_inherits(IconPicker,_Picker);function IconPicker(select,icons){_classCallCheck(this,IconPicker);var _this=_possibleConstructorReturn(this,(IconPicker.__proto__||Object.getPrototypeOf(IconPicker)).call(this,select));_this.container.classList.add('ql-icon-picker');[].forEach.call(_this.container.querySelectorAll('.ql-picker-item'),function(item){item.innerHTML=icons[item.getAttribute('data-value')||''];});_this.defaultItem=_this.container.querySelector('.ql-selected');_this.selectItem(_this.defaultItem);return _this;}_createClass(IconPicker,[{key:'selectItem',value:function selectItem(item,trigger){_get(IconPicker.prototype.__proto__||Object.getPrototypeOf(IconPicker.prototype),'selectItem',this).call(this,item,trigger);item=item||this.defaultItem;this.label.innerHTML=item.innerHTML;}}]);return IconPicker;}(_picker2.default);exports.default=IconPicker;/***/},/* 105 *//***/function(module,exports){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Tooltip=function(){function Tooltip(quill,boundsContainer){var _this=this;_classCallCheck(this,Tooltip);this.quill=quill;this.boundsContainer=boundsContainer||document.body;this.root=quill.addContainer('ql-tooltip');this.root.innerHTML=this.constructor.TEMPLATE;var offset=parseInt(window.getComputedStyle(this.root).marginTop);this.quill.root.addEventListener('scroll',function(){_this.root.style.marginTop=-1*_this.quill.root.scrollTop+offset+'px';_this.checkBounds();});this.hide();}_createClass(Tooltip,[{key:'checkBounds',value:function checkBounds(){this.root.classList.toggle('ql-out-top',this.root.offsetTop<=0);this.root.classList.remove('ql-out-bottom');this.root.classList.toggle('ql-out-bottom',this.root.offsetTop+this.root.offsetHeight>=this.quill.root.offsetHeight);}},{key:'hide',value:function hide(){this.root.classList.add('ql-hidden');}},{key:'position',value:function position(reference){var left=reference.left+reference.width/2-this.root.offsetWidth/2;var top=reference.bottom+this.quill.root.scrollTop;this.root.style.left=left+'px';this.root.style.top=top+'px';var containerBounds=this.boundsContainer.getBoundingClientRect();var rootBounds=this.root.getBoundingClientRect();var shift=0;if(rootBounds.right>containerBounds.right){shift=containerBounds.right-rootBounds.right;this.root.style.left=left+shift+'px';}if(rootBounds.left<containerBounds.left){shift=containerBounds.left-rootBounds.left;this.root.style.left=left+shift+'px';}this.checkBounds();return shift;}},{key:'show',value:function show(){this.root.classList.remove('ql-editing');this.root.classList.remove('ql-hidden');}}]);return Tooltip;}();exports.default=Tooltip;/***/},/* 106 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _extend=__webpack_require__(25);var _extend2=_interopRequireDefault(_extend);var _emitter=__webpack_require__(28);var _emitter2=_interopRequireDefault(_emitter);var _keyboard=__webpack_require__(52);var _keyboard2=_interopRequireDefault(_keyboard);var _base=__webpack_require__(107);var _base2=_interopRequireDefault(_base);var _icons=__webpack_require__(69);var _icons2=_interopRequireDefault(_icons);var _selection=__webpack_require__(40);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TOOLBAR_CONFIG=[['bold','italic','link'],[{header:1},{header:2},'blockquote']];var BubbleTheme=function(_BaseTheme){_inherits(BubbleTheme,_BaseTheme);function BubbleTheme(quill,options){_classCallCheck(this,BubbleTheme);if(options.modules.toolbar!=null&&options.modules.toolbar.container==null){options.modules.toolbar.container=TOOLBAR_CONFIG;}var _this=_possibleConstructorReturn(this,(BubbleTheme.__proto__||Object.getPrototypeOf(BubbleTheme)).call(this,quill,options));_this.quill.container.classList.add('ql-bubble');return _this;}_createClass(BubbleTheme,[{key:'extendToolbar',value:function extendToolbar(toolbar){this.tooltip=new BubbleTooltip(this.quill,this.options.bounds);this.tooltip.root.appendChild(toolbar.container);this.buildButtons([].slice.call(toolbar.container.querySelectorAll('button')));this.buildPickers([].slice.call(toolbar.container.querySelectorAll('select')));}}]);return BubbleTheme;}(_base2.default);BubbleTheme.DEFAULTS=(0,_extend2.default)(true,{},_base2.default.DEFAULTS,{modules:{toolbar:{handlers:{link:function link(value){if(!value){this.quill.format('link',false);}else{this.quill.theme.tooltip.edit();}}}}}});var BubbleTooltip=function(_BaseTooltip){_inherits(BubbleTooltip,_BaseTooltip);function BubbleTooltip(quill,bounds){_classCallCheck(this,BubbleTooltip);var _this2=_possibleConstructorReturn(this,(BubbleTooltip.__proto__||Object.getPrototypeOf(BubbleTooltip)).call(this,quill,bounds));_this2.quill.on(_emitter2.default.events.EDITOR_CHANGE,function(type,range){if(type!==_emitter2.default.events.SELECTION_CHANGE)return;if(range!=null&&range.length>0){_this2.show();// Lock our width so we will expand beyond our offsetParent boundaries
	_this2.root.style.left='0px';_this2.root.style.width='';_this2.root.style.width=_this2.root.offsetWidth+'px';var lines=_this2.quill.scroll.lines(range.index,range.length);if(lines.length===1){_this2.position(_this2.quill.getBounds(range));}else{var lastLine=lines[lines.length-1];var index=lastLine.offset(_this2.quill.scroll);var length=Math.min(lastLine.length()-1,range.index+range.length-index);var _bounds=_this2.quill.getBounds(new _selection.Range(index,length));_this2.position(_bounds);}}else if(document.activeElement!==_this2.textbox&&_this2.quill.hasFocus()){_this2.hide();}});return _this2;}_createClass(BubbleTooltip,[{key:'listen',value:function listen(){var _this3=this;_get(BubbleTooltip.prototype.__proto__||Object.getPrototypeOf(BubbleTooltip.prototype),'listen',this).call(this);this.root.querySelector('.ql-close').addEventListener('click',function(event){_this3.root.classList.remove('ql-editing');});this.quill.on(_emitter2.default.events.SCROLL_OPTIMIZE,function(){// Let selection be restored by toolbar handlers before repositioning
	setTimeout(function(){if(_this3.root.classList.contains('ql-hidden'))return;var range=_this3.quill.getSelection();if(range!=null){_this3.position(_this3.quill.getBounds(range));}},1);});}},{key:'cancel',value:function cancel(){this.show();}},{key:'position',value:function position(reference){var shift=_get(BubbleTooltip.prototype.__proto__||Object.getPrototypeOf(BubbleTooltip.prototype),'position',this).call(this,reference);if(shift===0)return shift;var arrow=this.root.querySelector('.ql-tooltip-arrow');arrow.style.marginLeft='';arrow.style.marginLeft=-1*shift-arrow.offsetWidth/2+'px';}}]);return BubbleTooltip;}(_base.BaseTooltip);BubbleTooltip.TEMPLATE=['<span class="ql-tooltip-arrow"></span>','<div class="ql-tooltip-editor">','<input type="text" data-formula="e=mc^2" data-link="quilljs.com" data-video="Embed URL">','<a class="ql-close"></a>','</div>'].join('');exports.default=BubbleTheme;/***/},/* 107 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.BaseTooltip=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _extend=__webpack_require__(25);var _extend2=_interopRequireDefault(_extend);var _delta=__webpack_require__(20);var _delta2=_interopRequireDefault(_delta);var _emitter=__webpack_require__(28);var _emitter2=_interopRequireDefault(_emitter);var _keyboard=__webpack_require__(52);var _keyboard2=_interopRequireDefault(_keyboard);var _theme=__webpack_require__(41);var _theme2=_interopRequireDefault(_theme);var _colorPicker=__webpack_require__(103);var _colorPicker2=_interopRequireDefault(_colorPicker);var _iconPicker=__webpack_require__(104);var _iconPicker2=_interopRequireDefault(_iconPicker);var _picker=__webpack_require__(101);var _picker2=_interopRequireDefault(_picker);var _tooltip=__webpack_require__(105);var _tooltip2=_interopRequireDefault(_tooltip);var _icons=__webpack_require__(69);var _icons2=_interopRequireDefault(_icons);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var ALIGNS=[false,'center','right','justify'];var COLORS=["#000000","#e60000","#ff9900","#ffff00","#008a00","#0066cc","#9933ff","#ffffff","#facccc","#ffebcc","#ffffcc","#cce8cc","#cce0f5","#ebd6ff","#bbbbbb","#f06666","#ffc266","#ffff66","#66b966","#66a3e0","#c285ff","#888888","#a10000","#b26b00","#b2b200","#006100","#0047b2","#6b24b2","#444444","#5c0000","#663d00","#666600","#003700","#002966","#3d1466"];var FONTS=[false,'serif','monospace'];var HEADERS=['1','2','3',false];var SIZES=['small',false,'large','huge'];var BaseTheme=function(_Theme){_inherits(BaseTheme,_Theme);function BaseTheme(quill,options){_classCallCheck(this,BaseTheme);var _this=_possibleConstructorReturn(this,(BaseTheme.__proto__||Object.getPrototypeOf(BaseTheme)).call(this,quill,options));var listener=function listener(e){if(!document.body.contains(quill.root)){return document.body.removeEventListener('click',listener);}if(_this.tooltip!=null&&!_this.tooltip.root.contains(e.target)&&document.activeElement!==_this.tooltip.textbox&&!_this.quill.hasFocus()){_this.tooltip.hide();}if(_this.pickers!=null){_this.pickers.forEach(function(picker){if(!picker.container.contains(e.target)){picker.close();}});}};document.body.addEventListener('click',listener);return _this;}_createClass(BaseTheme,[{key:'addModule',value:function addModule(name){var module=_get(BaseTheme.prototype.__proto__||Object.getPrototypeOf(BaseTheme.prototype),'addModule',this).call(this,name);if(name==='toolbar'){this.extendToolbar(module);}return module;}},{key:'buildButtons',value:function buildButtons(buttons){buttons.forEach(function(button){var className=button.getAttribute('class')||'';className.split(/\s+/).forEach(function(name){if(!name.startsWith('ql-'))return;name=name.slice('ql-'.length);if(_icons2.default[name]==null)return;if(name==='direction'){button.innerHTML=_icons2.default[name]['']+_icons2.default[name]['rtl'];}else if(typeof _icons2.default[name]==='string'){button.innerHTML=_icons2.default[name];}else{var value=button.value||'';if(value!=null&&_icons2.default[name][value]){button.innerHTML=_icons2.default[name][value];}}});});}},{key:'buildPickers',value:function buildPickers(selects){var _this2=this;this.pickers=selects.map(function(select){if(select.classList.contains('ql-align')){if(select.querySelector('option')==null){fillSelect(select,ALIGNS);}return new _iconPicker2.default(select,_icons2.default.align);}else if(select.classList.contains('ql-background')||select.classList.contains('ql-color')){var format=select.classList.contains('ql-background')?'background':'color';if(select.querySelector('option')==null){fillSelect(select,COLORS,format==='background'?'#ffffff':'#000000');}return new _colorPicker2.default(select,_icons2.default[format]);}else{if(select.querySelector('option')==null){if(select.classList.contains('ql-font')){fillSelect(select,FONTS);}else if(select.classList.contains('ql-header')){fillSelect(select,HEADERS);}else if(select.classList.contains('ql-size')){fillSelect(select,SIZES);}}return new _picker2.default(select);}});var update=function update(){_this2.pickers.forEach(function(picker){picker.update();});};this.quill.on(_emitter2.default.events.SELECTION_CHANGE,update).on(_emitter2.default.events.SCROLL_OPTIMIZE,update);}}]);return BaseTheme;}(_theme2.default);BaseTheme.DEFAULTS=(0,_extend2.default)(true,{},_theme2.default.DEFAULTS,{modules:{toolbar:{handlers:{formula:function formula(value){this.quill.theme.tooltip.edit('formula');},image:function image(value){var _this3=this;var fileInput=this.container.querySelector('input.ql-image[type=file]');if(fileInput==null){fileInput=document.createElement('input');fileInput.setAttribute('type','file');fileInput.setAttribute('accept','image/*');fileInput.classList.add('ql-image');fileInput.addEventListener('change',function(){if(fileInput.files!=null&&fileInput.files[0]!=null){var reader=new FileReader();reader.onload=function(e){var range=_this3.quill.getSelection(true);_this3.quill.updateContents(new _delta2.default().retain(range.index).delete(range.length).insert({image:e.target.result}),_emitter2.default.sources.USER);fileInput.value="";};reader.readAsDataURL(fileInput.files[0]);}});this.container.appendChild(fileInput);}fileInput.click();},video:function video(value){this.quill.theme.tooltip.edit('video');}}}}});var BaseTooltip=function(_Tooltip){_inherits(BaseTooltip,_Tooltip);function BaseTooltip(quill,boundsContainer){_classCallCheck(this,BaseTooltip);var _this4=_possibleConstructorReturn(this,(BaseTooltip.__proto__||Object.getPrototypeOf(BaseTooltip)).call(this,quill,boundsContainer));_this4.textbox=_this4.root.querySelector('input[type="text"]');_this4.listen();return _this4;}_createClass(BaseTooltip,[{key:'listen',value:function listen(){var _this5=this;this.textbox.addEventListener('keydown',function(event){if(_keyboard2.default.match(event,'enter')){_this5.save();event.preventDefault();}else if(_keyboard2.default.match(event,'escape')){_this5.cancel();event.preventDefault();}});}},{key:'cancel',value:function cancel(){this.hide();}},{key:'edit',value:function edit(){var mode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'link';var preview=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;this.root.classList.remove('ql-hidden');this.root.classList.add('ql-editing');if(preview!=null){this.textbox.value=preview;}else if(mode!==this.root.getAttribute('data-mode')){this.textbox.value='';}this.position(this.quill.getBounds(this.quill.selection.savedRange));this.textbox.select();this.textbox.setAttribute('placeholder',this.textbox.getAttribute('data-'+mode)||'');this.root.setAttribute('data-mode',mode);}},{key:'restoreFocus',value:function restoreFocus(){var scrollTop=this.quill.root.scrollTop;this.quill.focus();this.quill.root.scrollTop=scrollTop;}},{key:'save',value:function save(){var value=this.textbox.value;switch(this.root.getAttribute('data-mode')){case'link':var scrollTop=this.quill.root.scrollTop;if(this.linkRange){this.quill.formatText(this.linkRange,'link',value,_emitter2.default.sources.USER);delete this.linkRange;}else{this.restoreFocus();this.quill.format('link',value,_emitter2.default.sources.USER);}this.quill.root.scrollTop=scrollTop;break;case'video':var match=value.match(/^(https?):\/\/(www\.)?youtube\.com\/watch.*v=([a-zA-Z0-9_-]+)/)||value.match(/^(https?):\/\/(www\.)?youtu\.be\/([a-zA-Z0-9_-]+)/);if(match){value=match[1]+'://www.youtube.com/embed/'+match[3]+'?showinfo=0';}else if(match=value.match(/^(https?):\/\/(www\.)?vimeo\.com\/(\d+)/)){value=match[1]+'://player.vimeo.com/video/'+match[3]+'/';}// fallthrough
	case'formula':var range=this.quill.getSelection(true);var index=range.index+range.length;if(range!=null){this.quill.insertEmbed(index,this.root.getAttribute('data-mode'),value,_emitter2.default.sources.USER);if(this.root.getAttribute('data-mode')==='formula'){this.quill.insertText(index+1,' ',_emitter2.default.sources.USER);}this.quill.setSelection(index+2,_emitter2.default.sources.USER);}break;default:}this.textbox.value='';this.hide();}}]);return BaseTooltip;}(_tooltip2.default);function fillSelect(select,values){var defaultValue=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;values.forEach(function(value){var option=document.createElement('option');if(value===defaultValue){option.setAttribute('selected','selected');}else{option.setAttribute('value',value);}select.appendChild(option);});}exports.BaseTooltip=BaseTooltip;exports.default=BaseTheme;/***/},/* 108 *//***/function(module,exports,__webpack_require__){'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _extend=__webpack_require__(25);var _extend2=_interopRequireDefault(_extend);var _emitter=__webpack_require__(28);var _emitter2=_interopRequireDefault(_emitter);var _base=__webpack_require__(107);var _base2=_interopRequireDefault(_base);var _link=__webpack_require__(60);var _link2=_interopRequireDefault(_link);var _picker=__webpack_require__(101);var _picker2=_interopRequireDefault(_picker);var _selection=__webpack_require__(40);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&((typeof call==='undefined'?'undefined':_typeof2(call))==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+(typeof superClass==='undefined'?'undefined':_typeof2(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TOOLBAR_CONFIG=[[{header:['1','2','3',false]}],['bold','italic','underline','link'],[{list:'ordered'},{list:'bullet'}],['clean']];var SnowTheme=function(_BaseTheme){_inherits(SnowTheme,_BaseTheme);function SnowTheme(quill,options){_classCallCheck(this,SnowTheme);if(options.modules.toolbar!=null&&options.modules.toolbar.container==null){options.modules.toolbar.container=TOOLBAR_CONFIG;}var _this=_possibleConstructorReturn(this,(SnowTheme.__proto__||Object.getPrototypeOf(SnowTheme)).call(this,quill,options));_this.quill.container.classList.add('ql-snow');return _this;}_createClass(SnowTheme,[{key:'extendToolbar',value:function extendToolbar(toolbar){toolbar.container.classList.add('ql-snow');this.buildButtons([].slice.call(toolbar.container.querySelectorAll('button')));this.buildPickers([].slice.call(toolbar.container.querySelectorAll('select')));this.tooltip=new SnowTooltip(this.quill,this.options.bounds);if(toolbar.container.querySelector('.ql-link')){this.quill.keyboard.addBinding({key:'K',shortKey:true},function(range,context){toolbar.handlers['link'].call(toolbar,!context.format.link);});}}}]);return SnowTheme;}(_base2.default);SnowTheme.DEFAULTS=(0,_extend2.default)(true,{},_base2.default.DEFAULTS,{modules:{toolbar:{handlers:{link:function link(value){if(value){var range=this.quill.getSelection();if(range==null||range.length==0)return;var preview=this.quill.getText(range);if(/^\S+@\S+\.\S+$/.test(preview)&&preview.indexOf('mailto:')!==0){preview='mailto:'+preview;}var tooltip=this.quill.theme.tooltip;tooltip.edit('link',preview);}else{this.quill.format('link',false);}}}}}});var SnowTooltip=function(_BaseTooltip){_inherits(SnowTooltip,_BaseTooltip);function SnowTooltip(quill,bounds){_classCallCheck(this,SnowTooltip);var _this2=_possibleConstructorReturn(this,(SnowTooltip.__proto__||Object.getPrototypeOf(SnowTooltip)).call(this,quill,bounds));_this2.preview=_this2.root.querySelector('a.ql-preview');return _this2;}_createClass(SnowTooltip,[{key:'listen',value:function listen(){var _this3=this;_get(SnowTooltip.prototype.__proto__||Object.getPrototypeOf(SnowTooltip.prototype),'listen',this).call(this);this.root.querySelector('a.ql-action').addEventListener('click',function(event){if(_this3.root.classList.contains('ql-editing')){_this3.save();}else{_this3.edit('link',_this3.preview.textContent);}event.preventDefault();});this.root.querySelector('a.ql-remove').addEventListener('click',function(event){if(_this3.linkRange!=null){_this3.restoreFocus();_this3.quill.formatText(_this3.linkRange,'link',false,_emitter2.default.sources.USER);delete _this3.linkRange;}event.preventDefault();_this3.hide();});this.quill.on(_emitter2.default.events.SELECTION_CHANGE,function(range){if(range==null)return;if(range.length===0){var _quill$scroll$descend=_this3.quill.scroll.descendant(_link2.default,range.index);var _quill$scroll$descend2=_slicedToArray(_quill$scroll$descend,2);var link=_quill$scroll$descend2[0];var offset=_quill$scroll$descend2[1];if(link!=null){_this3.linkRange=new _selection.Range(range.index-offset,link.length());var preview=_link2.default.formats(link.domNode);_this3.preview.textContent=preview;_this3.preview.setAttribute('href',preview);_this3.show();_this3.position(_this3.quill.getBounds(_this3.linkRange));return;}}_this3.hide();});}},{key:'show',value:function show(){_get(SnowTooltip.prototype.__proto__||Object.getPrototypeOf(SnowTooltip.prototype),'show',this).call(this);this.root.removeAttribute('data-mode');}}]);return SnowTooltip;}(_base.BaseTooltip);SnowTooltip.TEMPLATE=['<a class="ql-preview" target="_blank" href="about:blank"></a>','<input type="text" data-formula="e=mc^2" data-link="quilljs.com" data-video="Embed URL">','<a class="ql-action"></a>','<a class="ql-remove"></a>'].join('');exports.default=SnowTheme;/***/}/******/]));});;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(355).Buffer, __webpack_require__(178)(module)))

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */

	'use strict';

	var base64 = __webpack_require__(356);
	var ieee754 = __webpack_require__(357);
	var isArray = __webpack_require__(358);

	exports.Buffer = Buffer;
	exports.SlowBuffer = SlowBuffer;
	exports.INSPECT_MAX_BYTES = 50;

	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();

	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength();

	function typedArraySupport() {
	  try {
	    var arr = new Uint8Array(1);
	    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function foo() {
	        return 42;
	      } };
	    return arr.foo() === 42 && // typed array instances can be augmented
	    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`
	  } catch (e) {
	    return false;
	  }
	}

	function kMaxLength() {
	  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;
	}

	function createBuffer(that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length');
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length);
	    that.__proto__ = Buffer.prototype;
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length);
	    }
	    that.length = length;
	  }

	  return that;
	}

	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */

	function Buffer(arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length);
	  }

	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error('If encoding is specified then the first argument must be a string');
	    }
	    return allocUnsafe(this, arg);
	  }
	  return from(this, arg, encodingOrOffset, length);
	}

	Buffer.poolSize = 8192; // not used by this implementation

	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype;
	  return arr;
	};

	function from(that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number');
	  }

	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length);
	  }

	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset);
	  }

	  return fromObject(that, value);
	}

	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length);
	};

	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype;
	  Buffer.__proto__ = Uint8Array;
	  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    });
	  }
	}

	function assertSize(size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number');
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative');
	  }
	}

	function alloc(that, size, fill, encoding) {
	  assertSize(size);
	  if (size <= 0) {
	    return createBuffer(that, size);
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);
	  }
	  return createBuffer(that, size);
	}

	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding);
	};

	function allocUnsafe(that, size) {
	  assertSize(size);
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0;
	    }
	  }
	  return that;
	}

	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size);
	};
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size);
	};

	function fromString(that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8';
	  }

	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding');
	  }

	  var length = byteLength(string, encoding) | 0;
	  that = createBuffer(that, length);

	  var actual = that.write(string, encoding);

	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual);
	  }

	  return that;
	}

	function fromArrayLike(that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0;
	  that = createBuffer(that, length);
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255;
	  }
	  return that;
	}

	function fromArrayBuffer(that, array, byteOffset, length) {
	  array.byteLength; // this throws if `array` is not a valid ArrayBuffer

	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds');
	  }

	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds');
	  }

	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array);
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset);
	  } else {
	    array = new Uint8Array(array, byteOffset, length);
	  }

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array;
	    that.__proto__ = Buffer.prototype;
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array);
	  }
	  return that;
	}

	function fromObject(that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0;
	    that = createBuffer(that, len);

	    if (that.length === 0) {
	      return that;
	    }

	    obj.copy(that, 0, 0, len);
	    return that;
	  }

	  if (obj) {
	    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0);
	      }
	      return fromArrayLike(that, obj);
	    }

	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data);
	    }
	  }

	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');
	}

	function checked(length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');
	  }
	  return length | 0;
	}

	function SlowBuffer(length) {
	  if (+length != length) {
	    // eslint-disable-line eqeqeq
	    length = 0;
	  }
	  return Buffer.alloc(+length);
	}

	Buffer.isBuffer = function isBuffer(b) {
	  return !!(b != null && b._isBuffer);
	};

	Buffer.compare = function compare(a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers');
	  }

	  if (a === b) return 0;

	  var x = a.length;
	  var y = b.length;

	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i];
	      y = b[i];
	      break;
	    }
	  }

	  if (x < y) return -1;
	  if (y < x) return 1;
	  return 0;
	};

	Buffer.isEncoding = function isEncoding(encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true;
	    default:
	      return false;
	  }
	};

	Buffer.concat = function concat(list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers');
	  }

	  if (list.length === 0) {
	    return Buffer.alloc(0);
	  }

	  var i;
	  if (length === undefined) {
	    length = 0;
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length;
	    }
	  }

	  var buffer = Buffer.allocUnsafe(length);
	  var pos = 0;
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i];
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers');
	    }
	    buf.copy(buffer, pos);
	    pos += buf.length;
	  }
	  return buffer;
	};

	function byteLength(string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length;
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength;
	  }
	  if (typeof string !== 'string') {
	    string = '' + string;
	  }

	  var len = string.length;
	  if (len === 0) return 0;

	  // Use a for loop to avoid recursion
	  var loweredCase = false;
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len;
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length;
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2;
	      case 'hex':
	        return len >>> 1;
	      case 'base64':
	        return base64ToBytes(string).length;
	      default:
	        if (loweredCase) return utf8ToBytes(string).length; // assume utf8
	        encoding = ('' + encoding).toLowerCase();
	        loweredCase = true;
	    }
	  }
	}
	Buffer.byteLength = byteLength;

	function slowToString(encoding, start, end) {
	  var loweredCase = false;

	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.

	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0;
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return '';
	  }

	  if (end === undefined || end > this.length) {
	    end = this.length;
	  }

	  if (end <= 0) {
	    return '';
	  }

	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0;
	  start >>>= 0;

	  if (end <= start) {
	    return '';
	  }

	  if (!encoding) encoding = 'utf8';

	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end);

	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end);

	      case 'ascii':
	        return asciiSlice(this, start, end);

	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end);

	      case 'base64':
	        return base64Slice(this, start, end);

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end);

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
	        encoding = (encoding + '').toLowerCase();
	        loweredCase = true;
	    }
	  }
	}

	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true;

	function swap(b, n, m) {
	  var i = b[n];
	  b[n] = b[m];
	  b[m] = i;
	}

	Buffer.prototype.swap16 = function swap16() {
	  var len = this.length;
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits');
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1);
	  }
	  return this;
	};

	Buffer.prototype.swap32 = function swap32() {
	  var len = this.length;
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits');
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3);
	    swap(this, i + 1, i + 2);
	  }
	  return this;
	};

	Buffer.prototype.swap64 = function swap64() {
	  var len = this.length;
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits');
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7);
	    swap(this, i + 1, i + 6);
	    swap(this, i + 2, i + 5);
	    swap(this, i + 3, i + 4);
	  }
	  return this;
	};

	Buffer.prototype.toString = function toString() {
	  var length = this.length | 0;
	  if (length === 0) return '';
	  if (arguments.length === 0) return utf8Slice(this, 0, length);
	  return slowToString.apply(this, arguments);
	};

	Buffer.prototype.equals = function equals(b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
	  if (this === b) return true;
	  return Buffer.compare(this, b) === 0;
	};

	Buffer.prototype.inspect = function inspect() {
	  var str = '';
	  var max = exports.INSPECT_MAX_BYTES;
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
	    if (this.length > max) str += ' ... ';
	  }
	  return '<Buffer ' + str + '>';
	};

	Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer');
	  }

	  if (start === undefined) {
	    start = 0;
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0;
	  }
	  if (thisStart === undefined) {
	    thisStart = 0;
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length;
	  }

	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index');
	  }

	  if (thisStart >= thisEnd && start >= end) {
	    return 0;
	  }
	  if (thisStart >= thisEnd) {
	    return -1;
	  }
	  if (start >= end) {
	    return 1;
	  }

	  start >>>= 0;
	  end >>>= 0;
	  thisStart >>>= 0;
	  thisEnd >>>= 0;

	  if (this === target) return 0;

	  var x = thisEnd - thisStart;
	  var y = end - start;
	  var len = Math.min(x, y);

	  var thisCopy = this.slice(thisStart, thisEnd);
	  var targetCopy = target.slice(start, end);

	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i];
	      y = targetCopy[i];
	      break;
	    }
	  }

	  if (x < y) return -1;
	  if (y < x) return 1;
	  return 0;
	};

	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1;

	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset;
	    byteOffset = 0;
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff;
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000;
	  }
	  byteOffset = +byteOffset; // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : buffer.length - 1;
	  }

	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1;else byteOffset = buffer.length - 1;
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0;else return -1;
	  }

	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding);
	  }

	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1;
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
	  } else if (typeof val === 'number') {
	    val = val & 0xFF; // Search for a byte value [0-255]
	    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
	      }
	    }
	    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
	  }

	  throw new TypeError('val must be string, number or Buffer');
	}

	function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1;
	  var arrLength = arr.length;
	  var valLength = val.length;

	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase();
	    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1;
	      }
	      indexSize = 2;
	      arrLength /= 2;
	      valLength /= 2;
	      byteOffset /= 2;
	    }
	  }

	  function read(buf, i) {
	    if (indexSize === 1) {
	      return buf[i];
	    } else {
	      return buf.readUInt16BE(i * indexSize);
	    }
	  }

	  var i;
	  if (dir) {
	    var foundIndex = -1;
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i;
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex;
	        foundIndex = -1;
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true;
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false;
	          break;
	        }
	      }
	      if (found) return i;
	    }
	  }

	  return -1;
	}

	Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1;
	};

	Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
	};

	Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
	};

	function hexWrite(buf, string, offset, length) {
	  offset = Number(offset) || 0;
	  var remaining = buf.length - offset;
	  if (!length) {
	    length = remaining;
	  } else {
	    length = Number(length);
	    if (length > remaining) {
	      length = remaining;
	    }
	  }

	  // must be an even number of digits
	  var strLen = string.length;
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');

	  if (length > strLen / 2) {
	    length = strLen / 2;
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16);
	    if (isNaN(parsed)) return i;
	    buf[offset + i] = parsed;
	  }
	  return i;
	}

	function utf8Write(buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
	}

	function asciiWrite(buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length);
	}

	function latin1Write(buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length);
	}

	function base64Write(buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length);
	}

	function ucs2Write(buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
	}

	Buffer.prototype.write = function write(string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8';
	    length = this.length;
	    offset = 0;
	    // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset;
	    length = this.length;
	    offset = 0;
	    // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0;
	    if (isFinite(length)) {
	      length = length | 0;
	      if (encoding === undefined) encoding = 'utf8';
	    } else {
	      encoding = length;
	      length = undefined;
	    }
	    // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
	  }

	  var remaining = this.length - offset;
	  if (length === undefined || length > remaining) length = remaining;

	  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds');
	  }

	  if (!encoding) encoding = 'utf8';

	  var loweredCase = false;
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length);

	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length);

	      case 'ascii':
	        return asciiWrite(this, string, offset, length);

	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length);

	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length);

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length);

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
	        encoding = ('' + encoding).toLowerCase();
	        loweredCase = true;
	    }
	  }
	};

	Buffer.prototype.toJSON = function toJSON() {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  };
	};

	function base64Slice(buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf);
	  } else {
	    return base64.fromByteArray(buf.slice(start, end));
	  }
	}

	function utf8Slice(buf, start, end) {
	  end = Math.min(buf.length, end);
	  var res = [];

	  var i = start;
	  while (i < end) {
	    var firstByte = buf[i];
	    var codePoint = null;
	    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint;

	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte;
	          }
	          break;
	        case 2:
	          secondByte = buf[i + 1];
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint;
	            }
	          }
	          break;
	        case 3:
	          secondByte = buf[i + 1];
	          thirdByte = buf[i + 2];
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint;
	            }
	          }
	          break;
	        case 4:
	          secondByte = buf[i + 1];
	          thirdByte = buf[i + 2];
	          fourthByte = buf[i + 3];
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint;
	            }
	          }
	      }
	    }

	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD;
	      bytesPerSequence = 1;
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000;
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800);
	      codePoint = 0xDC00 | codePoint & 0x3FF;
	    }

	    res.push(codePoint);
	    i += bytesPerSequence;
	  }

	  return decodeCodePointsArray(res);
	}

	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000;

	function decodeCodePointsArray(codePoints) {
	  var len = codePoints.length;
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()
	  }

	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = '';
	  var i = 0;
	  while (i < len) {
	    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
	  }
	  return res;
	}

	function asciiSlice(buf, start, end) {
	  var ret = '';
	  end = Math.min(buf.length, end);

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F);
	  }
	  return ret;
	}

	function latin1Slice(buf, start, end) {
	  var ret = '';
	  end = Math.min(buf.length, end);

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i]);
	  }
	  return ret;
	}

	function hexSlice(buf, start, end) {
	  var len = buf.length;

	  if (!start || start < 0) start = 0;
	  if (!end || end < 0 || end > len) end = len;

	  var out = '';
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i]);
	  }
	  return out;
	}

	function utf16leSlice(buf, start, end) {
	  var bytes = buf.slice(start, end);
	  var res = '';
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
	  }
	  return res;
	}

	Buffer.prototype.slice = function slice(start, end) {
	  var len = this.length;
	  start = ~~start;
	  end = end === undefined ? len : ~~end;

	  if (start < 0) {
	    start += len;
	    if (start < 0) start = 0;
	  } else if (start > len) {
	    start = len;
	  }

	  if (end < 0) {
	    end += len;
	    if (end < 0) end = 0;
	  } else if (end > len) {
	    end = len;
	  }

	  if (end < start) end = start;

	  var newBuf;
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end);
	    newBuf.__proto__ = Buffer.prototype;
	  } else {
	    var sliceLen = end - start;
	    newBuf = new Buffer(sliceLen, undefined);
	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start];
	    }
	  }

	  return newBuf;
	};

	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset(offset, ext, length) {
	  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
	}

	Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) checkOffset(offset, byteLength, this.length);

	  var val = this[offset];
	  var mul = 1;
	  var i = 0;
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul;
	  }

	  return val;
	};

	Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length);
	  }

	  var val = this[offset + --byteLength];
	  var mul = 1;
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul;
	  }

	  return val;
	};

	Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length);
	  return this[offset];
	};

	Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length);
	  return this[offset] | this[offset + 1] << 8;
	};

	Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length);
	  return this[offset] << 8 | this[offset + 1];
	};

	Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);

	  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
	};

	Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);

	  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
	};

	Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) checkOffset(offset, byteLength, this.length);

	  var val = this[offset];
	  var mul = 1;
	  var i = 0;
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul;
	  }
	  mul *= 0x80;

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength);

	  return val;
	};

	Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) checkOffset(offset, byteLength, this.length);

	  var i = byteLength;
	  var mul = 1;
	  var val = this[offset + --i];
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul;
	  }
	  mul *= 0x80;

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength);

	  return val;
	};

	Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length);
	  if (!(this[offset] & 0x80)) return this[offset];
	  return (0xff - this[offset] + 1) * -1;
	};

	Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length);
	  var val = this[offset] | this[offset + 1] << 8;
	  return val & 0x8000 ? val | 0xFFFF0000 : val;
	};

	Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length);
	  var val = this[offset + 1] | this[offset] << 8;
	  return val & 0x8000 ? val | 0xFFFF0000 : val;
	};

	Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);

	  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
	};

	Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);

	  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
	};

	Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);
	  return ieee754.read(this, offset, true, 23, 4);
	};

	Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);
	  return ieee754.read(this, offset, false, 23, 4);
	};

	Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length);
	  return ieee754.read(this, offset, true, 52, 8);
	};

	Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length);
	  return ieee754.read(this, offset, false, 52, 8);
	};

	function checkInt(buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
	  if (offset + ext > buf.length) throw new RangeError('Index out of range');
	}

	Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
	    checkInt(this, value, offset, byteLength, maxBytes, 0);
	  }

	  var mul = 1;
	  var i = 0;
	  this[offset] = value & 0xFF;
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = value / mul & 0xFF;
	  }

	  return offset + byteLength;
	};

	Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
	    checkInt(this, value, offset, byteLength, maxBytes, 0);
	  }

	  var i = byteLength - 1;
	  var mul = 1;
	  this[offset + i] = value & 0xFF;
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = value / mul & 0xFF;
	  }

	  return offset + byteLength;
	};

	Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
	  this[offset] = value & 0xff;
	  return offset + 1;
	};

	function objectWriteUInt16(buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1;
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;
	  }
	}

	Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value & 0xff;
	    this[offset + 1] = value >>> 8;
	  } else {
	    objectWriteUInt16(this, value, offset, true);
	  }
	  return offset + 2;
	};

	Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value >>> 8;
	    this[offset + 1] = value & 0xff;
	  } else {
	    objectWriteUInt16(this, value, offset, false);
	  }
	  return offset + 2;
	};

	function objectWriteUInt32(buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1;
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;
	  }
	}

	Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = value >>> 24;
	    this[offset + 2] = value >>> 16;
	    this[offset + 1] = value >>> 8;
	    this[offset] = value & 0xff;
	  } else {
	    objectWriteUInt32(this, value, offset, true);
	  }
	  return offset + 4;
	};

	Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value >>> 24;
	    this[offset + 1] = value >>> 16;
	    this[offset + 2] = value >>> 8;
	    this[offset + 3] = value & 0xff;
	  } else {
	    objectWriteUInt32(this, value, offset, false);
	  }
	  return offset + 4;
	};

	Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1);

	    checkInt(this, value, offset, byteLength, limit - 1, -limit);
	  }

	  var i = 0;
	  var mul = 1;
	  var sub = 0;
	  this[offset] = value & 0xFF;
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1;
	    }
	    this[offset + i] = (value / mul >> 0) - sub & 0xFF;
	  }

	  return offset + byteLength;
	};

	Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1);

	    checkInt(this, value, offset, byteLength, limit - 1, -limit);
	  }

	  var i = byteLength - 1;
	  var mul = 1;
	  var sub = 0;
	  this[offset + i] = value & 0xFF;
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1;
	    }
	    this[offset + i] = (value / mul >> 0) - sub & 0xFF;
	  }

	  return offset + byteLength;
	};

	Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
	  if (value < 0) value = 0xff + value + 1;
	  this[offset] = value & 0xff;
	  return offset + 1;
	};

	Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value & 0xff;
	    this[offset + 1] = value >>> 8;
	  } else {
	    objectWriteUInt16(this, value, offset, true);
	  }
	  return offset + 2;
	};

	Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value >>> 8;
	    this[offset + 1] = value & 0xff;
	  } else {
	    objectWriteUInt16(this, value, offset, false);
	  }
	  return offset + 2;
	};

	Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value & 0xff;
	    this[offset + 1] = value >>> 8;
	    this[offset + 2] = value >>> 16;
	    this[offset + 3] = value >>> 24;
	  } else {
	    objectWriteUInt32(this, value, offset, true);
	  }
	  return offset + 4;
	};

	Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
	  if (value < 0) value = 0xffffffff + value + 1;
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value >>> 24;
	    this[offset + 1] = value >>> 16;
	    this[offset + 2] = value >>> 8;
	    this[offset + 3] = value & 0xff;
	  } else {
	    objectWriteUInt32(this, value, offset, false);
	  }
	  return offset + 4;
	};

	function checkIEEE754(buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range');
	  if (offset < 0) throw new RangeError('Index out of range');
	}

	function writeFloat(buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4);
	  return offset + 4;
	}

	Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert);
	};

	Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert);
	};

	function writeDouble(buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8);
	  return offset + 8;
	}

	Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert);
	};

	Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert);
	};

	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy(target, targetStart, start, end) {
	  if (!start) start = 0;
	  if (!end && end !== 0) end = this.length;
	  if (targetStart >= target.length) targetStart = target.length;
	  if (!targetStart) targetStart = 0;
	  if (end > 0 && end < start) end = start;

	  // Copy 0 bytes; we're done
	  if (end === start) return 0;
	  if (target.length === 0 || this.length === 0) return 0;

	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds');
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');
	  if (end < 0) throw new RangeError('sourceEnd out of bounds');

	  // Are we oob?
	  if (end > this.length) end = this.length;
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start;
	  }

	  var len = end - start;
	  var i;

	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start];
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start];
	    }
	  } else {
	    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
	  }

	  return len;
	};

	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill(val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start;
	      start = 0;
	      end = this.length;
	    } else if (typeof end === 'string') {
	      encoding = end;
	      end = this.length;
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0);
	      if (code < 256) {
	        val = code;
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string');
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding);
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255;
	  }

	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index');
	  }

	  if (end <= start) {
	    return this;
	  }

	  start = start >>> 0;
	  end = end === undefined ? this.length : end >>> 0;

	  if (!val) val = 0;

	  var i;
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val;
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());
	    var len = bytes.length;
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len];
	    }
	  }

	  return this;
	};

	// HELPER FUNCTIONS
	// ================

	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

	function base64clean(str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '');
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return '';
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '=';
	  }
	  return str;
	}

	function stringtrim(str) {
	  if (str.trim) return str.trim();
	  return str.replace(/^\s+|\s+$/g, '');
	}

	function toHex(n) {
	  if (n < 16) return '0' + n.toString(16);
	  return n.toString(16);
	}

	function utf8ToBytes(string, units) {
	  units = units || Infinity;
	  var codePoint;
	  var length = string.length;
	  var leadSurrogate = null;
	  var bytes = [];

	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i);

	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
	          continue;
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
	          continue;
	        }

	        // valid lead
	        leadSurrogate = codePoint;

	        continue;
	      }

	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
	        leadSurrogate = codePoint;
	        continue;
	      }

	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
	    }

	    leadSurrogate = null;

	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break;
	      bytes.push(codePoint);
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break;
	      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break;
	      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break;
	      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
	    } else {
	      throw new Error('Invalid code point');
	    }
	  }

	  return bytes;
	}

	function asciiToBytes(str) {
	  var byteArray = [];
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF);
	  }
	  return byteArray;
	}

	function utf16leToBytes(str, units) {
	  var c, hi, lo;
	  var byteArray = [];
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break;

	    c = str.charCodeAt(i);
	    hi = c >> 8;
	    lo = c % 256;
	    byteArray.push(lo);
	    byteArray.push(hi);
	  }

	  return byteArray;
	}

	function base64ToBytes(str) {
	  return base64.toByteArray(base64clean(str));
	}

	function blitBuffer(src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if (i + offset >= dst.length || i >= src.length) break;
	    dst[i + offset] = src[i];
	  }
	  return i;
	}

	function isnan(val) {
	  return val !== val; // eslint-disable-line no-self-compare
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(355).Buffer, (function() { return this; }())))

/***/ },
/* 356 */
/***/ function(module, exports) {

	'use strict';

	exports.byteLength = byteLength;
	exports.toByteArray = toByteArray;
	exports.fromByteArray = fromByteArray;

	var lookup = [];
	var revLookup = [];
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

	var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
	for (var i = 0, len = code.length; i < len; ++i) {
	  lookup[i] = code[i];
	  revLookup[code.charCodeAt(i)] = i;
	}

	revLookup['-'.charCodeAt(0)] = 62;
	revLookup['_'.charCodeAt(0)] = 63;

	function placeHoldersCount(b64) {
	  var len = b64.length;
	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4');
	  }

	  // the number of equal signs (place holders)
	  // if there are two placeholders, than the two characters before it
	  // represent one byte
	  // if there is only one, then the three characters before it represent 2 bytes
	  // this is just a cheap hack to not do indexOf twice
	  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;
	}

	function byteLength(b64) {
	  // base64 is 4/3 + up to two characters of the original data
	  return b64.length * 3 / 4 - placeHoldersCount(b64);
	}

	function toByteArray(b64) {
	  var i, j, l, tmp, placeHolders, arr;
	  var len = b64.length;
	  placeHolders = placeHoldersCount(b64);

	  arr = new Arr(len * 3 / 4 - placeHolders);

	  // if there are placeholders, only get up to the last complete 4 chars
	  l = placeHolders > 0 ? len - 4 : len;

	  var L = 0;

	  for (i = 0, j = 0; i < l; i += 4, j += 3) {
	    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
	    arr[L++] = tmp >> 16 & 0xFF;
	    arr[L++] = tmp >> 8 & 0xFF;
	    arr[L++] = tmp & 0xFF;
	  }

	  if (placeHolders === 2) {
	    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
	    arr[L++] = tmp & 0xFF;
	  } else if (placeHolders === 1) {
	    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
	    arr[L++] = tmp >> 8 & 0xFF;
	    arr[L++] = tmp & 0xFF;
	  }

	  return arr;
	}

	function tripletToBase64(num) {
	  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
	}

	function encodeChunk(uint8, start, end) {
	  var tmp;
	  var output = [];
	  for (var i = start; i < end; i += 3) {
	    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];
	    output.push(tripletToBase64(tmp));
	  }
	  return output.join('');
	}

	function fromByteArray(uint8) {
	  var tmp;
	  var len = uint8.length;
	  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
	  var output = '';
	  var parts = [];
	  var maxChunkLength = 16383; // must be multiple of 3

	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
	  }

	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1];
	    output += lookup[tmp >> 2];
	    output += lookup[tmp << 4 & 0x3F];
	    output += '==';
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + uint8[len - 1];
	    output += lookup[tmp >> 10];
	    output += lookup[tmp >> 4 & 0x3F];
	    output += lookup[tmp << 2 & 0x3F];
	    output += '=';
	  }

	  parts.push(output);

	  return parts.join('');
	}

/***/ },
/* 357 */
/***/ function(module, exports) {

	"use strict";

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m;
	  var eLen = nBytes * 8 - mLen - 1;
	  var eMax = (1 << eLen) - 1;
	  var eBias = eMax >> 1;
	  var nBits = -7;
	  var i = isLE ? nBytes - 1 : 0;
	  var d = isLE ? -1 : 1;
	  var s = buffer[offset + i];

	  i += d;

	  e = s & (1 << -nBits) - 1;
	  s >>= -nBits;
	  nBits += eLen;
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  m = e & (1 << -nBits) - 1;
	  e >>= -nBits;
	  nBits += mLen;
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  if (e === 0) {
	    e = 1 - eBias;
	  } else if (e === eMax) {
	    return m ? NaN : (s ? -1 : 1) * Infinity;
	  } else {
	    m = m + Math.pow(2, mLen);
	    e = e - eBias;
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
	};

	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c;
	  var eLen = nBytes * 8 - mLen - 1;
	  var eMax = (1 << eLen) - 1;
	  var eBias = eMax >> 1;
	  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
	  var i = isLE ? 0 : nBytes - 1;
	  var d = isLE ? 1 : -1;
	  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;

	  value = Math.abs(value);

	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0;
	    e = eMax;
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2);
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--;
	      c *= 2;
	    }
	    if (e + eBias >= 1) {
	      value += rt / c;
	    } else {
	      value += rt * Math.pow(2, 1 - eBias);
	    }
	    if (value * c >= 2) {
	      e++;
	      c /= 2;
	    }

	    if (e + eBias >= eMax) {
	      m = 0;
	      e = eMax;
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen);
	      e = e + eBias;
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
	      e = 0;
	    }
	  }

	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

	  e = e << mLen | m;
	  eLen += mLen;
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

	  buffer[offset + i - d] |= s * 128;
	};

/***/ },
/* 358 */
/***/ function(module, exports) {

	'use strict';

	var toString = {}.toString;

	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};/**
	 * @license
	 * lodash <https://lodash.com/>
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */;(function(){/** Used as a safe reference for `undefined` in pre-ES5 environments. */var undefined;/** Used as the semantic version number. */var VERSION='4.16.3';/** Used as the size to enable large array optimizations. */var LARGE_ARRAY_SIZE=200;/** Error message constants. */var CORE_ERROR_TEXT='Unsupported core-js use. Try https://github.com/es-shims.',FUNC_ERROR_TEXT='Expected a function';/** Used to stand-in for `undefined` hash values. */var HASH_UNDEFINED='__lodash_hash_undefined__';/** Used as the maximum memoize cache size. */var MAX_MEMOIZE_SIZE=500;/** Used as the internal argument placeholder. */var PLACEHOLDER='__lodash_placeholder__';/** Used to compose bitmasks for function metadata. */var BIND_FLAG=1,BIND_KEY_FLAG=2,CURRY_BOUND_FLAG=4,CURRY_FLAG=8,CURRY_RIGHT_FLAG=16,PARTIAL_FLAG=32,PARTIAL_RIGHT_FLAG=64,ARY_FLAG=128,REARG_FLAG=256,FLIP_FLAG=512;/** Used to compose bitmasks for comparison styles. */var UNORDERED_COMPARE_FLAG=1,PARTIAL_COMPARE_FLAG=2;/** Used as default options for `_.truncate`. */var DEFAULT_TRUNC_LENGTH=30,DEFAULT_TRUNC_OMISSION='...';/** Used to detect hot functions by number of calls within a span of milliseconds. */var HOT_COUNT=500,HOT_SPAN=16;/** Used to indicate the type of lazy iteratees. */var LAZY_FILTER_FLAG=1,LAZY_MAP_FLAG=2,LAZY_WHILE_FLAG=3;/** Used as references for various `Number` constants. */var INFINITY=1/0,MAX_SAFE_INTEGER=9007199254740991,MAX_INTEGER=1.7976931348623157e+308,NAN=0/0;/** Used as references for the maximum length and index of an array. */var MAX_ARRAY_LENGTH=4294967295,MAX_ARRAY_INDEX=MAX_ARRAY_LENGTH-1,HALF_MAX_ARRAY_LENGTH=MAX_ARRAY_LENGTH>>>1;/** Used to associate wrap methods with their bit flags. */var wrapFlags=[['ary',ARY_FLAG],['bind',BIND_FLAG],['bindKey',BIND_KEY_FLAG],['curry',CURRY_FLAG],['curryRight',CURRY_RIGHT_FLAG],['flip',FLIP_FLAG],['partial',PARTIAL_FLAG],['partialRight',PARTIAL_RIGHT_FLAG],['rearg',REARG_FLAG]];/** `Object#toString` result references. */var argsTag='[object Arguments]',arrayTag='[object Array]',boolTag='[object Boolean]',dateTag='[object Date]',errorTag='[object Error]',funcTag='[object Function]',genTag='[object GeneratorFunction]',mapTag='[object Map]',numberTag='[object Number]',objectTag='[object Object]',promiseTag='[object Promise]',proxyTag='[object Proxy]',regexpTag='[object RegExp]',setTag='[object Set]',stringTag='[object String]',symbolTag='[object Symbol]',weakMapTag='[object WeakMap]',weakSetTag='[object WeakSet]';var arrayBufferTag='[object ArrayBuffer]',dataViewTag='[object DataView]',float32Tag='[object Float32Array]',float64Tag='[object Float64Array]',int8Tag='[object Int8Array]',int16Tag='[object Int16Array]',int32Tag='[object Int32Array]',uint8Tag='[object Uint8Array]',uint8ClampedTag='[object Uint8ClampedArray]',uint16Tag='[object Uint16Array]',uint32Tag='[object Uint32Array]';/** Used to match empty string literals in compiled template source. */var reEmptyStringLeading=/\b__p \+= '';/g,reEmptyStringMiddle=/\b(__p \+=) '' \+/g,reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g;/** Used to match HTML entities and HTML characters. */var reEscapedHtml=/&(?:amp|lt|gt|quot|#39);/g,reUnescapedHtml=/[&<>"']/g,reHasEscapedHtml=RegExp(reEscapedHtml.source),reHasUnescapedHtml=RegExp(reUnescapedHtml.source);/** Used to match template delimiters. */var reEscape=/<%-([\s\S]+?)%>/g,reEvaluate=/<%([\s\S]+?)%>/g,reInterpolate=/<%=([\s\S]+?)%>/g;/** Used to match property names within property paths. */var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/,reLeadingDot=/^\./,rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;/**
	   * Used to match `RegExp`
	   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	   */var reRegExpChar=/[\\^$.*+?()[\]{}|]/g,reHasRegExpChar=RegExp(reRegExpChar.source);/** Used to match leading and trailing whitespace. */var reTrim=/^\s+|\s+$/g,reTrimStart=/^\s+/,reTrimEnd=/\s+$/;/** Used to match wrap detail comments. */var reWrapComment=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,reWrapDetails=/\{\n\/\* \[wrapped with (.+)\] \*/,reSplitDetails=/,? & /;/** Used to match words composed of alphanumeric characters. */var reAsciiWord=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;/** Used to match backslashes in property paths. */var reEscapeChar=/\\(\\)?/g;/**
	   * Used to match
	   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
	   */var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;/** Used to match `RegExp` flags from their coerced string values. */var reFlags=/\w*$/;/** Used to detect bad signed hexadecimal string values. */var reIsBadHex=/^[-+]0x[0-9a-f]+$/i;/** Used to detect binary string values. */var reIsBinary=/^0b[01]+$/i;/** Used to detect host constructors (Safari). */var reIsHostCtor=/^\[object .+?Constructor\]$/;/** Used to detect octal string values. */var reIsOctal=/^0o[0-7]+$/i;/** Used to detect unsigned integer values. */var reIsUint=/^(?:0|[1-9]\d*)$/;/** Used to match Latin Unicode letters (excluding mathematical operators). */var reLatin=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;/** Used to ensure capturing order of template delimiters. */var reNoMatch=/($^)/;/** Used to match unescaped characters in compiled string literals. */var reUnescapedString=/['\n\r\u2028\u2029\\]/g;/** Used to compose unicode character classes. */var rsAstralRange='\\ud800-\\udfff',rsComboMarksRange='\\u0300-\\u036f\\ufe20-\\ufe23',rsComboSymbolsRange='\\u20d0-\\u20f0',rsDingbatRange='\\u2700-\\u27bf',rsLowerRange='a-z\\xdf-\\xf6\\xf8-\\xff',rsMathOpRange='\\xac\\xb1\\xd7\\xf7',rsNonCharRange='\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',rsPunctuationRange='\\u2000-\\u206f',rsSpaceRange=' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',rsUpperRange='A-Z\\xc0-\\xd6\\xd8-\\xde',rsVarRange='\\ufe0e\\ufe0f',rsBreakRange=rsMathOpRange+rsNonCharRange+rsPunctuationRange+rsSpaceRange;/** Used to compose unicode capture groups. */var rsApos='[\'\u2019]',rsAstral='['+rsAstralRange+']',rsBreak='['+rsBreakRange+']',rsCombo='['+rsComboMarksRange+rsComboSymbolsRange+']',rsDigits='\\d+',rsDingbat='['+rsDingbatRange+']',rsLower='['+rsLowerRange+']',rsMisc='[^'+rsAstralRange+rsBreakRange+rsDigits+rsDingbatRange+rsLowerRange+rsUpperRange+']',rsFitz='\\ud83c[\\udffb-\\udfff]',rsModifier='(?:'+rsCombo+'|'+rsFitz+')',rsNonAstral='[^'+rsAstralRange+']',rsRegional='(?:\\ud83c[\\udde6-\\uddff]){2}',rsSurrPair='[\\ud800-\\udbff][\\udc00-\\udfff]',rsUpper='['+rsUpperRange+']',rsZWJ='\\u200d';/** Used to compose unicode regexes. */var rsLowerMisc='(?:'+rsLower+'|'+rsMisc+')',rsUpperMisc='(?:'+rsUpper+'|'+rsMisc+')',rsOptLowerContr='(?:'+rsApos+'(?:d|ll|m|re|s|t|ve))?',rsOptUpperContr='(?:'+rsApos+'(?:D|LL|M|RE|S|T|VE))?',reOptMod=rsModifier+'?',rsOptVar='['+rsVarRange+']?',rsOptJoin='(?:'+rsZWJ+'(?:'+[rsNonAstral,rsRegional,rsSurrPair].join('|')+')'+rsOptVar+reOptMod+')*',rsSeq=rsOptVar+reOptMod+rsOptJoin,rsEmoji='(?:'+[rsDingbat,rsRegional,rsSurrPair].join('|')+')'+rsSeq,rsSymbol='(?:'+[rsNonAstral+rsCombo+'?',rsCombo,rsRegional,rsSurrPair,rsAstral].join('|')+')';/** Used to match apostrophes. */var reApos=RegExp(rsApos,'g');/**
	   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	   */var reComboMark=RegExp(rsCombo,'g');/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */var reUnicode=RegExp(rsFitz+'(?='+rsFitz+')|'+rsSymbol+rsSeq,'g');/** Used to match complex or compound words. */var reUnicodeWord=RegExp([rsUpper+'?'+rsLower+'+'+rsOptLowerContr+'(?='+[rsBreak,rsUpper,'$'].join('|')+')',rsUpperMisc+'+'+rsOptUpperContr+'(?='+[rsBreak,rsUpper+rsLowerMisc,'$'].join('|')+')',rsUpper+'?'+rsLowerMisc+'+'+rsOptLowerContr,rsUpper+'+'+rsOptUpperContr,rsDigits,rsEmoji].join('|'),'g');/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */var reHasUnicode=RegExp('['+rsZWJ+rsAstralRange+rsComboMarksRange+rsComboSymbolsRange+rsVarRange+']');/** Used to detect strings that need a more robust regexp to match words. */var reHasUnicodeWord=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;/** Used to assign default `context` object properties. */var contextProps=['Array','Buffer','DataView','Date','Error','Float32Array','Float64Array','Function','Int8Array','Int16Array','Int32Array','Map','Math','Object','Promise','RegExp','Set','String','Symbol','TypeError','Uint8Array','Uint8ClampedArray','Uint16Array','Uint32Array','WeakMap','_','clearTimeout','isFinite','parseInt','setTimeout'];/** Used to make template sourceURLs easier to identify. */var templateCounter=-1;/** Used to identify `toStringTag` values of typed arrays. */var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;/** Used to identify `toStringTag` values supported by `_.clone`. */var cloneableTags={};cloneableTags[argsTag]=cloneableTags[arrayTag]=cloneableTags[arrayBufferTag]=cloneableTags[dataViewTag]=cloneableTags[boolTag]=cloneableTags[dateTag]=cloneableTags[float32Tag]=cloneableTags[float64Tag]=cloneableTags[int8Tag]=cloneableTags[int16Tag]=cloneableTags[int32Tag]=cloneableTags[mapTag]=cloneableTags[numberTag]=cloneableTags[objectTag]=cloneableTags[regexpTag]=cloneableTags[setTag]=cloneableTags[stringTag]=cloneableTags[symbolTag]=cloneableTags[uint8Tag]=cloneableTags[uint8ClampedTag]=cloneableTags[uint16Tag]=cloneableTags[uint32Tag]=true;cloneableTags[errorTag]=cloneableTags[funcTag]=cloneableTags[weakMapTag]=false;/** Used to map Latin Unicode letters to basic Latin letters. */var deburredLetters={// Latin-1 Supplement block.
	'\xc0':'A','\xc1':'A','\xc2':'A','\xc3':'A','\xc4':'A','\xc5':'A','\xe0':'a','\xe1':'a','\xe2':'a','\xe3':'a','\xe4':'a','\xe5':'a','\xc7':'C','\xe7':'c','\xd0':'D','\xf0':'d','\xc8':'E','\xc9':'E','\xca':'E','\xcb':'E','\xe8':'e','\xe9':'e','\xea':'e','\xeb':'e','\xcc':'I','\xcd':'I','\xce':'I','\xcf':'I','\xec':'i','\xed':'i','\xee':'i','\xef':'i','\xd1':'N','\xf1':'n','\xd2':'O','\xd3':'O','\xd4':'O','\xd5':'O','\xd6':'O','\xd8':'O','\xf2':'o','\xf3':'o','\xf4':'o','\xf5':'o','\xf6':'o','\xf8':'o','\xd9':'U','\xda':'U','\xdb':'U','\xdc':'U','\xf9':'u','\xfa':'u','\xfb':'u','\xfc':'u','\xdd':'Y','\xfd':'y','\xff':'y','\xc6':'Ae','\xe6':'ae','\xde':'Th','\xfe':'th','\xdf':'ss',// Latin Extended-A block.
	'\u0100':'A','\u0102':'A','\u0104':'A','\u0101':'a','\u0103':'a','\u0105':'a','\u0106':'C','\u0108':'C','\u010A':'C','\u010C':'C','\u0107':'c','\u0109':'c','\u010B':'c','\u010D':'c','\u010E':'D','\u0110':'D','\u010F':'d','\u0111':'d','\u0112':'E','\u0114':'E','\u0116':'E','\u0118':'E','\u011A':'E','\u0113':'e','\u0115':'e','\u0117':'e','\u0119':'e','\u011B':'e','\u011C':'G','\u011E':'G','\u0120':'G','\u0122':'G','\u011D':'g','\u011F':'g','\u0121':'g','\u0123':'g','\u0124':'H','\u0126':'H','\u0125':'h','\u0127':'h','\u0128':'I','\u012A':'I','\u012C':'I','\u012E':'I','\u0130':'I','\u0129':'i','\u012B':'i','\u012D':'i','\u012F':'i','\u0131':'i','\u0134':'J','\u0135':'j','\u0136':'K','\u0137':'k','\u0138':'k','\u0139':'L','\u013B':'L','\u013D':'L','\u013F':'L','\u0141':'L','\u013A':'l','\u013C':'l','\u013E':'l','\u0140':'l','\u0142':'l','\u0143':'N','\u0145':'N','\u0147':'N','\u014A':'N','\u0144':'n','\u0146':'n','\u0148':'n','\u014B':'n','\u014C':'O','\u014E':'O','\u0150':'O','\u014D':'o','\u014F':'o','\u0151':'o','\u0154':'R','\u0156':'R','\u0158':'R','\u0155':'r','\u0157':'r','\u0159':'r','\u015A':'S','\u015C':'S','\u015E':'S','\u0160':'S','\u015B':'s','\u015D':'s','\u015F':'s','\u0161':'s','\u0162':'T','\u0164':'T','\u0166':'T','\u0163':'t','\u0165':'t','\u0167':'t','\u0168':'U','\u016A':'U','\u016C':'U','\u016E':'U','\u0170':'U','\u0172':'U','\u0169':'u','\u016B':'u','\u016D':'u','\u016F':'u','\u0171':'u','\u0173':'u','\u0174':'W','\u0175':'w','\u0176':'Y','\u0177':'y','\u0178':'Y','\u0179':'Z','\u017B':'Z','\u017D':'Z','\u017A':'z','\u017C':'z','\u017E':'z','\u0132':'IJ','\u0133':'ij','\u0152':'Oe','\u0153':'oe','\u0149':"'n",'\u017F':'s'};/** Used to map characters to HTML entities. */var htmlEscapes={'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'};/** Used to map HTML entities to characters. */var htmlUnescapes={'&amp;':'&','&lt;':'<','&gt;':'>','&quot;':'"','&#39;':"'"};/** Used to escape characters for inclusion in compiled string literals. */var stringEscapes={'\\':'\\',"'":"'",'\n':'n','\r':'r','\u2028':'u2028','\u2029':'u2029'};/** Built-in method references without a dependency on `root`. */var freeParseFloat=parseFloat,freeParseInt=parseInt;/** Detect free variable `global` from Node.js. */var freeGlobal=(typeof global==='undefined'?'undefined':_typeof(global))=='object'&&global&&global.Object===Object&&global;/** Detect free variable `self`. */var freeSelf=(typeof self==='undefined'?'undefined':_typeof(self))=='object'&&self&&self.Object===Object&&self;/** Used as a reference to the global object. */var root=freeGlobal||freeSelf||Function('return this')();/** Detect free variable `exports`. */var freeExports=( false?'undefined':_typeof(exports))=='object'&&exports&&!exports.nodeType&&exports;/** Detect free variable `module`. */var freeModule=freeExports&&( false?'undefined':_typeof(module))=='object'&&module&&!module.nodeType&&module;/** Detect the popular CommonJS extension `module.exports`. */var moduleExports=freeModule&&freeModule.exports===freeExports;/** Detect free variable `process` from Node.js. */var freeProcess=moduleExports&&freeGlobal.process;/** Used to access faster Node.js helpers. */var nodeUtil=function(){try{return freeProcess&&freeProcess.binding('util');}catch(e){}}();/* Node.js helper references. */var nodeIsArrayBuffer=nodeUtil&&nodeUtil.isArrayBuffer,nodeIsDate=nodeUtil&&nodeUtil.isDate,nodeIsMap=nodeUtil&&nodeUtil.isMap,nodeIsRegExp=nodeUtil&&nodeUtil.isRegExp,nodeIsSet=nodeUtil&&nodeUtil.isSet,nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;/*--------------------------------------------------------------------------*//**
	   * Adds the key-value `pair` to `map`.
	   *
	   * @private
	   * @param {Object} map The map to modify.
	   * @param {Array} pair The key-value pair to add.
	   * @returns {Object} Returns `map`.
	   */function addMapEntry(map,pair){// Don't return `map.set` because it's not chainable in IE 11.
	map.set(pair[0],pair[1]);return map;}/**
	   * Adds `value` to `set`.
	   *
	   * @private
	   * @param {Object} set The set to modify.
	   * @param {*} value The value to add.
	   * @returns {Object} Returns `set`.
	   */function addSetEntry(set,value){// Don't return `set.add` because it's not chainable in IE 11.
	set.add(value);return set;}/**
	   * A faster alternative to `Function#apply`, this function invokes `func`
	   * with the `this` binding of `thisArg` and the arguments of `args`.
	   *
	   * @private
	   * @param {Function} func The function to invoke.
	   * @param {*} thisArg The `this` binding of `func`.
	   * @param {Array} args The arguments to invoke `func` with.
	   * @returns {*} Returns the result of `func`.
	   */function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2]);}return func.apply(thisArg,args);}/**
	   * A specialized version of `baseAggregator` for arrays.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} setter The function to set `accumulator` values.
	   * @param {Function} iteratee The iteratee to transform keys.
	   * @param {Object} accumulator The initial aggregated object.
	   * @returns {Function} Returns `accumulator`.
	   */function arrayAggregator(array,setter,iteratee,accumulator){var index=-1,length=array?array.length:0;while(++index<length){var value=array[index];setter(accumulator,value,iteratee(value),array);}return accumulator;}/**
	   * A specialized version of `_.forEach` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */function arrayEach(array,iteratee){var index=-1,length=array?array.length:0;while(++index<length){if(iteratee(array[index],index,array)===false){break;}}return array;}/**
	   * A specialized version of `_.forEachRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */function arrayEachRight(array,iteratee){var length=array?array.length:0;while(length--){if(iteratee(array[length],length,array)===false){break;}}return array;}/**
	   * A specialized version of `_.every` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if all elements pass the predicate check,
	   *  else `false`.
	   */function arrayEvery(array,predicate){var index=-1,length=array?array.length:0;while(++index<length){if(!predicate(array[index],index,array)){return false;}}return true;}/**
	   * A specialized version of `_.filter` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {Array} Returns the new filtered array.
	   */function arrayFilter(array,predicate){var index=-1,length=array?array.length:0,resIndex=0,result=[];while(++index<length){var value=array[index];if(predicate(value,index,array)){result[resIndex++]=value;}}return result;}/**
	   * A specialized version of `_.includes` for arrays without support for
	   * specifying an index to search from.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */function arrayIncludes(array,value){var length=array?array.length:0;return!!length&&baseIndexOf(array,value,0)>-1;}/**
	   * This function is like `arrayIncludes` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */function arrayIncludesWith(array,value,comparator){var index=-1,length=array?array.length:0;while(++index<length){if(comparator(value,array[index])){return true;}}return false;}/**
	   * A specialized version of `_.map` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the new mapped array.
	   */function arrayMap(array,iteratee){var index=-1,length=array?array.length:0,result=Array(length);while(++index<length){result[index]=iteratee(array[index],index,array);}return result;}/**
	   * Appends the elements of `values` to `array`.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {Array} values The values to append.
	   * @returns {Array} Returns `array`.
	   */function arrayPush(array,values){var index=-1,length=values.length,offset=array.length;while(++index<length){array[offset+index]=values[index];}return array;}/**
	   * A specialized version of `_.reduce` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the first element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */function arrayReduce(array,iteratee,accumulator,initAccum){var index=-1,length=array?array.length:0;if(initAccum&&length){accumulator=array[++index];}while(++index<length){accumulator=iteratee(accumulator,array[index],index,array);}return accumulator;}/**
	   * A specialized version of `_.reduceRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the last element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */function arrayReduceRight(array,iteratee,accumulator,initAccum){var length=array?array.length:0;if(initAccum&&length){accumulator=array[--length];}while(length--){accumulator=iteratee(accumulator,array[length],length,array);}return accumulator;}/**
	   * A specialized version of `_.some` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if any element passes the predicate check,
	   *  else `false`.
	   */function arraySome(array,predicate){var index=-1,length=array?array.length:0;while(++index<length){if(predicate(array[index],index,array)){return true;}}return false;}/**
	   * Gets the size of an ASCII `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */var asciiSize=baseProperty('length');/**
	   * Converts an ASCII `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */function asciiToArray(string){return string.split('');}/**
	   * Splits an ASCII `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */function asciiWords(string){return string.match(reAsciiWord)||[];}/**
	   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
	   * without support for iteratee shorthands, which iterates over `collection`
	   * using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the found element or its key, else `undefined`.
	   */function baseFindKey(collection,predicate,eachFunc){var result;eachFunc(collection,function(value,key,collection){if(predicate(value,key,collection)){result=key;return false;}});return result;}/**
	   * The base implementation of `_.findIndex` and `_.findLastIndex` without
	   * support for iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {number} fromIndex The index to search from.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */function baseFindIndex(array,predicate,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?1:-1);while(fromRight?index--:++index<length){if(predicate(array[index],index,array)){return index;}}return-1;}/**
	   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */function baseIndexOf(array,value,fromIndex){return value===value?strictIndexOf(array,value,fromIndex):baseFindIndex(array,baseIsNaN,fromIndex);}/**
	   * This function is like `baseIndexOf` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */function baseIndexOfWith(array,value,fromIndex,comparator){var index=fromIndex-1,length=array.length;while(++index<length){if(comparator(array[index],value)){return index;}}return-1;}/**
	   * The base implementation of `_.isNaN` without support for number objects.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	   */function baseIsNaN(value){return value!==value;}/**
	   * The base implementation of `_.mean` and `_.meanBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the mean.
	   */function baseMean(array,iteratee){var length=array?array.length:0;return length?baseSum(array,iteratee)/length:NAN;}/**
	   * The base implementation of `_.property` without support for deep paths.
	   *
	   * @private
	   * @param {string} key The key of the property to get.
	   * @returns {Function} Returns the new accessor function.
	   */function baseProperty(key){return function(object){return object==null?undefined:object[key];};}/**
	   * The base implementation of `_.propertyOf` without support for deep paths.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @returns {Function} Returns the new accessor function.
	   */function basePropertyOf(object){return function(key){return object==null?undefined:object[key];};}/**
	   * The base implementation of `_.reduce` and `_.reduceRight`, without support
	   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} accumulator The initial value.
	   * @param {boolean} initAccum Specify using the first or last element of
	   *  `collection` as the initial value.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the accumulated value.
	   */function baseReduce(collection,iteratee,accumulator,initAccum,eachFunc){eachFunc(collection,function(value,index,collection){accumulator=initAccum?(initAccum=false,value):iteratee(accumulator,value,index,collection);});return accumulator;}/**
	   * The base implementation of `_.sortBy` which uses `comparer` to define the
	   * sort order of `array` and replaces criteria objects with their corresponding
	   * values.
	   *
	   * @private
	   * @param {Array} array The array to sort.
	   * @param {Function} comparer The function to define sort order.
	   * @returns {Array} Returns `array`.
	   */function baseSortBy(array,comparer){var length=array.length;array.sort(comparer);while(length--){array[length]=array[length].value;}return array;}/**
	   * The base implementation of `_.sum` and `_.sumBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the sum.
	   */function baseSum(array,iteratee){var result,index=-1,length=array.length;while(++index<length){var current=iteratee(array[index]);if(current!==undefined){result=result===undefined?current:result+current;}}return result;}/**
	   * The base implementation of `_.times` without support for iteratee shorthands
	   * or max array length checks.
	   *
	   * @private
	   * @param {number} n The number of times to invoke `iteratee`.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the array of results.
	   */function baseTimes(n,iteratee){var index=-1,result=Array(n);while(++index<n){result[index]=iteratee(index);}return result;}/**
	   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
	   * of key-value pairs for `object` corresponding to the property names of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the key-value pairs.
	   */function baseToPairs(object,props){return arrayMap(props,function(key){return[key,object[key]];});}/**
	   * The base implementation of `_.unary` without support for storing metadata.
	   *
	   * @private
	   * @param {Function} func The function to cap arguments for.
	   * @returns {Function} Returns the new capped function.
	   */function baseUnary(func){return function(value){return func(value);};}/**
	   * The base implementation of `_.values` and `_.valuesIn` which creates an
	   * array of `object` property values corresponding to the property names
	   * of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the array of property values.
	   */function baseValues(object,props){return arrayMap(props,function(key){return object[key];});}/**
	   * Checks if a `cache` value for `key` exists.
	   *
	   * @private
	   * @param {Object} cache The cache to query.
	   * @param {string} key The key of the entry to check.
	   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	   */function cacheHas(cache,key){return cache.has(key);}/**
	   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the first unmatched string symbol.
	   */function charsStartIndex(strSymbols,chrSymbols){var index=-1,length=strSymbols.length;while(++index<length&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;}/**
	   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the last unmatched string symbol.
	   */function charsEndIndex(strSymbols,chrSymbols){var index=strSymbols.length;while(index--&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;}/**
	   * Gets the number of `placeholder` occurrences in `array`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} placeholder The placeholder to search for.
	   * @returns {number} Returns the placeholder count.
	   */function countHolders(array,placeholder){var length=array.length,result=0;while(length--){if(array[length]===placeholder){++result;}}return result;}/**
	   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
	   * letters to basic Latin letters.
	   *
	   * @private
	   * @param {string} letter The matched letter to deburr.
	   * @returns {string} Returns the deburred letter.
	   */var deburrLetter=basePropertyOf(deburredLetters);/**
	   * Used by `_.escape` to convert characters to HTML entities.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */var escapeHtmlChar=basePropertyOf(htmlEscapes);/**
	   * Used by `_.template` to escape characters for inclusion in compiled string literals.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */function escapeStringChar(chr){return'\\'+stringEscapes[chr];}/**
	   * Gets the value at `key` of `object`.
	   *
	   * @private
	   * @param {Object} [object] The object to query.
	   * @param {string} key The key of the property to get.
	   * @returns {*} Returns the property value.
	   */function getValue(object,key){return object==null?undefined:object[key];}/**
	   * Checks if `string` contains Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
	   */function hasUnicode(string){return reHasUnicode.test(string);}/**
	   * Checks if `string` contains a word composed of Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a word is found, else `false`.
	   */function hasUnicodeWord(string){return reHasUnicodeWord.test(string);}/**
	   * Converts `iterator` to an array.
	   *
	   * @private
	   * @param {Object} iterator The iterator to convert.
	   * @returns {Array} Returns the converted array.
	   */function iteratorToArray(iterator){var data,result=[];while(!(data=iterator.next()).done){result.push(data.value);}return result;}/**
	   * Converts `map` to its key-value pairs.
	   *
	   * @private
	   * @param {Object} map The map to convert.
	   * @returns {Array} Returns the key-value pairs.
	   */function mapToArray(map){var index=-1,result=Array(map.size);map.forEach(function(value,key){result[++index]=[key,value];});return result;}/**
	   * Creates a unary function that invokes `func` with its argument transformed.
	   *
	   * @private
	   * @param {Function} func The function to wrap.
	   * @param {Function} transform The argument transform.
	   * @returns {Function} Returns the new function.
	   */function overArg(func,transform){return function(arg){return func(transform(arg));};}/**
	   * Replaces all `placeholder` elements in `array` with an internal placeholder
	   * and returns an array of their indexes.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {*} placeholder The placeholder to replace.
	   * @returns {Array} Returns the new array of placeholder indexes.
	   */function replaceHolders(array,placeholder){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(value===placeholder||value===PLACEHOLDER){array[index]=PLACEHOLDER;result[resIndex++]=index;}}return result;}/**
	   * Converts `set` to an array of its values.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the values.
	   */function setToArray(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=value;});return result;}/**
	   * Converts `set` to its value-value pairs.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the value-value pairs.
	   */function setToPairs(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=[value,value];});return result;}/**
	   * A specialized version of `_.indexOf` which performs strict equality
	   * comparisons of values, i.e. `===`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */function strictIndexOf(array,value,fromIndex){var index=fromIndex-1,length=array.length;while(++index<length){if(array[index]===value){return index;}}return-1;}/**
	   * A specialized version of `_.lastIndexOf` which performs strict equality
	   * comparisons of values, i.e. `===`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */function strictLastIndexOf(array,value,fromIndex){var index=fromIndex+1;while(index--){if(array[index]===value){return index;}}return index;}/**
	   * Gets the number of symbols in `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the string size.
	   */function stringSize(string){return hasUnicode(string)?unicodeSize(string):asciiSize(string);}/**
	   * Converts `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */function stringToArray(string){return hasUnicode(string)?unicodeToArray(string):asciiToArray(string);}/**
	   * Used by `_.unescape` to convert HTML entities to characters.
	   *
	   * @private
	   * @param {string} chr The matched character to unescape.
	   * @returns {string} Returns the unescaped character.
	   */var unescapeHtmlChar=basePropertyOf(htmlUnescapes);/**
	   * Gets the size of a Unicode `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */function unicodeSize(string){var result=reUnicode.lastIndex=0;while(reUnicode.test(string)){++result;}return result;}/**
	   * Converts a Unicode `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */function unicodeToArray(string){return string.match(reUnicode)||[];}/**
	   * Splits a Unicode `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */function unicodeWords(string){return string.match(reUnicodeWord)||[];}/*--------------------------------------------------------------------------*//**
	   * Create a new pristine `lodash` function using the `context` object.
	   *
	   * @static
	   * @memberOf _
	   * @since 1.1.0
	   * @category Util
	   * @param {Object} [context=root] The context object.
	   * @returns {Function} Returns a new `lodash` function.
	   * @example
	   *
	   * _.mixin({ 'foo': _.constant('foo') });
	   *
	   * var lodash = _.runInContext();
	   * lodash.mixin({ 'bar': lodash.constant('bar') });
	   *
	   * _.isFunction(_.foo);
	   * // => true
	   * _.isFunction(_.bar);
	   * // => false
	   *
	   * lodash.isFunction(lodash.foo);
	   * // => false
	   * lodash.isFunction(lodash.bar);
	   * // => true
	   *
	   * // Create a suped-up `defer` in Node.js.
	   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
	   */var runInContext=function runInContext(context){context=context?_.defaults(root.Object(),context,_.pick(root,contextProps)):root;/** Built-in constructor references. */var Array=context.Array,Date=context.Date,Error=context.Error,Function=context.Function,Math=context.Math,Object=context.Object,RegExp=context.RegExp,String=context.String,TypeError=context.TypeError;/** Used for built-in method references. */var arrayProto=Array.prototype,funcProto=Function.prototype,objectProto=Object.prototype;/** Used to detect overreaching core-js shims. */var coreJsData=context['__core-js_shared__'];/** Used to detect methods masquerading as native. */var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||'');return uid?'Symbol(src)_1.'+uid:'';}();/** Used to resolve the decompiled source of functions. */var funcToString=funcProto.toString;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/** Used to generate unique IDs. */var idCounter=0;/** Used to infer the `Object` constructor. */var objectCtorString=funcToString.call(Object);/**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	     * of values.
	     */var objectToString=objectProto.toString;/** Used to restore the original `_` reference in `_.noConflict`. */var oldDash=root._;/** Used to detect if a method is native. */var reIsNative=RegExp('^'+funcToString.call(hasOwnProperty).replace(reRegExpChar,'\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?')+'$');/** Built-in value references. */var Buffer=moduleExports?context.Buffer:undefined,_Symbol=context.Symbol,Uint8Array=context.Uint8Array,allocUnsafe=Buffer?Buffer.allocUnsafe:undefined,getPrototype=overArg(Object.getPrototypeOf,Object),iteratorSymbol=_Symbol?_Symbol.iterator:undefined,objectCreate=Object.create,propertyIsEnumerable=objectProto.propertyIsEnumerable,splice=arrayProto.splice,spreadableSymbol=_Symbol?_Symbol.isConcatSpreadable:undefined;var defineProperty=function(){try{var func=getNative(Object,'defineProperty');func({},'',{});return func;}catch(e){}}();/** Mocked built-ins. */var ctxClearTimeout=context.clearTimeout!==root.clearTimeout&&context.clearTimeout,ctxNow=Date&&Date.now!==root.Date.now&&Date.now,ctxSetTimeout=context.setTimeout!==root.setTimeout&&context.setTimeout;/* Built-in method references for those with the same name as other `lodash` methods. */var nativeCeil=Math.ceil,nativeFloor=Math.floor,nativeGetSymbols=Object.getOwnPropertySymbols,nativeIsBuffer=Buffer?Buffer.isBuffer:undefined,nativeIsFinite=context.isFinite,nativeJoin=arrayProto.join,nativeKeys=overArg(Object.keys,Object),nativeMax=Math.max,nativeMin=Math.min,nativeNow=Date.now,nativeParseInt=context.parseInt,nativeRandom=Math.random,nativeReverse=arrayProto.reverse;/* Built-in method references that are verified to be native. */var DataView=getNative(context,'DataView'),Map=getNative(context,'Map'),Promise=getNative(context,'Promise'),Set=getNative(context,'Set'),WeakMap=getNative(context,'WeakMap'),nativeCreate=getNative(Object,'create');/** Used to store function metadata. */var metaMap=WeakMap&&new WeakMap();/** Used to lookup unminified function names. */var realNames={};/** Used to detect maps, sets, and weakmaps. */var dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap);/** Used to convert symbols to primitives and strings. */var symbolProto=_Symbol?_Symbol.prototype:undefined,symbolValueOf=symbolProto?symbolProto.valueOf:undefined,symbolToString=symbolProto?symbolProto.toString:undefined;/*------------------------------------------------------------------------*//**
	     * Creates a `lodash` object which wraps `value` to enable implicit method
	     * chain sequences. Methods that operate on and return arrays, collections,
	     * and functions can be chained together. Methods that retrieve a single value
	     * or may return a primitive value will automatically end the chain sequence
	     * and return the unwrapped value. Otherwise, the value must be unwrapped
	     * with `_#value`.
	     *
	     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	     * enabled using `_.chain`.
	     *
	     * The execution of chained methods is lazy, that is, it's deferred until
	     * `_#value` is implicitly or explicitly called.
	     *
	     * Lazy evaluation allows several methods to support shortcut fusion.
	     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	     * the creation of intermediate arrays and can greatly reduce the number of
	     * iteratee executions. Sections of a chain sequence qualify for shortcut
	     * fusion if the section is applied to an array of at least `200` elements
	     * and any iteratees accept only one argument. The heuristic for whether a
	     * section qualifies for shortcut fusion is subject to change.
	     *
	     * Chaining is supported in custom builds as long as the `_#value` method is
	     * directly or indirectly included in the build.
	     *
	     * In addition to lodash methods, wrappers have `Array` and `String` methods.
	     *
	     * The wrapper `Array` methods are:
	     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	     *
	     * The wrapper `String` methods are:
	     * `replace` and `split`
	     *
	     * The wrapper methods that support shortcut fusion are:
	     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	     *
	     * The chainable wrapper methods are:
	     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	     * `zipObject`, `zipObjectDeep`, and `zipWith`
	     *
	     * The wrapper methods that are **not** chainable by default are:
	     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
	     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
	     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
	     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
	     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
	     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
	     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
	     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
	     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
	     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
	     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
	     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
	     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
	     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
	     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
	     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
	     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
	     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
	     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
	     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
	     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
	     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
	     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
	     * `upperFirst`, `value`, and `words`
	     *
	     * @name _
	     * @constructor
	     * @category Seq
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2, 3]);
	     *
	     * // Returns an unwrapped value.
	     * wrapped.reduce(_.add);
	     * // => 6
	     *
	     * // Returns a wrapped value.
	     * var squares = wrapped.map(square);
	     *
	     * _.isArray(squares);
	     * // => false
	     *
	     * _.isArray(squares.value());
	     * // => true
	     */function lodash(value){if(isObjectLike(value)&&!isArray(value)&&!(value instanceof LazyWrapper)){if(value instanceof LodashWrapper){return value;}if(hasOwnProperty.call(value,'__wrapped__')){return wrapperClone(value);}}return new LodashWrapper(value);}/**
	     * The base implementation of `_.create` without support for assigning
	     * properties to the created object.
	     *
	     * @private
	     * @param {Object} proto The object to inherit from.
	     * @returns {Object} Returns the new object.
	     */var baseCreate=function(){function object(){}return function(proto){if(!isObject(proto)){return{};}if(objectCreate){return objectCreate(proto);}object.prototype=proto;var result=new object();object.prototype=undefined;return result;};}();/**
	     * The function whose prototype chain sequence wrappers inherit from.
	     *
	     * @private
	     */function baseLodash(){}// No operation performed.
	/**
	     * The base constructor for creating `lodash` wrapper objects.
	     *
	     * @private
	     * @param {*} value The value to wrap.
	     * @param {boolean} [chainAll] Enable explicit method chain sequences.
	     */function LodashWrapper(value,chainAll){this.__wrapped__=value;this.__actions__=[];this.__chain__=!!chainAll;this.__index__=0;this.__values__=undefined;}/**
	     * By default, the template delimiters used by lodash are like those in
	     * embedded Ruby (ERB). Change the following template settings to use
	     * alternative delimiters.
	     *
	     * @static
	     * @memberOf _
	     * @type {Object}
	     */lodash.templateSettings={/**
	       * Used to detect `data` property values to be HTML-escaped.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */'escape':reEscape,/**
	       * Used to detect code to be evaluated.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */'evaluate':reEvaluate,/**
	       * Used to detect `data` property values to inject.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */'interpolate':reInterpolate,/**
	       * Used to reference the data object in the template text.
	       *
	       * @memberOf _.templateSettings
	       * @type {string}
	       */'variable':'',/**
	       * Used to import variables into the compiled template.
	       *
	       * @memberOf _.templateSettings
	       * @type {Object}
	       */'imports':{/**
	         * A reference to the `lodash` function.
	         *
	         * @memberOf _.templateSettings.imports
	         * @type {Function}
	         */'_':lodash}};// Ensure wrappers are instances of `baseLodash`.
	lodash.prototype=baseLodash.prototype;lodash.prototype.constructor=lodash;LodashWrapper.prototype=baseCreate(baseLodash.prototype);LodashWrapper.prototype.constructor=LodashWrapper;/*------------------------------------------------------------------------*//**
	     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	     *
	     * @private
	     * @constructor
	     * @param {*} value The value to wrap.
	     */function LazyWrapper(value){this.__wrapped__=value;this.__actions__=[];this.__dir__=1;this.__filtered__=false;this.__iteratees__=[];this.__takeCount__=MAX_ARRAY_LENGTH;this.__views__=[];}/**
	     * Creates a clone of the lazy wrapper object.
	     *
	     * @private
	     * @name clone
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the cloned `LazyWrapper` object.
	     */function lazyClone(){var result=new LazyWrapper(this.__wrapped__);result.__actions__=copyArray(this.__actions__);result.__dir__=this.__dir__;result.__filtered__=this.__filtered__;result.__iteratees__=copyArray(this.__iteratees__);result.__takeCount__=this.__takeCount__;result.__views__=copyArray(this.__views__);return result;}/**
	     * Reverses the direction of lazy iteration.
	     *
	     * @private
	     * @name reverse
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the new reversed `LazyWrapper` object.
	     */function lazyReverse(){if(this.__filtered__){var result=new LazyWrapper(this);result.__dir__=-1;result.__filtered__=true;}else{result=this.clone();result.__dir__*=-1;}return result;}/**
	     * Extracts the unwrapped value from its lazy wrapper.
	     *
	     * @private
	     * @name value
	     * @memberOf LazyWrapper
	     * @returns {*} Returns the unwrapped value.
	     */function lazyValue(){var array=this.__wrapped__.value(),dir=this.__dir__,isArr=isArray(array),isRight=dir<0,arrLength=isArr?array.length:0,view=getView(0,arrLength,this.__views__),start=view.start,end=view.end,length=end-start,index=isRight?end:start-1,iteratees=this.__iteratees__,iterLength=iteratees.length,resIndex=0,takeCount=nativeMin(length,this.__takeCount__);if(!isArr||arrLength<LARGE_ARRAY_SIZE||arrLength==length&&takeCount==length){return baseWrapperValue(array,this.__actions__);}var result=[];outer:while(length--&&resIndex<takeCount){index+=dir;var iterIndex=-1,value=array[index];while(++iterIndex<iterLength){var data=iteratees[iterIndex],iteratee=data.iteratee,type=data.type,computed=iteratee(value);if(type==LAZY_MAP_FLAG){value=computed;}else if(!computed){if(type==LAZY_FILTER_FLAG){continue outer;}else{break outer;}}}result[resIndex++]=value;}return result;}// Ensure `LazyWrapper` is an instance of `baseLodash`.
	LazyWrapper.prototype=baseCreate(baseLodash.prototype);LazyWrapper.prototype.constructor=LazyWrapper;/*------------------------------------------------------------------------*//**
	     * Creates a hash object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */function Hash(entries){var index=-1,length=entries?entries.length:0;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
	     * Removes all key-value entries from the hash.
	     *
	     * @private
	     * @name clear
	     * @memberOf Hash
	     */function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};this.size=0;}/**
	     * Removes `key` and its value from the hash.
	     *
	     * @private
	     * @name delete
	     * @memberOf Hash
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];this.size-=result?1:0;return result;}/**
	     * Gets the hash value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Hash
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?undefined:result;}return hasOwnProperty.call(data,key)?data[key]:undefined;}/**
	     * Checks if a hash value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Hash
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==undefined:hasOwnProperty.call(data,key);}/**
	     * Sets the hash `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Hash
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the hash instance.
	     */function hashSet(key,value){var data=this.__data__;this.size+=this.has(key)?0:1;data[key]=nativeCreate&&value===undefined?HASH_UNDEFINED:value;return this;}// Add methods to `Hash`.
	Hash.prototype.clear=hashClear;Hash.prototype['delete']=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;/*------------------------------------------------------------------------*//**
	     * Creates an list cache object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */function ListCache(entries){var index=-1,length=entries?entries.length:0;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
	     * Removes all key-value entries from the list cache.
	     *
	     * @private
	     * @name clear
	     * @memberOf ListCache
	     */function listCacheClear(){this.__data__=[];this.size=0;}/**
	     * Removes `key` and its value from the list cache.
	     *
	     * @private
	     * @name delete
	     * @memberOf ListCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){return false;}var lastIndex=data.length-1;if(index==lastIndex){data.pop();}else{splice.call(data,index,1);}--this.size;return true;}/**
	     * Gets the list cache value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf ListCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?undefined:data[index][1];}/**
	     * Checks if a list cache value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf ListCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1;}/**
	     * Sets the list cache `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf ListCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the list cache instance.
	     */function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){++this.size;data.push([key,value]);}else{data[index][1]=value;}return this;}// Add methods to `ListCache`.
	ListCache.prototype.clear=listCacheClear;ListCache.prototype['delete']=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;/*------------------------------------------------------------------------*//**
	     * Creates a map cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */function MapCache(entries){var index=-1,length=entries?entries.length:0;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
	     * Removes all key-value entries from the map.
	     *
	     * @private
	     * @name clear
	     * @memberOf MapCache
	     */function mapCacheClear(){this.size=0;this.__data__={'hash':new Hash(),'map':new(Map||ListCache)(),'string':new Hash()};}/**
	     * Removes `key` and its value from the map.
	     *
	     * @private
	     * @name delete
	     * @memberOf MapCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */function mapCacheDelete(key){var result=getMapData(this,key)['delete'](key);this.size-=result?1:0;return result;}/**
	     * Gets the map value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf MapCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */function mapCacheGet(key){return getMapData(this,key).get(key);}/**
	     * Checks if a map value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf MapCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */function mapCacheHas(key){return getMapData(this,key).has(key);}/**
	     * Sets the map `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf MapCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the map cache instance.
	     */function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;data.set(key,value);this.size+=data.size==size?0:1;return this;}// Add methods to `MapCache`.
	MapCache.prototype.clear=mapCacheClear;MapCache.prototype['delete']=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;/*------------------------------------------------------------------------*//**
	     *
	     * Creates an array cache object to store unique values.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */function SetCache(values){var index=-1,length=values?values.length:0;this.__data__=new MapCache();while(++index<length){this.add(values[index]);}}/**
	     * Adds `value` to the array cache.
	     *
	     * @private
	     * @name add
	     * @memberOf SetCache
	     * @alias push
	     * @param {*} value The value to cache.
	     * @returns {Object} Returns the cache instance.
	     */function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this;}/**
	     * Checks if `value` is in the array cache.
	     *
	     * @private
	     * @name has
	     * @memberOf SetCache
	     * @param {*} value The value to search for.
	     * @returns {number} Returns `true` if `value` is found, else `false`.
	     */function setCacheHas(value){return this.__data__.has(value);}// Add methods to `SetCache`.
	SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;/*------------------------------------------------------------------------*//**
	     * Creates a stack cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size;}/**
	     * Removes all key-value entries from the stack.
	     *
	     * @private
	     * @name clear
	     * @memberOf Stack
	     */function stackClear(){this.__data__=new ListCache();this.size=0;}/**
	     * Removes `key` and its value from the stack.
	     *
	     * @private
	     * @name delete
	     * @memberOf Stack
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */function stackDelete(key){var data=this.__data__,result=data['delete'](key);this.size=data.size;return result;}/**
	     * Gets the stack value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Stack
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */function stackGet(key){return this.__data__.get(key);}/**
	     * Checks if a stack value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Stack
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */function stackHas(key){return this.__data__.has(key);}/**
	     * Sets the stack `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Stack
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the stack cache instance.
	     */function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map||pairs.length<LARGE_ARRAY_SIZE-1){pairs.push([key,value]);this.size=++data.size;return this;}data=this.__data__=new MapCache(pairs);}data.set(key,value);this.size=data.size;return this;}// Add methods to `Stack`.
	Stack.prototype.clear=stackClear;Stack.prototype['delete']=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;/*------------------------------------------------------------------------*//**
	     * Creates an array of the enumerable property names of the array-like `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @param {boolean} inherited Specify returning inherited property names.
	     * @returns {Array} Returns the array of property names.
	     */function arrayLikeKeys(value,inherited){// Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	// Safari 9 makes `arguments.length` enumerable in strict mode.
	var result=isArray(value)||isArguments(value)?baseTimes(value.length,String):[];var length=result.length,skipIndexes=!!length;for(var key in value){if((inherited||hasOwnProperty.call(value,key))&&!(skipIndexes&&(key=='length'||isIndex(key,length)))){result.push(key);}}return result;}/**
	     * A specialized version of `_.sample` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to sample.
	     * @returns {*} Returns the random element.
	     */function arraySample(array){var length=array.length;return length?array[baseRandom(0,length-1)]:undefined;}/**
	     * A specialized version of `_.sampleSize` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to sample.
	     * @param {number} n The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     */function arraySampleSize(array,n){return shuffleSelf(copyArray(array),n);}/**
	     * A specialized version of `_.shuffle` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     */function arrayShuffle(array){return shuffleSelf(copyArray(array));}/**
	     * Used by `_.defaults` to customize its `_.assignIn` use.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to assign.
	     * @param {Object} object The parent object of `objValue`.
	     * @returns {*} Returns the value to assign.
	     */function assignInDefaults(objValue,srcValue,key,object){if(objValue===undefined||eq(objValue,objectProto[key])&&!hasOwnProperty.call(object,key)){return srcValue;}return objValue;}/**
	     * This function is like `assignValue` except that it doesn't assign
	     * `undefined` values.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */function assignMergeValue(object,key,value){if(value!==undefined&&!eq(object[key],value)||value===undefined&&!(key in object)){baseAssignValue(object,key,value);}}/**
	     * Assigns `value` to `key` of `object` if the existing value is not equivalent
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */function assignValue(object,key,value){var objValue=object[key];if(!(hasOwnProperty.call(object,key)&&eq(objValue,value))||value===undefined&&!(key in object)){baseAssignValue(object,key,value);}}/**
	     * Gets the index at which the `key` is found in `array` of key-value pairs.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {*} key The key to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     */function assocIndexOf(array,key){var length=array.length;while(length--){if(eq(array[length][0],key)){return length;}}return-1;}/**
	     * Aggregates elements of `collection` on `accumulator` with keys transformed
	     * by `iteratee` and values set by `setter`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform keys.
	     * @param {Object} accumulator The initial aggregated object.
	     * @returns {Function} Returns `accumulator`.
	     */function baseAggregator(collection,setter,iteratee,accumulator){baseEach(collection,function(value,key,collection){setter(accumulator,value,iteratee(value),collection);});return accumulator;}/**
	     * The base implementation of `_.assign` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */function baseAssign(object,source){return object&&copyObject(source,keys(source),object);}/**
	     * The base implementation of `assignValue` and `assignMergeValue` without
	     * value checks.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */function baseAssignValue(object,key,value){if(key=='__proto__'&&defineProperty){defineProperty(object,key,{'configurable':true,'enumerable':true,'value':value,'writable':true});}else{object[key]=value;}}/**
	     * The base implementation of `_.at` without support for individual paths.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {string[]} paths The property paths of elements to pick.
	     * @returns {Array} Returns the picked elements.
	     */function baseAt(object,paths){var index=-1,isNil=object==null,length=paths.length,result=Array(length);while(++index<length){result[index]=isNil?undefined:get(object,paths[index]);}return result;}/**
	     * The base implementation of `_.clamp` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     */function baseClamp(number,lower,upper){if(number===number){if(upper!==undefined){number=number<=upper?number:upper;}if(lower!==undefined){number=number>=lower?number:lower;}}return number;}/**
	     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	     * traversed objects.
	     *
	     * @private
	     * @param {*} value The value to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @param {boolean} [isFull] Specify a clone including symbols.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @param {string} [key] The key of `value`.
	     * @param {Object} [object] The parent object of `value`.
	     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	     * @returns {*} Returns the cloned value.
	     */function baseClone(value,isDeep,isFull,customizer,key,object,stack){var result;if(customizer){result=object?customizer(value,key,object,stack):customizer(value);}if(result!==undefined){return result;}if(!isObject(value)){return value;}var isArr=isArray(value);if(isArr){result=initCloneArray(value);if(!isDeep){return copyArray(value,result);}}else{var tag=getTag(value),isFunc=tag==funcTag||tag==genTag;if(isBuffer(value)){return cloneBuffer(value,isDeep);}if(tag==objectTag||tag==argsTag||isFunc&&!object){result=initCloneObject(isFunc?{}:value);if(!isDeep){return copySymbols(value,baseAssign(result,value));}}else{if(!cloneableTags[tag]){return object?value:{};}result=initCloneByTag(value,tag,baseClone,isDeep);}}// Check for circular references and return its corresponding clone.
	stack||(stack=new Stack());var stacked=stack.get(value);if(stacked){return stacked;}stack.set(value,result);if(!isArr){var props=isFull?getAllKeys(value):keys(value);}arrayEach(props||value,function(subValue,key){if(props){key=subValue;subValue=value[key];}// Recursively populate clone (susceptible to call stack limits).
	assignValue(result,key,baseClone(subValue,isDeep,isFull,customizer,key,value,stack));});return result;}/**
	     * The base implementation of `_.conforms` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     */function baseConforms(source){var props=keys(source);return function(object){return baseConformsTo(object,source,props);};}/**
	     * The base implementation of `_.conformsTo` which accepts `props` to check.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     */function baseConformsTo(object,source,props){var length=props.length;if(object==null){return!length;}object=Object(object);while(length--){var key=props[length],predicate=source[key],value=object[key];if(value===undefined&&!(key in object)||!predicate(value)){return false;}}return true;}/**
	     * The base implementation of `_.delay` and `_.defer` which accepts `args`
	     * to provide to `func`.
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {Array} args The arguments to provide to `func`.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */function baseDelay(func,wait,args){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return setTimeout(function(){func.apply(undefined,args);},wait);}/**
	     * The base implementation of methods like `_.difference` without support
	     * for excluding multiple arrays or iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Array} values The values to exclude.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     */function baseDifference(array,values,iteratee,comparator){var index=-1,includes=arrayIncludes,isCommon=true,length=array.length,result=[],valuesLength=values.length;if(!length){return result;}if(iteratee){values=arrayMap(values,baseUnary(iteratee));}if(comparator){includes=arrayIncludesWith;isCommon=false;}else if(values.length>=LARGE_ARRAY_SIZE){includes=cacheHas;isCommon=false;values=new SetCache(values);}outer:while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var valuesIndex=valuesLength;while(valuesIndex--){if(values[valuesIndex]===computed){continue outer;}}result.push(value);}else if(!includes(values,computed,comparator)){result.push(value);}}return result;}/**
	     * The base implementation of `_.forEach` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */var baseEach=createBaseEach(baseForOwn);/**
	     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */var baseEachRight=createBaseEach(baseForOwnRight,true);/**
	     * The base implementation of `_.every` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`
	     */function baseEvery(collection,predicate){var result=true;baseEach(collection,function(value,index,collection){result=!!predicate(value,index,collection);return result;});return result;}/**
	     * The base implementation of methods like `_.max` and `_.min` which accepts a
	     * `comparator` to determine the extremum value.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The iteratee invoked per iteration.
	     * @param {Function} comparator The comparator used to compare values.
	     * @returns {*} Returns the extremum value.
	     */function baseExtremum(array,iteratee,comparator){var index=-1,length=array.length;while(++index<length){var value=array[index],current=iteratee(value);if(current!=null&&(computed===undefined?current===current&&!isSymbol(current):comparator(current,computed))){var computed=current,result=value;}}return result;}/**
	     * The base implementation of `_.fill` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     */function baseFill(array,value,start,end){var length=array.length;start=toInteger(start);if(start<0){start=-start>length?0:length+start;}end=end===undefined||end>length?length:toInteger(end);if(end<0){end+=length;}end=start>end?0:toLength(end);while(start<end){array[start++]=value;}return array;}/**
	     * The base implementation of `_.filter` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     */function baseFilter(collection,predicate){var result=[];baseEach(collection,function(value,index,collection){if(predicate(value,index,collection)){result.push(value);}});return result;}/**
	     * The base implementation of `_.flatten` with support for restricting flattening.
	     *
	     * @private
	     * @param {Array} array The array to flatten.
	     * @param {number} depth The maximum recursion depth.
	     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	     * @param {Array} [result=[]] The initial result value.
	     * @returns {Array} Returns the new flattened array.
	     */function baseFlatten(array,depth,predicate,isStrict,result){var index=-1,length=array.length;predicate||(predicate=isFlattenable);result||(result=[]);while(++index<length){var value=array[index];if(depth>0&&predicate(value)){if(depth>1){// Recursively flatten arrays (susceptible to call stack limits).
	baseFlatten(value,depth-1,predicate,isStrict,result);}else{arrayPush(result,value);}}else if(!isStrict){result[result.length]=value;}}return result;}/**
	     * The base implementation of `baseForOwn` which iterates over `object`
	     * properties returned by `keysFunc` and invokes `iteratee` for each property.
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */var baseFor=createBaseFor();/**
	     * This function is like `baseFor` except that it iterates over properties
	     * in the opposite order.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */var baseForRight=createBaseFor(true);/**
	     * The base implementation of `_.forOwn` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */function baseForOwn(object,iteratee){return object&&baseFor(object,iteratee,keys);}/**
	     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */function baseForOwnRight(object,iteratee){return object&&baseForRight(object,iteratee,keys);}/**
	     * The base implementation of `_.functions` which creates an array of
	     * `object` function property names filtered from `props`.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Array} props The property names to filter.
	     * @returns {Array} Returns the function names.
	     */function baseFunctions(object,props){return arrayFilter(props,function(key){return isFunction(object[key]);});}/**
	     * The base implementation of `_.get` without support for default values.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @returns {*} Returns the resolved value.
	     */function baseGet(object,path){path=isKey(path,object)?[path]:castPath(path);var index=0,length=path.length;while(object!=null&&index<length){object=object[toKey(path[index++])];}return index&&index==length?object:undefined;}/**
	     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @param {Function} symbolsFunc The function to get the symbols of `object`.
	     * @returns {Array} Returns the array of property names and symbols.
	     */function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:arrayPush(result,symbolsFunc(object));}/**
	     * The base implementation of `getTag`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */function baseGetTag(value){return objectToString.call(value);}/**
	     * The base implementation of `_.gt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     */function baseGt(value,other){return value>other;}/**
	     * The base implementation of `_.has` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */function baseHas(object,key){return object!=null&&hasOwnProperty.call(object,key);}/**
	     * The base implementation of `_.hasIn` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */function baseHasIn(object,key){return object!=null&&key in Object(object);}/**
	     * The base implementation of `_.inRange` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to check.
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     */function baseInRange(number,start,end){return number>=nativeMin(start,end)&&number<nativeMax(start,end);}/**
	     * The base implementation of methods like `_.intersection`, without support
	     * for iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of shared values.
	     */function baseIntersection(arrays,iteratee,comparator){var includes=comparator?arrayIncludesWith:arrayIncludes,length=arrays[0].length,othLength=arrays.length,othIndex=othLength,caches=Array(othLength),maxLength=Infinity,result=[];while(othIndex--){var array=arrays[othIndex];if(othIndex&&iteratee){array=arrayMap(array,baseUnary(iteratee));}maxLength=nativeMin(array.length,maxLength);caches[othIndex]=!comparator&&(iteratee||length>=120&&array.length>=120)?new SetCache(othIndex&&array):undefined;}array=arrays[0];var index=-1,seen=caches[0];outer:while(++index<length&&result.length<maxLength){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(!(seen?cacheHas(seen,computed):includes(result,computed,comparator))){othIndex=othLength;while(--othIndex){var cache=caches[othIndex];if(!(cache?cacheHas(cache,computed):includes(arrays[othIndex],computed,comparator))){continue outer;}}if(seen){seen.push(computed);}result.push(value);}}return result;}/**
	     * The base implementation of `_.invert` and `_.invertBy` which inverts
	     * `object` with values transformed by `iteratee` and set by `setter`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform values.
	     * @param {Object} accumulator The initial inverted object.
	     * @returns {Function} Returns `accumulator`.
	     */function baseInverter(object,setter,iteratee,accumulator){baseForOwn(object,function(value,key,object){setter(accumulator,iteratee(value),key,object);});return accumulator;}/**
	     * The base implementation of `_.invoke` without support for individual
	     * method arguments.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {Array} args The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     */function baseInvoke(object,path,args){if(!isKey(path,object)){path=castPath(path);object=parent(object,path);path=last(path);}var func=object==null?object:object[toKey(path)];return func==null?undefined:apply(func,object,args);}/**
	     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     */function baseIsArrayBuffer(value){return isObjectLike(value)&&objectToString.call(value)==arrayBufferTag;}/**
	     * The base implementation of `_.isDate` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     */function baseIsDate(value){return isObjectLike(value)&&objectToString.call(value)==dateTag;}/**
	     * The base implementation of `_.isEqual` which supports partial comparisons
	     * and tracks traversed objects.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {boolean} [bitmask] The bitmask of comparison flags.
	     *  The bitmask may be composed of the following flags:
	     *     1 - Unordered comparison
	     *     2 - Partial comparison
	     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     */function baseIsEqual(value,other,customizer,bitmask,stack){if(value===other){return true;}if(value==null||other==null||!isObject(value)&&!isObjectLike(other)){return value!==value&&other!==other;}return baseIsEqualDeep(value,other,baseIsEqual,customizer,bitmask,stack);}/**
	     * A specialized version of `baseIsEqual` for arrays and objects which performs
	     * deep comparisons and tracks traversed objects enabling objects with circular
	     * references to be compared.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */function baseIsEqualDeep(object,other,equalFunc,customizer,bitmask,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=arrayTag,othTag=arrayTag;if(!objIsArr){objTag=getTag(object);objTag=objTag==argsTag?objectTag:objTag;}if(!othIsArr){othTag=getTag(other);othTag=othTag==argsTag?objectTag:othTag;}var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other)){return false;}objIsArr=true;objIsObj=false;}if(isSameTag&&!objIsObj){stack||(stack=new Stack());return objIsArr||isTypedArray(object)?equalArrays(object,other,equalFunc,customizer,bitmask,stack):equalByTag(object,other,objTag,equalFunc,customizer,bitmask,stack);}if(!(bitmask&PARTIAL_COMPARE_FLAG)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,'__wrapped__'),othIsWrapped=othIsObj&&hasOwnProperty.call(other,'__wrapped__');if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack());return equalFunc(objUnwrapped,othUnwrapped,customizer,bitmask,stack);}}if(!isSameTag){return false;}stack||(stack=new Stack());return equalObjects(object,other,equalFunc,customizer,bitmask,stack);}/**
	     * The base implementation of `_.isMap` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     */function baseIsMap(value){return isObjectLike(value)&&getTag(value)==mapTag;}/**
	     * The base implementation of `_.isMatch` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Array} matchData The property names, values, and compare flags to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     */function baseIsMatch(object,source,matchData,customizer){var index=matchData.length,length=index,noCustomizer=!customizer;if(object==null){return!length;}object=Object(object);while(index--){var data=matchData[index];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return false;}}while(++index<length){data=matchData[index];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===undefined&&!(key in object)){return false;}}else{var stack=new Stack();if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack);}if(!(result===undefined?baseIsEqual(srcValue,objValue,customizer,UNORDERED_COMPARE_FLAG|PARTIAL_COMPARE_FLAG,stack):result)){return false;}}}return true;}/**
	     * The base implementation of `_.isNative` without bad shim checks.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     */function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false;}var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value));}/**
	     * The base implementation of `_.isRegExp` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     */function baseIsRegExp(value){return isObject(value)&&objectToString.call(value)==regexpTag;}/**
	     * The base implementation of `_.isSet` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     */function baseIsSet(value){return isObjectLike(value)&&getTag(value)==setTag;}/**
	     * The base implementation of `_.isTypedArray` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     */function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[objectToString.call(value)];}/**
	     * The base implementation of `_.iteratee`.
	     *
	     * @private
	     * @param {*} [value=_.identity] The value to convert to an iteratee.
	     * @returns {Function} Returns the iteratee.
	     */function baseIteratee(value){// Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	// See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	if(typeof value=='function'){return value;}if(value==null){return identity;}if((typeof value==='undefined'?'undefined':_typeof(value))=='object'){return isArray(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value);}return property(value);}/**
	     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */function baseKeys(object){if(!isPrototype(object)){return nativeKeys(object);}var result=[];for(var key in Object(object)){if(hasOwnProperty.call(object,key)&&key!='constructor'){result.push(key);}}return result;}/**
	     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */function baseKeysIn(object){if(!isObject(object)){return nativeKeysIn(object);}var isProto=isPrototype(object),result=[];for(var key in object){if(!(key=='constructor'&&(isProto||!hasOwnProperty.call(object,key)))){result.push(key);}}return result;}/**
	     * The base implementation of `_.lt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     */function baseLt(value,other){return value<other;}/**
	     * The base implementation of `_.map` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value,key,collection){result[++index]=iteratee(value,key,collection);});return result;}/**
	     * The base implementation of `_.matches` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     */function baseMatches(source){var matchData=getMatchData(source);if(matchData.length==1&&matchData[0][2]){return matchesStrictComparable(matchData[0][0],matchData[0][1]);}return function(object){return object===source||baseIsMatch(object,source,matchData);};}/**
	     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	     *
	     * @private
	     * @param {string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */function baseMatchesProperty(path,srcValue){if(isKey(path)&&isStrictComparable(srcValue)){return matchesStrictComparable(toKey(path),srcValue);}return function(object){var objValue=get(object,path);return objValue===undefined&&objValue===srcValue?hasIn(object,path):baseIsEqual(srcValue,objValue,undefined,UNORDERED_COMPARE_FLAG|PARTIAL_COMPARE_FLAG);};}/**
	     * The base implementation of `_.merge` without support for multiple sources.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} [customizer] The function to customize merged values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */function baseMerge(object,source,srcIndex,customizer,stack){if(object===source){return;}if(!(isArray(source)||isTypedArray(source))){var props=baseKeysIn(source);}arrayEach(props||source,function(srcValue,key){if(props){key=srcValue;srcValue=source[key];}if(isObject(srcValue)){stack||(stack=new Stack());baseMergeDeep(object,source,key,srcIndex,baseMerge,customizer,stack);}else{var newValue=customizer?customizer(object[key],srcValue,key+'',object,source,stack):undefined;if(newValue===undefined){newValue=srcValue;}assignMergeValue(object,key,newValue);}});}/**
	     * A specialized version of `baseMerge` for arrays and objects which performs
	     * deep merges and tracks traversed objects enabling objects with circular
	     * references to be merged.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {string} key The key of the value to merge.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} mergeFunc The function to merge values.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */function baseMergeDeep(object,source,key,srcIndex,mergeFunc,customizer,stack){var objValue=object[key],srcValue=source[key],stacked=stack.get(srcValue);if(stacked){assignMergeValue(object,key,stacked);return;}var newValue=customizer?customizer(objValue,srcValue,key+'',object,source,stack):undefined;var isCommon=newValue===undefined;if(isCommon){var isArr=isArray(srcValue),isTyped=!isArr&&isTypedArray(srcValue);newValue=srcValue;if(isArr||isTyped){if(isArray(objValue)){newValue=objValue;}else if(isArrayLikeObject(objValue)){newValue=copyArray(objValue);}else if(isTyped){isCommon=false;newValue=cloneTypedArray(srcValue,true);}else{newValue=[];}}else if(isPlainObject(srcValue)||isArguments(srcValue)){newValue=objValue;if(isArguments(objValue)){newValue=toPlainObject(objValue);}else if(!isObject(objValue)||srcIndex&&isFunction(objValue)){newValue=initCloneObject(srcValue);}}else{isCommon=false;}}if(isCommon){// Recursively merge objects and arrays (susceptible to call stack limits).
	stack.set(srcValue,newValue);mergeFunc(newValue,srcValue,srcIndex,customizer,stack);stack['delete'](srcValue);}assignMergeValue(object,key,newValue);}/**
	     * The base implementation of `_.nth` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {number} n The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     */function baseNth(array,n){var length=array.length;if(!length){return;}n+=n<0?length:0;return isIndex(n,length)?array[n]:undefined;}/**
	     * The base implementation of `_.orderBy` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	     * @param {string[]} orders The sort orders of `iteratees`.
	     * @returns {Array} Returns the new sorted array.
	     */function baseOrderBy(collection,iteratees,orders){var index=-1;iteratees=arrayMap(iteratees.length?iteratees:[identity],baseUnary(getIteratee()));var result=baseMap(collection,function(value,key,collection){var criteria=arrayMap(iteratees,function(iteratee){return iteratee(value);});return{'criteria':criteria,'index':++index,'value':value};});return baseSortBy(result,function(object,other){return compareMultiple(object,other,orders);});}/**
	     * The base implementation of `_.pick` without support for individual
	     * property identifiers.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} props The property identifiers to pick.
	     * @returns {Object} Returns the new object.
	     */function basePick(object,props){object=Object(object);return basePickBy(object,props,function(value,key){return key in object;});}/**
	     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} props The property identifiers to pick from.
	     * @param {Function} predicate The function invoked per property.
	     * @returns {Object} Returns the new object.
	     */function basePickBy(object,props,predicate){var index=-1,length=props.length,result={};while(++index<length){var key=props[index],value=object[key];if(predicate(value,key)){baseAssignValue(result,key,value);}}return result;}/**
	     * A specialized version of `baseProperty` which supports deep paths.
	     *
	     * @private
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     */function basePropertyDeep(path){return function(object){return baseGet(object,path);};}/**
	     * The base implementation of `_.pullAllBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     */function basePullAll(array,values,iteratee,comparator){var indexOf=comparator?baseIndexOfWith:baseIndexOf,index=-1,length=values.length,seen=array;if(array===values){values=copyArray(values);}if(iteratee){seen=arrayMap(array,baseUnary(iteratee));}while(++index<length){var fromIndex=0,value=values[index],computed=iteratee?iteratee(value):value;while((fromIndex=indexOf(seen,computed,fromIndex,comparator))>-1){if(seen!==array){splice.call(seen,fromIndex,1);}splice.call(array,fromIndex,1);}}return array;}/**
	     * The base implementation of `_.pullAt` without support for individual
	     * indexes or capturing the removed elements.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {number[]} indexes The indexes of elements to remove.
	     * @returns {Array} Returns `array`.
	     */function basePullAt(array,indexes){var length=array?indexes.length:0,lastIndex=length-1;while(length--){var index=indexes[length];if(length==lastIndex||index!==previous){var previous=index;if(isIndex(index)){splice.call(array,index,1);}else if(!isKey(index,array)){var path=castPath(index),object=parent(array,path);if(object!=null){delete object[toKey(last(path))];}}else{delete array[toKey(index)];}}}return array;}/**
	     * The base implementation of `_.random` without support for returning
	     * floating-point numbers.
	     *
	     * @private
	     * @param {number} lower The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the random number.
	     */function baseRandom(lower,upper){return lower+nativeFloor(nativeRandom()*(upper-lower+1));}/**
	     * The base implementation of `_.range` and `_.rangeRight` which doesn't
	     * coerce arguments.
	     *
	     * @private
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} step The value to increment or decrement by.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the range of numbers.
	     */function baseRange(start,end,step,fromRight){var index=-1,length=nativeMax(nativeCeil((end-start)/(step||1)),0),result=Array(length);while(length--){result[fromRight?length:++index]=start;start+=step;}return result;}/**
	     * The base implementation of `_.repeat` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {string} string The string to repeat.
	     * @param {number} n The number of times to repeat the string.
	     * @returns {string} Returns the repeated string.
	     */function baseRepeat(string,n){var result='';if(!string||n<1||n>MAX_SAFE_INTEGER){return result;}// Leverage the exponentiation by squaring algorithm for a faster repeat.
	// See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
	do{if(n%2){result+=string;}n=nativeFloor(n/2);if(n){string+=string;}}while(n);return result;}/**
	     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     */function baseRest(func,start){return setToString(overRest(func,start,identity),func+'');}/**
	     * The base implementation of `_.sample`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     */function baseSample(collection){return arraySample(values(collection));}/**
	     * The base implementation of `_.sampleSize` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} n The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     */function baseSampleSize(collection,n){return shuffleSelf(values(collection),n);}/**
	     * The base implementation of `_.set`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */function baseSet(object,path,value,customizer){if(!isObject(object)){return object;}path=isKey(path,object)?[path]:castPath(path);var index=-1,length=path.length,lastIndex=length-1,nested=object;while(nested!=null&&++index<length){var key=toKey(path[index]),newValue=value;if(index!=lastIndex){var objValue=nested[key];newValue=customizer?customizer(objValue,key,nested):undefined;if(newValue===undefined){newValue=isObject(objValue)?objValue:isIndex(path[index+1])?[]:{};}}assignValue(nested,key,newValue);nested=nested[key];}return object;}/**
	     * The base implementation of `setData` without support for hot loop shorting.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */var baseSetData=!metaMap?identity:function(func,data){metaMap.set(func,data);return func;};/**
	     * The base implementation of `setToString` without support for hot loop shorting.
	     *
	     * @private
	     * @param {Function} func The function to modify.
	     * @param {Function} string The `toString` result.
	     * @returns {Function} Returns `func`.
	     */var baseSetToString=!defineProperty?identity:function(func,string){return defineProperty(func,'toString',{'configurable':true,'enumerable':false,'value':constant(string),'writable':true});};/**
	     * The base implementation of `_.shuffle`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     */function baseShuffle(collection){return shuffleSelf(values(collection));}/**
	     * The base implementation of `_.slice` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */function baseSlice(array,start,end){var index=-1,length=array.length;if(start<0){start=-start>length?0:length+start;}end=end>length?length:end;if(end<0){end+=length;}length=start>end?0:end-start>>>0;start>>>=0;var result=Array(length);while(++index<length){result[index]=array[index+start];}return result;}/**
	     * The base implementation of `_.some` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     */function baseSome(collection,predicate){var result;baseEach(collection,function(value,index,collection){result=predicate(value,index,collection);return!result;});return!!result;}/**
	     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
	     * performs a binary search of `array` to determine the index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */function baseSortedIndex(array,value,retHighest){var low=0,high=array?array.length:low;if(typeof value=='number'&&value===value&&high<=HALF_MAX_ARRAY_LENGTH){while(low<high){var mid=low+high>>>1,computed=array[mid];if(computed!==null&&!isSymbol(computed)&&(retHighest?computed<=value:computed<value)){low=mid+1;}else{high=mid;}}return high;}return baseSortedIndexBy(array,value,identity,retHighest);}/**
	     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
	     * which invokes `iteratee` for `value` and each element of `array` to compute
	     * their sort ranking. The iteratee is invoked with one argument; (value).
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} iteratee The iteratee invoked per element.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */function baseSortedIndexBy(array,value,iteratee,retHighest){value=iteratee(value);var low=0,high=array?array.length:0,valIsNaN=value!==value,valIsNull=value===null,valIsSymbol=isSymbol(value),valIsUndefined=value===undefined;while(low<high){var mid=nativeFloor((low+high)/2),computed=iteratee(array[mid]),othIsDefined=computed!==undefined,othIsNull=computed===null,othIsReflexive=computed===computed,othIsSymbol=isSymbol(computed);if(valIsNaN){var setLow=retHighest||othIsReflexive;}else if(valIsUndefined){setLow=othIsReflexive&&(retHighest||othIsDefined);}else if(valIsNull){setLow=othIsReflexive&&othIsDefined&&(retHighest||!othIsNull);}else if(valIsSymbol){setLow=othIsReflexive&&othIsDefined&&!othIsNull&&(retHighest||!othIsSymbol);}else if(othIsNull||othIsSymbol){setLow=false;}else{setLow=retHighest?computed<=value:computed<value;}if(setLow){low=mid+1;}else{high=mid;}}return nativeMin(high,MAX_ARRAY_INDEX);}/**
	     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
	     * support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */function baseSortedUniq(array,iteratee){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;if(!index||!eq(computed,seen)){var seen=computed;result[resIndex++]=value===0?0:value;}}return result;}/**
	     * The base implementation of `_.toNumber` which doesn't ensure correct
	     * conversions of binary, hexadecimal, or octal string values.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     */function baseToNumber(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}return+value;}/**
	     * The base implementation of `_.toString` which doesn't convert nullish
	     * values to empty strings.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     */function baseToString(value){// Exit early for strings to avoid a performance hit in some environments.
	if(typeof value=='string'){return value;}if(isSymbol(value)){return symbolToString?symbolToString.call(value):'';}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}/**
	     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */function baseUniq(array,iteratee,comparator){var index=-1,includes=arrayIncludes,length=array.length,isCommon=true,result=[],seen=result;if(comparator){isCommon=false;includes=arrayIncludesWith;}else if(length>=LARGE_ARRAY_SIZE){var set=iteratee?null:createSet(array);if(set){return setToArray(set);}isCommon=false;includes=cacheHas;seen=new SetCache();}else{seen=iteratee?[]:result;}outer:while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var seenIndex=seen.length;while(seenIndex--){if(seen[seenIndex]===computed){continue outer;}}if(iteratee){seen.push(computed);}result.push(value);}else if(!includes(seen,computed,comparator)){if(seen!==result){seen.push(computed);}result.push(value);}}return result;}/**
	     * The base implementation of `_.unset`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     */function baseUnset(object,path){path=isKey(path,object)?[path]:castPath(path);object=parent(object,path);var key=toKey(last(path));return!(object!=null&&hasOwnProperty.call(object,key))||delete object[key];}/**
	     * The base implementation of `_.update`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to update.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */function baseUpdate(object,path,updater,customizer){return baseSet(object,path,updater(baseGet(object,path)),customizer);}/**
	     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
	     * without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {Function} predicate The function invoked per iteration.
	     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the slice of `array`.
	     */function baseWhile(array,predicate,isDrop,fromRight){var length=array.length,index=fromRight?length:-1;while((fromRight?index--:++index<length)&&predicate(array[index],index,array)){}return isDrop?baseSlice(array,fromRight?0:index,fromRight?index+1:length):baseSlice(array,fromRight?index+1:0,fromRight?length:index);}/**
	     * The base implementation of `wrapperValue` which returns the result of
	     * performing a sequence of actions on the unwrapped `value`, where each
	     * successive action is supplied the return value of the previous.
	     *
	     * @private
	     * @param {*} value The unwrapped value.
	     * @param {Array} actions Actions to perform to resolve the unwrapped value.
	     * @returns {*} Returns the resolved value.
	     */function baseWrapperValue(value,actions){var result=value;if(result instanceof LazyWrapper){result=result.value();}return arrayReduce(actions,function(result,action){return action.func.apply(action.thisArg,arrayPush([result],action.args));},result);}/**
	     * The base implementation of methods like `_.xor`, without support for
	     * iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     */function baseXor(arrays,iteratee,comparator){var index=-1,length=arrays.length;while(++index<length){var result=result?arrayPush(baseDifference(result,arrays[index],iteratee,comparator),baseDifference(arrays[index],result,iteratee,comparator)):arrays[index];}return result&&result.length?baseUniq(result,iteratee,comparator):[];}/**
	     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
	     *
	     * @private
	     * @param {Array} props The property identifiers.
	     * @param {Array} values The property values.
	     * @param {Function} assignFunc The function to assign values.
	     * @returns {Object} Returns the new object.
	     */function baseZipObject(props,values,assignFunc){var index=-1,length=props.length,valsLength=values.length,result={};while(++index<length){var value=index<valsLength?values[index]:undefined;assignFunc(result,props[index],value);}return result;}/**
	     * Casts `value` to an empty array if it's not an array like object.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array|Object} Returns the cast array-like object.
	     */function castArrayLikeObject(value){return isArrayLikeObject(value)?value:[];}/**
	     * Casts `value` to `identity` if it's not a function.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Function} Returns cast function.
	     */function castFunction(value){return typeof value=='function'?value:identity;}/**
	     * Casts `value` to a path array if it's not one.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast property path array.
	     */function castPath(value){return isArray(value)?value:stringToPath(value);}/**
	     * A `baseRest` alias which can be replaced with `identity` by module
	     * replacement plugins.
	     *
	     * @private
	     * @type {Function}
	     * @param {Function} func The function to apply a rest parameter to.
	     * @returns {Function} Returns the new function.
	     */var castRest=baseRest;/**
	     * Casts `array` to a slice if it's needed.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {number} start The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the cast slice.
	     */function castSlice(array,start,end){var length=array.length;end=end===undefined?length:end;return!start&&end>=length?array:baseSlice(array,start,end);}/**
	     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
	     *
	     * @private
	     * @param {number|Object} id The timer id or timeout object of the timer to clear.
	     */var clearTimeout=ctxClearTimeout||function(id){return root.clearTimeout(id);};/**
	     * Creates a clone of  `buffer`.
	     *
	     * @private
	     * @param {Buffer} buffer The buffer to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Buffer} Returns the cloned buffer.
	     */function cloneBuffer(buffer,isDeep){if(isDeep){return buffer.slice();}var length=buffer.length,result=allocUnsafe?allocUnsafe(length):new buffer.constructor(length);buffer.copy(result);return result;}/**
	     * Creates a clone of `arrayBuffer`.
	     *
	     * @private
	     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	     * @returns {ArrayBuffer} Returns the cloned array buffer.
	     */function cloneArrayBuffer(arrayBuffer){var result=new arrayBuffer.constructor(arrayBuffer.byteLength);new Uint8Array(result).set(new Uint8Array(arrayBuffer));return result;}/**
	     * Creates a clone of `dataView`.
	     *
	     * @private
	     * @param {Object} dataView The data view to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned data view.
	     */function cloneDataView(dataView,isDeep){var buffer=isDeep?cloneArrayBuffer(dataView.buffer):dataView.buffer;return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength);}/**
	     * Creates a clone of `map`.
	     *
	     * @private
	     * @param {Object} map The map to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned map.
	     */function cloneMap(map,isDeep,cloneFunc){var array=isDeep?cloneFunc(mapToArray(map),true):mapToArray(map);return arrayReduce(array,addMapEntry,new map.constructor());}/**
	     * Creates a clone of `regexp`.
	     *
	     * @private
	     * @param {Object} regexp The regexp to clone.
	     * @returns {Object} Returns the cloned regexp.
	     */function cloneRegExp(regexp){var result=new regexp.constructor(regexp.source,reFlags.exec(regexp));result.lastIndex=regexp.lastIndex;return result;}/**
	     * Creates a clone of `set`.
	     *
	     * @private
	     * @param {Object} set The set to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned set.
	     */function cloneSet(set,isDeep,cloneFunc){var array=isDeep?cloneFunc(setToArray(set),true):setToArray(set);return arrayReduce(array,addSetEntry,new set.constructor());}/**
	     * Creates a clone of the `symbol` object.
	     *
	     * @private
	     * @param {Object} symbol The symbol object to clone.
	     * @returns {Object} Returns the cloned symbol object.
	     */function cloneSymbol(symbol){return symbolValueOf?Object(symbolValueOf.call(symbol)):{};}/**
	     * Creates a clone of `typedArray`.
	     *
	     * @private
	     * @param {Object} typedArray The typed array to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned typed array.
	     */function cloneTypedArray(typedArray,isDeep){var buffer=isDeep?cloneArrayBuffer(typedArray.buffer):typedArray.buffer;return new typedArray.constructor(buffer,typedArray.byteOffset,typedArray.length);}/**
	     * Compares values to sort them in ascending order.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {number} Returns the sort order indicator for `value`.
	     */function compareAscending(value,other){if(value!==other){var valIsDefined=value!==undefined,valIsNull=value===null,valIsReflexive=value===value,valIsSymbol=isSymbol(value);var othIsDefined=other!==undefined,othIsNull=other===null,othIsReflexive=other===other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive){return 1;}if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive){return-1;}}return 0;}/**
	     * Used by `_.orderBy` to compare multiple properties of a value to another
	     * and stable sort them.
	     *
	     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	     * specify an order of "desc" for descending or "asc" for ascending sort order
	     * of corresponding values.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {boolean[]|string[]} orders The order to sort by for each property.
	     * @returns {number} Returns the sort order indicator for `object`.
	     */function compareMultiple(object,other,orders){var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;while(++index<length){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result){if(index>=ordersLength){return result;}var order=orders[index];return result*(order=='desc'?-1:1);}}// Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	// that causes it, under certain circumstances, to provide the same value for
	// `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	// for more details.
	//
	// This also ensures a stable sort in V8 and other engines.
	// See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	return object.index-other.index;}/**
	     * Creates an array that is the composition of partially applied arguments,
	     * placeholders, and provided arguments into a single array of arguments.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to prepend to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */function composeArgs(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersLength=holders.length,leftIndex=-1,leftLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(leftLength+rangeLength),isUncurried=!isCurried;while(++leftIndex<leftLength){result[leftIndex]=partials[leftIndex];}while(++argsIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[holders[argsIndex]]=args[argsIndex];}}while(rangeLength--){result[leftIndex++]=args[argsIndex++];}return result;}/**
	     * This function is like `composeArgs` except that the arguments composition
	     * is tailored for `_.partialRight`.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to append to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */function composeArgsRight(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersIndex=-1,holdersLength=holders.length,rightIndex=-1,rightLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(rangeLength+rightLength),isUncurried=!isCurried;while(++argsIndex<rangeLength){result[argsIndex]=args[argsIndex];}var offset=argsIndex;while(++rightIndex<rightLength){result[offset+rightIndex]=partials[rightIndex];}while(++holdersIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[offset+holders[holdersIndex]]=args[argsIndex++];}}return result;}/**
	     * Copies the values of `source` to `array`.
	     *
	     * @private
	     * @param {Array} source The array to copy values from.
	     * @param {Array} [array=[]] The array to copy values to.
	     * @returns {Array} Returns `array`.
	     */function copyArray(source,array){var index=-1,length=source.length;array||(array=Array(length));while(++index<length){array[index]=source[index];}return array;}/**
	     * Copies properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy properties from.
	     * @param {Array} props The property identifiers to copy.
	     * @param {Object} [object={}] The object to copy properties to.
	     * @param {Function} [customizer] The function to customize copied values.
	     * @returns {Object} Returns `object`.
	     */function copyObject(source,props,object,customizer){var isNew=!object;object||(object={});var index=-1,length=props.length;while(++index<length){var key=props[index];var newValue=customizer?customizer(object[key],source[key],key,object,source):undefined;if(newValue===undefined){newValue=source[key];}if(isNew){baseAssignValue(object,key,newValue);}else{assignValue(object,key,newValue);}}return object;}/**
	     * Copies own symbol properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */function copySymbols(source,object){return copyObject(source,getSymbols(source),object);}/**
	     * Creates a function like `_.groupBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} [initializer] The accumulator object initializer.
	     * @returns {Function} Returns the new aggregator function.
	     */function createAggregator(setter,initializer){return function(collection,iteratee){var func=isArray(collection)?arrayAggregator:baseAggregator,accumulator=initializer?initializer():{};return func(collection,setter,getIteratee(iteratee,2),accumulator);};}/**
	     * Creates a function like `_.assign`.
	     *
	     * @private
	     * @param {Function} assigner The function to assign values.
	     * @returns {Function} Returns the new assigner function.
	     */function createAssigner(assigner){return baseRest(function(object,sources){var index=-1,length=sources.length,customizer=length>1?sources[length-1]:undefined,guard=length>2?sources[2]:undefined;customizer=assigner.length>3&&typeof customizer=='function'?(length--,customizer):undefined;if(guard&&isIterateeCall(sources[0],sources[1],guard)){customizer=length<3?undefined:customizer;length=1;}object=Object(object);while(++index<length){var source=sources[index];if(source){assigner(object,source,index,customizer);}}return object;});}/**
	     * Creates a `baseEach` or `baseEachRight` function.
	     *
	     * @private
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(collection==null){return collection;}if(!isArrayLike(collection)){return eachFunc(collection,iteratee);}var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);while(fromRight?index--:++index<length){if(iteratee(iterable[index],index,iterable)===false){break;}}return collection;};}/**
	     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */function createBaseFor(fromRight){return function(object,iteratee,keysFunc){var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;while(length--){var key=props[fromRight?length:++index];if(iteratee(iterable[key],key,iterable)===false){break;}}return object;};}/**
	     * Creates a function that wraps `func` to invoke it with the optional `this`
	     * binding of `thisArg`.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createBind(func,bitmask,thisArg){var isBind=bitmask&BIND_FLAG,Ctor=createCtor(func);function wrapper(){var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return fn.apply(isBind?thisArg:this,arguments);}return wrapper;}/**
	     * Creates a function like `_.lowerFirst`.
	     *
	     * @private
	     * @param {string} methodName The name of the `String` case method to use.
	     * @returns {Function} Returns the new case function.
	     */function createCaseFirst(methodName){return function(string){string=toString(string);var strSymbols=hasUnicode(string)?stringToArray(string):undefined;var chr=strSymbols?strSymbols[0]:string.charAt(0);var trailing=strSymbols?castSlice(strSymbols,1).join(''):string.slice(1);return chr[methodName]()+trailing;};}/**
	     * Creates a function like `_.camelCase`.
	     *
	     * @private
	     * @param {Function} callback The function to combine each word.
	     * @returns {Function} Returns the new compounder function.
	     */function createCompounder(callback){return function(string){return arrayReduce(words(deburr(string).replace(reApos,'')),callback,'');};}/**
	     * Creates a function that produces an instance of `Ctor` regardless of
	     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	     *
	     * @private
	     * @param {Function} Ctor The constructor to wrap.
	     * @returns {Function} Returns the new wrapped function.
	     */function createCtor(Ctor){return function(){// Use a `switch` statement to work with class constructors. See
	// http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	// for more details.
	var args=arguments;switch(args.length){case 0:return new Ctor();case 1:return new Ctor(args[0]);case 2:return new Ctor(args[0],args[1]);case 3:return new Ctor(args[0],args[1],args[2]);case 4:return new Ctor(args[0],args[1],args[2],args[3]);case 5:return new Ctor(args[0],args[1],args[2],args[3],args[4]);case 6:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5]);case 7:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);}var thisBinding=baseCreate(Ctor.prototype),result=Ctor.apply(thisBinding,args);// Mimic the constructor's `return` behavior.
	// See https://es5.github.io/#x13.2.2 for more details.
	return isObject(result)?result:thisBinding;};}/**
	     * Creates a function that wraps `func` to enable currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {number} arity The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createCurry(func,bitmask,arity){var Ctor=createCtor(func);function wrapper(){var length=arguments.length,args=Array(length),index=length,placeholder=getHolder(wrapper);while(index--){args[index]=arguments[index];}var holders=length<3&&args[0]!==placeholder&&args[length-1]!==placeholder?[]:replaceHolders(args,placeholder);length-=holders.length;if(length<arity){return createRecurry(func,bitmask,createHybrid,wrapper.placeholder,undefined,args,holders,undefined,undefined,arity-length);}var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return apply(fn,this,args);}return wrapper;}/**
	     * Creates a `_.find` or `_.findLast` function.
	     *
	     * @private
	     * @param {Function} findIndexFunc The function to find the collection index.
	     * @returns {Function} Returns the new find function.
	     */function createFind(findIndexFunc){return function(collection,predicate,fromIndex){var iterable=Object(collection);if(!isArrayLike(collection)){var iteratee=getIteratee(predicate,3);collection=keys(collection);predicate=function predicate(key){return iteratee(iterable[key],key,iterable);};}var index=findIndexFunc(collection,predicate,fromIndex);return index>-1?iterable[iteratee?collection[index]:index]:undefined;};}/**
	     * Creates a `_.flow` or `_.flowRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new flow function.
	     */function createFlow(fromRight){return flatRest(function(funcs){var length=funcs.length,index=length,prereq=LodashWrapper.prototype.thru;if(fromRight){funcs.reverse();}while(index--){var func=funcs[index];if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(prereq&&!wrapper&&getFuncName(func)=='wrapper'){var wrapper=new LodashWrapper([],true);}}index=wrapper?index:length;while(++index<length){func=funcs[index];var funcName=getFuncName(func),data=funcName=='wrapper'?getData(func):undefined;if(data&&isLaziable(data[0])&&data[1]==(ARY_FLAG|CURRY_FLAG|PARTIAL_FLAG|REARG_FLAG)&&!data[4].length&&data[9]==1){wrapper=wrapper[getFuncName(data[0])].apply(wrapper,data[3]);}else{wrapper=func.length==1&&isLaziable(func)?wrapper[funcName]():wrapper.thru(func);}}return function(){var args=arguments,value=args[0];if(wrapper&&args.length==1&&isArray(value)&&value.length>=LARGE_ARRAY_SIZE){return wrapper.plant(value).value();}var index=0,result=length?funcs[index].apply(this,args):value;while(++index<length){result=funcs[index].call(this,result);}return result;};});}/**
	     * Creates a function that wraps `func` to invoke it with optional `this`
	     * binding of `thisArg`, partial application, and currying.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [partialsRight] The arguments to append to those provided
	     *  to the new function.
	     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createHybrid(func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity){var isAry=bitmask&ARY_FLAG,isBind=bitmask&BIND_FLAG,isBindKey=bitmask&BIND_KEY_FLAG,isCurried=bitmask&(CURRY_FLAG|CURRY_RIGHT_FLAG),isFlip=bitmask&FLIP_FLAG,Ctor=isBindKey?undefined:createCtor(func);function wrapper(){var length=arguments.length,args=Array(length),index=length;while(index--){args[index]=arguments[index];}if(isCurried){var placeholder=getHolder(wrapper),holdersCount=countHolders(args,placeholder);}if(partials){args=composeArgs(args,partials,holders,isCurried);}if(partialsRight){args=composeArgsRight(args,partialsRight,holdersRight,isCurried);}length-=holdersCount;if(isCurried&&length<arity){var newHolders=replaceHolders(args,placeholder);return createRecurry(func,bitmask,createHybrid,wrapper.placeholder,thisArg,args,newHolders,argPos,ary,arity-length);}var thisBinding=isBind?thisArg:this,fn=isBindKey?thisBinding[func]:func;length=args.length;if(argPos){args=reorder(args,argPos);}else if(isFlip&&length>1){args.reverse();}if(isAry&&ary<length){args.length=ary;}if(this&&this!==root&&this instanceof wrapper){fn=Ctor||createCtor(fn);}return fn.apply(thisBinding,args);}return wrapper;}/**
	     * Creates a function like `_.invertBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} toIteratee The function to resolve iteratees.
	     * @returns {Function} Returns the new inverter function.
	     */function createInverter(setter,toIteratee){return function(object,iteratee){return baseInverter(object,setter,toIteratee(iteratee),{});};}/**
	     * Creates a function that performs a mathematical operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @param {number} [defaultValue] The value used for `undefined` arguments.
	     * @returns {Function} Returns the new mathematical operation function.
	     */function createMathOperation(operator,defaultValue){return function(value,other){var result;if(value===undefined&&other===undefined){return defaultValue;}if(value!==undefined){result=value;}if(other!==undefined){if(result===undefined){return other;}if(typeof value=='string'||typeof other=='string'){value=baseToString(value);other=baseToString(other);}else{value=baseToNumber(value);other=baseToNumber(other);}result=operator(value,other);}return result;};}/**
	     * Creates a function like `_.over`.
	     *
	     * @private
	     * @param {Function} arrayFunc The function to iterate over iteratees.
	     * @returns {Function} Returns the new over function.
	     */function createOver(arrayFunc){return flatRest(function(iteratees){iteratees=arrayMap(iteratees,baseUnary(getIteratee()));return baseRest(function(args){var thisArg=this;return arrayFunc(iteratees,function(iteratee){return apply(iteratee,thisArg,args);});});});}/**
	     * Creates the padding for `string` based on `length`. The `chars` string
	     * is truncated if the number of characters exceeds `length`.
	     *
	     * @private
	     * @param {number} length The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padding for `string`.
	     */function createPadding(length,chars){chars=chars===undefined?' ':baseToString(chars);var charsLength=chars.length;if(charsLength<2){return charsLength?baseRepeat(chars,length):chars;}var result=baseRepeat(chars,nativeCeil(length/stringSize(chars)));return hasUnicode(chars)?castSlice(stringToArray(result),0,length).join(''):result.slice(0,length);}/**
	     * Creates a function that wraps `func` to invoke it with the `this` binding
	     * of `thisArg` and `partials` prepended to the arguments it receives.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {Array} partials The arguments to prepend to those provided to
	     *  the new function.
	     * @returns {Function} Returns the new wrapped function.
	     */function createPartial(func,bitmask,thisArg,partials){var isBind=bitmask&BIND_FLAG,Ctor=createCtor(func);function wrapper(){var argsIndex=-1,argsLength=arguments.length,leftIndex=-1,leftLength=partials.length,args=Array(leftLength+argsLength),fn=this&&this!==root&&this instanceof wrapper?Ctor:func;while(++leftIndex<leftLength){args[leftIndex]=partials[leftIndex];}while(argsLength--){args[leftIndex++]=arguments[++argsIndex];}return apply(fn,isBind?thisArg:this,args);}return wrapper;}/**
	     * Creates a `_.range` or `_.rangeRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new range function.
	     */function createRange(fromRight){return function(start,end,step){if(step&&typeof step!='number'&&isIterateeCall(start,end,step)){end=step=undefined;}// Ensure the sign of `-0` is preserved.
	start=toFinite(start);if(end===undefined){end=start;start=0;}else{end=toFinite(end);}step=step===undefined?start<end?1:-1:toFinite(step);return baseRange(start,end,step,fromRight);};}/**
	     * Creates a function that performs a relational operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @returns {Function} Returns the new relational operation function.
	     */function createRelationalOperation(operator){return function(value,other){if(!(typeof value=='string'&&typeof other=='string')){value=toNumber(value);other=toNumber(other);}return operator(value,other);};}/**
	     * Creates a function that wraps `func` to continue currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {Function} wrapFunc The function to create the `func` wrapper.
	     * @param {*} placeholder The placeholder value.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createRecurry(func,bitmask,wrapFunc,placeholder,thisArg,partials,holders,argPos,ary,arity){var isCurry=bitmask&CURRY_FLAG,newHolders=isCurry?holders:undefined,newHoldersRight=isCurry?undefined:holders,newPartials=isCurry?partials:undefined,newPartialsRight=isCurry?undefined:partials;bitmask|=isCurry?PARTIAL_FLAG:PARTIAL_RIGHT_FLAG;bitmask&=~(isCurry?PARTIAL_RIGHT_FLAG:PARTIAL_FLAG);if(!(bitmask&CURRY_BOUND_FLAG)){bitmask&=~(BIND_FLAG|BIND_KEY_FLAG);}var newData=[func,bitmask,thisArg,newPartials,newHolders,newPartialsRight,newHoldersRight,argPos,ary,arity];var result=wrapFunc.apply(undefined,newData);if(isLaziable(func)){setData(result,newData);}result.placeholder=placeholder;return setWrapToString(result,func,bitmask);}/**
	     * Creates a function like `_.round`.
	     *
	     * @private
	     * @param {string} methodName The name of the `Math` method to use when rounding.
	     * @returns {Function} Returns the new round function.
	     */function createRound(methodName){var func=Math[methodName];return function(number,precision){number=toNumber(number);precision=nativeMin(toInteger(precision),292);if(precision){// Shift with exponential notation to avoid floating-point issues.
	// See [MDN](https://mdn.io/round#Examples) for more details.
	var pair=(toString(number)+'e').split('e'),value=func(pair[0]+'e'+(+pair[1]+precision));pair=(toString(value)+'e').split('e');return+(pair[0]+'e'+(+pair[1]-precision));}return func(number);};}/**
	     * Creates a set object of `values`.
	     *
	     * @private
	     * @param {Array} values The values to add to the set.
	     * @returns {Object} Returns the new set.
	     */var createSet=!(Set&&1/setToArray(new Set([,-0]))[1]==INFINITY)?noop:function(values){return new Set(values);};/**
	     * Creates a `_.toPairs` or `_.toPairsIn` function.
	     *
	     * @private
	     * @param {Function} keysFunc The function to get the keys of a given object.
	     * @returns {Function} Returns the new pairs function.
	     */function createToPairs(keysFunc){return function(object){var tag=getTag(object);if(tag==mapTag){return mapToArray(object);}if(tag==setTag){return setToPairs(object);}return baseToPairs(object,keysFunc(object));};}/**
	     * Creates a function that either curries or invokes `func` with optional
	     * `this` binding and partially applied arguments.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags.
	     *  The bitmask may be composed of the following flags:
	     *     1 - `_.bind`
	     *     2 - `_.bindKey`
	     *     4 - `_.curry` or `_.curryRight` of a bound function
	     *     8 - `_.curry`
	     *    16 - `_.curryRight`
	     *    32 - `_.partial`
	     *    64 - `_.partialRight`
	     *   128 - `_.rearg`
	     *   256 - `_.ary`
	     *   512 - `_.flip`
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to be partially applied.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createWrap(func,bitmask,thisArg,partials,holders,argPos,ary,arity){var isBindKey=bitmask&BIND_KEY_FLAG;if(!isBindKey&&typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var length=partials?partials.length:0;if(!length){bitmask&=~(PARTIAL_FLAG|PARTIAL_RIGHT_FLAG);partials=holders=undefined;}ary=ary===undefined?ary:nativeMax(toInteger(ary),0);arity=arity===undefined?arity:toInteger(arity);length-=holders?holders.length:0;if(bitmask&PARTIAL_RIGHT_FLAG){var partialsRight=partials,holdersRight=holders;partials=holders=undefined;}var data=isBindKey?undefined:getData(func);var newData=[func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity];if(data){mergeData(newData,data);}func=newData[0];bitmask=newData[1];thisArg=newData[2];partials=newData[3];holders=newData[4];arity=newData[9]=newData[9]==null?isBindKey?0:func.length:nativeMax(newData[9]-length,0);if(!arity&&bitmask&(CURRY_FLAG|CURRY_RIGHT_FLAG)){bitmask&=~(CURRY_FLAG|CURRY_RIGHT_FLAG);}if(!bitmask||bitmask==BIND_FLAG){var result=createBind(func,bitmask,thisArg);}else if(bitmask==CURRY_FLAG||bitmask==CURRY_RIGHT_FLAG){result=createCurry(func,bitmask,arity);}else if((bitmask==PARTIAL_FLAG||bitmask==(BIND_FLAG|PARTIAL_FLAG))&&!holders.length){result=createPartial(func,bitmask,thisArg,partials);}else{result=createHybrid.apply(undefined,newData);}var setter=data?baseSetData:setData;return setWrapToString(setter(result,newData),func,bitmask);}/**
	     * A specialized version of `baseIsEqualDeep` for arrays with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Array} array The array to compare.
	     * @param {Array} other The other array to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `array` and `other` objects.
	     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	     */function equalArrays(array,other,equalFunc,customizer,bitmask,stack){var isPartial=bitmask&PARTIAL_COMPARE_FLAG,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false;}// Assume cyclic values are equal.
	var stacked=stack.get(array);if(stacked&&stack.get(other)){return stacked==other;}var index=-1,result=true,seen=bitmask&UNORDERED_COMPARE_FLAG?new SetCache():undefined;stack.set(array,other);stack.set(other,array);// Ignore non-index properties.
	while(++index<arrLength){var arrValue=array[index],othValue=other[index];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack);}if(compared!==undefined){if(compared){continue;}result=false;break;}// Recursively compare arrays (susceptible to call stack limits).
	if(seen){if(!arraySome(other,function(othValue,othIndex){if(!cacheHas(seen,othIndex)&&(arrValue===othValue||equalFunc(arrValue,othValue,customizer,bitmask,stack))){return seen.push(othIndex);}})){result=false;break;}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,customizer,bitmask,stack))){result=false;break;}}stack['delete'](array);stack['delete'](other);return result;}/**
	     * A specialized version of `baseIsEqualDeep` for comparing objects of
	     * the same `toStringTag`.
	     *
	     * **Note:** This function only supports comparing values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {string} tag The `toStringTag` of the objects to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */function equalByTag(object,other,tag,equalFunc,customizer,bitmask,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false;}object=object.buffer;other=other.buffer;case arrayBufferTag:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array(object),new Uint8Array(other))){return false;}return true;case boolTag:case dateTag:case numberTag:// Coerce booleans to `1` or `0` and dates to milliseconds.
	// Invalid dates are coerced to `NaN`.
	return eq(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:// Coerce regexes to strings and treat strings, primitives and objects,
	// as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	// for more details.
	return object==other+'';case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&PARTIAL_COMPARE_FLAG;convert||(convert=setToArray);if(object.size!=other.size&&!isPartial){return false;}// Assume cyclic values are equal.
	var stacked=stack.get(object);if(stacked){return stacked==other;}bitmask|=UNORDERED_COMPARE_FLAG;// Recursively compare objects (susceptible to call stack limits).
	stack.set(object,other);var result=equalArrays(convert(object),convert(other),equalFunc,customizer,bitmask,stack);stack['delete'](object);return result;case symbolTag:if(symbolValueOf){return symbolValueOf.call(object)==symbolValueOf.call(other);}}return false;}/**
	     * A specialized version of `baseIsEqualDeep` for objects with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */function equalObjects(object,other,equalFunc,customizer,bitmask,stack){var isPartial=bitmask&PARTIAL_COMPARE_FLAG,objProps=keys(object),objLength=objProps.length,othProps=keys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false;}var index=objLength;while(index--){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty.call(other,key))){return false;}}// Assume cyclic values are equal.
	var stacked=stack.get(object);if(stacked&&stack.get(other)){return stacked==other;}var result=true;stack.set(object,other);stack.set(other,object);var skipCtor=isPartial;while(++index<objLength){key=objProps[index];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);}// Recursively compare objects (susceptible to call stack limits).
	if(!(compared===undefined?objValue===othValue||equalFunc(objValue,othValue,customizer,bitmask,stack):compared)){result=false;break;}skipCtor||(skipCtor=key=='constructor');}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;// Non `Object` object instances with different constructors are not equal.
	if(objCtor!=othCtor&&'constructor'in object&&'constructor'in other&&!(typeof objCtor=='function'&&objCtor instanceof objCtor&&typeof othCtor=='function'&&othCtor instanceof othCtor)){result=false;}}stack['delete'](object);stack['delete'](other);return result;}/**
	     * A specialized version of `baseRest` which flattens the rest array.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @returns {Function} Returns the new function.
	     */function flatRest(func){return setToString(overRest(func,undefined,flatten),func+'');}/**
	     * Creates an array of own enumerable property names and symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */function getAllKeys(object){return baseGetAllKeys(object,keys,getSymbols);}/**
	     * Creates an array of own and inherited enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */function getAllKeysIn(object){return baseGetAllKeys(object,keysIn,getSymbolsIn);}/**
	     * Gets metadata for `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {*} Returns the metadata for `func`.
	     */var getData=!metaMap?noop:function(func){return metaMap.get(func);};/**
	     * Gets the name of `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {string} Returns the function name.
	     */function getFuncName(func){var result=func.name+'',array=realNames[result],length=hasOwnProperty.call(realNames,result)?array.length:0;while(length--){var data=array[length],otherFunc=data.func;if(otherFunc==null||otherFunc==func){return data.name;}}return result;}/**
	     * Gets the argument placeholder value for `func`.
	     *
	     * @private
	     * @param {Function} func The function to inspect.
	     * @returns {*} Returns the placeholder value.
	     */function getHolder(func){var object=hasOwnProperty.call(lodash,'placeholder')?lodash:func;return object.placeholder;}/**
	     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
	     * this function returns the custom method, otherwise it returns `baseIteratee`.
	     * If arguments are provided, the chosen function is invoked with them and
	     * its result is returned.
	     *
	     * @private
	     * @param {*} [value] The value to convert to an iteratee.
	     * @param {number} [arity] The arity of the created iteratee.
	     * @returns {Function} Returns the chosen function or its result.
	     */function getIteratee(){var result=lodash.iteratee||iteratee;result=result===iteratee?baseIteratee:result;return arguments.length?result(arguments[0],arguments[1]):result;}/**
	     * Gets the data for `map`.
	     *
	     * @private
	     * @param {Object} map The map to query.
	     * @param {string} key The reference key.
	     * @returns {*} Returns the map data.
	     */function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key=='string'?'string':'hash']:data.map;}/**
	     * Gets the property names, values, and compare flags of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the match data of `object`.
	     */function getMatchData(object){var result=keys(object),length=result.length;while(length--){var key=result[length],value=object[key];result[length]=[key,value,isStrictComparable(value)];}return result;}/**
	     * Gets the native function at `key` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {string} key The key of the method to get.
	     * @returns {*} Returns the function if it's native, else `undefined`.
	     */function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:undefined;}/**
	     * Creates an array of the own enumerable symbol properties of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */var getSymbols=nativeGetSymbols?overArg(nativeGetSymbols,Object):stubArray;/**
	     * Creates an array of the own and inherited enumerable symbol properties
	     * of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */var getSymbolsIn=!nativeGetSymbols?stubArray:function(object){var result=[];while(object){arrayPush(result,getSymbols(object));object=getPrototype(object);}return result;};/**
	     * Gets the `toStringTag` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */var getTag=baseGetTag;// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	if(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=dataViewTag||Map&&getTag(new Map())!=mapTag||Promise&&getTag(Promise.resolve())!=promiseTag||Set&&getTag(new Set())!=setTag||WeakMap&&getTag(new WeakMap())!=weakMapTag){getTag=function getTag(value){var result=objectToString.call(value),Ctor=result==objectTag?value.constructor:undefined,ctorString=Ctor?toSource(Ctor):undefined;if(ctorString){switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return promiseTag;case setCtorString:return setTag;case weakMapCtorString:return weakMapTag;}}return result;};}/**
	     * Gets the view, applying any `transforms` to the `start` and `end` positions.
	     *
	     * @private
	     * @param {number} start The start of the view.
	     * @param {number} end The end of the view.
	     * @param {Array} transforms The transformations to apply to the view.
	     * @returns {Object} Returns an object containing the `start` and `end`
	     *  positions of the view.
	     */function getView(start,end,transforms){var index=-1,length=transforms.length;while(++index<length){var data=transforms[index],size=data.size;switch(data.type){case'drop':start+=size;break;case'dropRight':end-=size;break;case'take':end=nativeMin(end,start+size);break;case'takeRight':start=nativeMax(start,end-size);break;}}return{'start':start,'end':end};}/**
	     * Extracts wrapper details from the `source` body comment.
	     *
	     * @private
	     * @param {string} source The source to inspect.
	     * @returns {Array} Returns the wrapper details.
	     */function getWrapDetails(source){var match=source.match(reWrapDetails);return match?match[1].split(reSplitDetails):[];}/**
	     * Checks if `path` exists on `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @param {Function} hasFunc The function to check properties.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     */function hasPath(object,path,hasFunc){path=isKey(path,object)?[path]:castPath(path);var index=-1,length=path.length,result=false;while(++index<length){var key=toKey(path[index]);if(!(result=object!=null&&hasFunc(object,key))){break;}object=object[key];}if(result||++index!=length){return result;}length=object?object.length:0;return!!length&&isLength(length)&&isIndex(key,length)&&(isArray(object)||isArguments(object));}/**
	     * Initializes an array clone.
	     *
	     * @private
	     * @param {Array} array The array to clone.
	     * @returns {Array} Returns the initialized clone.
	     */function initCloneArray(array){var length=array.length,result=array.constructor(length);// Add properties assigned by `RegExp#exec`.
	if(length&&typeof array[0]=='string'&&hasOwnProperty.call(array,'index')){result.index=array.index;result.input=array.input;}return result;}/**
	     * Initializes an object clone.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @returns {Object} Returns the initialized clone.
	     */function initCloneObject(object){return typeof object.constructor=='function'&&!isPrototype(object)?baseCreate(getPrototype(object)):{};}/**
	     * Initializes an object clone based on its `toStringTag`.
	     *
	     * **Note:** This function only supports cloning values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @param {string} tag The `toStringTag` of the object to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the initialized clone.
	     */function initCloneByTag(object,tag,cloneFunc,isDeep){var Ctor=object.constructor;switch(tag){case arrayBufferTag:return cloneArrayBuffer(object);case boolTag:case dateTag:return new Ctor(+object);case dataViewTag:return cloneDataView(object,isDeep);case float32Tag:case float64Tag:case int8Tag:case int16Tag:case int32Tag:case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:return cloneTypedArray(object,isDeep);case mapTag:return cloneMap(object,isDeep,cloneFunc);case numberTag:case stringTag:return new Ctor(object);case regexpTag:return cloneRegExp(object);case setTag:return cloneSet(object,isDeep,cloneFunc);case symbolTag:return cloneSymbol(object);}}/**
	     * Inserts wrapper `details` in a comment at the top of the `source` body.
	     *
	     * @private
	     * @param {string} source The source to modify.
	     * @returns {Array} details The details to insert.
	     * @returns {string} Returns the modified source.
	     */function insertWrapDetails(source,details){var length=details.length;if(!length){return source;}var lastIndex=length-1;details[lastIndex]=(length>1?'& ':'')+details[lastIndex];details=details.join(length>2?', ':' ');return source.replace(reWrapComment,'{\n/* [wrapped with '+details+'] */\n');}/**
	     * Checks if `value` is a flattenable `arguments` object or array.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	     */function isFlattenable(value){return isArray(value)||isArguments(value)||!!(spreadableSymbol&&value&&value[spreadableSymbol]);}/**
	     * Checks if `value` is a valid array-like index.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	     */function isIndex(value,length){length=length==null?MAX_SAFE_INTEGER:length;return!!length&&(typeof value=='number'||reIsUint.test(value))&&value>-1&&value%1==0&&value<length;}/**
	     * Checks if the given arguments are from an iteratee call.
	     *
	     * @private
	     * @param {*} value The potential iteratee value argument.
	     * @param {*} index The potential iteratee index or key argument.
	     * @param {*} object The potential iteratee object argument.
	     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	     *  else `false`.
	     */function isIterateeCall(value,index,object){if(!isObject(object)){return false;}var type=typeof index==='undefined'?'undefined':_typeof(index);if(type=='number'?isArrayLike(object)&&isIndex(index,object.length):type=='string'&&index in object){return eq(object[index],value);}return false;}/**
	     * Checks if `value` is a property name and not a property path.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	     */function isKey(value,object){if(isArray(value)){return false;}var type=typeof value==='undefined'?'undefined':_typeof(value);if(type=='number'||type=='symbol'||type=='boolean'||value==null||isSymbol(value)){return true;}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object);}/**
	     * Checks if `value` is suitable for use as unique object key.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	     */function isKeyable(value){var type=typeof value==='undefined'?'undefined':_typeof(value);return type=='string'||type=='number'||type=='symbol'||type=='boolean'?value!=='__proto__':value===null;}/**
	     * Checks if `func` has a lazy counterpart.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	     *  else `false`.
	     */function isLaziable(func){var funcName=getFuncName(func),other=lodash[funcName];if(typeof other!='function'||!(funcName in LazyWrapper.prototype)){return false;}if(func===other){return true;}var data=getData(other);return!!data&&func===data[0];}/**
	     * Checks if `func` has its source masked.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	     */function isMasked(func){return!!maskSrcKey&&maskSrcKey in func;}/**
	     * Checks if `func` is capable of being masked.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
	     */var isMaskable=coreJsData?isFunction:stubFalse;/**
	     * Checks if `value` is likely a prototype object.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	     */function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=='function'&&Ctor.prototype||objectProto;return value===proto;}/**
	     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` if suitable for strict
	     *  equality comparisons, else `false`.
	     */function isStrictComparable(value){return value===value&&!isObject(value);}/**
	     * A specialized version of `matchesProperty` for source values suitable
	     * for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */function matchesStrictComparable(key,srcValue){return function(object){if(object==null){return false;}return object[key]===srcValue&&(srcValue!==undefined||key in Object(object));};}/**
	     * A specialized version of `_.memoize` which clears the memoized function's
	     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	     *
	     * @private
	     * @param {Function} func The function to have its output memoized.
	     * @returns {Function} Returns the new memoized function.
	     */function memoizeCapped(func){var result=memoize(func,function(key){if(cache.size===MAX_MEMOIZE_SIZE){cache.clear();}return key;});var cache=result.cache;return result;}/**
	     * Merges the function metadata of `source` into `data`.
	     *
	     * Merging metadata reduces the number of wrappers used to invoke a function.
	     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	     * may be applied regardless of execution order. Methods like `_.ary` and
	     * `_.rearg` modify function arguments, making the order in which they are
	     * executed important, preventing the merging of metadata. However, we make
	     * an exception for a safe combined case where curried functions have `_.ary`
	     * and or `_.rearg` applied.
	     *
	     * @private
	     * @param {Array} data The destination metadata.
	     * @param {Array} source The source metadata.
	     * @returns {Array} Returns `data`.
	     */function mergeData(data,source){var bitmask=data[1],srcBitmask=source[1],newBitmask=bitmask|srcBitmask,isCommon=newBitmask<(BIND_FLAG|BIND_KEY_FLAG|ARY_FLAG);var isCombo=srcBitmask==ARY_FLAG&&bitmask==CURRY_FLAG||srcBitmask==ARY_FLAG&&bitmask==REARG_FLAG&&data[7].length<=source[8]||srcBitmask==(ARY_FLAG|REARG_FLAG)&&source[7].length<=source[8]&&bitmask==CURRY_FLAG;// Exit early if metadata can't be merged.
	if(!(isCommon||isCombo)){return data;}// Use source `thisArg` if available.
	if(srcBitmask&BIND_FLAG){data[2]=source[2];// Set when currying a bound function.
	newBitmask|=bitmask&BIND_FLAG?0:CURRY_BOUND_FLAG;}// Compose partial arguments.
	var value=source[3];if(value){var partials=data[3];data[3]=partials?composeArgs(partials,value,source[4]):value;data[4]=partials?replaceHolders(data[3],PLACEHOLDER):source[4];}// Compose partial right arguments.
	value=source[5];if(value){partials=data[5];data[5]=partials?composeArgsRight(partials,value,source[6]):value;data[6]=partials?replaceHolders(data[5],PLACEHOLDER):source[6];}// Use source `argPos` if available.
	value=source[7];if(value){data[7]=value;}// Use source `ary` if it's smaller.
	if(srcBitmask&ARY_FLAG){data[8]=data[8]==null?source[8]:nativeMin(data[8],source[8]);}// Use source `arity` if one is not provided.
	if(data[9]==null){data[9]=source[9];}// Use source `func` and merge bitmasks.
	data[0]=source[0];data[1]=newBitmask;return data;}/**
	     * Used by `_.defaultsDeep` to customize its `_.merge` use.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to merge.
	     * @param {Object} object The parent object of `objValue`.
	     * @param {Object} source The parent object of `srcValue`.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     * @returns {*} Returns the value to assign.
	     */function mergeDefaults(objValue,srcValue,key,object,source,stack){if(isObject(objValue)&&isObject(srcValue)){// Recursively merge objects and arrays (susceptible to call stack limits).
	stack.set(srcValue,objValue);baseMerge(objValue,srcValue,undefined,mergeDefaults,stack);stack['delete'](srcValue);}return objValue;}/**
	     * This function is like
	     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * except that it includes inherited enumerable properties.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */function nativeKeysIn(object){var result=[];if(object!=null){for(var key in Object(object)){result.push(key);}}return result;}/**
	     * A specialized version of `baseRest` which transforms the rest array.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @param {Function} transform The rest array transform.
	     * @returns {Function} Returns the new function.
	     */function overRest(func,start,transform){start=nativeMax(start===undefined?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index];}index=-1;var otherArgs=Array(start+1);while(++index<start){otherArgs[index]=args[index];}otherArgs[start]=transform(array);return apply(func,this,otherArgs);};}/**
	     * Gets the parent value at `path` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array} path The path to get the parent value of.
	     * @returns {*} Returns the parent value.
	     */function parent(object,path){return path.length==1?object:baseGet(object,baseSlice(path,0,-1));}/**
	     * Reorder `array` according to the specified indexes where the element at
	     * the first index is assigned as the first element, the element at
	     * the second index is assigned as the second element, and so on.
	     *
	     * @private
	     * @param {Array} array The array to reorder.
	     * @param {Array} indexes The arranged array indexes.
	     * @returns {Array} Returns `array`.
	     */function reorder(array,indexes){var arrLength=array.length,length=nativeMin(indexes.length,arrLength),oldArray=copyArray(array);while(length--){var index=indexes[length];array[length]=isIndex(index,arrLength)?oldArray[index]:undefined;}return array;}/**
	     * Sets metadata for `func`.
	     *
	     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	     * period of time, it will trip its breaker and transition to an identity
	     * function to avoid garbage collection pauses in V8. See
	     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	     * for more details.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */var setData=shortOut(baseSetData);/**
	     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */var setTimeout=ctxSetTimeout||function(func,wait){return root.setTimeout(func,wait);};/**
	     * Sets the `toString` method of `func` to return `string`.
	     *
	     * @private
	     * @param {Function} func The function to modify.
	     * @param {Function} string The `toString` result.
	     * @returns {Function} Returns `func`.
	     */var setToString=shortOut(baseSetToString);/**
	     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
	     * with wrapper details in a comment at the top of the source body.
	     *
	     * @private
	     * @param {Function} wrapper The function to modify.
	     * @param {Function} reference The reference function.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Function} Returns `wrapper`.
	     */function setWrapToString(wrapper,reference,bitmask){var source=reference+'';return setToString(wrapper,insertWrapDetails(source,updateWrapDetails(getWrapDetails(source),bitmask)));}/**
	     * Creates a function that'll short out and invoke `identity` instead
	     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	     * milliseconds.
	     *
	     * @private
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new shortable function.
	     */function shortOut(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow(),remaining=HOT_SPAN-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT){return arguments[0];}}else{count=0;}return func.apply(undefined,arguments);};}/**
	     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
	     *
	     * @private
	     * @param {Array} array The array to shuffle.
	     * @param {number} [size=array.length] The size of `array`.
	     * @returns {Array} Returns `array`.
	     */function shuffleSelf(array,size){var index=-1,length=array.length,lastIndex=length-1;size=size===undefined?length:baseClamp(size,0,length);while(++index<size){var rand=baseRandom(index,lastIndex),value=array[rand];array[rand]=array[index];array[index]=value;}array.length=size;return array;}/**
	     * Converts `string` to a property path array.
	     *
	     * @private
	     * @param {string} string The string to convert.
	     * @returns {Array} Returns the property path array.
	     */var stringToPath=memoizeCapped(function(string){string=toString(string);var result=[];if(reLeadingDot.test(string)){result.push('');}string.replace(rePropName,function(match,number,quote,string){result.push(quote?string.replace(reEscapeChar,'$1'):number||match);});return result;});/**
	     * Converts `value` to a string key if it's not a string or symbol.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {string|symbol} Returns the key.
	     */function toKey(value){if(typeof value=='string'||isSymbol(value)){return value;}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}/**
	     * Converts `func` to its source code.
	     *
	     * @private
	     * @param {Function} func The function to process.
	     * @returns {string} Returns the source code.
	     */function toSource(func){if(func!=null){try{return funcToString.call(func);}catch(e){}try{return func+'';}catch(e){}}return'';}/**
	     * Updates wrapper `details` based on `bitmask` flags.
	     *
	     * @private
	     * @returns {Array} details The details to modify.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Array} Returns `details`.
	     */function updateWrapDetails(details,bitmask){arrayEach(wrapFlags,function(pair){var value='_.'+pair[0];if(bitmask&pair[1]&&!arrayIncludes(details,value)){details.push(value);}});return details.sort();}/**
	     * Creates a clone of `wrapper`.
	     *
	     * @private
	     * @param {Object} wrapper The wrapper to clone.
	     * @returns {Object} Returns the cloned wrapper.
	     */function wrapperClone(wrapper){if(wrapper instanceof LazyWrapper){return wrapper.clone();}var result=new LodashWrapper(wrapper.__wrapped__,wrapper.__chain__);result.__actions__=copyArray(wrapper.__actions__);result.__index__=wrapper.__index__;result.__values__=wrapper.__values__;return result;}/*------------------------------------------------------------------------*//**
	     * Creates an array of elements split into groups the length of `size`.
	     * If `array` can't be split evenly, the final chunk will be the remaining
	     * elements.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to process.
	     * @param {number} [size=1] The length of each chunk
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the new array of chunks.
	     * @example
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 2);
	     * // => [['a', 'b'], ['c', 'd']]
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 3);
	     * // => [['a', 'b', 'c'], ['d']]
	     */function chunk(array,size,guard){if(guard?isIterateeCall(array,size,guard):size===undefined){size=1;}else{size=nativeMax(toInteger(size),0);}var length=array?array.length:0;if(!length||size<1){return[];}var index=0,resIndex=0,result=Array(nativeCeil(length/size));while(index<length){result[resIndex++]=baseSlice(array,index,index+=size);}return result;}/**
	     * Creates an array with all falsey values removed. The values `false`, `null`,
	     * `0`, `""`, `undefined`, and `NaN` are falsey.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to compact.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.compact([0, 1, false, 2, '', 3]);
	     * // => [1, 2, 3]
	     */function compact(array){var index=-1,length=array?array.length:0,resIndex=0,result=[];while(++index<length){var value=array[index];if(value){result[resIndex++]=value;}}return result;}/**
	     * Creates a new array concatenating `array` with any additional arrays
	     * and/or values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to concatenate.
	     * @param {...*} [values] The values to concatenate.
	     * @returns {Array} Returns the new concatenated array.
	     * @example
	     *
	     * var array = [1];
	     * var other = _.concat(array, 2, [3], [[4]]);
	     *
	     * console.log(other);
	     * // => [1, 2, 3, [4]]
	     *
	     * console.log(array);
	     * // => [1]
	     */function concat(){var length=arguments.length;if(!length){return[];}var args=Array(length-1),array=arguments[0],index=length;while(index--){args[index-1]=arguments[index];}return arrayPush(isArray(array)?copyArray(array):[array],baseFlatten(args,1));}/**
	     * Creates an array of `array` values not included in the other given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order and references of result values are
	     * determined by the first array.
	     *
	     * **Note:** Unlike `_.pullAll`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.without, _.xor
	     * @example
	     *
	     * _.difference([2, 1], [2, 3]);
	     * // => [1]
	     */var difference=baseRest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true)):[];});/**
	     * This method is like `_.difference` except that it accepts `iteratee` which
	     * is invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The order and references of result values are
	     * determined by the first array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */var differenceBy=baseRest(function(array,values){var iteratee=last(values);if(isArrayLikeObject(iteratee)){iteratee=undefined;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),getIteratee(iteratee,2)):[];});/**
	     * This method is like `_.difference` except that it accepts `comparator`
	     * which is invoked to compare elements of `array` to `values`. The order and
	     * references of result values are determined by the first array. The comparator
	     * is invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     *
	     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }]
	     */var differenceWith=baseRest(function(array,values){var comparator=last(values);if(isArrayLikeObject(comparator)){comparator=undefined;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),undefined,comparator):[];});/**
	     * Creates a slice of `array` with `n` elements dropped from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.drop([1, 2, 3]);
	     * // => [2, 3]
	     *
	     * _.drop([1, 2, 3], 2);
	     * // => [3]
	     *
	     * _.drop([1, 2, 3], 5);
	     * // => []
	     *
	     * _.drop([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */function drop(array,n,guard){var length=array?array.length:0;if(!length){return[];}n=guard||n===undefined?1:toInteger(n);return baseSlice(array,n<0?0:n,length);}/**
	     * Creates a slice of `array` with `n` elements dropped from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropRight([1, 2, 3]);
	     * // => [1, 2]
	     *
	     * _.dropRight([1, 2, 3], 2);
	     * // => [1]
	     *
	     * _.dropRight([1, 2, 3], 5);
	     * // => []
	     *
	     * _.dropRight([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */function dropRight(array,n,guard){var length=array?array.length:0;if(!length){return[];}n=guard||n===undefined?1:toInteger(n);n=length-n;return baseSlice(array,0,n<0?0:n);}/**
	     * Creates a slice of `array` excluding elements dropped from the end.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.dropRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropRightWhile(users, ['active', false]);
	     * // => objects for ['barney']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropRightWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */function dropRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true,true):[];}/**
	     * Creates a slice of `array` excluding elements dropped from the beginning.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.dropWhile(users, function(o) { return !o.active; });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropWhile(users, ['active', false]);
	     * // => objects for ['pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */function dropWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true):[];}/**
	     * Fills elements of `array` with `value` from `start` up to, but not
	     * including, `end`.
	     *
	     * **Note:** This method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Array
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.fill(array, 'a');
	     * console.log(array);
	     * // => ['a', 'a', 'a']
	     *
	     * _.fill(Array(3), 2);
	     * // => [2, 2, 2]
	     *
	     * _.fill([4, 6, 8, 10], '*', 1, 3);
	     * // => [4, '*', '*', 10]
	     */function fill(array,value,start,end){var length=array?array.length:0;if(!length){return[];}if(start&&typeof start!='number'&&isIterateeCall(array,value,start)){start=0;end=length;}return baseFill(array,value,start,end);}/**
	     * This method is like `_.find` except that it returns the index of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.findIndex(users, function(o) { return o.user == 'barney'; });
	     * // => 0
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findIndex(users, { 'user': 'fred', 'active': false });
	     * // => 1
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findIndex(users, ['active', false]);
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findIndex(users, 'active');
	     * // => 2
	     */function findIndex(array,predicate,fromIndex){var length=array?array.length:0;if(!length){return-1;}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0);}return baseFindIndex(array,getIteratee(predicate,3),index);}/**
	     * This method is like `_.findIndex` except that it iterates over elements
	     * of `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
	     * // => 2
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
	     * // => 0
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastIndex(users, ['active', false]);
	     * // => 2
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastIndex(users, 'active');
	     * // => 0
	     */function findLastIndex(array,predicate,fromIndex){var length=array?array.length:0;if(!length){return-1;}var index=length-1;if(fromIndex!==undefined){index=toInteger(fromIndex);index=fromIndex<0?nativeMax(length+index,0):nativeMin(index,length-1);}return baseFindIndex(array,getIteratee(predicate,3),index,true);}/**
	     * Flattens `array` a single level deep.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flatten([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, [3, [4]], 5]
	     */function flatten(array){var length=array?array.length:0;return length?baseFlatten(array,1):[];}/**
	     * Recursively flattens `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flattenDeep([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, 3, 4, 5]
	     */function flattenDeep(array){var length=array?array.length:0;return length?baseFlatten(array,INFINITY):[];}/**
	     * Recursively flatten `array` up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * var array = [1, [2, [3, [4]], 5]];
	     *
	     * _.flattenDepth(array, 1);
	     * // => [1, 2, [3, [4]], 5]
	     *
	     * _.flattenDepth(array, 2);
	     * // => [1, 2, 3, [4], 5]
	     */function flattenDepth(array,depth){var length=array?array.length:0;if(!length){return[];}depth=depth===undefined?1:toInteger(depth);return baseFlatten(array,depth);}/**
	     * The inverse of `_.toPairs`; this method returns an object composed
	     * from key-value `pairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} pairs The key-value pairs.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.fromPairs([['a', 1], ['b', 2]]);
	     * // => { 'a': 1, 'b': 2 }
	     */function fromPairs(pairs){var index=-1,length=pairs?pairs.length:0,result={};while(++index<length){var pair=pairs[index];result[pair[0]]=pair[1];}return result;}/**
	     * Gets the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias first
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the first element of `array`.
	     * @example
	     *
	     * _.head([1, 2, 3]);
	     * // => 1
	     *
	     * _.head([]);
	     * // => undefined
	     */function head(array){return array&&array.length?array[0]:undefined;}/**
	     * Gets the index at which the first occurrence of `value` is found in `array`
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. If `fromIndex` is negative, it's used as the
	     * offset from the end of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.indexOf([1, 2, 1, 2], 2);
	     * // => 1
	     *
	     * // Search from the `fromIndex`.
	     * _.indexOf([1, 2, 1, 2], 2, 2);
	     * // => 3
	     */function indexOf(array,value,fromIndex){var length=array?array.length:0;if(!length){return-1;}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0);}return baseIndexOf(array,value,index);}/**
	     * Gets all but the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.initial([1, 2, 3]);
	     * // => [1, 2]
	     */function initial(array){var length=array?array.length:0;return length?baseSlice(array,0,-1):[];}/**
	     * Creates an array of unique values that are included in all given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order and references of result values are
	     * determined by the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersection([2, 1], [2, 3]);
	     * // => [2]
	     */var intersection=baseRest(function(arrays){var mapped=arrayMap(arrays,castArrayLikeObject);return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped):[];});/**
	     * This method is like `_.intersection` except that it accepts `iteratee`
	     * which is invoked for each element of each `arrays` to generate the criterion
	     * by which they're compared. The order and references of result values are
	     * determined by the first array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [2.1]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }]
	     */var intersectionBy=baseRest(function(arrays){var iteratee=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);if(iteratee===last(mapped)){iteratee=undefined;}else{mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,getIteratee(iteratee,2)):[];});/**
	     * This method is like `_.intersection` except that it accepts `comparator`
	     * which is invoked to compare elements of `arrays`. The order and references
	     * of result values are determined by the first array. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.intersectionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }]
	     */var intersectionWith=baseRest(function(arrays){var comparator=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);if(comparator===last(mapped)){comparator=undefined;}else{mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,undefined,comparator):[];});/**
	     * Converts all elements in `array` into a string separated by `separator`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to convert.
	     * @param {string} [separator=','] The element separator.
	     * @returns {string} Returns the joined string.
	     * @example
	     *
	     * _.join(['a', 'b', 'c'], '~');
	     * // => 'a~b~c'
	     */function join(array,separator){return array?nativeJoin.call(array,separator):'';}/**
	     * Gets the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the last element of `array`.
	     * @example
	     *
	     * _.last([1, 2, 3]);
	     * // => 3
	     */function last(array){var length=array?array.length:0;return length?array[length-1]:undefined;}/**
	     * This method is like `_.indexOf` except that it iterates over elements of
	     * `array` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.lastIndexOf([1, 2, 1, 2], 2);
	     * // => 3
	     *
	     * // Search from the `fromIndex`.
	     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
	     * // => 1
	     */function lastIndexOf(array,value,fromIndex){var length=array?array.length:0;if(!length){return-1;}var index=length;if(fromIndex!==undefined){index=toInteger(fromIndex);index=index<0?nativeMax(length+index,0):nativeMin(index,length-1);}return value===value?strictLastIndexOf(array,value,index):baseFindIndex(array,baseIsNaN,index,true);}/**
	     * Gets the element at index `n` of `array`. If `n` is negative, the nth
	     * element from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.11.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=0] The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     *
	     * _.nth(array, 1);
	     * // => 'b'
	     *
	     * _.nth(array, -2);
	     * // => 'c';
	     */function nth(array,n){return array&&array.length?baseNth(array,toInteger(n)):undefined;}/**
	     * Removes all given values from `array` using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
	     * to remove elements from an array by predicate.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...*} [values] The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pull(array, 'a', 'c');
	     * console.log(array);
	     * // => ['b', 'b']
	     */var pull=baseRest(pullAll);/**
	     * This method is like `_.pull` except that it accepts an array of values to remove.
	     *
	     * **Note:** Unlike `_.difference`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pullAll(array, ['a', 'c']);
	     * console.log(array);
	     * // => ['b', 'b']
	     */function pullAll(array,values){return array&&array.length&&values&&values.length?basePullAll(array,values):array;}/**
	     * This method is like `_.pullAll` except that it accepts `iteratee` which is
	     * invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The iteratee is invoked with one argument: (value).
	     *
	     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
	     *
	     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
	     * console.log(array);
	     * // => [{ 'x': 2 }]
	     */function pullAllBy(array,values,iteratee){return array&&array.length&&values&&values.length?basePullAll(array,values,getIteratee(iteratee,2)):array;}/**
	     * This method is like `_.pullAll` except that it accepts `comparator` which
	     * is invoked to compare elements of `array` to `values`. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
	     *
	     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
	     * console.log(array);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
	     */function pullAllWith(array,values,comparator){return array&&array.length&&values&&values.length?basePullAll(array,values,undefined,comparator):array;}/**
	     * Removes elements from `array` corresponding to `indexes` and returns an
	     * array of removed elements.
	     *
	     * **Note:** Unlike `_.at`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     * var pulled = _.pullAt(array, [1, 3]);
	     *
	     * console.log(array);
	     * // => ['a', 'c']
	     *
	     * console.log(pulled);
	     * // => ['b', 'd']
	     */var pullAt=flatRest(function(array,indexes){var length=array?array.length:0,result=baseAt(array,indexes);basePullAt(array,arrayMap(indexes,function(index){return isIndex(index,length)?+index:index;}).sort(compareAscending));return result;});/**
	     * Removes all elements from `array` that `predicate` returns truthy for
	     * and returns an array of the removed elements. The predicate is invoked
	     * with three arguments: (value, index, array).
	     *
	     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
	     * to pull elements from an array by value.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [1, 2, 3, 4];
	     * var evens = _.remove(array, function(n) {
	     *   return n % 2 == 0;
	     * });
	     *
	     * console.log(array);
	     * // => [1, 3]
	     *
	     * console.log(evens);
	     * // => [2, 4]
	     */function remove(array,predicate){var result=[];if(!(array&&array.length)){return result;}var index=-1,indexes=[],length=array.length;predicate=getIteratee(predicate,3);while(++index<length){var value=array[index];if(predicate(value,index,array)){result.push(value);indexes.push(index);}}basePullAt(array,indexes);return result;}/**
	     * Reverses `array` so that the first element becomes the last, the second
	     * element becomes the second to last, and so on.
	     *
	     * **Note:** This method mutates `array` and is based on
	     * [`Array#reverse`](https://mdn.io/Array/reverse).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.reverse(array);
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */function reverse(array){return array?nativeReverse.call(array):array;}/**
	     * Creates a slice of `array` from `start` up to, but not including, `end`.
	     *
	     * **Note:** This method is used instead of
	     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
	     * returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */function slice(array,start,end){var length=array?array.length:0;if(!length){return[];}if(end&&typeof end!='number'&&isIterateeCall(array,start,end)){start=0;end=length;}else{start=start==null?0:toInteger(start);end=end===undefined?length:toInteger(end);}return baseSlice(array,start,end);}/**
	     * Uses a binary search to determine the lowest index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedIndex([30, 50], 40);
	     * // => 1
	     */function sortedIndex(array,value){return baseSortedIndex(array,value);}/**
	     * This method is like `_.sortedIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 0
	     */function sortedIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee,2));}/**
	     * This method is like `_.indexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 1
	     */function sortedIndexOf(array,value){var length=array?array.length:0;if(length){var index=baseSortedIndex(array,value);if(index<length&&eq(array[index],value)){return index;}}return-1;}/**
	     * This method is like `_.sortedIndex` except that it returns the highest
	     * index at which `value` should be inserted into `array` in order to
	     * maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
	     * // => 4
	     */function sortedLastIndex(array,value){return baseSortedIndex(array,value,true);}/**
	     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 1
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 1
	     */function sortedLastIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee,2),true);}/**
	     * This method is like `_.lastIndexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 3
	     */function sortedLastIndexOf(array,value){var length=array?array.length:0;if(length){var index=baseSortedIndex(array,value,true)-1;if(eq(array[index],value)){return index;}}return-1;}/**
	     * This method is like `_.uniq` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniq([1, 1, 2]);
	     * // => [1, 2]
	     */function sortedUniq(array){return array&&array.length?baseSortedUniq(array):[];}/**
	     * This method is like `_.uniqBy` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
	     * // => [1.1, 2.3]
	     */function sortedUniqBy(array,iteratee){return array&&array.length?baseSortedUniq(array,getIteratee(iteratee,2)):[];}/**
	     * Gets all but the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.tail([1, 2, 3]);
	     * // => [2, 3]
	     */function tail(array){var length=array?array.length:0;return length?baseSlice(array,1,length):[];}/**
	     * Creates a slice of `array` with `n` elements taken from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.take([1, 2, 3]);
	     * // => [1]
	     *
	     * _.take([1, 2, 3], 2);
	     * // => [1, 2]
	     *
	     * _.take([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.take([1, 2, 3], 0);
	     * // => []
	     */function take(array,n,guard){if(!(array&&array.length)){return[];}n=guard||n===undefined?1:toInteger(n);return baseSlice(array,0,n<0?0:n);}/**
	     * Creates a slice of `array` with `n` elements taken from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeRight([1, 2, 3]);
	     * // => [3]
	     *
	     * _.takeRight([1, 2, 3], 2);
	     * // => [2, 3]
	     *
	     * _.takeRight([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.takeRight([1, 2, 3], 0);
	     * // => []
	     */function takeRight(array,n,guard){var length=array?array.length:0;if(!length){return[];}n=guard||n===undefined?1:toInteger(n);n=length-n;return baseSlice(array,n<0?0:n,length);}/**
	     * Creates a slice of `array` with elements taken from the end. Elements are
	     * taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.takeRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeRightWhile(users, ['active', false]);
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeRightWhile(users, 'active');
	     * // => []
	     */function takeRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),false,true):[];}/**
	     * Creates a slice of `array` with elements taken from the beginning. Elements
	     * are taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false},
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.takeWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeWhile(users, ['active', false]);
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeWhile(users, 'active');
	     * // => []
	     */function takeWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3)):[];}/**
	     * Creates an array of unique values, in order, from all given arrays using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.union([2], [1, 2]);
	     * // => [2, 1]
	     */var union=baseRest(function(arrays){return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true));});/**
	     * This method is like `_.union` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which uniqueness is computed. Result values are chosen from the first
	     * array in which the value occurs. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */var unionBy=baseRest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined;}return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),getIteratee(iteratee,2));});/**
	     * This method is like `_.union` except that it accepts `comparator` which
	     * is invoked to compare elements of `arrays`. Result values are chosen from
	     * the first array in which the value occurs. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.unionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */var unionWith=baseRest(function(arrays){var comparator=last(arrays);if(isArrayLikeObject(comparator)){comparator=undefined;}return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),undefined,comparator);});/**
	     * Creates a duplicate-free version of an array, using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons, in which only the first occurrence of each element
	     * is kept. The order of result values is determined by the order they occur
	     * in the array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniq([2, 1, 2]);
	     * // => [2, 1]
	     */function uniq(array){return array&&array.length?baseUniq(array):[];}/**
	     * This method is like `_.uniq` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * uniqueness is computed. The order of result values is determined by the
	     * order they occur in the array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */function uniqBy(array,iteratee){return array&&array.length?baseUniq(array,getIteratee(iteratee,2)):[];}/**
	     * This method is like `_.uniq` except that it accepts `comparator` which
	     * is invoked to compare elements of `array`. The order of result values is
	     * determined by the order they occur in the array.The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.uniqWith(objects, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
	     */function uniqWith(array,comparator){return array&&array.length?baseUniq(array,undefined,comparator):[];}/**
	     * This method is like `_.zip` except that it accepts an array of grouped
	     * elements and creates an array regrouping the elements to their pre-zip
	     * configuration.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.2.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     *
	     * _.unzip(zipped);
	     * // => [['a', 'b'], [1, 2], [true, false]]
	     */function unzip(array){if(!(array&&array.length)){return[];}var length=0;array=arrayFilter(array,function(group){if(isArrayLikeObject(group)){length=nativeMax(group.length,length);return true;}});return baseTimes(length,function(index){return arrayMap(array,baseProperty(index));});}/**
	     * This method is like `_.unzip` except that it accepts `iteratee` to specify
	     * how regrouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  regrouped values.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
	     * // => [[1, 10, 100], [2, 20, 200]]
	     *
	     * _.unzipWith(zipped, _.add);
	     * // => [3, 30, 300]
	     */function unzipWith(array,iteratee){if(!(array&&array.length)){return[];}var result=unzip(array);if(iteratee==null){return result;}return arrayMap(result,function(group){return apply(iteratee,undefined,group);});}/**
	     * Creates an array excluding all given values using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.pull`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...*} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.xor
	     * @example
	     *
	     * _.without([2, 1, 2, 3], 1, 2);
	     * // => [3]
	     */var without=baseRest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,values):[];});/**
	     * Creates an array of unique values that is the
	     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
	     * of the given arrays. The order of result values is determined by the order
	     * they occur in the arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.without
	     * @example
	     *
	     * _.xor([2, 1], [2, 3]);
	     * // => [1, 3]
	     */var xor=baseRest(function(arrays){return baseXor(arrayFilter(arrays,isArrayLikeObject));});/**
	     * This method is like `_.xor` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which by which they're compared. The order of result values is determined
	     * by the order they occur in the arrays. The iteratee is invoked with one
	     * argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2, 3.4]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */var xorBy=baseRest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined;}return baseXor(arrayFilter(arrays,isArrayLikeObject),getIteratee(iteratee,2));});/**
	     * This method is like `_.xor` except that it accepts `comparator` which is
	     * invoked to compare elements of `arrays`. The order of result values is
	     * determined by the order they occur in the arrays. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.xorWith(objects, others, _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */var xorWith=baseRest(function(arrays){var comparator=last(arrays);if(isArrayLikeObject(comparator)){comparator=undefined;}return baseXor(arrayFilter(arrays,isArrayLikeObject),undefined,comparator);});/**
	     * Creates an array of grouped elements, the first of which contains the
	     * first elements of the given arrays, the second of which contains the
	     * second elements of the given arrays, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     */var zip=baseRest(unzip);/**
	     * This method is like `_.fromPairs` except that it accepts two arrays,
	     * one of property identifiers and one of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.4.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObject(['a', 'b'], [1, 2]);
	     * // => { 'a': 1, 'b': 2 }
	     */function zipObject(props,values){return baseZipObject(props||[],values||[],assignValue);}/**
	     * This method is like `_.zipObject` except that it supports property paths.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
	     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
	     */function zipObjectDeep(props,values){return baseZipObject(props||[],values||[],baseSet);}/**
	     * This method is like `_.zip` except that it accepts `iteratee` to specify
	     * how grouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @param {Function} [iteratee=_.identity] The function to combine grouped values.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
	     *   return a + b + c;
	     * });
	     * // => [111, 222]
	     */var zipWith=baseRest(function(arrays){var length=arrays.length,iteratee=length>1?arrays[length-1]:undefined;iteratee=typeof iteratee=='function'?(arrays.pop(),iteratee):undefined;return unzipWith(arrays,iteratee);});/*------------------------------------------------------------------------*//**
	     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
	     * chain sequences enabled. The result of such sequences must be unwrapped
	     * with `_#value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Seq
	     * @param {*} value The value to wrap.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36 },
	     *   { 'user': 'fred',    'age': 40 },
	     *   { 'user': 'pebbles', 'age': 1 }
	     * ];
	     *
	     * var youngest = _
	     *   .chain(users)
	     *   .sortBy('age')
	     *   .map(function(o) {
	     *     return o.user + ' is ' + o.age;
	     *   })
	     *   .head()
	     *   .value();
	     * // => 'pebbles is 1'
	     */function chain(value){var result=lodash(value);result.__chain__=true;return result;}/**
	     * This method invokes `interceptor` and returns `value`. The interceptor
	     * is invoked with one argument; (value). The purpose of this method is to
	     * "tap into" a method chain sequence in order to modify intermediate results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * _([1, 2, 3])
	     *  .tap(function(array) {
	     *    // Mutate input array.
	     *    array.pop();
	     *  })
	     *  .reverse()
	     *  .value();
	     * // => [2, 1]
	     */function tap(value,interceptor){interceptor(value);return value;}/**
	     * This method is like `_.tap` except that it returns the result of `interceptor`.
	     * The purpose of this method is to "pass thru" values replacing intermediate
	     * results in a method chain sequence.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns the result of `interceptor`.
	     * @example
	     *
	     * _('  abc  ')
	     *  .chain()
	     *  .trim()
	     *  .thru(function(value) {
	     *    return [value];
	     *  })
	     *  .value();
	     * // => ['abc']
	     */function thru(value,interceptor){return interceptor(value);}/**
	     * This method is the wrapper version of `_.at`.
	     *
	     * @name at
	     * @memberOf _
	     * @since 1.0.0
	     * @category Seq
	     * @param {...(string|string[])} [paths] The property paths of elements to pick.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _(object).at(['a[0].b.c', 'a[1]']).value();
	     * // => [3, 4]
	     */var wrapperAt=flatRest(function(paths){var length=paths.length,start=length?paths[0]:0,value=this.__wrapped__,interceptor=function interceptor(object){return baseAt(object,paths);};if(length>1||this.__actions__.length||!(value instanceof LazyWrapper)||!isIndex(start)){return this.thru(interceptor);}value=value.slice(start,+start+(length?1:0));value.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined});return new LodashWrapper(value,this.__chain__).thru(function(array){if(length&&!array.length){array.push(undefined);}return array;});});/**
	     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
	     *
	     * @name chain
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * // A sequence without explicit chaining.
	     * _(users).head();
	     * // => { 'user': 'barney', 'age': 36 }
	     *
	     * // A sequence with explicit chaining.
	     * _(users)
	     *   .chain()
	     *   .head()
	     *   .pick('user')
	     *   .value();
	     * // => { 'user': 'barney' }
	     */function wrapperChain(){return chain(this);}/**
	     * Executes the chain sequence and returns the wrapped result.
	     *
	     * @name commit
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2];
	     * var wrapped = _(array).push(3);
	     *
	     * console.log(array);
	     * // => [1, 2]
	     *
	     * wrapped = wrapped.commit();
	     * console.log(array);
	     * // => [1, 2, 3]
	     *
	     * wrapped.last();
	     * // => 3
	     *
	     * console.log(array);
	     * // => [1, 2, 3]
	     */function wrapperCommit(){return new LodashWrapper(this.value(),this.__chain__);}/**
	     * Gets the next value on a wrapped object following the
	     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
	     *
	     * @name next
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the next iterator value.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 1 }
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 2 }
	     *
	     * wrapped.next();
	     * // => { 'done': true, 'value': undefined }
	     */function wrapperNext(){if(this.__values__===undefined){this.__values__=toArray(this.value());}var done=this.__index__>=this.__values__.length,value=done?undefined:this.__values__[this.__index__++];return{'done':done,'value':value};}/**
	     * Enables the wrapper to be iterable.
	     *
	     * @name Symbol.iterator
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the wrapper object.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped[Symbol.iterator]() === wrapped;
	     * // => true
	     *
	     * Array.from(wrapped);
	     * // => [1, 2]
	     */function wrapperToIterator(){return this;}/**
	     * Creates a clone of the chain sequence planting `value` as the wrapped value.
	     *
	     * @name plant
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @param {*} value The value to plant.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2]).map(square);
	     * var other = wrapped.plant([3, 4]);
	     *
	     * other.value();
	     * // => [9, 16]
	     *
	     * wrapped.value();
	     * // => [1, 4]
	     */function wrapperPlant(value){var result,parent=this;while(parent instanceof baseLodash){var clone=wrapperClone(parent);clone.__index__=0;clone.__values__=undefined;if(result){previous.__wrapped__=clone;}else{result=clone;}var previous=clone;parent=parent.__wrapped__;}previous.__wrapped__=value;return result;}/**
	     * This method is the wrapper version of `_.reverse`.
	     *
	     * **Note:** This method mutates the wrapped array.
	     *
	     * @name reverse
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _(array).reverse().value()
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */function wrapperReverse(){var value=this.__wrapped__;if(value instanceof LazyWrapper){var wrapped=value;if(this.__actions__.length){wrapped=new LazyWrapper(this);}wrapped=wrapped.reverse();wrapped.__actions__.push({'func':thru,'args':[reverse],'thisArg':undefined});return new LodashWrapper(wrapped,this.__chain__);}return this.thru(reverse);}/**
	     * Executes the chain sequence to resolve the unwrapped value.
	     *
	     * @name value
	     * @memberOf _
	     * @since 0.1.0
	     * @alias toJSON, valueOf
	     * @category Seq
	     * @returns {*} Returns the resolved unwrapped value.
	     * @example
	     *
	     * _([1, 2, 3]).value();
	     * // => [1, 2, 3]
	     */function wrapperValue(){return baseWrapperValue(this.__wrapped__,this.__actions__);}/*------------------------------------------------------------------------*//**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the number of times the key was returned by `iteratee`. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.countBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': 1, '6': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.countBy(['one', 'two', 'three'], 'length');
	     * // => { '3': 2, '5': 1 }
	     */var countBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){++result[key];}else{baseAssignValue(result,key,1);}});/**
	     * Checks if `predicate` returns truthy for **all** elements of `collection`.
	     * Iteration is stopped once `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * **Note:** This method returns `true` for
	     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
	     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
	     * elements of empty collections.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.every([true, 1, null, 'yes'], Boolean);
	     * // => false
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.every(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.every(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.every(users, 'active');
	     * // => false
	     */function every(collection,predicate,guard){var func=isArray(collection)?arrayEvery:baseEvery;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined;}return func(collection,getIteratee(predicate,3));}/**
	     * Iterates over elements of `collection`, returning an array of all elements
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * **Note:** Unlike `_.remove`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.reject
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, { 'age': 36, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.filter(users, 'active');
	     * // => objects for ['barney']
	     */function filter(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,getIteratee(predicate,3));}/**
	     * Iterates over elements of `collection`, returning the first element
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': true },
	     *   { 'user': 'fred',    'age': 40, 'active': false },
	     *   { 'user': 'pebbles', 'age': 1,  'active': true }
	     * ];
	     *
	     * _.find(users, function(o) { return o.age < 40; });
	     * // => object for 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.find(users, { 'age': 1, 'active': true });
	     * // => object for 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.find(users, ['active', false]);
	     * // => object for 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.find(users, 'active');
	     * // => object for 'barney'
	     */var find=createFind(findIndex);/**
	     * This method is like `_.find` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param {number} [fromIndex=collection.length-1] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * _.findLast([1, 2, 3, 4], function(n) {
	     *   return n % 2 == 1;
	     * });
	     * // => 3
	     */var findLast=createFind(findLastIndex);/**
	     * Creates a flattened array of values by running each element in `collection`
	     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
	     * with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [n, n];
	     * }
	     *
	     * _.flatMap([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */function flatMap(collection,iteratee){return baseFlatten(map(collection,iteratee),1);}/**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDeep([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */function flatMapDeep(collection,iteratee){return baseFlatten(map(collection,iteratee),INFINITY);}/**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDepth([1, 2], duplicate, 2);
	     * // => [[1, 1], [2, 2]]
	     */function flatMapDepth(collection,iteratee,depth){depth=depth===undefined?1:toInteger(depth);return baseFlatten(map(collection,iteratee),depth);}/**
	     * Iterates over elements of `collection` and invokes `iteratee` for each element.
	     * The iteratee is invoked with three arguments: (value, index|key, collection).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * **Note:** As with other "Collections" methods, objects with a "length"
	     * property are iterated like arrays. To avoid this behavior use `_.forIn`
	     * or `_.forOwn` for object iteration.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias each
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEachRight
	     * @example
	     *
	     * _.forEach([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `1` then `2`.
	     *
	     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */function forEach(collection,iteratee){var func=isArray(collection)?arrayEach:baseEach;return func(collection,getIteratee(iteratee,3));}/**
	     * This method is like `_.forEach` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @alias eachRight
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEach
	     * @example
	     *
	     * _.forEachRight([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `2` then `1`.
	     */function forEachRight(collection,iteratee){var func=isArray(collection)?arrayEachRight:baseEachRight;return func(collection,getIteratee(iteratee,3));}/**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The order of grouped values
	     * is determined by the order they occur in `collection`. The corresponding
	     * value of each key is an array of elements responsible for generating the
	     * key. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': [4.2], '6': [6.1, 6.3] }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.groupBy(['one', 'two', 'three'], 'length');
	     * // => { '3': ['one', 'two'], '5': ['three'] }
	     */var groupBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){result[key].push(value);}else{baseAssignValue(result,key,[value]);}});/**
	     * Checks if `value` is in `collection`. If `collection` is a string, it's
	     * checked for a substring of `value`, otherwise
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * is used for equality comparisons. If `fromIndex` is negative, it's used as
	     * the offset from the end of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {boolean} Returns `true` if `value` is found, else `false`.
	     * @example
	     *
	     * _.includes([1, 2, 3], 1);
	     * // => true
	     *
	     * _.includes([1, 2, 3], 1, 2);
	     * // => false
	     *
	     * _.includes({ 'a': 1, 'b': 2 }, 1);
	     * // => true
	     *
	     * _.includes('abcd', 'bc');
	     * // => true
	     */function includes(collection,value,fromIndex,guard){collection=isArrayLike(collection)?collection:values(collection);fromIndex=fromIndex&&!guard?toInteger(fromIndex):0;var length=collection.length;if(fromIndex<0){fromIndex=nativeMax(length+fromIndex,0);}return isString(collection)?fromIndex<=length&&collection.indexOf(value,fromIndex)>-1:!!length&&baseIndexOf(collection,value,fromIndex)>-1;}/**
	     * Invokes the method at `path` of each element in `collection`, returning
	     * an array of the results of each invoked method. Any additional arguments
	     * are provided to each invoked method. If `path` is a function, it's invoked
	     * for, and `this` bound to, each element in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|string} path The path of the method to invoke or
	     *  the function invoked per iteration.
	     * @param {...*} [args] The arguments to invoke each method with.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
	     * // => [[1, 5, 7], [1, 2, 3]]
	     *
	     * _.invokeMap([123, 456], String.prototype.split, '');
	     * // => [['1', '2', '3'], ['4', '5', '6']]
	     */var invokeMap=baseRest(function(collection,path,args){var index=-1,isFunc=typeof path=='function',isProp=isKey(path),result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value){var func=isFunc?path:isProp&&value!=null?value[path]:undefined;result[++index]=func?apply(func,value,args):baseInvoke(value,path,args);});return result;});/**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the last element responsible for generating the key. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * var array = [
	     *   { 'dir': 'left', 'code': 97 },
	     *   { 'dir': 'right', 'code': 100 }
	     * ];
	     *
	     * _.keyBy(array, function(o) {
	     *   return String.fromCharCode(o.code);
	     * });
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.keyBy(array, 'dir');
	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	     */var keyBy=createAggregator(function(result,value,key){baseAssignValue(result,key,value);});/**
	     * Creates an array of values by running each element in `collection` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	     *
	     * The guarded methods are:
	     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * _.map([4, 8], square);
	     * // => [16, 64]
	     *
	     * _.map({ 'a': 4, 'b': 8 }, square);
	     * // => [16, 64] (iteration order is not guaranteed)
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, 'user');
	     * // => ['barney', 'fred']
	     */function map(collection,iteratee){var func=isArray(collection)?arrayMap:baseMap;return func(collection,getIteratee(iteratee,3));}/**
	     * This method is like `_.sortBy` except that it allows specifying the sort
	     * orders of the iteratees to sort by. If `orders` is unspecified, all values
	     * are sorted in ascending order. Otherwise, specify an order of "desc" for
	     * descending or "asc" for ascending sort order of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @param {string[]} [orders] The sort orders of `iteratees`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 34 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 36 }
	     * ];
	     *
	     * // Sort by `user` in ascending order and by `age` in descending order.
	     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */function orderBy(collection,iteratees,orders,guard){if(collection==null){return[];}if(!isArray(iteratees)){iteratees=iteratees==null?[]:[iteratees];}orders=guard?undefined:orders;if(!isArray(orders)){orders=orders==null?[]:[orders];}return baseOrderBy(collection,iteratees,orders);}/**
	     * Creates an array of elements split into two groups, the first of which
	     * contains elements `predicate` returns truthy for, the second of which
	     * contains elements `predicate` returns falsey for. The predicate is
	     * invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of grouped elements.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': false },
	     *   { 'user': 'fred',    'age': 40, 'active': true },
	     *   { 'user': 'pebbles', 'age': 1,  'active': false }
	     * ];
	     *
	     * _.partition(users, function(o) { return o.active; });
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.partition(users, { 'age': 1, 'active': false });
	     * // => objects for [['pebbles'], ['barney', 'fred']]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.partition(users, ['active', false]);
	     * // => objects for [['barney', 'pebbles'], ['fred']]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.partition(users, 'active');
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     */var partition=createAggregator(function(result,value,key){result[key?0:1].push(value);},function(){return[[],[]];});/**
	     * Reduces `collection` to a value which is the accumulated result of running
	     * each element in `collection` thru `iteratee`, where each successive
	     * invocation is supplied the return value of the previous. If `accumulator`
	     * is not given, the first element of `collection` is used as the initial
	     * value. The iteratee is invoked with four arguments:
	     * (accumulator, value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.reduce`, `_.reduceRight`, and `_.transform`.
	     *
	     * The guarded methods are:
	     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	     * and `sortBy`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduceRight
	     * @example
	     *
	     * _.reduce([1, 2], function(sum, n) {
	     *   return sum + n;
	     * }, 0);
	     * // => 3
	     *
	     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     *   return result;
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	     */function reduce(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduce:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEach);}/**
	     * This method is like `_.reduce` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduce
	     * @example
	     *
	     * var array = [[0, 1], [2, 3], [4, 5]];
	     *
	     * _.reduceRight(array, function(flattened, other) {
	     *   return flattened.concat(other);
	     * }, []);
	     * // => [4, 5, 2, 3, 0, 1]
	     */function reduceRight(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduceRight:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEachRight);}/**
	     * The opposite of `_.filter`; this method returns the elements of `collection`
	     * that `predicate` does **not** return truthy for.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.filter
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': true }
	     * ];
	     *
	     * _.reject(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.reject(users, { 'age': 40, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.reject(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.reject(users, 'active');
	     * // => objects for ['barney']
	     */function reject(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,negate(getIteratee(predicate,3)));}/**
	     * Gets a random element from `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     * @example
	     *
	     * _.sample([1, 2, 3, 4]);
	     * // => 2
	     */function sample(collection){var func=isArray(collection)?arraySample:baseSample;return func(collection);}/**
	     * Gets `n` random elements at unique keys from `collection` up to the
	     * size of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} [n=1] The number of elements to sample.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the random elements.
	     * @example
	     *
	     * _.sampleSize([1, 2, 3], 2);
	     * // => [3, 1]
	     *
	     * _.sampleSize([1, 2, 3], 4);
	     * // => [2, 3, 1]
	     */function sampleSize(collection,n,guard){if(guard?isIterateeCall(collection,n,guard):n===undefined){n=1;}else{n=toInteger(n);}var func=isArray(collection)?arraySampleSize:baseSampleSize;return func(collection,n);}/**
	     * Creates an array of shuffled values, using a version of the
	     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     * @example
	     *
	     * _.shuffle([1, 2, 3, 4]);
	     * // => [4, 1, 3, 2]
	     */function shuffle(collection){var func=isArray(collection)?arrayShuffle:baseShuffle;return func(collection);}/**
	     * Gets the size of `collection` by returning its length for array-like
	     * values or the number of own enumerable string keyed properties for objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @returns {number} Returns the collection size.
	     * @example
	     *
	     * _.size([1, 2, 3]);
	     * // => 3
	     *
	     * _.size({ 'a': 1, 'b': 2 });
	     * // => 2
	     *
	     * _.size('pebbles');
	     * // => 7
	     */function size(collection){if(collection==null){return 0;}if(isArrayLike(collection)){return isString(collection)?stringSize(collection):collection.length;}var tag=getTag(collection);if(tag==mapTag||tag==setTag){return collection.size;}return baseKeys(collection).length;}/**
	     * Checks if `predicate` returns truthy for **any** element of `collection`.
	     * Iteration is stopped once `predicate` returns truthy. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.some([null, 0, 'yes', false], Boolean);
	     * // => true
	     *
	     * var users = [
	     *   { 'user': 'barney', 'active': true },
	     *   { 'user': 'fred',   'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.some(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.some(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.some(users, 'active');
	     * // => true
	     */function some(collection,predicate,guard){var func=isArray(collection)?arraySome:baseSome;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined;}return func(collection,getIteratee(predicate,3));}/**
	     * Creates an array of elements, sorted in ascending order by the results of
	     * running each element in a collection thru each iteratee. This method
	     * performs a stable sort, that is, it preserves the original sort order of
	     * equal elements. The iteratees are invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 34 }
	     * ];
	     *
	     * _.sortBy(users, [function(o) { return o.user; }]);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     *
	     * _.sortBy(users, ['user', 'age']);
	     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	     */var sortBy=baseRest(function(collection,iteratees){if(collection==null){return[];}var length=iteratees.length;if(length>1&&isIterateeCall(collection,iteratees[0],iteratees[1])){iteratees=[];}else if(length>2&&isIterateeCall(iteratees[0],iteratees[1],iteratees[2])){iteratees=[iteratees[0]];}return baseOrderBy(collection,baseFlatten(iteratees,1),[]);});/*------------------------------------------------------------------------*//**
	     * Gets the timestamp of the number of milliseconds that have elapsed since
	     * the Unix epoch (1 January 1970 00:00:00 UTC).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Date
	     * @returns {number} Returns the timestamp.
	     * @example
	     *
	     * _.defer(function(stamp) {
	     *   console.log(_.now() - stamp);
	     * }, _.now());
	     * // => Logs the number of milliseconds it took for the deferred invocation.
	     */var now=ctxNow||function(){return root.Date.now();};/*------------------------------------------------------------------------*//**
	     * The opposite of `_.before`; this method creates a function that invokes
	     * `func` once it's called `n` or more times.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {number} n The number of calls before `func` is invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var saves = ['profile', 'settings'];
	     *
	     * var done = _.after(saves.length, function() {
	     *   console.log('done saving!');
	     * });
	     *
	     * _.forEach(saves, function(type) {
	     *   asyncSave({ 'type': type, 'complete': done });
	     * });
	     * // => Logs 'done saving!' after the two async saves have completed.
	     */function after(n,func){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n<1){return func.apply(this,arguments);}};}/**
	     * Creates a function that invokes `func`, with up to `n` arguments,
	     * ignoring any additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @param {number} [n=func.length] The arity cap.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	     * // => [6, 8, 10]
	     */function ary(func,n,guard){n=guard?undefined:n;n=func&&n==null?func.length:n;return createWrap(func,ARY_FLAG,undefined,undefined,undefined,undefined,n);}/**
	     * Creates a function that invokes `func`, with the `this` binding and arguments
	     * of the created function, while it's called less than `n` times. Subsequent
	     * calls to the created function return the result of the last `func` invocation.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {number} n The number of calls at which `func` is no longer invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * jQuery(element).on('click', _.before(5, addContactToList));
	     * // => Allows adding up to 4 contacts to the list.
	     */function before(n,func){var result;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n>0){result=func.apply(this,arguments);}if(n<=1){func=undefined;}return result;};}/**
	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
	     * and `partials` prepended to the arguments it receives.
	     *
	     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
	     * property of bound functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to bind.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * function greet(greeting, punctuation) {
	     *   return greeting + ' ' + this.user + punctuation;
	     * }
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * var bound = _.bind(greet, object, 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bind(greet, object, _, '!');
	     * bound('hi');
	     * // => 'hi fred!'
	     */var bind=baseRest(function(func,thisArg,partials){var bitmask=BIND_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bind));bitmask|=PARTIAL_FLAG;}return createWrap(func,bitmask,thisArg,partials,holders);});/**
	     * Creates a function that invokes the method at `object[key]` with `partials`
	     * prepended to the arguments it receives.
	     *
	     * This method differs from `_.bind` by allowing bound functions to reference
	     * methods that may be redefined or don't yet exist. See
	     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
	     * for more details.
	     *
	     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Function
	     * @param {Object} object The object to invoke the method on.
	     * @param {string} key The key of the method.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var object = {
	     *   'user': 'fred',
	     *   'greet': function(greeting, punctuation) {
	     *     return greeting + ' ' + this.user + punctuation;
	     *   }
	     * };
	     *
	     * var bound = _.bindKey(object, 'greet', 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * object.greet = function(greeting, punctuation) {
	     *   return greeting + 'ya ' + this.user + punctuation;
	     * };
	     *
	     * bound('!');
	     * // => 'hiya fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bindKey(object, 'greet', _, '!');
	     * bound('hi');
	     * // => 'hiya fred!'
	     */var bindKey=baseRest(function(object,key,partials){var bitmask=BIND_FLAG|BIND_KEY_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bindKey));bitmask|=PARTIAL_FLAG;}return createWrap(key,bitmask,object,partials,holders);});/**
	     * Creates a function that accepts arguments of `func` and either invokes
	     * `func` returning its result, if at least `arity` number of arguments have
	     * been provided, or returns a function that accepts the remaining `func`
	     * arguments, and so on. The arity of `func` may be specified if `func.length`
	     * is not sufficient.
	     *
	     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curry(abc);
	     *
	     * curried(1)(2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(1)(_, 3)(2);
	     * // => [1, 2, 3]
	     */function curry(func,arity,guard){arity=guard?undefined:arity;var result=createWrap(func,CURRY_FLAG,undefined,undefined,undefined,undefined,undefined,arity);result.placeholder=curry.placeholder;return result;}/**
	     * This method is like `_.curry` except that arguments are applied to `func`
	     * in the manner of `_.partialRight` instead of `_.partial`.
	     *
	     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curryRight(abc);
	     *
	     * curried(3)(2)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(2, 3)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(3)(1, _)(2);
	     * // => [1, 2, 3]
	     */function curryRight(func,arity,guard){arity=guard?undefined:arity;var result=createWrap(func,CURRY_RIGHT_FLAG,undefined,undefined,undefined,undefined,undefined,arity);result.placeholder=curryRight.placeholder;return result;}/**
	     * Creates a debounced function that delays invoking `func` until after `wait`
	     * milliseconds have elapsed since the last time the debounced function was
	     * invoked. The debounced function comes with a `cancel` method to cancel
	     * delayed `func` invocations and a `flush` method to immediately invoke them.
	     * Provide `options` to indicate whether `func` should be invoked on the
	     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	     * with the last arguments provided to the debounced function. Subsequent
	     * calls to the debounced function return the result of the last `func`
	     * invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the debounced function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.debounce` and `_.throttle`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to debounce.
	     * @param {number} [wait=0] The number of milliseconds to delay.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=false]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {number} [options.maxWait]
	     *  The maximum time `func` is allowed to be delayed before it's invoked.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new debounced function.
	     * @example
	     *
	     * // Avoid costly calculations while the window size is in flux.
	     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	     *
	     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	     * jQuery(element).on('click', _.debounce(sendMail, 300, {
	     *   'leading': true,
	     *   'trailing': false
	     * }));
	     *
	     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	     * var source = new EventSource('/stream');
	     * jQuery(source).on('message', debounced);
	     *
	     * // Cancel the trailing debounced invocation.
	     * jQuery(window).on('popstate', debounced.cancel);
	     */function debounce(func,wait,options){var lastArgs,lastThis,maxWait,result,timerId,lastCallTime,lastInvokeTime=0,leading=false,maxing=false,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}wait=toNumber(wait)||0;if(isObject(options)){leading=!!options.leading;maxing='maxWait'in options;maxWait=maxing?nativeMax(toNumber(options.maxWait)||0,wait):maxWait;trailing='trailing'in options?!!options.trailing:trailing;}function invokeFunc(time){var args=lastArgs,thisArg=lastThis;lastArgs=lastThis=undefined;lastInvokeTime=time;result=func.apply(thisArg,args);return result;}function leadingEdge(time){// Reset any `maxWait` timer.
	lastInvokeTime=time;// Start the timer for the trailing edge.
	timerId=setTimeout(timerExpired,wait);// Invoke the leading edge.
	return leading?invokeFunc(time):result;}function remainingWait(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime,result=wait-timeSinceLastCall;return maxing?nativeMin(result,maxWait-timeSinceLastInvoke):result;}function shouldInvoke(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime;// Either this is the first call, activity has stopped and we're at the
	// trailing edge, the system time has gone backwards and we're treating
	// it as the trailing edge, or we've hit the `maxWait` limit.
	return lastCallTime===undefined||timeSinceLastCall>=wait||timeSinceLastCall<0||maxing&&timeSinceLastInvoke>=maxWait;}function timerExpired(){var time=now();if(shouldInvoke(time)){return trailingEdge(time);}// Restart the timer.
	timerId=setTimeout(timerExpired,remainingWait(time));}function trailingEdge(time){timerId=undefined;// Only invoke if we have `lastArgs` which means `func` has been
	// debounced at least once.
	if(trailing&&lastArgs){return invokeFunc(time);}lastArgs=lastThis=undefined;return result;}function cancel(){if(timerId!==undefined){clearTimeout(timerId);}lastInvokeTime=0;lastArgs=lastCallTime=lastThis=timerId=undefined;}function flush(){return timerId===undefined?result:trailingEdge(now());}function debounced(){var time=now(),isInvoking=shouldInvoke(time);lastArgs=arguments;lastThis=this;lastCallTime=time;if(isInvoking){if(timerId===undefined){return leadingEdge(lastCallTime);}if(maxing){// Handle invocations in a tight loop.
	timerId=setTimeout(timerExpired,wait);return invokeFunc(lastCallTime);}}if(timerId===undefined){timerId=setTimeout(timerExpired,wait);}return result;}debounced.cancel=cancel;debounced.flush=flush;return debounced;}/**
	     * Defers invoking the `func` until the current call stack has cleared. Any
	     * additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to defer.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.defer(function(text) {
	     *   console.log(text);
	     * }, 'deferred');
	     * // => Logs 'deferred' after one millisecond.
	     */var defer=baseRest(function(func,args){return baseDelay(func,1,args);});/**
	     * Invokes `func` after `wait` milliseconds. Any additional arguments are
	     * provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.delay(function(text) {
	     *   console.log(text);
	     * }, 1000, 'later');
	     * // => Logs 'later' after one second.
	     */var delay=baseRest(function(func,wait,args){return baseDelay(func,toNumber(wait)||0,args);});/**
	     * Creates a function that invokes `func` with arguments reversed.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to flip arguments for.
	     * @returns {Function} Returns the new flipped function.
	     * @example
	     *
	     * var flipped = _.flip(function() {
	     *   return _.toArray(arguments);
	     * });
	     *
	     * flipped('a', 'b', 'c', 'd');
	     * // => ['d', 'c', 'b', 'a']
	     */function flip(func){return createWrap(func,FLIP_FLAG);}/**
	     * Creates a function that memoizes the result of `func`. If `resolver` is
	     * provided, it determines the cache key for storing the result based on the
	     * arguments provided to the memoized function. By default, the first argument
	     * provided to the memoized function is used as the map cache key. The `func`
	     * is invoked with the `this` binding of the memoized function.
	     *
	     * **Note:** The cache is exposed as the `cache` property on the memoized
	     * function. Its creation may be customized by replacing the `_.memoize.Cache`
	     * constructor with one whose instances implement the
	     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	     * method interface of `delete`, `get`, `has`, and `set`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to have its output memoized.
	     * @param {Function} [resolver] The function to resolve the cache key.
	     * @returns {Function} Returns the new memoized function.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     * var other = { 'c': 3, 'd': 4 };
	     *
	     * var values = _.memoize(_.values);
	     * values(object);
	     * // => [1, 2]
	     *
	     * values(other);
	     * // => [3, 4]
	     *
	     * object.a = 2;
	     * values(object);
	     * // => [1, 2]
	     *
	     * // Modify the result cache.
	     * values.cache.set(object, ['a', 'b']);
	     * values(object);
	     * // => ['a', 'b']
	     *
	     * // Replace `_.memoize.Cache`.
	     * _.memoize.Cache = WeakMap;
	     */function memoize(func,resolver){if(typeof func!='function'||resolver&&typeof resolver!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var memoized=function memoized(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key)){return cache.get(key);}var result=func.apply(this,args);memoized.cache=cache.set(key,result)||cache;return result;};memoized.cache=new(memoize.Cache||MapCache)();return memoized;}// Expose `MapCache`.
	memoize.Cache=MapCache;/**
	     * Creates a function that negates the result of the predicate `func`. The
	     * `func` predicate is invoked with the `this` binding and arguments of the
	     * created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} predicate The predicate to negate.
	     * @returns {Function} Returns the new negated function.
	     * @example
	     *
	     * function isEven(n) {
	     *   return n % 2 == 0;
	     * }
	     *
	     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
	     * // => [1, 3, 5]
	     */function negate(predicate){if(typeof predicate!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return function(){var args=arguments;switch(args.length){case 0:return!predicate.call(this);case 1:return!predicate.call(this,args[0]);case 2:return!predicate.call(this,args[0],args[1]);case 3:return!predicate.call(this,args[0],args[1],args[2]);}return!predicate.apply(this,args);};}/**
	     * Creates a function that is restricted to invoking `func` once. Repeat calls
	     * to the function return the value of the first invocation. The `func` is
	     * invoked with the `this` binding and arguments of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // => `createApplication` is invoked once
	     */function once(func){return before(2,func);}/**
	     * Creates a function that invokes `func` with its arguments transformed.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to wrap.
	     * @param {...(Function|Function[])} [transforms=[_.identity]]
	     *  The argument transforms.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function doubled(n) {
	     *   return n * 2;
	     * }
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var func = _.overArgs(function(x, y) {
	     *   return [x, y];
	     * }, [square, doubled]);
	     *
	     * func(9, 3);
	     * // => [81, 6]
	     *
	     * func(10, 5);
	     * // => [100, 10]
	     */var overArgs=castRest(function(func,transforms){transforms=transforms.length==1&&isArray(transforms[0])?arrayMap(transforms[0],baseUnary(getIteratee())):arrayMap(baseFlatten(transforms,1),baseUnary(getIteratee()));var funcsLength=transforms.length;return baseRest(function(args){var index=-1,length=nativeMin(args.length,funcsLength);while(++index<length){args[index]=transforms[index].call(this,args[index]);}return apply(func,this,args);});});/**
	     * Creates a function that invokes `func` with `partials` prepended to the
	     * arguments it receives. This method is like `_.bind` except it does **not**
	     * alter the `this` binding.
	     *
	     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.2.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var sayHelloTo = _.partial(greet, 'hello');
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     *
	     * // Partially applied with placeholders.
	     * var greetFred = _.partial(greet, _, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     */var partial=baseRest(function(func,partials){var holders=replaceHolders(partials,getHolder(partial));return createWrap(func,PARTIAL_FLAG,undefined,partials,holders);});/**
	     * This method is like `_.partial` except that partially applied arguments
	     * are appended to the arguments it receives.
	     *
	     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var greetFred = _.partialRight(greet, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     *
	     * // Partially applied with placeholders.
	     * var sayHelloTo = _.partialRight(greet, 'hello', _);
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     */var partialRight=baseRest(function(func,partials){var holders=replaceHolders(partials,getHolder(partialRight));return createWrap(func,PARTIAL_RIGHT_FLAG,undefined,partials,holders);});/**
	     * Creates a function that invokes `func` with arguments arranged according
	     * to the specified `indexes` where the argument value at the first index is
	     * provided as the first argument, the argument value at the second index is
	     * provided as the second argument, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to rearrange arguments for.
	     * @param {...(number|number[])} indexes The arranged argument indexes.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var rearged = _.rearg(function(a, b, c) {
	     *   return [a, b, c];
	     * }, [2, 0, 1]);
	     *
	     * rearged('b', 'c', 'a')
	     * // => ['a', 'b', 'c']
	     */var rearg=flatRest(function(func,indexes){return createWrap(func,REARG_FLAG,undefined,undefined,undefined,indexes);});/**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * created function and arguments from `start` and beyond provided as
	     * an array.
	     *
	     * **Note:** This method is based on the
	     * [rest parameter](https://mdn.io/rest_parameters).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.rest(function(what, names) {
	     *   return what + ' ' + _.initial(names).join(', ') +
	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	     * });
	     *
	     * say('hello', 'fred', 'barney', 'pebbles');
	     * // => 'hello fred, barney, & pebbles'
	     */function rest(func,start){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start===undefined?start:toInteger(start);return baseRest(func,start);}/**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * create function and an array of arguments much like
	     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
	     *
	     * **Note:** This method is based on the
	     * [spread operator](https://mdn.io/spread_operator).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Function
	     * @param {Function} func The function to spread arguments over.
	     * @param {number} [start=0] The start position of the spread.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.spread(function(who, what) {
	     *   return who + ' says ' + what;
	     * });
	     *
	     * say(['fred', 'hello']);
	     * // => 'fred says hello'
	     *
	     * var numbers = Promise.all([
	     *   Promise.resolve(40),
	     *   Promise.resolve(36)
	     * ]);
	     *
	     * numbers.then(_.spread(function(x, y) {
	     *   return x + y;
	     * }));
	     * // => a Promise of 76
	     */function spread(func,start){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start===undefined?0:nativeMax(toInteger(start),0);return baseRest(function(args){var array=args[start],otherArgs=castSlice(args,0,start);if(array){arrayPush(otherArgs,array);}return apply(func,this,otherArgs);});}/**
	     * Creates a throttled function that only invokes `func` at most once per
	     * every `wait` milliseconds. The throttled function comes with a `cancel`
	     * method to cancel delayed `func` invocations and a `flush` method to
	     * immediately invoke them. Provide `options` to indicate whether `func`
	     * should be invoked on the leading and/or trailing edge of the `wait`
	     * timeout. The `func` is invoked with the last arguments provided to the
	     * throttled function. Subsequent calls to the throttled function return the
	     * result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the throttled function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.throttle` and `_.debounce`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to throttle.
	     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=true]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new throttled function.
	     * @example
	     *
	     * // Avoid excessively updating the position while scrolling.
	     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	     *
	     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	     * jQuery(element).on('click', throttled);
	     *
	     * // Cancel the trailing throttled invocation.
	     * jQuery(window).on('popstate', throttled.cancel);
	     */function throttle(func,wait,options){var leading=true,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(isObject(options)){leading='leading'in options?!!options.leading:leading;trailing='trailing'in options?!!options.trailing:trailing;}return debounce(func,wait,{'leading':leading,'maxWait':wait,'trailing':trailing});}/**
	     * Creates a function that accepts up to one argument, ignoring any
	     * additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.unary(parseInt));
	     * // => [6, 8, 10]
	     */function unary(func){return ary(func,1);}/**
	     * Creates a function that provides `value` to `wrapper` as its first
	     * argument. Any additional arguments provided to the function are appended
	     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
	     * binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {*} value The value to wrap.
	     * @param {Function} [wrapper=identity] The wrapper function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var p = _.wrap(_.escape, function(func, text) {
	     *   return '<p>' + func(text) + '</p>';
	     * });
	     *
	     * p('fred, barney, & pebbles');
	     * // => '<p>fred, barney, &amp; pebbles</p>'
	     */function wrap(value,wrapper){wrapper=wrapper==null?identity:wrapper;return partial(wrapper,value);}/*------------------------------------------------------------------------*//**
	     * Casts `value` as an array if it's not one.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Lang
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast array.
	     * @example
	     *
	     * _.castArray(1);
	     * // => [1]
	     *
	     * _.castArray({ 'a': 1 });
	     * // => [{ 'a': 1 }]
	     *
	     * _.castArray('abc');
	     * // => ['abc']
	     *
	     * _.castArray(null);
	     * // => [null]
	     *
	     * _.castArray(undefined);
	     * // => [undefined]
	     *
	     * _.castArray();
	     * // => []
	     *
	     * var array = [1, 2, 3];
	     * console.log(_.castArray(array) === array);
	     * // => true
	     */function castArray(){if(!arguments.length){return[];}var value=arguments[0];return isArray(value)?value:[value];}/**
	     * Creates a shallow clone of `value`.
	     *
	     * **Note:** This method is loosely based on the
	     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	     * and supports cloning arrays, array buffers, booleans, date objects, maps,
	     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	     * arrays. The own enumerable properties of `arguments` objects are cloned
	     * as plain objects. An empty object is returned for uncloneable values such
	     * as error objects, functions, DOM nodes, and WeakMaps.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeep
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var shallow = _.clone(objects);
	     * console.log(shallow[0] === objects[0]);
	     * // => true
	     */function clone(value){return baseClone(value,false,true);}/**
	     * This method is like `_.clone` except that it accepts `customizer` which
	     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
	     * cloning is handled by the method instead. The `customizer` is invoked with
	     * up to four arguments; (value [, index|key, object, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeepWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(false);
	     *   }
	     * }
	     *
	     * var el = _.cloneWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 0
	     */function cloneWith(value,customizer){return baseClone(value,false,true,customizer);}/**
	     * This method is like `_.clone` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.clone
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var deep = _.cloneDeep(objects);
	     * console.log(deep[0] === objects[0]);
	     * // => false
	     */function cloneDeep(value){return baseClone(value,true,true);}/**
	     * This method is like `_.cloneWith` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.cloneWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(true);
	     *   }
	     * }
	     *
	     * var el = _.cloneDeepWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 20
	     */function cloneDeepWith(value,customizer){return baseClone(value,true,true,customizer);}/**
	     * Checks if `object` conforms to `source` by invoking the predicate
	     * properties of `source` with the corresponding property values of `object`.
	     *
	     * **Note:** This method is equivalent to `_.conforms` when `source` is
	     * partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
	     * // => true
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
	     * // => false
	     */function conformsTo(object,source){return source==null||baseConformsTo(object,source,keys(source));}/**
	     * Performs a
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * comparison between two values to determine if they are equivalent.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.eq(object, object);
	     * // => true
	     *
	     * _.eq(object, other);
	     * // => false
	     *
	     * _.eq('a', 'a');
	     * // => true
	     *
	     * _.eq('a', Object('a'));
	     * // => false
	     *
	     * _.eq(NaN, NaN);
	     * // => true
	     */function eq(value,other){return value===other||value!==value&&other!==other;}/**
	     * Checks if `value` is greater than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     * @see _.lt
	     * @example
	     *
	     * _.gt(3, 1);
	     * // => true
	     *
	     * _.gt(3, 3);
	     * // => false
	     *
	     * _.gt(1, 3);
	     * // => false
	     */var gt=createRelationalOperation(baseGt);/**
	     * Checks if `value` is greater than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than or equal to
	     *  `other`, else `false`.
	     * @see _.lte
	     * @example
	     *
	     * _.gte(3, 1);
	     * // => true
	     *
	     * _.gte(3, 3);
	     * // => true
	     *
	     * _.gte(1, 3);
	     * // => false
	     */var gte=createRelationalOperation(function(value,other){return value>=other;});/**
	     * Checks if `value` is likely an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArguments(function() { return arguments; }());
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */function isArguments(value){// Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	return isArrayLikeObject(value)&&hasOwnProperty.call(value,'callee')&&(!propertyIsEnumerable.call(value,'callee')||objectToString.call(value)==argsTag);}/**
	     * Checks if `value` is classified as an `Array` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	     * @example
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     *
	     * _.isArray(document.body.children);
	     * // => false
	     *
	     * _.isArray('abc');
	     * // => false
	     *
	     * _.isArray(_.noop);
	     * // => false
	     */var isArray=Array.isArray;/**
	     * Checks if `value` is classified as an `ArrayBuffer` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     * @example
	     *
	     * _.isArrayBuffer(new ArrayBuffer(2));
	     * // => true
	     *
	     * _.isArrayBuffer(new Array(2));
	     * // => false
	     */var isArrayBuffer=nodeIsArrayBuffer?baseUnary(nodeIsArrayBuffer):baseIsArrayBuffer;/**
	     * Checks if `value` is array-like. A value is considered array-like if it's
	     * not a function and has a `value.length` that's an integer greater than or
	     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	     * @example
	     *
	     * _.isArrayLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLike(document.body.children);
	     * // => true
	     *
	     * _.isArrayLike('abc');
	     * // => true
	     *
	     * _.isArrayLike(_.noop);
	     * // => false
	     */function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction(value);}/**
	     * This method is like `_.isArrayLike` except that it also checks if `value`
	     * is an object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array-like object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayLikeObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLikeObject(document.body.children);
	     * // => true
	     *
	     * _.isArrayLikeObject('abc');
	     * // => false
	     *
	     * _.isArrayLikeObject(_.noop);
	     * // => false
	     */function isArrayLikeObject(value){return isObjectLike(value)&&isArrayLike(value);}/**
	     * Checks if `value` is classified as a boolean primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
	     * @example
	     *
	     * _.isBoolean(false);
	     * // => true
	     *
	     * _.isBoolean(null);
	     * // => false
	     */function isBoolean(value){return value===true||value===false||isObjectLike(value)&&objectToString.call(value)==boolTag;}/**
	     * Checks if `value` is a buffer.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	     * @example
	     *
	     * _.isBuffer(new Buffer(2));
	     * // => true
	     *
	     * _.isBuffer(new Uint8Array(2));
	     * // => false
	     */var isBuffer=nativeIsBuffer||stubFalse;/**
	     * Checks if `value` is classified as a `Date` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     * @example
	     *
	     * _.isDate(new Date);
	     * // => true
	     *
	     * _.isDate('Mon April 23 2012');
	     * // => false
	     */var isDate=nodeIsDate?baseUnary(nodeIsDate):baseIsDate;/**
	     * Checks if `value` is likely a DOM element.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
	     * @example
	     *
	     * _.isElement(document.body);
	     * // => true
	     *
	     * _.isElement('<body>');
	     * // => false
	     */function isElement(value){return value!=null&&value.nodeType===1&&isObjectLike(value)&&!isPlainObject(value);}/**
	     * Checks if `value` is an empty object, collection, map, or set.
	     *
	     * Objects are considered empty if they have no own enumerable string keyed
	     * properties.
	     *
	     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	     * jQuery-like collections are considered empty if they have a `length` of `0`.
	     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	     * @example
	     *
	     * _.isEmpty(null);
	     * // => true
	     *
	     * _.isEmpty(true);
	     * // => true
	     *
	     * _.isEmpty(1);
	     * // => true
	     *
	     * _.isEmpty([1, 2, 3]);
	     * // => false
	     *
	     * _.isEmpty({ 'a': 1 });
	     * // => false
	     */function isEmpty(value){if(isArrayLike(value)&&(isArray(value)||typeof value=='string'||typeof value.splice=='function'||isBuffer(value)||isArguments(value))){return!value.length;}var tag=getTag(value);if(tag==mapTag||tag==setTag){return!value.size;}if(isPrototype(value)){return!nativeKeys(value).length;}for(var key in value){if(hasOwnProperty.call(value,key)){return false;}}return true;}/**
	     * Performs a deep comparison between two values to determine if they are
	     * equivalent.
	     *
	     * **Note:** This method supports comparing arrays, array buffers, booleans,
	     * date objects, error objects, maps, numbers, `Object` objects, regexes,
	     * sets, strings, symbols, and typed arrays. `Object` objects are compared
	     * by their own, not inherited, enumerable properties. Functions and DOM
	     * nodes are **not** supported.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.isEqual(object, other);
	     * // => true
	     *
	     * object === other;
	     * // => false
	     */function isEqual(value,other){return baseIsEqual(value,other);}/**
	     * This method is like `_.isEqual` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with up to
	     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, othValue) {
	     *   if (isGreeting(objValue) && isGreeting(othValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var array = ['hello', 'goodbye'];
	     * var other = ['hi', 'goodbye'];
	     *
	     * _.isEqualWith(array, other, customizer);
	     * // => true
	     */function isEqualWith(value,other,customizer){customizer=typeof customizer=='function'?customizer:undefined;var result=customizer?customizer(value,other):undefined;return result===undefined?baseIsEqual(value,other,customizer):!!result;}/**
	     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	     * `SyntaxError`, `TypeError`, or `URIError` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
	     * @example
	     *
	     * _.isError(new Error);
	     * // => true
	     *
	     * _.isError(Error);
	     * // => false
	     */function isError(value){if(!isObjectLike(value)){return false;}return objectToString.call(value)==errorTag||typeof value.message=='string'&&typeof value.name=='string';}/**
	     * Checks if `value` is a finite primitive number.
	     *
	     * **Note:** This method is based on
	     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
	     * @example
	     *
	     * _.isFinite(3);
	     * // => true
	     *
	     * _.isFinite(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isFinite(Infinity);
	     * // => false
	     *
	     * _.isFinite('3');
	     * // => false
	     */function isFinite(value){return typeof value=='number'&&nativeIsFinite(value);}/**
	     * Checks if `value` is classified as a `Function` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     *
	     * _.isFunction(/abc/);
	     * // => false
	     */function isFunction(value){// The use of `Object#toString` avoids issues with the `typeof` operator
	// in Safari 8-9 which returns 'object' for typed array and other constructors.
	var tag=isObject(value)?objectToString.call(value):'';return tag==funcTag||tag==genTag||tag==proxyTag;}/**
	     * Checks if `value` is an integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
	     * @example
	     *
	     * _.isInteger(3);
	     * // => true
	     *
	     * _.isInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isInteger(Infinity);
	     * // => false
	     *
	     * _.isInteger('3');
	     * // => false
	     */function isInteger(value){return typeof value=='number'&&value==toInteger(value);}/**
	     * Checks if `value` is a valid array-like length.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	     * @example
	     *
	     * _.isLength(3);
	     * // => true
	     *
	     * _.isLength(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isLength(Infinity);
	     * // => false
	     *
	     * _.isLength('3');
	     * // => false
	     */function isLength(value){return typeof value=='number'&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER;}/**
	     * Checks if `value` is the
	     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(_.noop);
	     * // => true
	     *
	     * _.isObject(null);
	     * // => false
	     */function isObject(value){var type=typeof value==='undefined'?'undefined':_typeof(value);return value!=null&&(type=='object'||type=='function');}/**
	     * Checks if `value` is object-like. A value is object-like if it's not `null`
	     * and has a `typeof` result of "object".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	     * @example
	     *
	     * _.isObjectLike({});
	     * // => true
	     *
	     * _.isObjectLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isObjectLike(_.noop);
	     * // => false
	     *
	     * _.isObjectLike(null);
	     * // => false
	     */function isObjectLike(value){return value!=null&&(typeof value==='undefined'?'undefined':_typeof(value))=='object';}/**
	     * Checks if `value` is classified as a `Map` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     * @example
	     *
	     * _.isMap(new Map);
	     * // => true
	     *
	     * _.isMap(new WeakMap);
	     * // => false
	     */var isMap=nodeIsMap?baseUnary(nodeIsMap):baseIsMap;/**
	     * Performs a partial deep comparison between `object` and `source` to
	     * determine if `object` contains equivalent property values.
	     *
	     * **Note:** This method is equivalent to `_.matches` when `source` is
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.isMatch(object, { 'b': 2 });
	     * // => true
	     *
	     * _.isMatch(object, { 'b': 1 });
	     * // => false
	     */function isMatch(object,source){return object===source||baseIsMatch(object,source,getMatchData(source));}/**
	     * This method is like `_.isMatch` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with five
	     * arguments: (objValue, srcValue, index|key, object, source).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var object = { 'greeting': 'hello' };
	     * var source = { 'greeting': 'hi' };
	     *
	     * _.isMatchWith(object, source, customizer);
	     * // => true
	     */function isMatchWith(object,source,customizer){customizer=typeof customizer=='function'?customizer:undefined;return baseIsMatch(object,source,getMatchData(source),customizer);}/**
	     * Checks if `value` is `NaN`.
	     *
	     * **Note:** This method is based on
	     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	     * `undefined` and other non-number values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	     * @example
	     *
	     * _.isNaN(NaN);
	     * // => true
	     *
	     * _.isNaN(new Number(NaN));
	     * // => true
	     *
	     * isNaN(undefined);
	     * // => true
	     *
	     * _.isNaN(undefined);
	     * // => false
	     */function isNaN(value){// An `NaN` primitive is the only value that is not equal to itself.
	// Perform the `toStringTag` check first to avoid errors with some
	// ActiveX objects in IE.
	return isNumber(value)&&value!=+value;}/**
	     * Checks if `value` is a pristine native function.
	     *
	     * **Note:** This method can't reliably detect native functions in the presence
	     * of the core-js package because core-js circumvents this kind of detection.
	     * Despite multiple requests, the core-js maintainer has made it clear: any
	     * attempt to fix the detection will be obstructed. As a result, we're left
	     * with little choice but to throw an error. Unfortunately, this also affects
	     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
	     * which rely on core-js.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     * @example
	     *
	     * _.isNative(Array.prototype.push);
	     * // => true
	     *
	     * _.isNative(_);
	     * // => false
	     */function isNative(value){if(isMaskable(value)){throw new Error(CORE_ERROR_TEXT);}return baseIsNative(value);}/**
	     * Checks if `value` is `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
	     * @example
	     *
	     * _.isNull(null);
	     * // => true
	     *
	     * _.isNull(void 0);
	     * // => false
	     */function isNull(value){return value===null;}/**
	     * Checks if `value` is `null` or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	     * @example
	     *
	     * _.isNil(null);
	     * // => true
	     *
	     * _.isNil(void 0);
	     * // => true
	     *
	     * _.isNil(NaN);
	     * // => false
	     */function isNil(value){return value==null;}/**
	     * Checks if `value` is classified as a `Number` primitive or object.
	     *
	     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	     * classified as numbers, use the `_.isFinite` method.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
	     * @example
	     *
	     * _.isNumber(3);
	     * // => true
	     *
	     * _.isNumber(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isNumber(Infinity);
	     * // => true
	     *
	     * _.isNumber('3');
	     * // => false
	     */function isNumber(value){return typeof value=='number'||isObjectLike(value)&&objectToString.call(value)==numberTag;}/**
	     * Checks if `value` is a plain object, that is, an object created by the
	     * `Object` constructor or one with a `[[Prototype]]` of `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.8.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * _.isPlainObject(new Foo);
	     * // => false
	     *
	     * _.isPlainObject([1, 2, 3]);
	     * // => false
	     *
	     * _.isPlainObject({ 'x': 0, 'y': 0 });
	     * // => true
	     *
	     * _.isPlainObject(Object.create(null));
	     * // => true
	     */function isPlainObject(value){if(!isObjectLike(value)||objectToString.call(value)!=objectTag){return false;}var proto=getPrototype(value);if(proto===null){return true;}var Ctor=hasOwnProperty.call(proto,'constructor')&&proto.constructor;return typeof Ctor=='function'&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString;}/**
	     * Checks if `value` is classified as a `RegExp` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     * @example
	     *
	     * _.isRegExp(/abc/);
	     * // => true
	     *
	     * _.isRegExp('/abc/');
	     * // => false
	     */var isRegExp=nodeIsRegExp?baseUnary(nodeIsRegExp):baseIsRegExp;/**
	     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
	     * double precision number which isn't the result of a rounded unsafe integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
	     * @example
	     *
	     * _.isSafeInteger(3);
	     * // => true
	     *
	     * _.isSafeInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isSafeInteger(Infinity);
	     * // => false
	     *
	     * _.isSafeInteger('3');
	     * // => false
	     */function isSafeInteger(value){return isInteger(value)&&value>=-MAX_SAFE_INTEGER&&value<=MAX_SAFE_INTEGER;}/**
	     * Checks if `value` is classified as a `Set` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     * @example
	     *
	     * _.isSet(new Set);
	     * // => true
	     *
	     * _.isSet(new WeakSet);
	     * // => false
	     */var isSet=nodeIsSet?baseUnary(nodeIsSet):baseIsSet;/**
	     * Checks if `value` is classified as a `String` primitive or object.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	     * @example
	     *
	     * _.isString('abc');
	     * // => true
	     *
	     * _.isString(1);
	     * // => false
	     */function isString(value){return typeof value=='string'||!isArray(value)&&isObjectLike(value)&&objectToString.call(value)==stringTag;}/**
	     * Checks if `value` is classified as a `Symbol` primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	     * @example
	     *
	     * _.isSymbol(Symbol.iterator);
	     * // => true
	     *
	     * _.isSymbol('abc');
	     * // => false
	     */function isSymbol(value){return(typeof value==='undefined'?'undefined':_typeof(value))=='symbol'||isObjectLike(value)&&objectToString.call(value)==symbolTag;}/**
	     * Checks if `value` is classified as a typed array.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     * @example
	     *
	     * _.isTypedArray(new Uint8Array);
	     * // => true
	     *
	     * _.isTypedArray([]);
	     * // => false
	     */var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;/**
	     * Checks if `value` is `undefined`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	     * @example
	     *
	     * _.isUndefined(void 0);
	     * // => true
	     *
	     * _.isUndefined(null);
	     * // => false
	     */function isUndefined(value){return value===undefined;}/**
	     * Checks if `value` is classified as a `WeakMap` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
	     * @example
	     *
	     * _.isWeakMap(new WeakMap);
	     * // => true
	     *
	     * _.isWeakMap(new Map);
	     * // => false
	     */function isWeakMap(value){return isObjectLike(value)&&getTag(value)==weakMapTag;}/**
	     * Checks if `value` is classified as a `WeakSet` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
	     * @example
	     *
	     * _.isWeakSet(new WeakSet);
	     * // => true
	     *
	     * _.isWeakSet(new Set);
	     * // => false
	     */function isWeakSet(value){return isObjectLike(value)&&objectToString.call(value)==weakSetTag;}/**
	     * Checks if `value` is less than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     * @see _.gt
	     * @example
	     *
	     * _.lt(1, 3);
	     * // => true
	     *
	     * _.lt(3, 3);
	     * // => false
	     *
	     * _.lt(3, 1);
	     * // => false
	     */var lt=createRelationalOperation(baseLt);/**
	     * Checks if `value` is less than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than or equal to
	     *  `other`, else `false`.
	     * @see _.gte
	     * @example
	     *
	     * _.lte(1, 3);
	     * // => true
	     *
	     * _.lte(3, 3);
	     * // => true
	     *
	     * _.lte(3, 1);
	     * // => false
	     */var lte=createRelationalOperation(function(value,other){return value<=other;});/**
	     * Converts `value` to an array.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the converted array.
	     * @example
	     *
	     * _.toArray({ 'a': 1, 'b': 2 });
	     * // => [1, 2]
	     *
	     * _.toArray('abc');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toArray(1);
	     * // => []
	     *
	     * _.toArray(null);
	     * // => []
	     */function toArray(value){if(!value){return[];}if(isArrayLike(value)){return isString(value)?stringToArray(value):copyArray(value);}if(iteratorSymbol&&value[iteratorSymbol]){return iteratorToArray(value[iteratorSymbol]());}var tag=getTag(value),func=tag==mapTag?mapToArray:tag==setTag?setToArray:values;return func(value);}/**
	     * Converts `value` to a finite number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.12.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted number.
	     * @example
	     *
	     * _.toFinite(3.2);
	     * // => 3.2
	     *
	     * _.toFinite(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toFinite(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toFinite('3.2');
	     * // => 3.2
	     */function toFinite(value){if(!value){return value===0?value:0;}value=toNumber(value);if(value===INFINITY||value===-INFINITY){var sign=value<0?-1:1;return sign*MAX_INTEGER;}return value===value?value:0;}/**
	     * Converts `value` to an integer.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toInteger(3.2);
	     * // => 3
	     *
	     * _.toInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toInteger(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toInteger('3.2');
	     * // => 3
	     */function toInteger(value){var result=toFinite(value),remainder=result%1;return result===result?remainder?result-remainder:result:0;}/**
	     * Converts `value` to an integer suitable for use as the length of an
	     * array-like object.
	     *
	     * **Note:** This method is based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toLength(3.2);
	     * // => 3
	     *
	     * _.toLength(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toLength(Infinity);
	     * // => 4294967295
	     *
	     * _.toLength('3.2');
	     * // => 3
	     */function toLength(value){return value?baseClamp(toInteger(value),0,MAX_ARRAY_LENGTH):0;}/**
	     * Converts `value` to a number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     * @example
	     *
	     * _.toNumber(3.2);
	     * // => 3.2
	     *
	     * _.toNumber(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toNumber(Infinity);
	     * // => Infinity
	     *
	     * _.toNumber('3.2');
	     * // => 3.2
	     */function toNumber(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}if(isObject(value)){var other=typeof value.valueOf=='function'?value.valueOf():value;value=isObject(other)?other+'':other;}if(typeof value!='string'){return value===0?value:+value;}value=value.replace(reTrim,'');var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NAN:+value;}/**
	     * Converts `value` to a plain object flattening inherited enumerable string
	     * keyed properties of `value` to own properties of the plain object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Object} Returns the converted plain object.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.assign({ 'a': 1 }, new Foo);
	     * // => { 'a': 1, 'b': 2 }
	     *
	     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	     * // => { 'a': 1, 'b': 2, 'c': 3 }
	     */function toPlainObject(value){return copyObject(value,keysIn(value));}/**
	     * Converts `value` to a safe integer. A safe integer can be compared and
	     * represented correctly.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toSafeInteger(3.2);
	     * // => 3
	     *
	     * _.toSafeInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toSafeInteger(Infinity);
	     * // => 9007199254740991
	     *
	     * _.toSafeInteger('3.2');
	     * // => 3
	     */function toSafeInteger(value){return baseClamp(toInteger(value),-MAX_SAFE_INTEGER,MAX_SAFE_INTEGER);}/**
	     * Converts `value` to a string. An empty string is returned for `null`
	     * and `undefined` values. The sign of `-0` is preserved.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     * @example
	     *
	     * _.toString(null);
	     * // => ''
	     *
	     * _.toString(-0);
	     * // => '-0'
	     *
	     * _.toString([1, 2, 3]);
	     * // => '1,2,3'
	     */function toString(value){return value==null?'':baseToString(value);}/*------------------------------------------------------------------------*//**
	     * Assigns own enumerable string keyed properties of source objects to the
	     * destination object. Source objects are applied from left to right.
	     * Subsequent sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object` and is loosely based on
	     * [`Object.assign`](https://mdn.io/Object/assign).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assignIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assign({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'c': 3 }
	     */var assign=createAssigner(function(object,source){if(isPrototype(source)||isArrayLike(source)){copyObject(source,keys(source),object);return;}for(var key in source){if(hasOwnProperty.call(source,key)){assignValue(object,key,source[key]);}}});/**
	     * This method is like `_.assign` except that it iterates over own and
	     * inherited source properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extend
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assign
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
	     */var assignIn=createAssigner(function(object,source){copyObject(source,keysIn(source),object);});/**
	     * This method is like `_.assignIn` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extendWith
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignInWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */var assignInWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keysIn(source),object,customizer);});/**
	     * This method is like `_.assign` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignInWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */var assignWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keys(source),object,customizer);});/**
	     * Creates an array of values corresponding to `paths` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {...(string|string[])} [paths] The property paths of elements to pick.
	     * @returns {Array} Returns the picked values.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _.at(object, ['a[0].b.c', 'a[1]']);
	     * // => [3, 4]
	     */var at=flatRest(baseAt);/**
	     * Creates an object that inherits from the `prototype` object. If a
	     * `properties` object is given, its own enumerable string keyed properties
	     * are assigned to the created object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Object
	     * @param {Object} prototype The object to inherit from.
	     * @param {Object} [properties] The properties to assign to the object.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * function Circle() {
	     *   Shape.call(this);
	     * }
	     *
	     * Circle.prototype = _.create(Shape.prototype, {
	     *   'constructor': Circle
	     * });
	     *
	     * var circle = new Circle;
	     * circle instanceof Circle;
	     * // => true
	     *
	     * circle instanceof Shape;
	     * // => true
	     */function create(prototype,properties){var result=baseCreate(prototype);return properties?baseAssign(result,properties):result;}/**
	     * Assigns own and inherited enumerable string keyed properties of source
	     * objects to the destination object for all destination properties that
	     * resolve to `undefined`. Source objects are applied from left to right.
	     * Once a property is set, additional values of the same property are ignored.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaultsDeep
	     * @example
	     *
	     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */var defaults=baseRest(function(args){args.push(undefined,assignInDefaults);return apply(assignInWith,undefined,args);});/**
	     * This method is like `_.defaults` except that it recursively assigns
	     * default properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaults
	     * @example
	     *
	     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
	     * // => { 'a': { 'b': 2, 'c': 3 } }
	     */var defaultsDeep=baseRest(function(args){args.push(undefined,mergeDefaults);return apply(mergeWith,undefined,args);});/**
	     * This method is like `_.find` except that it returns the key of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findKey(users, function(o) { return o.age < 40; });
	     * // => 'barney' (iteration order is not guaranteed)
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findKey(users, { 'age': 1, 'active': true });
	     * // => 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findKey(users, 'active');
	     * // => 'barney'
	     */function findKey(object,predicate){return baseFindKey(object,getIteratee(predicate,3),baseForOwn);}/**
	     * This method is like `_.findKey` except that it iterates over elements of
	     * a collection in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findLastKey(users, function(o) { return o.age < 40; });
	     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastKey(users, { 'age': 36, 'active': true });
	     * // => 'barney'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastKey(users, 'active');
	     * // => 'pebbles'
	     */function findLastKey(object,predicate){return baseFindKey(object,getIteratee(predicate,3),baseForOwnRight);}/**
	     * Iterates over own and inherited enumerable string keyed properties of an
	     * object and invokes `iteratee` for each property. The iteratee is invoked
	     * with three arguments: (value, key, object). Iteratee functions may exit
	     * iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forInRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forIn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
	     */function forIn(object,iteratee){return object==null?object:baseFor(object,getIteratee(iteratee,3),keysIn);}/**
	     * This method is like `_.forIn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forInRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
	     */function forInRight(object,iteratee){return object==null?object:baseForRight(object,getIteratee(iteratee,3),keysIn);}/**
	     * Iterates over own enumerable string keyed properties of an object and
	     * invokes `iteratee` for each property. The iteratee is invoked with three
	     * arguments: (value, key, object). Iteratee functions may exit iteration
	     * early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwnRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */function forOwn(object,iteratee){return object&&baseForOwn(object,getIteratee(iteratee,3));}/**
	     * This method is like `_.forOwn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwnRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
	     */function forOwnRight(object,iteratee){return object&&baseForOwnRight(object,getIteratee(iteratee,3));}/**
	     * Creates an array of function property names from own enumerable properties
	     * of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functionsIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functions(new Foo);
	     * // => ['a', 'b']
	     */function functions(object){return object==null?[]:baseFunctions(object,keys(object));}/**
	     * Creates an array of function property names from own and inherited
	     * enumerable properties of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functions
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functionsIn(new Foo);
	     * // => ['a', 'b', 'c']
	     */function functionsIn(object){return object==null?[]:baseFunctions(object,keysIn(object));}/**
	     * Gets the value at `path` of `object`. If the resolved value is
	     * `undefined`, the `defaultValue` is returned in its place.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.get(object, 'a[0].b.c');
	     * // => 3
	     *
	     * _.get(object, ['a', '0', 'b', 'c']);
	     * // => 3
	     *
	     * _.get(object, 'a.b.c', 'default');
	     * // => 'default'
	     */function get(object,path,defaultValue){var result=object==null?undefined:baseGet(object,path);return result===undefined?defaultValue:result;}/**
	     * Checks if `path` is a direct property of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = { 'a': { 'b': 2 } };
	     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.has(object, 'a');
	     * // => true
	     *
	     * _.has(object, 'a.b');
	     * // => true
	     *
	     * _.has(object, ['a', 'b']);
	     * // => true
	     *
	     * _.has(other, 'a');
	     * // => false
	     */function has(object,path){return object!=null&&hasPath(object,path,baseHas);}/**
	     * Checks if `path` is a direct or inherited property of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.hasIn(object, 'a');
	     * // => true
	     *
	     * _.hasIn(object, 'a.b');
	     * // => true
	     *
	     * _.hasIn(object, ['a', 'b']);
	     * // => true
	     *
	     * _.hasIn(object, 'b');
	     * // => false
	     */function hasIn(object,path){return object!=null&&hasPath(object,path,baseHasIn);}/**
	     * Creates an object composed of the inverted keys and values of `object`.
	     * If `object` contains duplicate values, subsequent values overwrite
	     * property assignments of previous values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invert(object);
	     * // => { '1': 'c', '2': 'b' }
	     */var invert=createInverter(function(result,value,key){result[value]=key;},constant(identity));/**
	     * This method is like `_.invert` except that the inverted object is generated
	     * from the results of running each element of `object` thru `iteratee`. The
	     * corresponding inverted value of each inverted key is an array of keys
	     * responsible for generating the inverted value. The iteratee is invoked
	     * with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invertBy(object);
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     *
	     * _.invertBy(object, function(value) {
	     *   return 'group' + value;
	     * });
	     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
	     */var invertBy=createInverter(function(result,value,key){if(hasOwnProperty.call(result,value)){result[value].push(key);}else{result[value]=[key];}},getIteratee);/**
	     * Invokes the method at `path` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
	     *
	     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
	     * // => [2, 3]
	     */var invoke=baseRest(baseInvoke);/**
	     * Creates an array of the own enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects. See the
	     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * for more details.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keys(new Foo);
	     * // => ['a', 'b'] (iteration order is not guaranteed)
	     *
	     * _.keys('hi');
	     * // => ['0', '1']
	     */function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object);}/**
	     * Creates an array of the own and inherited enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keysIn(new Foo);
	     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	     */function keysIn(object){return isArrayLike(object)?arrayLikeKeys(object,true):baseKeysIn(object);}/**
	     * The opposite of `_.mapValues`; this method creates an object with the
	     * same values as `object` and keys generated by running each own enumerable
	     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
	     * with three arguments: (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapValues
	     * @example
	     *
	     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   return key + value;
	     * });
	     * // => { 'a1': 1, 'b2': 2 }
	     */function mapKeys(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,iteratee(value,key,object),value);});return result;}/**
	     * Creates an object with the same keys as `object` and values generated
	     * by running each own enumerable string keyed property of `object` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapKeys
	     * @example
	     *
	     * var users = {
	     *   'fred':    { 'user': 'fred',    'age': 40 },
	     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	     * };
	     *
	     * _.mapValues(users, function(o) { return o.age; });
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.mapValues(users, 'age');
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     */function mapValues(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,key,iteratee(value,key,object));});return result;}/**
	     * This method is like `_.assign` except that it recursively merges own and
	     * inherited enumerable string keyed properties of source objects into the
	     * destination object. Source properties that resolve to `undefined` are
	     * skipped if a destination value exists. Array and plain object properties
	     * are merged recursively. Other objects and value types are overridden by
	     * assignment. Source objects are applied from left to right. Subsequent
	     * sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {
	     *   'a': [{ 'b': 2 }, { 'd': 4 }]
	     * };
	     *
	     * var other = {
	     *   'a': [{ 'c': 3 }, { 'e': 5 }]
	     * };
	     *
	     * _.merge(object, other);
	     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	     */var merge=createAssigner(function(object,source,srcIndex){baseMerge(object,source,srcIndex);});/**
	     * This method is like `_.merge` except that it accepts `customizer` which
	     * is invoked to produce the merged values of the destination and source
	     * properties. If `customizer` returns `undefined`, merging is handled by the
	     * method instead. The `customizer` is invoked with six arguments:
	     * (objValue, srcValue, key, object, source, stack).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} customizer The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (_.isArray(objValue)) {
	     *     return objValue.concat(srcValue);
	     *   }
	     * }
	     *
	     * var object = { 'a': [1], 'b': [2] };
	     * var other = { 'a': [3], 'b': [4] };
	     *
	     * _.mergeWith(object, other, customizer);
	     * // => { 'a': [1, 3], 'b': [2, 4] }
	     */var mergeWith=createAssigner(function(object,source,srcIndex,customizer){baseMerge(object,source,srcIndex,customizer);});/**
	     * The opposite of `_.pick`; this method creates an object composed of the
	     * own and inherited enumerable string keyed properties of `object` that are
	     * not omitted.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [props] The property identifiers to omit.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omit(object, ['a', 'c']);
	     * // => { 'b': '2' }
	     */var omit=flatRest(function(object,props){if(object==null){return{};}props=arrayMap(props,toKey);return basePick(object,baseDifference(getAllKeysIn(object),props));});/**
	     * The opposite of `_.pickBy`; this method creates an object composed of
	     * the own and inherited enumerable string keyed properties of `object` that
	     * `predicate` doesn't return truthy for. The predicate is invoked with two
	     * arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omitBy(object, _.isNumber);
	     * // => { 'b': '2' }
	     */function omitBy(object,predicate){return pickBy(object,negate(getIteratee(predicate)));}/**
	     * Creates an object composed of the picked `object` properties.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [props] The property identifiers to pick.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pick(object, ['a', 'c']);
	     * // => { 'a': 1, 'c': 3 }
	     */var pick=flatRest(function(object,props){return object==null?{}:basePick(object,arrayMap(props,toKey));});/**
	     * Creates an object composed of the `object` properties `predicate` returns
	     * truthy for. The predicate is invoked with two arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pickBy(object, _.isNumber);
	     * // => { 'a': 1, 'c': 3 }
	     */function pickBy(object,predicate){return object==null?{}:basePickBy(object,getAllKeysIn(object),getIteratee(predicate));}/**
	     * This method is like `_.get` except that if the resolved value is a
	     * function it's invoked with the `this` binding of its parent object and
	     * its result is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to resolve.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
	     *
	     * _.result(object, 'a[0].b.c1');
	     * // => 3
	     *
	     * _.result(object, 'a[0].b.c2');
	     * // => 4
	     *
	     * _.result(object, 'a[0].b.c3', 'default');
	     * // => 'default'
	     *
	     * _.result(object, 'a[0].b.c3', _.constant('default'));
	     * // => 'default'
	     */function result(object,path,defaultValue){path=isKey(path,object)?[path]:castPath(path);var index=-1,length=path.length;// Ensure the loop is entered when path is empty.
	if(!length){object=undefined;length=1;}while(++index<length){var value=object==null?undefined:object[toKey(path[index])];if(value===undefined){index=length;value=defaultValue;}object=isFunction(value)?value.call(object):value;}return object;}/**
	     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
	     * it's created. Arrays are created for missing index properties while objects
	     * are created for all other missing properties. Use `_.setWith` to customize
	     * `path` creation.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.set(object, 'a[0].b.c', 4);
	     * console.log(object.a[0].b.c);
	     * // => 4
	     *
	     * _.set(object, ['x', '0', 'y', 'z'], 5);
	     * console.log(object.x[0].y.z);
	     * // => 5
	     */function set(object,path,value){return object==null?object:baseSet(object,path,value);}/**
	     * This method is like `_.set` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.setWith(object, '[0][1]', 'a', Object);
	     * // => { '0': { '1': 'a' } }
	     */function setWith(object,path,value,customizer){customizer=typeof customizer=='function'?customizer:undefined;return object==null?object:baseSet(object,path,value,customizer);}/**
	     * Creates an array of own enumerable string keyed-value pairs for `object`
	     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
	     * entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entries
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairs(new Foo);
	     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
	     */var toPairs=createToPairs(keys);/**
	     * Creates an array of own and inherited enumerable string keyed-value pairs
	     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
	     * or set, its entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entriesIn
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairsIn(new Foo);
	     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
	     */var toPairsIn=createToPairs(keysIn);/**
	     * An alternative to `_.reduce`; this method transforms `object` to a new
	     * `accumulator` object which is the result of running each of its own
	     * enumerable string keyed properties thru `iteratee`, with each invocation
	     * potentially mutating the `accumulator` object. If `accumulator` is not
	     * provided, a new object with the same `[[Prototype]]` will be used. The
	     * iteratee is invoked with four arguments: (accumulator, value, key, object).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The custom accumulator value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.transform([2, 3, 4], function(result, n) {
	     *   result.push(n *= n);
	     *   return n % 2 == 0;
	     * }, []);
	     * // => [4, 9]
	     *
	     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     */function transform(object,iteratee,accumulator){var isArr=isArray(object)||isTypedArray(object);iteratee=getIteratee(iteratee,4);if(accumulator==null){if(isArr||isObject(object)){var Ctor=object.constructor;if(isArr){accumulator=isArray(object)?new Ctor():[];}else{accumulator=isFunction(Ctor)?baseCreate(getPrototype(object)):{};}}else{accumulator={};}}(isArr?arrayEach:baseForOwn)(object,function(value,index,object){return iteratee(accumulator,value,index,object);});return accumulator;}/**
	     * Removes the property at `path` of `object`.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
	     * _.unset(object, 'a[0].b.c');
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     *
	     * _.unset(object, ['a', '0', 'b', 'c']);
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     */function unset(object,path){return object==null?true:baseUnset(object,path);}/**
	     * This method is like `_.set` except that accepts `updater` to produce the
	     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
	     * is invoked with one argument: (value).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
	     * console.log(object.a[0].b.c);
	     * // => 9
	     *
	     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
	     * console.log(object.x[0].y.z);
	     * // => 0
	     */function update(object,path,updater){return object==null?object:baseUpdate(object,path,castFunction(updater));}/**
	     * This method is like `_.update` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
	     * // => { '0': { '1': 'a' } }
	     */function updateWith(object,path,updater,customizer){customizer=typeof customizer=='function'?customizer:undefined;return object==null?object:baseUpdate(object,path,castFunction(updater),customizer);}/**
	     * Creates an array of the own enumerable string keyed property values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.values(new Foo);
	     * // => [1, 2] (iteration order is not guaranteed)
	     *
	     * _.values('hi');
	     * // => ['h', 'i']
	     */function values(object){return object?baseValues(object,keys(object)):[];}/**
	     * Creates an array of the own and inherited enumerable string keyed property
	     * values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.valuesIn(new Foo);
	     * // => [1, 2, 3] (iteration order is not guaranteed)
	     */function valuesIn(object){return object==null?[]:baseValues(object,keysIn(object));}/*------------------------------------------------------------------------*//**
	     * Clamps `number` within the inclusive `lower` and `upper` bounds.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Number
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     * @example
	     *
	     * _.clamp(-10, -5, 5);
	     * // => -5
	     *
	     * _.clamp(10, -5, 5);
	     * // => 5
	     */function clamp(number,lower,upper){if(upper===undefined){upper=lower;lower=undefined;}if(upper!==undefined){upper=toNumber(upper);upper=upper===upper?upper:0;}if(lower!==undefined){lower=toNumber(lower);lower=lower===lower?lower:0;}return baseClamp(toNumber(number),lower,upper);}/**
	     * Checks if `n` is between `start` and up to, but not including, `end`. If
	     * `end` is not specified, it's set to `start` with `start` then set to `0`.
	     * If `start` is greater than `end` the params are swapped to support
	     * negative ranges.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.3.0
	     * @category Number
	     * @param {number} number The number to check.
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     * @see _.range, _.rangeRight
	     * @example
	     *
	     * _.inRange(3, 2, 4);
	     * // => true
	     *
	     * _.inRange(4, 8);
	     * // => true
	     *
	     * _.inRange(4, 2);
	     * // => false
	     *
	     * _.inRange(2, 2);
	     * // => false
	     *
	     * _.inRange(1.2, 2);
	     * // => true
	     *
	     * _.inRange(5.2, 4);
	     * // => false
	     *
	     * _.inRange(-3, -2, -6);
	     * // => true
	     */function inRange(number,start,end){start=toFinite(start);if(end===undefined){end=start;start=0;}else{end=toFinite(end);}number=toNumber(number);return baseInRange(number,start,end);}/**
	     * Produces a random number between the inclusive `lower` and `upper` bounds.
	     * If only one argument is provided a number between `0` and the given number
	     * is returned. If `floating` is `true`, or either `lower` or `upper` are
	     * floats, a floating-point number is returned instead of an integer.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Number
	     * @param {number} [lower=0] The lower bound.
	     * @param {number} [upper=1] The upper bound.
	     * @param {boolean} [floating] Specify returning a floating-point number.
	     * @returns {number} Returns the random number.
	     * @example
	     *
	     * _.random(0, 5);
	     * // => an integer between 0 and 5
	     *
	     * _.random(5);
	     * // => also an integer between 0 and 5
	     *
	     * _.random(5, true);
	     * // => a floating-point number between 0 and 5
	     *
	     * _.random(1.2, 5.2);
	     * // => a floating-point number between 1.2 and 5.2
	     */function random(lower,upper,floating){if(floating&&typeof floating!='boolean'&&isIterateeCall(lower,upper,floating)){upper=floating=undefined;}if(floating===undefined){if(typeof upper=='boolean'){floating=upper;upper=undefined;}else if(typeof lower=='boolean'){floating=lower;lower=undefined;}}if(lower===undefined&&upper===undefined){lower=0;upper=1;}else{lower=toFinite(lower);if(upper===undefined){upper=lower;lower=0;}else{upper=toFinite(upper);}}if(lower>upper){var temp=lower;lower=upper;upper=temp;}if(floating||lower%1||upper%1){var rand=nativeRandom();return nativeMin(lower+rand*(upper-lower+freeParseFloat('1e-'+((rand+'').length-1))),upper);}return baseRandom(lower,upper);}/*------------------------------------------------------------------------*//**
	     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the camel cased string.
	     * @example
	     *
	     * _.camelCase('Foo Bar');
	     * // => 'fooBar'
	     *
	     * _.camelCase('--foo-bar--');
	     * // => 'fooBar'
	     *
	     * _.camelCase('__FOO_BAR__');
	     * // => 'fooBar'
	     */var camelCase=createCompounder(function(result,word,index){word=word.toLowerCase();return result+(index?capitalize(word):word);});/**
	     * Converts the first character of `string` to upper case and the remaining
	     * to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to capitalize.
	     * @returns {string} Returns the capitalized string.
	     * @example
	     *
	     * _.capitalize('FRED');
	     * // => 'Fred'
	     */function capitalize(string){return upperFirst(toString(string).toLowerCase());}/**
	     * Deburrs `string` by converting
	     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
	     * letters to basic Latin letters and removing
	     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to deburr.
	     * @returns {string} Returns the deburred string.
	     * @example
	     *
	     * _.deburr('déjà vu');
	     * // => 'deja vu'
	     */function deburr(string){string=toString(string);return string&&string.replace(reLatin,deburrLetter).replace(reComboMark,'');}/**
	     * Checks if `string` ends with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=string.length] The position to search up to.
	     * @returns {boolean} Returns `true` if `string` ends with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.endsWith('abc', 'c');
	     * // => true
	     *
	     * _.endsWith('abc', 'b');
	     * // => false
	     *
	     * _.endsWith('abc', 'b', 2);
	     * // => true
	     */function endsWith(string,target,position){string=toString(string);target=baseToString(target);var length=string.length;position=position===undefined?length:baseClamp(toInteger(position),0,length);var end=position;position-=target.length;return position>=0&&string.slice(position,end)==target;}/**
	     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
	     * corresponding HTML entities.
	     *
	     * **Note:** No other characters are escaped. To escape additional
	     * characters use a third-party library like [_he_](https://mths.be/he).
	     *
	     * Though the ">" character is escaped for symmetry, characters like
	     * ">" and "/" don't need escaping in HTML and have no special meaning
	     * unless they're part of a tag or unquoted attribute value. See
	     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	     * (under "semi-related fun fact") for more details.
	     *
	     * When working with HTML you should always
	     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
	     * XSS vectors.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escape('fred, barney, & pebbles');
	     * // => 'fred, barney, &amp; pebbles'
	     */function escape(string){string=toString(string);return string&&reHasUnescapedHtml.test(string)?string.replace(reUnescapedHtml,escapeHtmlChar):string;}/**
	     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
	     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escapeRegExp('[lodash](https://lodash.com/)');
	     * // => '\[lodash\]\(https://lodash\.com/\)'
	     */function escapeRegExp(string){string=toString(string);return string&&reHasRegExpChar.test(string)?string.replace(reRegExpChar,'\\$&'):string;}/**
	     * Converts `string` to
	     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the kebab cased string.
	     * @example
	     *
	     * _.kebabCase('Foo Bar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('fooBar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('__FOO_BAR__');
	     * // => 'foo-bar'
	     */var kebabCase=createCompounder(function(result,word,index){return result+(index?'-':'')+word.toLowerCase();});/**
	     * Converts `string`, as space separated words, to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.lowerCase('--Foo-Bar--');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('fooBar');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('__FOO_BAR__');
	     * // => 'foo bar'
	     */var lowerCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toLowerCase();});/**
	     * Converts the first character of `string` to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.lowerFirst('Fred');
	     * // => 'fred'
	     *
	     * _.lowerFirst('FRED');
	     * // => 'fRED'
	     */var lowerFirst=createCaseFirst('toLowerCase');/**
	     * Pads `string` on the left and right sides if it's shorter than `length`.
	     * Padding characters are truncated if they can't be evenly divided by `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.pad('abc', 8);
	     * // => '  abc   '
	     *
	     * _.pad('abc', 8, '_-');
	     * // => '_-abc_-_'
	     *
	     * _.pad('abc', 3);
	     * // => 'abc'
	     */function pad(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;if(!length||strLength>=length){return string;}var mid=(length-strLength)/2;return createPadding(nativeFloor(mid),chars)+string+createPadding(nativeCeil(mid),chars);}/**
	     * Pads `string` on the right side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padEnd('abc', 6);
	     * // => 'abc   '
	     *
	     * _.padEnd('abc', 6, '_-');
	     * // => 'abc_-_'
	     *
	     * _.padEnd('abc', 3);
	     * // => 'abc'
	     */function padEnd(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?string+createPadding(length-strLength,chars):string;}/**
	     * Pads `string` on the left side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padStart('abc', 6);
	     * // => '   abc'
	     *
	     * _.padStart('abc', 6, '_-');
	     * // => '_-_abc'
	     *
	     * _.padStart('abc', 3);
	     * // => 'abc'
	     */function padStart(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?createPadding(length-strLength,chars)+string:string;}/**
	     * Converts `string` to an integer of the specified radix. If `radix` is
	     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
	     * hexadecimal, in which case a `radix` of `16` is used.
	     *
	     * **Note:** This method aligns with the
	     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category String
	     * @param {string} string The string to convert.
	     * @param {number} [radix=10] The radix to interpret `value` by.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.parseInt('08');
	     * // => 8
	     *
	     * _.map(['6', '08', '10'], _.parseInt);
	     * // => [6, 8, 10]
	     */function parseInt(string,radix,guard){if(guard||radix==null){radix=0;}else if(radix){radix=+radix;}return nativeParseInt(toString(string).replace(reTrimStart,''),radix||0);}/**
	     * Repeats the given string `n` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to repeat.
	     * @param {number} [n=1] The number of times to repeat the string.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the repeated string.
	     * @example
	     *
	     * _.repeat('*', 3);
	     * // => '***'
	     *
	     * _.repeat('abc', 2);
	     * // => 'abcabc'
	     *
	     * _.repeat('abc', 0);
	     * // => ''
	     */function repeat(string,n,guard){if(guard?isIterateeCall(string,n,guard):n===undefined){n=1;}else{n=toInteger(n);}return baseRepeat(toString(string),n);}/**
	     * Replaces matches for `pattern` in `string` with `replacement`.
	     *
	     * **Note:** This method is based on
	     * [`String#replace`](https://mdn.io/String/replace).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to modify.
	     * @param {RegExp|string} pattern The pattern to replace.
	     * @param {Function|string} replacement The match replacement.
	     * @returns {string} Returns the modified string.
	     * @example
	     *
	     * _.replace('Hi Fred', 'Fred', 'Barney');
	     * // => 'Hi Barney'
	     */function replace(){var args=arguments,string=toString(args[0]);return args.length<3?string:string.replace(args[1],args[2]);}/**
	     * Converts `string` to
	     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the snake cased string.
	     * @example
	     *
	     * _.snakeCase('Foo Bar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('fooBar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('--FOO-BAR--');
	     * // => 'foo_bar'
	     */var snakeCase=createCompounder(function(result,word,index){return result+(index?'_':'')+word.toLowerCase();});/**
	     * Splits `string` by `separator`.
	     *
	     * **Note:** This method is based on
	     * [`String#split`](https://mdn.io/String/split).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to split.
	     * @param {RegExp|string} separator The separator pattern to split by.
	     * @param {number} [limit] The length to truncate results to.
	     * @returns {Array} Returns the string segments.
	     * @example
	     *
	     * _.split('a-b-c', '-', 2);
	     * // => ['a', 'b']
	     */function split(string,separator,limit){if(limit&&typeof limit!='number'&&isIterateeCall(string,separator,limit)){separator=limit=undefined;}limit=limit===undefined?MAX_ARRAY_LENGTH:limit>>>0;if(!limit){return[];}string=toString(string);if(string&&(typeof separator=='string'||separator!=null&&!isRegExp(separator))){separator=baseToString(separator);if(!separator&&hasUnicode(string)){return castSlice(stringToArray(string),0,limit);}}return string.split(separator,limit);}/**
	     * Converts `string` to
	     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.1.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the start cased string.
	     * @example
	     *
	     * _.startCase('--foo-bar--');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('fooBar');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('__FOO_BAR__');
	     * // => 'FOO BAR'
	     */var startCase=createCompounder(function(result,word,index){return result+(index?' ':'')+upperFirst(word);});/**
	     * Checks if `string` starts with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=0] The position to search from.
	     * @returns {boolean} Returns `true` if `string` starts with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.startsWith('abc', 'a');
	     * // => true
	     *
	     * _.startsWith('abc', 'b');
	     * // => false
	     *
	     * _.startsWith('abc', 'b', 1);
	     * // => true
	     */function startsWith(string,target,position){string=toString(string);position=baseClamp(toInteger(position),0,string.length);target=baseToString(target);return string.slice(position,position+target.length)==target;}/**
	     * Creates a compiled template function that can interpolate data properties
	     * in "interpolate" delimiters, HTML-escape interpolated data properties in
	     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
	     * properties may be accessed as free variables in the template. If a setting
	     * object is given, it takes precedence over `_.templateSettings` values.
	     *
	     * **Note:** In the development build `_.template` utilizes
	     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
	     * for easier debugging.
	     *
	     * For more information on precompiling templates see
	     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
	     *
	     * For more information on Chrome extension sandboxes see
	     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The template string.
	     * @param {Object} [options={}] The options object.
	     * @param {RegExp} [options.escape=_.templateSettings.escape]
	     *  The HTML "escape" delimiter.
	     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
	     *  The "evaluate" delimiter.
	     * @param {Object} [options.imports=_.templateSettings.imports]
	     *  An object to import into the template as free variables.
	     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
	     *  The "interpolate" delimiter.
	     * @param {string} [options.sourceURL='lodash.templateSources[n]']
	     *  The sourceURL of the compiled template.
	     * @param {string} [options.variable='obj']
	     *  The data object variable name.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the compiled template function.
	     * @example
	     *
	     * // Use the "interpolate" delimiter to create a compiled template.
	     * var compiled = _.template('hello <%= user %>!');
	     * compiled({ 'user': 'fred' });
	     * // => 'hello fred!'
	     *
	     * // Use the HTML "escape" delimiter to escape data property values.
	     * var compiled = _.template('<b><%- value %></b>');
	     * compiled({ 'value': '<script>' });
	     * // => '<b>&lt;script&gt;</b>'
	     *
	     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
	     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the internal `print` function in "evaluate" delimiters.
	     * var compiled = _.template('<% print("hello " + user); %>!');
	     * compiled({ 'user': 'barney' });
	     * // => 'hello barney!'
	     *
	     * // Use the ES template literal delimiter as an "interpolate" delimiter.
	     * // Disable support by replacing the "interpolate" delimiter.
	     * var compiled = _.template('hello ${ user }!');
	     * compiled({ 'user': 'pebbles' });
	     * // => 'hello pebbles!'
	     *
	     * // Use backslashes to treat delimiters as plain text.
	     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
	     * compiled({ 'value': 'ignored' });
	     * // => '<%- value %>'
	     *
	     * // Use the `imports` option to import `jQuery` as `jq`.
	     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
	     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
	     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
	     * compiled(data);
	     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
	     *
	     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
	     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
	     * compiled.source;
	     * // => function(data) {
	     * //   var __t, __p = '';
	     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
	     * //   return __p;
	     * // }
	     *
	     * // Use custom template delimiters.
	     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
	     * var compiled = _.template('hello {{ user }}!');
	     * compiled({ 'user': 'mustache' });
	     * // => 'hello mustache!'
	     *
	     * // Use the `source` property to inline compiled templates for meaningful
	     * // line numbers in error messages and stack traces.
	     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
	     *   var JST = {\
	     *     "main": ' + _.template(mainText).source + '\
	     *   };\
	     * ');
	     */function template(string,options,guard){// Based on John Resig's `tmpl` implementation
	// (http://ejohn.org/blog/javascript-micro-templating/)
	// and Laura Doktorova's doT.js (https://github.com/olado/doT).
	var settings=lodash.templateSettings;if(guard&&isIterateeCall(string,options,guard)){options=undefined;}string=toString(string);options=assignInWith({},options,settings,assignInDefaults);var imports=assignInWith({},options.imports,settings.imports,assignInDefaults),importsKeys=keys(imports),importsValues=baseValues(imports,importsKeys);var isEscaping,isEvaluating,index=0,interpolate=options.interpolate||reNoMatch,source="__p += '";// Compile the regexp to match each delimiter.
	var reDelimiters=RegExp((options.escape||reNoMatch).source+'|'+interpolate.source+'|'+(interpolate===reInterpolate?reEsTemplate:reNoMatch).source+'|'+(options.evaluate||reNoMatch).source+'|$','g');// Use a sourceURL for easier debugging.
	var sourceURL='//# sourceURL='+('sourceURL'in options?options.sourceURL:'lodash.templateSources['+ ++templateCounter+']')+'\n';string.replace(reDelimiters,function(match,escapeValue,interpolateValue,esTemplateValue,evaluateValue,offset){interpolateValue||(interpolateValue=esTemplateValue);// Escape characters that can't be included in string literals.
	source+=string.slice(index,offset).replace(reUnescapedString,escapeStringChar);// Replace delimiters with snippets.
	if(escapeValue){isEscaping=true;source+="' +\n__e("+escapeValue+") +\n'";}if(evaluateValue){isEvaluating=true;source+="';\n"+evaluateValue+";\n__p += '";}if(interpolateValue){source+="' +\n((__t = ("+interpolateValue+")) == null ? '' : __t) +\n'";}index=offset+match.length;// The JS engine embedded in Adobe products needs `match` returned in
	// order to produce the correct `offset` value.
	return match;});source+="';\n";// If `variable` is not specified wrap a with-statement around the generated
	// code to add the data object to the top of the scope chain.
	var variable=options.variable;if(!variable){source='with (obj) {\n'+source+'\n}\n';}// Cleanup code by stripping empty strings.
	source=(isEvaluating?source.replace(reEmptyStringLeading,''):source).replace(reEmptyStringMiddle,'$1').replace(reEmptyStringTrailing,'$1;');// Frame code as the function body.
	source='function('+(variable||'obj')+') {\n'+(variable?'':'obj || (obj = {});\n')+"var __t, __p = ''"+(isEscaping?', __e = _.escape':'')+(isEvaluating?', __j = Array.prototype.join;\n'+"function print() { __p += __j.call(arguments, '') }\n":';\n')+source+'return __p\n}';var result=attempt(function(){return Function(importsKeys,sourceURL+'return '+source).apply(undefined,importsValues);});// Provide the compiled function's source by its `toString` method or
	// the `source` property as a convenience for inlining compiled templates.
	result.source=source;if(isError(result)){throw result;}return result;}/**
	     * Converts `string`, as a whole, to lower case just like
	     * [String#toLowerCase](https://mdn.io/toLowerCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.toLower('--Foo-Bar--');
	     * // => '--foo-bar--'
	     *
	     * _.toLower('fooBar');
	     * // => 'foobar'
	     *
	     * _.toLower('__FOO_BAR__');
	     * // => '__foo_bar__'
	     */function toLower(value){return toString(value).toLowerCase();}/**
	     * Converts `string`, as a whole, to upper case just like
	     * [String#toUpperCase](https://mdn.io/toUpperCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.toUpper('--foo-bar--');
	     * // => '--FOO-BAR--'
	     *
	     * _.toUpper('fooBar');
	     * // => 'FOOBAR'
	     *
	     * _.toUpper('__foo_bar__');
	     * // => '__FOO_BAR__'
	     */function toUpper(value){return toString(value).toUpperCase();}/**
	     * Removes leading and trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trim('  abc  ');
	     * // => 'abc'
	     *
	     * _.trim('-_-abc-_-', '_-');
	     * // => 'abc'
	     *
	     * _.map(['  foo  ', '  bar  '], _.trim);
	     * // => ['foo', 'bar']
	     */function trim(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined)){return string.replace(reTrim,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),chrSymbols=stringToArray(chars),start=charsStartIndex(strSymbols,chrSymbols),end=charsEndIndex(strSymbols,chrSymbols)+1;return castSlice(strSymbols,start,end).join('');}/**
	     * Removes trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimEnd('  abc  ');
	     * // => '  abc'
	     *
	     * _.trimEnd('-_-abc-_-', '_-');
	     * // => '-_-abc'
	     */function trimEnd(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined)){return string.replace(reTrimEnd,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),end=charsEndIndex(strSymbols,stringToArray(chars))+1;return castSlice(strSymbols,0,end).join('');}/**
	     * Removes leading whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimStart('  abc  ');
	     * // => 'abc  '
	     *
	     * _.trimStart('-_-abc-_-', '_-');
	     * // => 'abc-_-'
	     */function trimStart(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined)){return string.replace(reTrimStart,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),start=charsStartIndex(strSymbols,stringToArray(chars));return castSlice(strSymbols,start).join('');}/**
	     * Truncates `string` if it's longer than the given maximum string length.
	     * The last characters of the truncated string are replaced with the omission
	     * string which defaults to "...".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to truncate.
	     * @param {Object} [options={}] The options object.
	     * @param {number} [options.length=30] The maximum string length.
	     * @param {string} [options.omission='...'] The string to indicate text is omitted.
	     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
	     * @returns {string} Returns the truncated string.
	     * @example
	     *
	     * _.truncate('hi-diddly-ho there, neighborino');
	     * // => 'hi-diddly-ho there, neighbo...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': ' '
	     * });
	     * // => 'hi-diddly-ho there,...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': /,? +/
	     * });
	     * // => 'hi-diddly-ho there...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'omission': ' [...]'
	     * });
	     * // => 'hi-diddly-ho there, neig [...]'
	     */function truncate(string,options){var length=DEFAULT_TRUNC_LENGTH,omission=DEFAULT_TRUNC_OMISSION;if(isObject(options)){var separator='separator'in options?options.separator:separator;length='length'in options?toInteger(options.length):length;omission='omission'in options?baseToString(options.omission):omission;}string=toString(string);var strLength=string.length;if(hasUnicode(string)){var strSymbols=stringToArray(string);strLength=strSymbols.length;}if(length>=strLength){return string;}var end=length-stringSize(omission);if(end<1){return omission;}var result=strSymbols?castSlice(strSymbols,0,end).join(''):string.slice(0,end);if(separator===undefined){return result+omission;}if(strSymbols){end+=result.length-end;}if(isRegExp(separator)){if(string.slice(end).search(separator)){var match,substring=result;if(!separator.global){separator=RegExp(separator.source,toString(reFlags.exec(separator))+'g');}separator.lastIndex=0;while(match=separator.exec(substring)){var newEnd=match.index;}result=result.slice(0,newEnd===undefined?end:newEnd);}}else if(string.indexOf(baseToString(separator),end)!=end){var index=result.lastIndexOf(separator);if(index>-1){result=result.slice(0,index);}}return result+omission;}/**
	     * The inverse of `_.escape`; this method converts the HTML entities
	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
	     * their corresponding characters.
	     *
	     * **Note:** No other HTML entities are unescaped. To unescape additional
	     * HTML entities use a third-party library like [_he_](https://mths.be/he).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.6.0
	     * @category String
	     * @param {string} [string=''] The string to unescape.
	     * @returns {string} Returns the unescaped string.
	     * @example
	     *
	     * _.unescape('fred, barney, &amp; pebbles');
	     * // => 'fred, barney, & pebbles'
	     */function unescape(string){string=toString(string);return string&&reHasEscapedHtml.test(string)?string.replace(reEscapedHtml,unescapeHtmlChar):string;}/**
	     * Converts `string`, as space separated words, to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.upperCase('--foo-bar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('fooBar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('__foo_bar__');
	     * // => 'FOO BAR'
	     */var upperCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toUpperCase();});/**
	     * Converts the first character of `string` to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.upperFirst('fred');
	     * // => 'Fred'
	     *
	     * _.upperFirst('FRED');
	     * // => 'FRED'
	     */var upperFirst=createCaseFirst('toUpperCase');/**
	     * Splits `string` into an array of its words.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {RegExp|string} [pattern] The pattern to match words.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the words of `string`.
	     * @example
	     *
	     * _.words('fred, barney, & pebbles');
	     * // => ['fred', 'barney', 'pebbles']
	     *
	     * _.words('fred, barney, & pebbles', /[^, ]+/g);
	     * // => ['fred', 'barney', '&', 'pebbles']
	     */function words(string,pattern,guard){string=toString(string);pattern=guard?undefined:pattern;if(pattern===undefined){return hasUnicodeWord(string)?unicodeWords(string):asciiWords(string);}return string.match(pattern)||[];}/*------------------------------------------------------------------------*//**
	     * Attempts to invoke `func`, returning either the result or the caught error
	     * object. Any additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Function} func The function to attempt.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {*} Returns the `func` result or error object.
	     * @example
	     *
	     * // Avoid throwing errors for invalid selectors.
	     * var elements = _.attempt(function(selector) {
	     *   return document.querySelectorAll(selector);
	     * }, '>_>');
	     *
	     * if (_.isError(elements)) {
	     *   elements = [];
	     * }
	     */var attempt=baseRest(function(func,args){try{return apply(func,undefined,args);}catch(e){return isError(e)?e:new Error(e);}});/**
	     * Binds methods of an object to the object itself, overwriting the existing
	     * method.
	     *
	     * **Note:** This method doesn't set the "length" property of bound functions.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Object} object The object to bind and assign the bound methods to.
	     * @param {...(string|string[])} methodNames The object method names to bind.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'click': function() {
	     *     console.log('clicked ' + this.label);
	     *   }
	     * };
	     *
	     * _.bindAll(view, ['click']);
	     * jQuery(element).on('click', view.click);
	     * // => Logs 'clicked docs' when clicked.
	     */var bindAll=flatRest(function(object,methodNames){arrayEach(methodNames,function(key){key=toKey(key);baseAssignValue(object,key,bind(object[key],object));});return object;});/**
	     * Creates a function that iterates over `pairs` and invokes the corresponding
	     * function of the first predicate to return truthy. The predicate-function
	     * pairs are invoked with the `this` binding and arguments of the created
	     * function.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Array} pairs The predicate-function pairs.
	     * @returns {Function} Returns the new composite function.
	     * @example
	     *
	     * var func = _.cond([
	     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
	     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
	     *   [_.stubTrue,                      _.constant('no match')]
	     * ]);
	     *
	     * func({ 'a': 1, 'b': 2 });
	     * // => 'matches A'
	     *
	     * func({ 'a': 0, 'b': 1 });
	     * // => 'matches B'
	     *
	     * func({ 'a': '1', 'b': '2' });
	     * // => 'no match'
	     */function cond(pairs){var length=pairs?pairs.length:0,toIteratee=getIteratee();pairs=!length?[]:arrayMap(pairs,function(pair){if(typeof pair[1]!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return[toIteratee(pair[0]),pair[1]];});return baseRest(function(args){var index=-1;while(++index<length){var pair=pairs[index];if(apply(pair[0],this,args)){return apply(pair[1],this,args);}}});}/**
	     * Creates a function that invokes the predicate properties of `source` with
	     * the corresponding property values of a given object, returning `true` if
	     * all predicates return truthy, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.conformsTo` with
	     * `source` partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 2, 'b': 1 },
	     *   { 'a': 1, 'b': 2 }
	     * ];
	     *
	     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
	     * // => [{ 'a': 1, 'b': 2 }]
	     */function conforms(source){return baseConforms(baseClone(source,true));}/**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new constant function.
	     * @example
	     *
	     * var objects = _.times(2, _.constant({ 'a': 1 }));
	     *
	     * console.log(objects);
	     * // => [{ 'a': 1 }, { 'a': 1 }]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => true
	     */function constant(value){return function(){return value;};}/**
	     * Checks `value` to determine whether a default value should be returned in
	     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
	     * or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Util
	     * @param {*} value The value to check.
	     * @param {*} defaultValue The default value.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * _.defaultTo(1, 10);
	     * // => 1
	     *
	     * _.defaultTo(undefined, 10);
	     * // => 10
	     */function defaultTo(value,defaultValue){return value==null||value!==value?defaultValue:value;}/**
	     * Creates a function that returns the result of invoking the given functions
	     * with the `this` binding of the created function, where each successive
	     * invocation is supplied the return value of the previous.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flowRight
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flow([_.add, square]);
	     * addSquare(1, 2);
	     * // => 9
	     */var flow=createFlow();/**
	     * This method is like `_.flow` except that it creates a function that
	     * invokes the given functions from right to left.
	     *
	     * @static
	     * @since 3.0.0
	     * @memberOf _
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flow
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flowRight([square, _.add]);
	     * addSquare(1, 2);
	     * // => 9
	     */var flowRight=createFlow(true);/**
	     * This method returns the first argument it receives.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     *
	     * console.log(_.identity(object) === object);
	     * // => true
	     */function identity(value){return value;}/**
	     * Creates a function that invokes `func` with the arguments of the created
	     * function. If `func` is a property name, the created function returns the
	     * property value for a given element. If `func` is an array or object, the
	     * created function returns `true` for elements that contain the equivalent
	     * source properties, otherwise it returns `false`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Util
	     * @param {*} [func=_.identity] The value to convert to a callback.
	     * @returns {Function} Returns the callback.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
	     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, _.iteratee(['user', 'fred']));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, _.iteratee('user'));
	     * // => ['barney', 'fred']
	     *
	     * // Create custom iteratee shorthands.
	     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
	     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
	     *     return func.test(string);
	     *   };
	     * });
	     *
	     * _.filter(['abc', 'def'], /ef/);
	     * // => ['def']
	     */function iteratee(func){return baseIteratee(typeof func=='function'?func:baseClone(func,true));}/**
	     * Creates a function that performs a partial deep comparison between a given
	     * object and `source`, returning `true` if the given object has equivalent
	     * property values, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.isMatch` with `source`
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
	     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
	     */function matches(source){return baseMatches(baseClone(source,true));}/**
	     * Creates a function that performs a partial deep comparison between the
	     * value at `path` of a given object to `srcValue`, returning `true` if the
	     * object value is equivalent, else `false`.
	     *
	     * **Note:** Partial comparisons will match empty array and empty object
	     * `srcValue` values against any array or object value, respectively. See
	     * `_.isEqual` for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.find(objects, _.matchesProperty('a', 4));
	     * // => { 'a': 4, 'b': 5, 'c': 6 }
	     */function matchesProperty(path,srcValue){return baseMatchesProperty(path,baseClone(srcValue,true));}/**
	     * Creates a function that invokes the method at `path` of a given object.
	     * Any additional arguments are provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': _.constant(2) } },
	     *   { 'a': { 'b': _.constant(1) } }
	     * ];
	     *
	     * _.map(objects, _.method('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(objects, _.method(['a', 'b']));
	     * // => [2, 1]
	     */var method=baseRest(function(path,args){return function(object){return baseInvoke(object,path,args);};});/**
	     * The opposite of `_.method`; this method creates a function that invokes
	     * the method at a given path of `object`. Any additional arguments are
	     * provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var array = _.times(3, _.constant),
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
	     * // => [2, 0]
	     */var methodOf=baseRest(function(object,args){return function(path){return baseInvoke(object,path,args);};});/**
	     * Adds all own enumerable string keyed function properties of a source
	     * object to the destination object. If `object` is a function, then methods
	     * are added to its prototype as well.
	     *
	     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
	     * avoid conflicts caused by modifying the original.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Function|Object} [object=lodash] The destination object.
	     * @param {Object} source The object of functions to add.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
	     * @returns {Function|Object} Returns `object`.
	     * @example
	     *
	     * function vowels(string) {
	     *   return _.filter(string, function(v) {
	     *     return /[aeiou]/i.test(v);
	     *   });
	     * }
	     *
	     * _.mixin({ 'vowels': vowels });
	     * _.vowels('fred');
	     * // => ['e']
	     *
	     * _('fred').vowels().value();
	     * // => ['e']
	     *
	     * _.mixin({ 'vowels': vowels }, { 'chain': false });
	     * _('fred').vowels();
	     * // => ['e']
	     */function mixin(object,source,options){var props=keys(source),methodNames=baseFunctions(source,props);if(options==null&&!(isObject(source)&&(methodNames.length||!props.length))){options=source;source=object;object=this;methodNames=baseFunctions(source,keys(source));}var chain=!(isObject(options)&&'chain'in options)||!!options.chain,isFunc=isFunction(object);arrayEach(methodNames,function(methodName){var func=source[methodName];object[methodName]=func;if(isFunc){object.prototype[methodName]=function(){var chainAll=this.__chain__;if(chain||chainAll){var result=object(this.__wrapped__),actions=result.__actions__=copyArray(this.__actions__);actions.push({'func':func,'args':arguments,'thisArg':object});result.__chain__=chainAll;return result;}return func.apply(object,arrayPush([this.value()],arguments));};}});return object;}/**
	     * Reverts the `_` variable to its previous value and returns a reference to
	     * the `lodash` function.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @returns {Function} Returns the `lodash` function.
	     * @example
	     *
	     * var lodash = _.noConflict();
	     */function noConflict(){if(root._===this){root._=oldDash;}return this;}/**
	     * This method returns `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Util
	     * @example
	     *
	     * _.times(2, _.noop);
	     * // => [undefined, undefined]
	     */function noop(){}// No operation performed.
	/**
	     * Creates a function that gets the argument at index `n`. If `n` is negative,
	     * the nth argument from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [n=0] The index of the argument to return.
	     * @returns {Function} Returns the new pass-thru function.
	     * @example
	     *
	     * var func = _.nthArg(1);
	     * func('a', 'b', 'c', 'd');
	     * // => 'b'
	     *
	     * var func = _.nthArg(-2);
	     * func('a', 'b', 'c', 'd');
	     * // => 'c'
	     */function nthArg(n){n=toInteger(n);return baseRest(function(args){return baseNth(args,n);});}/**
	     * Creates a function that invokes `iteratees` with the arguments it receives
	     * and returns their results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.over([Math.max, Math.min]);
	     *
	     * func(1, 2, 3, 4);
	     * // => [4, 1]
	     */var over=createOver(arrayMap);/**
	     * Creates a function that checks if **all** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overEvery([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => false
	     *
	     * func(NaN);
	     * // => false
	     */var overEvery=createOver(arrayEvery);/**
	     * Creates a function that checks if **any** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overSome([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => true
	     *
	     * func(NaN);
	     * // => false
	     */var overSome=createOver(arraySome);/**
	     * Creates a function that returns the value at `path` of a given object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': 2 } },
	     *   { 'a': { 'b': 1 } }
	     * ];
	     *
	     * _.map(objects, _.property('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	     * // => [1, 2]
	     */function property(path){return isKey(path)?baseProperty(toKey(path)):basePropertyDeep(path);}/**
	     * The opposite of `_.property`; this method creates a function that returns
	     * the value at a given path of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var array = [0, 1, 2],
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
	     * // => [2, 0]
	     */function propertyOf(object){return function(path){return object==null?undefined:baseGet(object,path);};}/**
	     * Creates an array of numbers (positive and/or negative) progressing from
	     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	     * `start` is specified without an `end` or `step`. If `end` is not specified,
	     * it's set to `start` with `start` then set to `0`.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.rangeRight
	     * @example
	     *
	     * _.range(4);
	     * // => [0, 1, 2, 3]
	     *
	     * _.range(-4);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 5);
	     * // => [1, 2, 3, 4]
	     *
	     * _.range(0, 20, 5);
	     * // => [0, 5, 10, 15]
	     *
	     * _.range(0, -4, -1);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.range(0);
	     * // => []
	     */var range=createRange();/**
	     * This method is like `_.range` except that it populates values in
	     * descending order.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.range
	     * @example
	     *
	     * _.rangeRight(4);
	     * // => [3, 2, 1, 0]
	     *
	     * _.rangeRight(-4);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 5);
	     * // => [4, 3, 2, 1]
	     *
	     * _.rangeRight(0, 20, 5);
	     * // => [15, 10, 5, 0]
	     *
	     * _.rangeRight(0, -4, -1);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.rangeRight(0);
	     * // => []
	     */var rangeRight=createRange(true);/**
	     * This method returns a new empty array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Array} Returns the new empty array.
	     * @example
	     *
	     * var arrays = _.times(2, _.stubArray);
	     *
	     * console.log(arrays);
	     * // => [[], []]
	     *
	     * console.log(arrays[0] === arrays[1]);
	     * // => false
	     */function stubArray(){return[];}/**
	     * This method returns `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `false`.
	     * @example
	     *
	     * _.times(2, _.stubFalse);
	     * // => [false, false]
	     */function stubFalse(){return false;}/**
	     * This method returns a new empty object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Object} Returns the new empty object.
	     * @example
	     *
	     * var objects = _.times(2, _.stubObject);
	     *
	     * console.log(objects);
	     * // => [{}, {}]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => false
	     */function stubObject(){return{};}/**
	     * This method returns an empty string.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {string} Returns the empty string.
	     * @example
	     *
	     * _.times(2, _.stubString);
	     * // => ['', '']
	     */function stubString(){return'';}/**
	     * This method returns `true`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `true`.
	     * @example
	     *
	     * _.times(2, _.stubTrue);
	     * // => [true, true]
	     */function stubTrue(){return true;}/**
	     * Invokes the iteratee `n` times, returning an array of the results of
	     * each invocation. The iteratee is invoked with one argument; (index).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} n The number of times to invoke `iteratee`.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.times(3, String);
	     * // => ['0', '1', '2']
	     *
	     *  _.times(4, _.constant(0));
	     * // => [0, 0, 0, 0]
	     */function times(n,iteratee){n=toInteger(n);if(n<1||n>MAX_SAFE_INTEGER){return[];}var index=MAX_ARRAY_LENGTH,length=nativeMin(n,MAX_ARRAY_LENGTH);iteratee=getIteratee(iteratee);n-=MAX_ARRAY_LENGTH;var result=baseTimes(length,iteratee);while(++index<n){iteratee(index);}return result;}/**
	     * Converts `value` to a property path array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the new property path array.
	     * @example
	     *
	     * _.toPath('a.b.c');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toPath('a[0].b.c');
	     * // => ['a', '0', 'b', 'c']
	     */function toPath(value){if(isArray(value)){return arrayMap(value,toKey);}return isSymbol(value)?[value]:copyArray(stringToPath(value));}/**
	     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {string} [prefix=''] The value to prefix the ID with.
	     * @returns {string} Returns the unique ID.
	     * @example
	     *
	     * _.uniqueId('contact_');
	     * // => 'contact_104'
	     *
	     * _.uniqueId();
	     * // => '105'
	     */function uniqueId(prefix){var id=++idCounter;return toString(prefix)+id;}/*------------------------------------------------------------------------*//**
	     * Adds two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {number} augend The first number in an addition.
	     * @param {number} addend The second number in an addition.
	     * @returns {number} Returns the total.
	     * @example
	     *
	     * _.add(6, 4);
	     * // => 10
	     */var add=createMathOperation(function(augend,addend){return augend+addend;},0);/**
	     * Computes `number` rounded up to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round up.
	     * @param {number} [precision=0] The precision to round up to.
	     * @returns {number} Returns the rounded up number.
	     * @example
	     *
	     * _.ceil(4.006);
	     * // => 5
	     *
	     * _.ceil(6.004, 2);
	     * // => 6.01
	     *
	     * _.ceil(6040, -2);
	     * // => 6100
	     */var ceil=createRound('ceil');/**
	     * Divide two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} dividend The first number in a division.
	     * @param {number} divisor The second number in a division.
	     * @returns {number} Returns the quotient.
	     * @example
	     *
	     * _.divide(6, 4);
	     * // => 1.5
	     */var divide=createMathOperation(function(dividend,divisor){return dividend/divisor;},1);/**
	     * Computes `number` rounded down to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round down.
	     * @param {number} [precision=0] The precision to round down to.
	     * @returns {number} Returns the rounded down number.
	     * @example
	     *
	     * _.floor(4.006);
	     * // => 4
	     *
	     * _.floor(0.046, 2);
	     * // => 0.04
	     *
	     * _.floor(4060, -2);
	     * // => 4000
	     */var floor=createRound('floor');/**
	     * Computes the maximum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * _.max([4, 2, 8, 6]);
	     * // => 8
	     *
	     * _.max([]);
	     * // => undefined
	     */function max(array){return array&&array.length?baseExtremum(array,identity,baseGt):undefined;}/**
	     * This method is like `_.max` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.maxBy(objects, function(o) { return o.n; });
	     * // => { 'n': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.maxBy(objects, 'n');
	     * // => { 'n': 2 }
	     */function maxBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee,2),baseGt):undefined;}/**
	     * Computes the mean of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * _.mean([4, 2, 8, 6]);
	     * // => 5
	     */function mean(array){return baseMean(array,identity);}/**
	     * This method is like `_.mean` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be averaged.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.meanBy(objects, function(o) { return o.n; });
	     * // => 5
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.meanBy(objects, 'n');
	     * // => 5
	     */function meanBy(array,iteratee){return baseMean(array,getIteratee(iteratee,2));}/**
	     * Computes the minimum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * _.min([4, 2, 8, 6]);
	     * // => 2
	     *
	     * _.min([]);
	     * // => undefined
	     */function min(array){return array&&array.length?baseExtremum(array,identity,baseLt):undefined;}/**
	     * This method is like `_.min` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.minBy(objects, function(o) { return o.n; });
	     * // => { 'n': 1 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.minBy(objects, 'n');
	     * // => { 'n': 1 }
	     */function minBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee,2),baseLt):undefined;}/**
	     * Multiply two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} multiplier The first number in a multiplication.
	     * @param {number} multiplicand The second number in a multiplication.
	     * @returns {number} Returns the product.
	     * @example
	     *
	     * _.multiply(6, 4);
	     * // => 24
	     */var multiply=createMathOperation(function(multiplier,multiplicand){return multiplier*multiplicand;},1);/**
	     * Computes `number` rounded to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round.
	     * @param {number} [precision=0] The precision to round to.
	     * @returns {number} Returns the rounded number.
	     * @example
	     *
	     * _.round(4.006);
	     * // => 4
	     *
	     * _.round(4.006, 2);
	     * // => 4.01
	     *
	     * _.round(4060, -2);
	     * // => 4100
	     */var round=createRound('round');/**
	     * Subtract two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {number} minuend The first number in a subtraction.
	     * @param {number} subtrahend The second number in a subtraction.
	     * @returns {number} Returns the difference.
	     * @example
	     *
	     * _.subtract(6, 4);
	     * // => 2
	     */var subtract=createMathOperation(function(minuend,subtrahend){return minuend-subtrahend;},0);/**
	     * Computes the sum of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * _.sum([4, 2, 8, 6]);
	     * // => 20
	     */function sum(array){return array&&array.length?baseSum(array,identity):0;}/**
	     * This method is like `_.sum` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be summed.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.sumBy(objects, function(o) { return o.n; });
	     * // => 20
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sumBy(objects, 'n');
	     * // => 20
	     */function sumBy(array,iteratee){return array&&array.length?baseSum(array,getIteratee(iteratee,2)):0;}/*------------------------------------------------------------------------*/// Add methods that return wrapped values in chain sequences.
	lodash.after=after;lodash.ary=ary;lodash.assign=assign;lodash.assignIn=assignIn;lodash.assignInWith=assignInWith;lodash.assignWith=assignWith;lodash.at=at;lodash.before=before;lodash.bind=bind;lodash.bindAll=bindAll;lodash.bindKey=bindKey;lodash.castArray=castArray;lodash.chain=chain;lodash.chunk=chunk;lodash.compact=compact;lodash.concat=concat;lodash.cond=cond;lodash.conforms=conforms;lodash.constant=constant;lodash.countBy=countBy;lodash.create=create;lodash.curry=curry;lodash.curryRight=curryRight;lodash.debounce=debounce;lodash.defaults=defaults;lodash.defaultsDeep=defaultsDeep;lodash.defer=defer;lodash.delay=delay;lodash.difference=difference;lodash.differenceBy=differenceBy;lodash.differenceWith=differenceWith;lodash.drop=drop;lodash.dropRight=dropRight;lodash.dropRightWhile=dropRightWhile;lodash.dropWhile=dropWhile;lodash.fill=fill;lodash.filter=filter;lodash.flatMap=flatMap;lodash.flatMapDeep=flatMapDeep;lodash.flatMapDepth=flatMapDepth;lodash.flatten=flatten;lodash.flattenDeep=flattenDeep;lodash.flattenDepth=flattenDepth;lodash.flip=flip;lodash.flow=flow;lodash.flowRight=flowRight;lodash.fromPairs=fromPairs;lodash.functions=functions;lodash.functionsIn=functionsIn;lodash.groupBy=groupBy;lodash.initial=initial;lodash.intersection=intersection;lodash.intersectionBy=intersectionBy;lodash.intersectionWith=intersectionWith;lodash.invert=invert;lodash.invertBy=invertBy;lodash.invokeMap=invokeMap;lodash.iteratee=iteratee;lodash.keyBy=keyBy;lodash.keys=keys;lodash.keysIn=keysIn;lodash.map=map;lodash.mapKeys=mapKeys;lodash.mapValues=mapValues;lodash.matches=matches;lodash.matchesProperty=matchesProperty;lodash.memoize=memoize;lodash.merge=merge;lodash.mergeWith=mergeWith;lodash.method=method;lodash.methodOf=methodOf;lodash.mixin=mixin;lodash.negate=negate;lodash.nthArg=nthArg;lodash.omit=omit;lodash.omitBy=omitBy;lodash.once=once;lodash.orderBy=orderBy;lodash.over=over;lodash.overArgs=overArgs;lodash.overEvery=overEvery;lodash.overSome=overSome;lodash.partial=partial;lodash.partialRight=partialRight;lodash.partition=partition;lodash.pick=pick;lodash.pickBy=pickBy;lodash.property=property;lodash.propertyOf=propertyOf;lodash.pull=pull;lodash.pullAll=pullAll;lodash.pullAllBy=pullAllBy;lodash.pullAllWith=pullAllWith;lodash.pullAt=pullAt;lodash.range=range;lodash.rangeRight=rangeRight;lodash.rearg=rearg;lodash.reject=reject;lodash.remove=remove;lodash.rest=rest;lodash.reverse=reverse;lodash.sampleSize=sampleSize;lodash.set=set;lodash.setWith=setWith;lodash.shuffle=shuffle;lodash.slice=slice;lodash.sortBy=sortBy;lodash.sortedUniq=sortedUniq;lodash.sortedUniqBy=sortedUniqBy;lodash.split=split;lodash.spread=spread;lodash.tail=tail;lodash.take=take;lodash.takeRight=takeRight;lodash.takeRightWhile=takeRightWhile;lodash.takeWhile=takeWhile;lodash.tap=tap;lodash.throttle=throttle;lodash.thru=thru;lodash.toArray=toArray;lodash.toPairs=toPairs;lodash.toPairsIn=toPairsIn;lodash.toPath=toPath;lodash.toPlainObject=toPlainObject;lodash.transform=transform;lodash.unary=unary;lodash.union=union;lodash.unionBy=unionBy;lodash.unionWith=unionWith;lodash.uniq=uniq;lodash.uniqBy=uniqBy;lodash.uniqWith=uniqWith;lodash.unset=unset;lodash.unzip=unzip;lodash.unzipWith=unzipWith;lodash.update=update;lodash.updateWith=updateWith;lodash.values=values;lodash.valuesIn=valuesIn;lodash.without=without;lodash.words=words;lodash.wrap=wrap;lodash.xor=xor;lodash.xorBy=xorBy;lodash.xorWith=xorWith;lodash.zip=zip;lodash.zipObject=zipObject;lodash.zipObjectDeep=zipObjectDeep;lodash.zipWith=zipWith;// Add aliases.
	lodash.entries=toPairs;lodash.entriesIn=toPairsIn;lodash.extend=assignIn;lodash.extendWith=assignInWith;// Add methods to `lodash.prototype`.
	mixin(lodash,lodash);/*------------------------------------------------------------------------*/// Add methods that return unwrapped values in chain sequences.
	lodash.add=add;lodash.attempt=attempt;lodash.camelCase=camelCase;lodash.capitalize=capitalize;lodash.ceil=ceil;lodash.clamp=clamp;lodash.clone=clone;lodash.cloneDeep=cloneDeep;lodash.cloneDeepWith=cloneDeepWith;lodash.cloneWith=cloneWith;lodash.conformsTo=conformsTo;lodash.deburr=deburr;lodash.defaultTo=defaultTo;lodash.divide=divide;lodash.endsWith=endsWith;lodash.eq=eq;lodash.escape=escape;lodash.escapeRegExp=escapeRegExp;lodash.every=every;lodash.find=find;lodash.findIndex=findIndex;lodash.findKey=findKey;lodash.findLast=findLast;lodash.findLastIndex=findLastIndex;lodash.findLastKey=findLastKey;lodash.floor=floor;lodash.forEach=forEach;lodash.forEachRight=forEachRight;lodash.forIn=forIn;lodash.forInRight=forInRight;lodash.forOwn=forOwn;lodash.forOwnRight=forOwnRight;lodash.get=get;lodash.gt=gt;lodash.gte=gte;lodash.has=has;lodash.hasIn=hasIn;lodash.head=head;lodash.identity=identity;lodash.includes=includes;lodash.indexOf=indexOf;lodash.inRange=inRange;lodash.invoke=invoke;lodash.isArguments=isArguments;lodash.isArray=isArray;lodash.isArrayBuffer=isArrayBuffer;lodash.isArrayLike=isArrayLike;lodash.isArrayLikeObject=isArrayLikeObject;lodash.isBoolean=isBoolean;lodash.isBuffer=isBuffer;lodash.isDate=isDate;lodash.isElement=isElement;lodash.isEmpty=isEmpty;lodash.isEqual=isEqual;lodash.isEqualWith=isEqualWith;lodash.isError=isError;lodash.isFinite=isFinite;lodash.isFunction=isFunction;lodash.isInteger=isInteger;lodash.isLength=isLength;lodash.isMap=isMap;lodash.isMatch=isMatch;lodash.isMatchWith=isMatchWith;lodash.isNaN=isNaN;lodash.isNative=isNative;lodash.isNil=isNil;lodash.isNull=isNull;lodash.isNumber=isNumber;lodash.isObject=isObject;lodash.isObjectLike=isObjectLike;lodash.isPlainObject=isPlainObject;lodash.isRegExp=isRegExp;lodash.isSafeInteger=isSafeInteger;lodash.isSet=isSet;lodash.isString=isString;lodash.isSymbol=isSymbol;lodash.isTypedArray=isTypedArray;lodash.isUndefined=isUndefined;lodash.isWeakMap=isWeakMap;lodash.isWeakSet=isWeakSet;lodash.join=join;lodash.kebabCase=kebabCase;lodash.last=last;lodash.lastIndexOf=lastIndexOf;lodash.lowerCase=lowerCase;lodash.lowerFirst=lowerFirst;lodash.lt=lt;lodash.lte=lte;lodash.max=max;lodash.maxBy=maxBy;lodash.mean=mean;lodash.meanBy=meanBy;lodash.min=min;lodash.minBy=minBy;lodash.stubArray=stubArray;lodash.stubFalse=stubFalse;lodash.stubObject=stubObject;lodash.stubString=stubString;lodash.stubTrue=stubTrue;lodash.multiply=multiply;lodash.nth=nth;lodash.noConflict=noConflict;lodash.noop=noop;lodash.now=now;lodash.pad=pad;lodash.padEnd=padEnd;lodash.padStart=padStart;lodash.parseInt=parseInt;lodash.random=random;lodash.reduce=reduce;lodash.reduceRight=reduceRight;lodash.repeat=repeat;lodash.replace=replace;lodash.result=result;lodash.round=round;lodash.runInContext=runInContext;lodash.sample=sample;lodash.size=size;lodash.snakeCase=snakeCase;lodash.some=some;lodash.sortedIndex=sortedIndex;lodash.sortedIndexBy=sortedIndexBy;lodash.sortedIndexOf=sortedIndexOf;lodash.sortedLastIndex=sortedLastIndex;lodash.sortedLastIndexBy=sortedLastIndexBy;lodash.sortedLastIndexOf=sortedLastIndexOf;lodash.startCase=startCase;lodash.startsWith=startsWith;lodash.subtract=subtract;lodash.sum=sum;lodash.sumBy=sumBy;lodash.template=template;lodash.times=times;lodash.toFinite=toFinite;lodash.toInteger=toInteger;lodash.toLength=toLength;lodash.toLower=toLower;lodash.toNumber=toNumber;lodash.toSafeInteger=toSafeInteger;lodash.toString=toString;lodash.toUpper=toUpper;lodash.trim=trim;lodash.trimEnd=trimEnd;lodash.trimStart=trimStart;lodash.truncate=truncate;lodash.unescape=unescape;lodash.uniqueId=uniqueId;lodash.upperCase=upperCase;lodash.upperFirst=upperFirst;// Add aliases.
	lodash.each=forEach;lodash.eachRight=forEachRight;lodash.first=head;mixin(lodash,function(){var source={};baseForOwn(lodash,function(func,methodName){if(!hasOwnProperty.call(lodash.prototype,methodName)){source[methodName]=func;}});return source;}(),{'chain':false});/*------------------------------------------------------------------------*//**
	     * The semantic version number.
	     *
	     * @static
	     * @memberOf _
	     * @type {string}
	     */lodash.VERSION=VERSION;// Assign default placeholders.
	arrayEach(['bind','bindKey','curry','curryRight','partial','partialRight'],function(methodName){lodash[methodName].placeholder=lodash;});// Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
	arrayEach(['drop','take'],function(methodName,index){LazyWrapper.prototype[methodName]=function(n){var filtered=this.__filtered__;if(filtered&&!index){return new LazyWrapper(this);}n=n===undefined?1:nativeMax(toInteger(n),0);var result=this.clone();if(filtered){result.__takeCount__=nativeMin(n,result.__takeCount__);}else{result.__views__.push({'size':nativeMin(n,MAX_ARRAY_LENGTH),'type':methodName+(result.__dir__<0?'Right':'')});}return result;};LazyWrapper.prototype[methodName+'Right']=function(n){return this.reverse()[methodName](n).reverse();};});// Add `LazyWrapper` methods that accept an `iteratee` value.
	arrayEach(['filter','map','takeWhile'],function(methodName,index){var type=index+1,isFilter=type==LAZY_FILTER_FLAG||type==LAZY_WHILE_FLAG;LazyWrapper.prototype[methodName]=function(iteratee){var result=this.clone();result.__iteratees__.push({'iteratee':getIteratee(iteratee,3),'type':type});result.__filtered__=result.__filtered__||isFilter;return result;};});// Add `LazyWrapper` methods for `_.head` and `_.last`.
	arrayEach(['head','last'],function(methodName,index){var takeName='take'+(index?'Right':'');LazyWrapper.prototype[methodName]=function(){return this[takeName](1).value()[0];};});// Add `LazyWrapper` methods for `_.initial` and `_.tail`.
	arrayEach(['initial','tail'],function(methodName,index){var dropName='drop'+(index?'':'Right');LazyWrapper.prototype[methodName]=function(){return this.__filtered__?new LazyWrapper(this):this[dropName](1);};});LazyWrapper.prototype.compact=function(){return this.filter(identity);};LazyWrapper.prototype.find=function(predicate){return this.filter(predicate).head();};LazyWrapper.prototype.findLast=function(predicate){return this.reverse().find(predicate);};LazyWrapper.prototype.invokeMap=baseRest(function(path,args){if(typeof path=='function'){return new LazyWrapper(this);}return this.map(function(value){return baseInvoke(value,path,args);});});LazyWrapper.prototype.reject=function(predicate){return this.filter(negate(getIteratee(predicate)));};LazyWrapper.prototype.slice=function(start,end){start=toInteger(start);var result=this;if(result.__filtered__&&(start>0||end<0)){return new LazyWrapper(result);}if(start<0){result=result.takeRight(-start);}else if(start){result=result.drop(start);}if(end!==undefined){end=toInteger(end);result=end<0?result.dropRight(-end):result.take(end-start);}return result;};LazyWrapper.prototype.takeRightWhile=function(predicate){return this.reverse().takeWhile(predicate).reverse();};LazyWrapper.prototype.toArray=function(){return this.take(MAX_ARRAY_LENGTH);};// Add `LazyWrapper` methods to `lodash.prototype`.
	baseForOwn(LazyWrapper.prototype,function(func,methodName){var checkIteratee=/^(?:filter|find|map|reject)|While$/.test(methodName),isTaker=/^(?:head|last)$/.test(methodName),lodashFunc=lodash[isTaker?'take'+(methodName=='last'?'Right':''):methodName],retUnwrapped=isTaker||/^find/.test(methodName);if(!lodashFunc){return;}lodash.prototype[methodName]=function(){var value=this.__wrapped__,args=isTaker?[1]:arguments,isLazy=value instanceof LazyWrapper,iteratee=args[0],useLazy=isLazy||isArray(value);var interceptor=function interceptor(value){var result=lodashFunc.apply(lodash,arrayPush([value],args));return isTaker&&chainAll?result[0]:result;};if(useLazy&&checkIteratee&&typeof iteratee=='function'&&iteratee.length!=1){// Avoid lazy use if the iteratee has a "length" value other than `1`.
	isLazy=useLazy=false;}var chainAll=this.__chain__,isHybrid=!!this.__actions__.length,isUnwrapped=retUnwrapped&&!chainAll,onlyLazy=isLazy&&!isHybrid;if(!retUnwrapped&&useLazy){value=onlyLazy?value:new LazyWrapper(this);var result=func.apply(value,args);result.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined});return new LodashWrapper(result,chainAll);}if(isUnwrapped&&onlyLazy){return func.apply(this,args);}result=this.thru(interceptor);return isUnwrapped?isTaker?result.value()[0]:result.value():result;};});// Add `Array` methods to `lodash.prototype`.
	arrayEach(['pop','push','shift','sort','splice','unshift'],function(methodName){var func=arrayProto[methodName],chainName=/^(?:push|sort|unshift)$/.test(methodName)?'tap':'thru',retUnwrapped=/^(?:pop|shift)$/.test(methodName);lodash.prototype[methodName]=function(){var args=arguments;if(retUnwrapped&&!this.__chain__){var value=this.value();return func.apply(isArray(value)?value:[],args);}return this[chainName](function(value){return func.apply(isArray(value)?value:[],args);});};});// Map minified method names to their real names.
	baseForOwn(LazyWrapper.prototype,function(func,methodName){var lodashFunc=lodash[methodName];if(lodashFunc){var key=lodashFunc.name+'',names=realNames[key]||(realNames[key]=[]);names.push({'name':methodName,'func':lodashFunc});}});realNames[createHybrid(undefined,BIND_KEY_FLAG).name]=[{'name':'wrapper','func':undefined}];// Add methods to `LazyWrapper`.
	LazyWrapper.prototype.clone=lazyClone;LazyWrapper.prototype.reverse=lazyReverse;LazyWrapper.prototype.value=lazyValue;// Add chain sequence methods to the `lodash` wrapper.
	lodash.prototype.at=wrapperAt;lodash.prototype.chain=wrapperChain;lodash.prototype.commit=wrapperCommit;lodash.prototype.next=wrapperNext;lodash.prototype.plant=wrapperPlant;lodash.prototype.reverse=wrapperReverse;lodash.prototype.toJSON=lodash.prototype.valueOf=lodash.prototype.value=wrapperValue;// Add lazy aliases.
	lodash.prototype.first=lodash.prototype.head;if(iteratorSymbol){lodash.prototype[iteratorSymbol]=wrapperToIterator;}return lodash;};/*--------------------------------------------------------------------------*/// Export lodash.
	var _=runInContext();// Some AMD build optimizers, like r.js, check for condition patterns like:
	if("function"=='function'&&_typeof(__webpack_require__(360))=='object'&&__webpack_require__(360)){// Expose Lodash on the global object to prevent errors when Lodash is
	// loaded by a script tag in the presence of an AMD loader.
	// See http://requirejs.org/docs/errors.html#mismatch for more details.
	// Use `_.noConflict` to remove Lodash from the global object.
	root._=_;// Define as an anonymous module so, through path mapping, it can be
	// referenced as the "underscore" module.
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function(){return _;}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));}// Check for `exports` after `define` in case a build optimizer adds it.
	else if(freeModule){// Export for Node.js.
	(freeModule.exports=_)._=_;// Export for CommonJS support.
	freeExports._=_;}else{// Export to the global object.
	root._=_;}}).call(undefined);
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(178)(module)))

/***/ },
/* 360 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;

	/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _lodash = __webpack_require__(359);

	var _lodash2 = _interopRequireDefault(_lodash);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function coreNLP(text, opts) {
	  opts = _lodash2.default.merge({}, coreNLP.DEFAULT_OPTS, opts);
	  var url = new URL(opts.url);
	  url.searchParams.append('properties', JSON.stringify(opts.props));
	  return fetch(url, Object.assign({ body: text }, opts.req)).then(function (res) {
	    return res.json();
	  });
	}
	coreNLP.DEFAULT_OPTS = {
	  url: ({}).CORENLP_URL || 'http://corenlp.run',
	  req: { method: 'POST', mode: 'cors' },
	  props: {
	    annotators: 'tokenize,ssplit,pos,ner,depparse,openie'
	  }
	};

	exports.default = coreNLP;

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(363);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(365)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./../../sass-loader/index.js!./quill.core.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./../../sass-loader/index.js!./quill.core.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(364)();
	// imports


	// module
	exports.push([module.id, "/*!\n * Quill Editor v1.0.6\n * https://quilljs.com/\n * Copyright (c) 2014, Jason Chen\n * Copyright (c) 2013, salesforce.com\n */\n.ql-container {\n  box-sizing: border-box;\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 13px;\n  height: 100%;\n  margin: 0px;\n  position: relative; }\n\n.ql-clipboard {\n  left: -100000px;\n  height: 1px;\n  overflow-y: hidden;\n  position: absolute;\n  top: 50%; }\n\n.ql-clipboard p {\n  margin: 0;\n  padding: 0; }\n\n.ql-editor {\n  box-sizing: border-box;\n  cursor: text;\n  line-height: 1.42;\n  height: 100%;\n  outline: none;\n  overflow-y: auto;\n  padding: 12px 15px;\n  tab-size: 4;\n  -moz-tab-size: 4;\n  text-align: left;\n  white-space: pre-wrap;\n  word-wrap: break-word; }\n\n.ql-editor p,\n.ql-editor ol,\n.ql-editor ul,\n.ql-editor pre,\n.ql-editor blockquote,\n.ql-editor h1,\n.ql-editor h2,\n.ql-editor h3,\n.ql-editor h4,\n.ql-editor h5,\n.ql-editor h6 {\n  margin: 0;\n  padding: 0;\n  counter-reset: list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9; }\n\n.ql-editor ol,\n.ql-editor ul {\n  padding-left: 1.5em; }\n\n.ql-editor ol > li,\n.ql-editor ul > li {\n  list-style-type: none; }\n\n.ql-editor ul > li::before {\n  content: '\\25CF'; }\n\n.ql-editor li::before {\n  display: inline-block;\n  margin-right: 0.3em;\n  text-align: right;\n  white-space: nowrap;\n  width: 1.2em; }\n\n.ql-editor li:not(.ql-direction-rtl)::before {\n  margin-left: -1.5em; }\n\n.ql-editor ol li,\n.ql-editor ul li {\n  padding-left: 1.5em; }\n\n.ql-editor ol li {\n  counter-reset: list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9;\n  counter-increment: list-num; }\n\n.ql-editor ol li:before {\n  content: counter(list-num, decimal) \". \"; }\n\n.ql-editor ol li.ql-indent-1 {\n  counter-increment: list-1; }\n\n.ql-editor ol li.ql-indent-1:before {\n  content: counter(list-1, lower-alpha) \". \"; }\n\n.ql-editor ol li.ql-indent-1 {\n  counter-reset: list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9; }\n\n.ql-editor ol li.ql-indent-2 {\n  counter-increment: list-2; }\n\n.ql-editor ol li.ql-indent-2:before {\n  content: counter(list-2, lower-roman) \". \"; }\n\n.ql-editor ol li.ql-indent-2 {\n  counter-reset: list-3 list-4 list-5 list-6 list-7 list-8 list-9; }\n\n.ql-editor ol li.ql-indent-3 {\n  counter-increment: list-3; }\n\n.ql-editor ol li.ql-indent-3:before {\n  content: counter(list-3, decimal) \". \"; }\n\n.ql-editor ol li.ql-indent-3 {\n  counter-reset: list-4 list-5 list-6 list-7 list-8 list-9; }\n\n.ql-editor ol li.ql-indent-4 {\n  counter-increment: list-4; }\n\n.ql-editor ol li.ql-indent-4:before {\n  content: counter(list-4, lower-alpha) \". \"; }\n\n.ql-editor ol li.ql-indent-4 {\n  counter-reset: list-5 list-6 list-7 list-8 list-9; }\n\n.ql-editor ol li.ql-indent-5 {\n  counter-increment: list-5; }\n\n.ql-editor ol li.ql-indent-5:before {\n  content: counter(list-5, lower-roman) \". \"; }\n\n.ql-editor ol li.ql-indent-5 {\n  counter-reset: list-6 list-7 list-8 list-9; }\n\n.ql-editor ol li.ql-indent-6 {\n  counter-increment: list-6; }\n\n.ql-editor ol li.ql-indent-6:before {\n  content: counter(list-6, decimal) \". \"; }\n\n.ql-editor ol li.ql-indent-6 {\n  counter-reset: list-7 list-8 list-9; }\n\n.ql-editor ol li.ql-indent-7 {\n  counter-increment: list-7; }\n\n.ql-editor ol li.ql-indent-7:before {\n  content: counter(list-7, lower-alpha) \". \"; }\n\n.ql-editor ol li.ql-indent-7 {\n  counter-reset: list-8 list-9; }\n\n.ql-editor ol li.ql-indent-8 {\n  counter-increment: list-8; }\n\n.ql-editor ol li.ql-indent-8:before {\n  content: counter(list-8, lower-roman) \". \"; }\n\n.ql-editor ol li.ql-indent-8 {\n  counter-reset: list-9; }\n\n.ql-editor ol li.ql-indent-9 {\n  counter-increment: list-9; }\n\n.ql-editor ol li.ql-indent-9:before {\n  content: counter(list-9, decimal) \". \"; }\n\n.ql-editor .ql-indent-1:not(.ql-direction-rtl) {\n  padding-left: 3em; }\n\n.ql-editor li.ql-indent-1:not(.ql-direction-rtl) {\n  padding-left: 4.5em; }\n\n.ql-editor .ql-indent-1.ql-direction-rtl.ql-align-right {\n  padding-right: 3em; }\n\n.ql-editor li.ql-indent-1.ql-direction-rtl.ql-align-right {\n  padding-right: 4.5em; }\n\n.ql-editor .ql-indent-2:not(.ql-direction-rtl) {\n  padding-left: 6em; }\n\n.ql-editor li.ql-indent-2:not(.ql-direction-rtl) {\n  padding-left: 7.5em; }\n\n.ql-editor .ql-indent-2.ql-direction-rtl.ql-align-right {\n  padding-right: 6em; }\n\n.ql-editor li.ql-indent-2.ql-direction-rtl.ql-align-right {\n  padding-right: 7.5em; }\n\n.ql-editor .ql-indent-3:not(.ql-direction-rtl) {\n  padding-left: 9em; }\n\n.ql-editor li.ql-indent-3:not(.ql-direction-rtl) {\n  padding-left: 10.5em; }\n\n.ql-editor .ql-indent-3.ql-direction-rtl.ql-align-right {\n  padding-right: 9em; }\n\n.ql-editor li.ql-indent-3.ql-direction-rtl.ql-align-right {\n  padding-right: 10.5em; }\n\n.ql-editor .ql-indent-4:not(.ql-direction-rtl) {\n  padding-left: 12em; }\n\n.ql-editor li.ql-indent-4:not(.ql-direction-rtl) {\n  padding-left: 13.5em; }\n\n.ql-editor .ql-indent-4.ql-direction-rtl.ql-align-right {\n  padding-right: 12em; }\n\n.ql-editor li.ql-indent-4.ql-direction-rtl.ql-align-right {\n  padding-right: 13.5em; }\n\n.ql-editor .ql-indent-5:not(.ql-direction-rtl) {\n  padding-left: 15em; }\n\n.ql-editor li.ql-indent-5:not(.ql-direction-rtl) {\n  padding-left: 16.5em; }\n\n.ql-editor .ql-indent-5.ql-direction-rtl.ql-align-right {\n  padding-right: 15em; }\n\n.ql-editor li.ql-indent-5.ql-direction-rtl.ql-align-right {\n  padding-right: 16.5em; }\n\n.ql-editor .ql-indent-6:not(.ql-direction-rtl) {\n  padding-left: 18em; }\n\n.ql-editor li.ql-indent-6:not(.ql-direction-rtl) {\n  padding-left: 19.5em; }\n\n.ql-editor .ql-indent-6.ql-direction-rtl.ql-align-right {\n  padding-right: 18em; }\n\n.ql-editor li.ql-indent-6.ql-direction-rtl.ql-align-right {\n  padding-right: 19.5em; }\n\n.ql-editor .ql-indent-7:not(.ql-direction-rtl) {\n  padding-left: 21em; }\n\n.ql-editor li.ql-indent-7:not(.ql-direction-rtl) {\n  padding-left: 22.5em; }\n\n.ql-editor .ql-indent-7.ql-direction-rtl.ql-align-right {\n  padding-right: 21em; }\n\n.ql-editor li.ql-indent-7.ql-direction-rtl.ql-align-right {\n  padding-right: 22.5em; }\n\n.ql-editor .ql-indent-8:not(.ql-direction-rtl) {\n  padding-left: 24em; }\n\n.ql-editor li.ql-indent-8:not(.ql-direction-rtl) {\n  padding-left: 25.5em; }\n\n.ql-editor .ql-indent-8.ql-direction-rtl.ql-align-right {\n  padding-right: 24em; }\n\n.ql-editor li.ql-indent-8.ql-direction-rtl.ql-align-right {\n  padding-right: 25.5em; }\n\n.ql-editor .ql-indent-9:not(.ql-direction-rtl) {\n  padding-left: 27em; }\n\n.ql-editor li.ql-indent-9:not(.ql-direction-rtl) {\n  padding-left: 28.5em; }\n\n.ql-editor .ql-indent-9.ql-direction-rtl.ql-align-right {\n  padding-right: 27em; }\n\n.ql-editor li.ql-indent-9.ql-direction-rtl.ql-align-right {\n  padding-right: 28.5em; }\n\n.ql-editor .ql-video {\n  display: block;\n  max-width: 100%; }\n\n.ql-editor .ql-video.ql-align-center {\n  margin: 0 auto; }\n\n.ql-editor .ql-video.ql-align-right {\n  margin: 0 0 0 auto; }\n\n.ql-editor .ql-bg-black {\n  background-color: #000; }\n\n.ql-editor .ql-bg-red {\n  background-color: #e60000; }\n\n.ql-editor .ql-bg-orange {\n  background-color: #f90; }\n\n.ql-editor .ql-bg-yellow {\n  background-color: #ff0; }\n\n.ql-editor .ql-bg-green {\n  background-color: #008a00; }\n\n.ql-editor .ql-bg-blue {\n  background-color: #06c; }\n\n.ql-editor .ql-bg-purple {\n  background-color: #93f; }\n\n.ql-editor .ql-color-white {\n  color: #fff; }\n\n.ql-editor .ql-color-red {\n  color: #e60000; }\n\n.ql-editor .ql-color-orange {\n  color: #f90; }\n\n.ql-editor .ql-color-yellow {\n  color: #ff0; }\n\n.ql-editor .ql-color-green {\n  color: #008a00; }\n\n.ql-editor .ql-color-blue {\n  color: #06c; }\n\n.ql-editor .ql-color-purple {\n  color: #93f; }\n\n.ql-editor .ql-font-serif {\n  font-family: Georgia, Times New Roman, serif; }\n\n.ql-editor .ql-font-monospace {\n  font-family: Monaco, Courier New, monospace; }\n\n.ql-editor .ql-size-small {\n  font-size: 0.75em; }\n\n.ql-editor .ql-size-large {\n  font-size: 1.5em; }\n\n.ql-editor .ql-size-huge {\n  font-size: 2.5em; }\n\n.ql-editor .ql-direction-rtl {\n  direction: rtl;\n  text-align: inherit; }\n\n.ql-editor .ql-align-center {\n  text-align: center; }\n\n.ql-editor .ql-align-justify {\n  text-align: justify; }\n\n.ql-editor .ql-align-right {\n  text-align: right; }\n\n.ql-editor.ql-blank::before {\n  color: rgba(0, 0, 0, 0.6);\n  content: attr(data-placeholder);\n  font-style: italic;\n  pointer-events: none;\n  position: absolute; }\n", ""]);

	// exports


/***/ },
/* 364 */
/***/ function(module, exports) {

	"use strict";

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function () {
		var list = [];

		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for (var i = 0; i < this.length; i++) {
				var item = this[i];
				if (item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};

		// import a list of modules into the list
		list.i = function (modules, mediaQuery) {
			if (typeof modules === "string") modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for (var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if (typeof id === "number") alreadyImportedModules[id] = true;
			}
			for (i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if (mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if (mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();

		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}

	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}

	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}

	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;

		if(media) {
			styleElement.setAttribute("media", media)
		}

		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}

	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;

		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		var blob = new Blob([css], { type: "text/css" });

		var oldSrc = linkElement.href;

		linkElement.href = URL.createObjectURL(blob);

		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(367);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(365)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./index.scss", function() {
				var newContent = require("!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./index.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(364)();
	// imports


	// module
	exports.push([module.id, "@charset \"UTF-8\";\n/*!\n * Bootstrap v3.3.7 (http://getbootstrap.com)\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */\n/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */\nhtml {\n  font-family: sans-serif;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%; }\n\nbody {\n  margin: 0; }\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block; }\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n  vertical-align: baseline; }\n\naudio:not([controls]) {\n  display: none;\n  height: 0; }\n\n[hidden],\ntemplate {\n  display: none; }\n\na {\n  background-color: transparent; }\n\na:active,\na:hover {\n  outline: 0; }\n\nabbr[title] {\n  border-bottom: 1px dotted; }\n\nb,\nstrong {\n  font-weight: bold; }\n\ndfn {\n  font-style: italic; }\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0; }\n\nmark {\n  background: #ff0;\n  color: #000; }\n\nsmall {\n  font-size: 80%; }\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsup {\n  top: -0.5em; }\n\nsub {\n  bottom: -0.25em; }\n\nimg {\n  border: 0; }\n\nsvg:not(:root) {\n  overflow: hidden; }\n\nfigure {\n  margin: 1em 40px; }\n\nhr {\n  box-sizing: content-box;\n  height: 0; }\n\npre {\n  overflow: auto; }\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em; }\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit;\n  font: inherit;\n  margin: 0; }\n\nbutton {\n  overflow: visible; }\n\nbutton,\nselect {\n  text-transform: none; }\n\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button;\n  cursor: pointer; }\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default; }\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0; }\n\ninput {\n  line-height: normal; }\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box;\n  padding: 0; }\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto; }\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield;\n  box-sizing: content-box; }\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em; }\n\nlegend {\n  border: 0;\n  padding: 0; }\n\ntextarea {\n  overflow: auto; }\n\noptgroup {\n  font-weight: bold; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\ntd,\nth {\n  padding: 0; }\n\n/*! Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css */\n@media print {\n  *,\n  *:before,\n  *:after {\n    background: transparent !important;\n    color: #000 !important;\n    box-shadow: none !important;\n    text-shadow: none !important; }\n  a,\n  a:visited {\n    text-decoration: underline; }\n  a[href]:after {\n    content: \" (\" attr(href) \")\"; }\n  abbr[title]:after {\n    content: \" (\" attr(title) \")\"; }\n  a[href^=\"#\"]:after,\n  a[href^=\"javascript:\"]:after {\n    content: \"\"; }\n  pre,\n  blockquote {\n    border: 1px solid #999;\n    page-break-inside: avoid; }\n  thead {\n    display: table-header-group; }\n  tr,\n  img {\n    page-break-inside: avoid; }\n  img {\n    max-width: 100% !important; }\n  p,\n  h2,\n  h3 {\n    orphans: 3;\n    widows: 3; }\n  h2,\n  h3 {\n    page-break-after: avoid; }\n  .navbar {\n    display: none; }\n  .btn > .caret,\n  .dropup > .btn > .caret {\n    border-top-color: #000 !important; }\n  .label {\n    border: 1px solid #000; }\n  .table {\n    border-collapse: collapse !important; }\n    .table td,\n    .table th {\n      background-color: #fff !important; }\n  .table-bordered th,\n  .table-bordered td {\n    border: 1px solid #ddd !important; } }\n\n@font-face {\n  font-family: 'Glyphicons Halflings';\n  src: url(font-path(\"~bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.eot\"));\n  src: url(font-path(\"~bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.eot?#iefix\")) format(\"embedded-opentype\"), url(font-path(\"~bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.woff2\")) format(\"woff2\"), url(font-path(\"~bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.woff\")) format(\"woff\"), url(font-path(\"~bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.ttf\")) format(\"truetype\"), url(font-path(\"~bootstrap-sass/assets/fonts/bootstrap/glyphicons-halflings-regular.svg#glyphicons_halflingsregular\")) format(\"svg\"); }\n\n.glyphicon {\n  position: relative;\n  top: 1px;\n  display: inline-block;\n  font-family: 'Glyphicons Halflings';\n  font-style: normal;\n  font-weight: normal;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale; }\n\n.glyphicon-asterisk:before {\n  content: \"*\"; }\n\n.glyphicon-plus:before {\n  content: \"+\"; }\n\n.glyphicon-euro:before,\n.glyphicon-eur:before {\n  content: \"\\20AC\"; }\n\n.glyphicon-minus:before {\n  content: \"\\2212\"; }\n\n.glyphicon-cloud:before {\n  content: \"\\2601\"; }\n\n.glyphicon-envelope:before {\n  content: \"\\2709\"; }\n\n.glyphicon-pencil:before {\n  content: \"\\270F\"; }\n\n.glyphicon-glass:before {\n  content: \"\\E001\"; }\n\n.glyphicon-music:before {\n  content: \"\\E002\"; }\n\n.glyphicon-search:before {\n  content: \"\\E003\"; }\n\n.glyphicon-heart:before {\n  content: \"\\E005\"; }\n\n.glyphicon-star:before {\n  content: \"\\E006\"; }\n\n.glyphicon-star-empty:before {\n  content: \"\\E007\"; }\n\n.glyphicon-user:before {\n  content: \"\\E008\"; }\n\n.glyphicon-film:before {\n  content: \"\\E009\"; }\n\n.glyphicon-th-large:before {\n  content: \"\\E010\"; }\n\n.glyphicon-th:before {\n  content: \"\\E011\"; }\n\n.glyphicon-th-list:before {\n  content: \"\\E012\"; }\n\n.glyphicon-ok:before {\n  content: \"\\E013\"; }\n\n.glyphicon-remove:before {\n  content: \"\\E014\"; }\n\n.glyphicon-zoom-in:before {\n  content: \"\\E015\"; }\n\n.glyphicon-zoom-out:before {\n  content: \"\\E016\"; }\n\n.glyphicon-off:before {\n  content: \"\\E017\"; }\n\n.glyphicon-signal:before {\n  content: \"\\E018\"; }\n\n.glyphicon-cog:before {\n  content: \"\\E019\"; }\n\n.glyphicon-trash:before {\n  content: \"\\E020\"; }\n\n.glyphicon-home:before {\n  content: \"\\E021\"; }\n\n.glyphicon-file:before {\n  content: \"\\E022\"; }\n\n.glyphicon-time:before {\n  content: \"\\E023\"; }\n\n.glyphicon-road:before {\n  content: \"\\E024\"; }\n\n.glyphicon-download-alt:before {\n  content: \"\\E025\"; }\n\n.glyphicon-download:before {\n  content: \"\\E026\"; }\n\n.glyphicon-upload:before {\n  content: \"\\E027\"; }\n\n.glyphicon-inbox:before {\n  content: \"\\E028\"; }\n\n.glyphicon-play-circle:before {\n  content: \"\\E029\"; }\n\n.glyphicon-repeat:before {\n  content: \"\\E030\"; }\n\n.glyphicon-refresh:before {\n  content: \"\\E031\"; }\n\n.glyphicon-list-alt:before {\n  content: \"\\E032\"; }\n\n.glyphicon-lock:before {\n  content: \"\\E033\"; }\n\n.glyphicon-flag:before {\n  content: \"\\E034\"; }\n\n.glyphicon-headphones:before {\n  content: \"\\E035\"; }\n\n.glyphicon-volume-off:before {\n  content: \"\\E036\"; }\n\n.glyphicon-volume-down:before {\n  content: \"\\E037\"; }\n\n.glyphicon-volume-up:before {\n  content: \"\\E038\"; }\n\n.glyphicon-qrcode:before {\n  content: \"\\E039\"; }\n\n.glyphicon-barcode:before {\n  content: \"\\E040\"; }\n\n.glyphicon-tag:before {\n  content: \"\\E041\"; }\n\n.glyphicon-tags:before {\n  content: \"\\E042\"; }\n\n.glyphicon-book:before {\n  content: \"\\E043\"; }\n\n.glyphicon-bookmark:before {\n  content: \"\\E044\"; }\n\n.glyphicon-print:before {\n  content: \"\\E045\"; }\n\n.glyphicon-camera:before {\n  content: \"\\E046\"; }\n\n.glyphicon-font:before {\n  content: \"\\E047\"; }\n\n.glyphicon-bold:before {\n  content: \"\\E048\"; }\n\n.glyphicon-italic:before {\n  content: \"\\E049\"; }\n\n.glyphicon-text-height:before {\n  content: \"\\E050\"; }\n\n.glyphicon-text-width:before {\n  content: \"\\E051\"; }\n\n.glyphicon-align-left:before {\n  content: \"\\E052\"; }\n\n.glyphicon-align-center:before {\n  content: \"\\E053\"; }\n\n.glyphicon-align-right:before {\n  content: \"\\E054\"; }\n\n.glyphicon-align-justify:before {\n  content: \"\\E055\"; }\n\n.glyphicon-list:before {\n  content: \"\\E056\"; }\n\n.glyphicon-indent-left:before {\n  content: \"\\E057\"; }\n\n.glyphicon-indent-right:before {\n  content: \"\\E058\"; }\n\n.glyphicon-facetime-video:before {\n  content: \"\\E059\"; }\n\n.glyphicon-picture:before {\n  content: \"\\E060\"; }\n\n.glyphicon-map-marker:before {\n  content: \"\\E062\"; }\n\n.glyphicon-adjust:before {\n  content: \"\\E063\"; }\n\n.glyphicon-tint:before {\n  content: \"\\E064\"; }\n\n.glyphicon-edit:before {\n  content: \"\\E065\"; }\n\n.glyphicon-share:before {\n  content: \"\\E066\"; }\n\n.glyphicon-check:before {\n  content: \"\\E067\"; }\n\n.glyphicon-move:before {\n  content: \"\\E068\"; }\n\n.glyphicon-step-backward:before {\n  content: \"\\E069\"; }\n\n.glyphicon-fast-backward:before {\n  content: \"\\E070\"; }\n\n.glyphicon-backward:before {\n  content: \"\\E071\"; }\n\n.glyphicon-play:before {\n  content: \"\\E072\"; }\n\n.glyphicon-pause:before {\n  content: \"\\E073\"; }\n\n.glyphicon-stop:before {\n  content: \"\\E074\"; }\n\n.glyphicon-forward:before {\n  content: \"\\E075\"; }\n\n.glyphicon-fast-forward:before {\n  content: \"\\E076\"; }\n\n.glyphicon-step-forward:before {\n  content: \"\\E077\"; }\n\n.glyphicon-eject:before {\n  content: \"\\E078\"; }\n\n.glyphicon-chevron-left:before {\n  content: \"\\E079\"; }\n\n.glyphicon-chevron-right:before {\n  content: \"\\E080\"; }\n\n.glyphicon-plus-sign:before {\n  content: \"\\E081\"; }\n\n.glyphicon-minus-sign:before {\n  content: \"\\E082\"; }\n\n.glyphicon-remove-sign:before {\n  content: \"\\E083\"; }\n\n.glyphicon-ok-sign:before {\n  content: \"\\E084\"; }\n\n.glyphicon-question-sign:before {\n  content: \"\\E085\"; }\n\n.glyphicon-info-sign:before {\n  content: \"\\E086\"; }\n\n.glyphicon-screenshot:before {\n  content: \"\\E087\"; }\n\n.glyphicon-remove-circle:before {\n  content: \"\\E088\"; }\n\n.glyphicon-ok-circle:before {\n  content: \"\\E089\"; }\n\n.glyphicon-ban-circle:before {\n  content: \"\\E090\"; }\n\n.glyphicon-arrow-left:before {\n  content: \"\\E091\"; }\n\n.glyphicon-arrow-right:before {\n  content: \"\\E092\"; }\n\n.glyphicon-arrow-up:before {\n  content: \"\\E093\"; }\n\n.glyphicon-arrow-down:before {\n  content: \"\\E094\"; }\n\n.glyphicon-share-alt:before {\n  content: \"\\E095\"; }\n\n.glyphicon-resize-full:before {\n  content: \"\\E096\"; }\n\n.glyphicon-resize-small:before {\n  content: \"\\E097\"; }\n\n.glyphicon-exclamation-sign:before {\n  content: \"\\E101\"; }\n\n.glyphicon-gift:before {\n  content: \"\\E102\"; }\n\n.glyphicon-leaf:before {\n  content: \"\\E103\"; }\n\n.glyphicon-fire:before {\n  content: \"\\E104\"; }\n\n.glyphicon-eye-open:before {\n  content: \"\\E105\"; }\n\n.glyphicon-eye-close:before {\n  content: \"\\E106\"; }\n\n.glyphicon-warning-sign:before {\n  content: \"\\E107\"; }\n\n.glyphicon-plane:before {\n  content: \"\\E108\"; }\n\n.glyphicon-calendar:before {\n  content: \"\\E109\"; }\n\n.glyphicon-random:before {\n  content: \"\\E110\"; }\n\n.glyphicon-comment:before {\n  content: \"\\E111\"; }\n\n.glyphicon-magnet:before {\n  content: \"\\E112\"; }\n\n.glyphicon-chevron-up:before {\n  content: \"\\E113\"; }\n\n.glyphicon-chevron-down:before {\n  content: \"\\E114\"; }\n\n.glyphicon-retweet:before {\n  content: \"\\E115\"; }\n\n.glyphicon-shopping-cart:before {\n  content: \"\\E116\"; }\n\n.glyphicon-folder-close:before {\n  content: \"\\E117\"; }\n\n.glyphicon-folder-open:before {\n  content: \"\\E118\"; }\n\n.glyphicon-resize-vertical:before {\n  content: \"\\E119\"; }\n\n.glyphicon-resize-horizontal:before {\n  content: \"\\E120\"; }\n\n.glyphicon-hdd:before {\n  content: \"\\E121\"; }\n\n.glyphicon-bullhorn:before {\n  content: \"\\E122\"; }\n\n.glyphicon-bell:before {\n  content: \"\\E123\"; }\n\n.glyphicon-certificate:before {\n  content: \"\\E124\"; }\n\n.glyphicon-thumbs-up:before {\n  content: \"\\E125\"; }\n\n.glyphicon-thumbs-down:before {\n  content: \"\\E126\"; }\n\n.glyphicon-hand-right:before {\n  content: \"\\E127\"; }\n\n.glyphicon-hand-left:before {\n  content: \"\\E128\"; }\n\n.glyphicon-hand-up:before {\n  content: \"\\E129\"; }\n\n.glyphicon-hand-down:before {\n  content: \"\\E130\"; }\n\n.glyphicon-circle-arrow-right:before {\n  content: \"\\E131\"; }\n\n.glyphicon-circle-arrow-left:before {\n  content: \"\\E132\"; }\n\n.glyphicon-circle-arrow-up:before {\n  content: \"\\E133\"; }\n\n.glyphicon-circle-arrow-down:before {\n  content: \"\\E134\"; }\n\n.glyphicon-globe:before {\n  content: \"\\E135\"; }\n\n.glyphicon-wrench:before {\n  content: \"\\E136\"; }\n\n.glyphicon-tasks:before {\n  content: \"\\E137\"; }\n\n.glyphicon-filter:before {\n  content: \"\\E138\"; }\n\n.glyphicon-briefcase:before {\n  content: \"\\E139\"; }\n\n.glyphicon-fullscreen:before {\n  content: \"\\E140\"; }\n\n.glyphicon-dashboard:before {\n  content: \"\\E141\"; }\n\n.glyphicon-paperclip:before {\n  content: \"\\E142\"; }\n\n.glyphicon-heart-empty:before {\n  content: \"\\E143\"; }\n\n.glyphicon-link:before {\n  content: \"\\E144\"; }\n\n.glyphicon-phone:before {\n  content: \"\\E145\"; }\n\n.glyphicon-pushpin:before {\n  content: \"\\E146\"; }\n\n.glyphicon-usd:before {\n  content: \"\\E148\"; }\n\n.glyphicon-gbp:before {\n  content: \"\\E149\"; }\n\n.glyphicon-sort:before {\n  content: \"\\E150\"; }\n\n.glyphicon-sort-by-alphabet:before {\n  content: \"\\E151\"; }\n\n.glyphicon-sort-by-alphabet-alt:before {\n  content: \"\\E152\"; }\n\n.glyphicon-sort-by-order:before {\n  content: \"\\E153\"; }\n\n.glyphicon-sort-by-order-alt:before {\n  content: \"\\E154\"; }\n\n.glyphicon-sort-by-attributes:before {\n  content: \"\\E155\"; }\n\n.glyphicon-sort-by-attributes-alt:before {\n  content: \"\\E156\"; }\n\n.glyphicon-unchecked:before {\n  content: \"\\E157\"; }\n\n.glyphicon-expand:before {\n  content: \"\\E158\"; }\n\n.glyphicon-collapse-down:before {\n  content: \"\\E159\"; }\n\n.glyphicon-collapse-up:before {\n  content: \"\\E160\"; }\n\n.glyphicon-log-in:before {\n  content: \"\\E161\"; }\n\n.glyphicon-flash:before {\n  content: \"\\E162\"; }\n\n.glyphicon-log-out:before {\n  content: \"\\E163\"; }\n\n.glyphicon-new-window:before {\n  content: \"\\E164\"; }\n\n.glyphicon-record:before {\n  content: \"\\E165\"; }\n\n.glyphicon-save:before {\n  content: \"\\E166\"; }\n\n.glyphicon-open:before {\n  content: \"\\E167\"; }\n\n.glyphicon-saved:before {\n  content: \"\\E168\"; }\n\n.glyphicon-import:before {\n  content: \"\\E169\"; }\n\n.glyphicon-export:before {\n  content: \"\\E170\"; }\n\n.glyphicon-send:before {\n  content: \"\\E171\"; }\n\n.glyphicon-floppy-disk:before {\n  content: \"\\E172\"; }\n\n.glyphicon-floppy-saved:before {\n  content: \"\\E173\"; }\n\n.glyphicon-floppy-remove:before {\n  content: \"\\E174\"; }\n\n.glyphicon-floppy-save:before {\n  content: \"\\E175\"; }\n\n.glyphicon-floppy-open:before {\n  content: \"\\E176\"; }\n\n.glyphicon-credit-card:before {\n  content: \"\\E177\"; }\n\n.glyphicon-transfer:before {\n  content: \"\\E178\"; }\n\n.glyphicon-cutlery:before {\n  content: \"\\E179\"; }\n\n.glyphicon-header:before {\n  content: \"\\E180\"; }\n\n.glyphicon-compressed:before {\n  content: \"\\E181\"; }\n\n.glyphicon-earphone:before {\n  content: \"\\E182\"; }\n\n.glyphicon-phone-alt:before {\n  content: \"\\E183\"; }\n\n.glyphicon-tower:before {\n  content: \"\\E184\"; }\n\n.glyphicon-stats:before {\n  content: \"\\E185\"; }\n\n.glyphicon-sd-video:before {\n  content: \"\\E186\"; }\n\n.glyphicon-hd-video:before {\n  content: \"\\E187\"; }\n\n.glyphicon-subtitles:before {\n  content: \"\\E188\"; }\n\n.glyphicon-sound-stereo:before {\n  content: \"\\E189\"; }\n\n.glyphicon-sound-dolby:before {\n  content: \"\\E190\"; }\n\n.glyphicon-sound-5-1:before {\n  content: \"\\E191\"; }\n\n.glyphicon-sound-6-1:before {\n  content: \"\\E192\"; }\n\n.glyphicon-sound-7-1:before {\n  content: \"\\E193\"; }\n\n.glyphicon-copyright-mark:before {\n  content: \"\\E194\"; }\n\n.glyphicon-registration-mark:before {\n  content: \"\\E195\"; }\n\n.glyphicon-cloud-download:before {\n  content: \"\\E197\"; }\n\n.glyphicon-cloud-upload:before {\n  content: \"\\E198\"; }\n\n.glyphicon-tree-conifer:before {\n  content: \"\\E199\"; }\n\n.glyphicon-tree-deciduous:before {\n  content: \"\\E200\"; }\n\n.glyphicon-cd:before {\n  content: \"\\E201\"; }\n\n.glyphicon-save-file:before {\n  content: \"\\E202\"; }\n\n.glyphicon-open-file:before {\n  content: \"\\E203\"; }\n\n.glyphicon-level-up:before {\n  content: \"\\E204\"; }\n\n.glyphicon-copy:before {\n  content: \"\\E205\"; }\n\n.glyphicon-paste:before {\n  content: \"\\E206\"; }\n\n.glyphicon-alert:before {\n  content: \"\\E209\"; }\n\n.glyphicon-equalizer:before {\n  content: \"\\E210\"; }\n\n.glyphicon-king:before {\n  content: \"\\E211\"; }\n\n.glyphicon-queen:before {\n  content: \"\\E212\"; }\n\n.glyphicon-pawn:before {\n  content: \"\\E213\"; }\n\n.glyphicon-bishop:before {\n  content: \"\\E214\"; }\n\n.glyphicon-knight:before {\n  content: \"\\E215\"; }\n\n.glyphicon-baby-formula:before {\n  content: \"\\E216\"; }\n\n.glyphicon-tent:before {\n  content: \"\\26FA\"; }\n\n.glyphicon-blackboard:before {\n  content: \"\\E218\"; }\n\n.glyphicon-bed:before {\n  content: \"\\E219\"; }\n\n.glyphicon-apple:before {\n  content: \"\\F8FF\"; }\n\n.glyphicon-erase:before {\n  content: \"\\E221\"; }\n\n.glyphicon-hourglass:before {\n  content: \"\\231B\"; }\n\n.glyphicon-lamp:before {\n  content: \"\\E223\"; }\n\n.glyphicon-duplicate:before {\n  content: \"\\E224\"; }\n\n.glyphicon-piggy-bank:before {\n  content: \"\\E225\"; }\n\n.glyphicon-scissors:before {\n  content: \"\\E226\"; }\n\n.glyphicon-bitcoin:before {\n  content: \"\\E227\"; }\n\n.glyphicon-btc:before {\n  content: \"\\E227\"; }\n\n.glyphicon-xbt:before {\n  content: \"\\E227\"; }\n\n.glyphicon-yen:before {\n  content: \"\\A5\"; }\n\n.glyphicon-jpy:before {\n  content: \"\\A5\"; }\n\n.glyphicon-ruble:before {\n  content: \"\\20BD\"; }\n\n.glyphicon-rub:before {\n  content: \"\\20BD\"; }\n\n.glyphicon-scale:before {\n  content: \"\\E230\"; }\n\n.glyphicon-ice-lolly:before {\n  content: \"\\E231\"; }\n\n.glyphicon-ice-lolly-tasted:before {\n  content: \"\\E232\"; }\n\n.glyphicon-education:before {\n  content: \"\\E233\"; }\n\n.glyphicon-option-horizontal:before {\n  content: \"\\E234\"; }\n\n.glyphicon-option-vertical:before {\n  content: \"\\E235\"; }\n\n.glyphicon-menu-hamburger:before {\n  content: \"\\E236\"; }\n\n.glyphicon-modal-window:before {\n  content: \"\\E237\"; }\n\n.glyphicon-oil:before {\n  content: \"\\E238\"; }\n\n.glyphicon-grain:before {\n  content: \"\\E239\"; }\n\n.glyphicon-sunglasses:before {\n  content: \"\\E240\"; }\n\n.glyphicon-text-size:before {\n  content: \"\\E241\"; }\n\n.glyphicon-text-color:before {\n  content: \"\\E242\"; }\n\n.glyphicon-text-background:before {\n  content: \"\\E243\"; }\n\n.glyphicon-object-align-top:before {\n  content: \"\\E244\"; }\n\n.glyphicon-object-align-bottom:before {\n  content: \"\\E245\"; }\n\n.glyphicon-object-align-horizontal:before {\n  content: \"\\E246\"; }\n\n.glyphicon-object-align-left:before {\n  content: \"\\E247\"; }\n\n.glyphicon-object-align-vertical:before {\n  content: \"\\E248\"; }\n\n.glyphicon-object-align-right:before {\n  content: \"\\E249\"; }\n\n.glyphicon-triangle-right:before {\n  content: \"\\E250\"; }\n\n.glyphicon-triangle-left:before {\n  content: \"\\E251\"; }\n\n.glyphicon-triangle-bottom:before {\n  content: \"\\E252\"; }\n\n.glyphicon-triangle-top:before {\n  content: \"\\E253\"; }\n\n.glyphicon-console:before {\n  content: \"\\E254\"; }\n\n.glyphicon-superscript:before {\n  content: \"\\E255\"; }\n\n.glyphicon-subscript:before {\n  content: \"\\E256\"; }\n\n.glyphicon-menu-left:before {\n  content: \"\\E257\"; }\n\n.glyphicon-menu-right:before {\n  content: \"\\E258\"; }\n\n.glyphicon-menu-down:before {\n  content: \"\\E259\"; }\n\n.glyphicon-menu-up:before {\n  content: \"\\E260\"; }\n\n* {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box; }\n\n*:before,\n*:after {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box; }\n\nhtml {\n  font-size: 10px;\n  -webkit-tap-highlight-color: transparent; }\n\nbody {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 1.42857;\n  color: #333333;\n  background-color: #fff; }\n\ninput,\nbutton,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit; }\n\na {\n  color: #337ab7;\n  text-decoration: none; }\n  a:hover, a:focus {\n    color: #23527c;\n    text-decoration: underline; }\n  a:focus {\n    outline: 5px auto -webkit-focus-ring-color;\n    outline-offset: -2px; }\n\nfigure {\n  margin: 0; }\n\nimg {\n  vertical-align: middle; }\n\n.img-responsive {\n  display: block;\n  max-width: 100%;\n  height: auto; }\n\n.img-rounded {\n  border-radius: 6px; }\n\n.img-thumbnail {\n  padding: 4px;\n  line-height: 1.42857;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  -webkit-transition: all 0.2s ease-in-out;\n  -o-transition: all 0.2s ease-in-out;\n  transition: all 0.2s ease-in-out;\n  display: inline-block;\n  max-width: 100%;\n  height: auto; }\n\n.img-circle {\n  border-radius: 50%; }\n\nhr {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  border: 0;\n  border-top: 1px solid #eeeeee; }\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0; }\n\n.sr-only-focusable:active, .sr-only-focusable:focus {\n  position: static;\n  width: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  clip: auto; }\n\n[role=\"button\"] {\n  cursor: pointer; }\n\nh1, h2, h3, h4, h5, h6,\n.h1, .h2, .h3, .h4, .h5, .h6 {\n  font-family: inherit;\n  font-weight: 500;\n  line-height: 1.1;\n  color: inherit; }\n  h1 small,\n  h1 .small, h2 small,\n  h2 .small, h3 small,\n  h3 .small, h4 small,\n  h4 .small, h5 small,\n  h5 .small, h6 small,\n  h6 .small,\n  .h1 small,\n  .h1 .small, .h2 small,\n  .h2 .small, .h3 small,\n  .h3 .small, .h4 small,\n  .h4 .small, .h5 small,\n  .h5 .small, .h6 small,\n  .h6 .small {\n    font-weight: normal;\n    line-height: 1;\n    color: #777777; }\n\nh1, .h1,\nh2, .h2,\nh3, .h3 {\n  margin-top: 20px;\n  margin-bottom: 10px; }\n  h1 small,\n  h1 .small, .h1 small,\n  .h1 .small,\n  h2 small,\n  h2 .small, .h2 small,\n  .h2 .small,\n  h3 small,\n  h3 .small, .h3 small,\n  .h3 .small {\n    font-size: 65%; }\n\nh4, .h4,\nh5, .h5,\nh6, .h6 {\n  margin-top: 10px;\n  margin-bottom: 10px; }\n  h4 small,\n  h4 .small, .h4 small,\n  .h4 .small,\n  h5 small,\n  h5 .small, .h5 small,\n  .h5 .small,\n  h6 small,\n  h6 .small, .h6 small,\n  .h6 .small {\n    font-size: 75%; }\n\nh1, .h1 {\n  font-size: 36px; }\n\nh2, .h2 {\n  font-size: 30px; }\n\nh3, .h3 {\n  font-size: 24px; }\n\nh4, .h4 {\n  font-size: 18px; }\n\nh5, .h5 {\n  font-size: 14px; }\n\nh6, .h6 {\n  font-size: 12px; }\n\np {\n  margin: 0 0 10px; }\n\n.lead {\n  margin-bottom: 20px;\n  font-size: 16px;\n  font-weight: 300;\n  line-height: 1.4; }\n  @media (min-width: 768px) {\n    .lead {\n      font-size: 21px; } }\n\nsmall,\n.small {\n  font-size: 85%; }\n\nmark,\n.mark {\n  background-color: #fcf8e3;\n  padding: .2em; }\n\n.text-left {\n  text-align: left; }\n\n.text-right {\n  text-align: right; }\n\n.text-center {\n  text-align: center; }\n\n.text-justify {\n  text-align: justify; }\n\n.text-nowrap {\n  white-space: nowrap; }\n\n.text-lowercase {\n  text-transform: lowercase; }\n\n.text-uppercase, .initialism {\n  text-transform: uppercase; }\n\n.text-capitalize {\n  text-transform: capitalize; }\n\n.text-muted {\n  color: #777777; }\n\n.text-primary {\n  color: #337ab7; }\n\na.text-primary:hover,\na.text-primary:focus {\n  color: #286090; }\n\n.text-success {\n  color: #3c763d; }\n\na.text-success:hover,\na.text-success:focus {\n  color: #2b542c; }\n\n.text-info {\n  color: #31708f; }\n\na.text-info:hover,\na.text-info:focus {\n  color: #245269; }\n\n.text-warning {\n  color: #8a6d3b; }\n\na.text-warning:hover,\na.text-warning:focus {\n  color: #66512c; }\n\n.text-danger {\n  color: #a94442; }\n\na.text-danger:hover,\na.text-danger:focus {\n  color: #843534; }\n\n.bg-primary {\n  color: #fff; }\n\n.bg-primary {\n  background-color: #337ab7; }\n\na.bg-primary:hover,\na.bg-primary:focus {\n  background-color: #286090; }\n\n.bg-success {\n  background-color: #dff0d8; }\n\na.bg-success:hover,\na.bg-success:focus {\n  background-color: #c1e2b3; }\n\n.bg-info {\n  background-color: #d9edf7; }\n\na.bg-info:hover,\na.bg-info:focus {\n  background-color: #afd9ee; }\n\n.bg-warning {\n  background-color: #fcf8e3; }\n\na.bg-warning:hover,\na.bg-warning:focus {\n  background-color: #f7ecb5; }\n\n.bg-danger {\n  background-color: #f2dede; }\n\na.bg-danger:hover,\na.bg-danger:focus {\n  background-color: #e4b9b9; }\n\n.page-header {\n  padding-bottom: 9px;\n  margin: 40px 0 20px;\n  border-bottom: 1px solid #eeeeee; }\n\nul,\nol {\n  margin-top: 0;\n  margin-bottom: 10px; }\n  ul ul,\n  ul ol,\n  ol ul,\n  ol ol {\n    margin-bottom: 0; }\n\n.list-unstyled {\n  padding-left: 0;\n  list-style: none; }\n\n.list-inline {\n  padding-left: 0;\n  list-style: none;\n  margin-left: -5px; }\n  .list-inline > li {\n    display: inline-block;\n    padding-left: 5px;\n    padding-right: 5px; }\n\ndl {\n  margin-top: 0;\n  margin-bottom: 20px; }\n\ndt,\ndd {\n  line-height: 1.42857; }\n\ndt {\n  font-weight: bold; }\n\ndd {\n  margin-left: 0; }\n\n.dl-horizontal dd:before, .dl-horizontal dd:after {\n  content: \" \";\n  display: table; }\n\n.dl-horizontal dd:after {\n  clear: both; }\n\n@media (min-width: 768px) {\n  .dl-horizontal dt {\n    float: left;\n    width: 160px;\n    clear: left;\n    text-align: right;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap; }\n  .dl-horizontal dd {\n    margin-left: 180px; } }\n\nabbr[title],\nabbr[data-original-title] {\n  cursor: help;\n  border-bottom: 1px dotted #777777; }\n\n.initialism {\n  font-size: 90%; }\n\nblockquote {\n  padding: 10px 20px;\n  margin: 0 0 20px;\n  font-size: 17.5px;\n  border-left: 5px solid #eeeeee; }\n  blockquote p:last-child,\n  blockquote ul:last-child,\n  blockquote ol:last-child {\n    margin-bottom: 0; }\n  blockquote footer,\n  blockquote small,\n  blockquote .small {\n    display: block;\n    font-size: 80%;\n    line-height: 1.42857;\n    color: #777777; }\n    blockquote footer:before,\n    blockquote small:before,\n    blockquote .small:before {\n      content: '\\2014   \\A0'; }\n\n.blockquote-reverse,\nblockquote.pull-right {\n  padding-right: 15px;\n  padding-left: 0;\n  border-right: 5px solid #eeeeee;\n  border-left: 0;\n  text-align: right; }\n  .blockquote-reverse footer:before,\n  .blockquote-reverse small:before,\n  .blockquote-reverse .small:before,\n  blockquote.pull-right footer:before,\n  blockquote.pull-right small:before,\n  blockquote.pull-right .small:before {\n    content: ''; }\n  .blockquote-reverse footer:after,\n  .blockquote-reverse small:after,\n  .blockquote-reverse .small:after,\n  blockquote.pull-right footer:after,\n  blockquote.pull-right small:after,\n  blockquote.pull-right .small:after {\n    content: '\\A0   \\2014'; }\n\naddress {\n  margin-bottom: 20px;\n  font-style: normal;\n  line-height: 1.42857; }\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; }\n\ncode {\n  padding: 2px 4px;\n  font-size: 90%;\n  color: #c7254e;\n  background-color: #f9f2f4;\n  border-radius: 4px; }\n\nkbd {\n  padding: 2px 4px;\n  font-size: 90%;\n  color: #fff;\n  background-color: #333;\n  border-radius: 3px;\n  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.25); }\n  kbd kbd {\n    padding: 0;\n    font-size: 100%;\n    font-weight: bold;\n    box-shadow: none; }\n\npre {\n  display: block;\n  padding: 9.5px;\n  margin: 0 0 10px;\n  font-size: 13px;\n  line-height: 1.42857;\n  word-break: break-all;\n  word-wrap: break-word;\n  color: #333333;\n  background-color: #f5f5f5;\n  border: 1px solid #ccc;\n  border-radius: 4px; }\n  pre code {\n    padding: 0;\n    font-size: inherit;\n    color: inherit;\n    white-space: pre-wrap;\n    background-color: transparent;\n    border-radius: 0; }\n\n.pre-scrollable {\n  max-height: 340px;\n  overflow-y: scroll; }\n\n.container {\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 15px;\n  padding-right: 15px; }\n  .container:before, .container:after {\n    content: \" \";\n    display: table; }\n  .container:after {\n    clear: both; }\n  @media (min-width: 768px) {\n    .container {\n      width: 750px; } }\n  @media (min-width: 992px) {\n    .container {\n      width: 970px; } }\n  @media (min-width: 1200px) {\n    .container {\n      width: 1170px; } }\n\n.container-fluid {\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 15px;\n  padding-right: 15px; }\n  .container-fluid:before, .container-fluid:after {\n    content: \" \";\n    display: table; }\n  .container-fluid:after {\n    clear: both; }\n\n.row {\n  margin-left: -15px;\n  margin-right: -15px; }\n  .row:before, .row:after {\n    content: \" \";\n    display: table; }\n  .row:after {\n    clear: both; }\n\n.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12 {\n  position: relative;\n  min-height: 1px;\n  padding-left: 15px;\n  padding-right: 15px; }\n\n.col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12 {\n  float: left; }\n\n.col-xs-1 {\n  width: 8.33333%; }\n\n.col-xs-2 {\n  width: 16.66667%; }\n\n.col-xs-3 {\n  width: 25%; }\n\n.col-xs-4 {\n  width: 33.33333%; }\n\n.col-xs-5 {\n  width: 41.66667%; }\n\n.col-xs-6 {\n  width: 50%; }\n\n.col-xs-7 {\n  width: 58.33333%; }\n\n.col-xs-8 {\n  width: 66.66667%; }\n\n.col-xs-9 {\n  width: 75%; }\n\n.col-xs-10 {\n  width: 83.33333%; }\n\n.col-xs-11 {\n  width: 91.66667%; }\n\n.col-xs-12 {\n  width: 100%; }\n\n.col-xs-pull-0 {\n  right: auto; }\n\n.col-xs-pull-1 {\n  right: 8.33333%; }\n\n.col-xs-pull-2 {\n  right: 16.66667%; }\n\n.col-xs-pull-3 {\n  right: 25%; }\n\n.col-xs-pull-4 {\n  right: 33.33333%; }\n\n.col-xs-pull-5 {\n  right: 41.66667%; }\n\n.col-xs-pull-6 {\n  right: 50%; }\n\n.col-xs-pull-7 {\n  right: 58.33333%; }\n\n.col-xs-pull-8 {\n  right: 66.66667%; }\n\n.col-xs-pull-9 {\n  right: 75%; }\n\n.col-xs-pull-10 {\n  right: 83.33333%; }\n\n.col-xs-pull-11 {\n  right: 91.66667%; }\n\n.col-xs-pull-12 {\n  right: 100%; }\n\n.col-xs-push-0 {\n  left: auto; }\n\n.col-xs-push-1 {\n  left: 8.33333%; }\n\n.col-xs-push-2 {\n  left: 16.66667%; }\n\n.col-xs-push-3 {\n  left: 25%; }\n\n.col-xs-push-4 {\n  left: 33.33333%; }\n\n.col-xs-push-5 {\n  left: 41.66667%; }\n\n.col-xs-push-6 {\n  left: 50%; }\n\n.col-xs-push-7 {\n  left: 58.33333%; }\n\n.col-xs-push-8 {\n  left: 66.66667%; }\n\n.col-xs-push-9 {\n  left: 75%; }\n\n.col-xs-push-10 {\n  left: 83.33333%; }\n\n.col-xs-push-11 {\n  left: 91.66667%; }\n\n.col-xs-push-12 {\n  left: 100%; }\n\n.col-xs-offset-0 {\n  margin-left: 0%; }\n\n.col-xs-offset-1 {\n  margin-left: 8.33333%; }\n\n.col-xs-offset-2 {\n  margin-left: 16.66667%; }\n\n.col-xs-offset-3 {\n  margin-left: 25%; }\n\n.col-xs-offset-4 {\n  margin-left: 33.33333%; }\n\n.col-xs-offset-5 {\n  margin-left: 41.66667%; }\n\n.col-xs-offset-6 {\n  margin-left: 50%; }\n\n.col-xs-offset-7 {\n  margin-left: 58.33333%; }\n\n.col-xs-offset-8 {\n  margin-left: 66.66667%; }\n\n.col-xs-offset-9 {\n  margin-left: 75%; }\n\n.col-xs-offset-10 {\n  margin-left: 83.33333%; }\n\n.col-xs-offset-11 {\n  margin-left: 91.66667%; }\n\n.col-xs-offset-12 {\n  margin-left: 100%; }\n\n@media (min-width: 768px) {\n  .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12 {\n    float: left; }\n  .col-sm-1 {\n    width: 8.33333%; }\n  .col-sm-2 {\n    width: 16.66667%; }\n  .col-sm-3 {\n    width: 25%; }\n  .col-sm-4 {\n    width: 33.33333%; }\n  .col-sm-5 {\n    width: 41.66667%; }\n  .col-sm-6 {\n    width: 50%; }\n  .col-sm-7 {\n    width: 58.33333%; }\n  .col-sm-8 {\n    width: 66.66667%; }\n  .col-sm-9 {\n    width: 75%; }\n  .col-sm-10 {\n    width: 83.33333%; }\n  .col-sm-11 {\n    width: 91.66667%; }\n  .col-sm-12 {\n    width: 100%; }\n  .col-sm-pull-0 {\n    right: auto; }\n  .col-sm-pull-1 {\n    right: 8.33333%; }\n  .col-sm-pull-2 {\n    right: 16.66667%; }\n  .col-sm-pull-3 {\n    right: 25%; }\n  .col-sm-pull-4 {\n    right: 33.33333%; }\n  .col-sm-pull-5 {\n    right: 41.66667%; }\n  .col-sm-pull-6 {\n    right: 50%; }\n  .col-sm-pull-7 {\n    right: 58.33333%; }\n  .col-sm-pull-8 {\n    right: 66.66667%; }\n  .col-sm-pull-9 {\n    right: 75%; }\n  .col-sm-pull-10 {\n    right: 83.33333%; }\n  .col-sm-pull-11 {\n    right: 91.66667%; }\n  .col-sm-pull-12 {\n    right: 100%; }\n  .col-sm-push-0 {\n    left: auto; }\n  .col-sm-push-1 {\n    left: 8.33333%; }\n  .col-sm-push-2 {\n    left: 16.66667%; }\n  .col-sm-push-3 {\n    left: 25%; }\n  .col-sm-push-4 {\n    left: 33.33333%; }\n  .col-sm-push-5 {\n    left: 41.66667%; }\n  .col-sm-push-6 {\n    left: 50%; }\n  .col-sm-push-7 {\n    left: 58.33333%; }\n  .col-sm-push-8 {\n    left: 66.66667%; }\n  .col-sm-push-9 {\n    left: 75%; }\n  .col-sm-push-10 {\n    left: 83.33333%; }\n  .col-sm-push-11 {\n    left: 91.66667%; }\n  .col-sm-push-12 {\n    left: 100%; }\n  .col-sm-offset-0 {\n    margin-left: 0%; }\n  .col-sm-offset-1 {\n    margin-left: 8.33333%; }\n  .col-sm-offset-2 {\n    margin-left: 16.66667%; }\n  .col-sm-offset-3 {\n    margin-left: 25%; }\n  .col-sm-offset-4 {\n    margin-left: 33.33333%; }\n  .col-sm-offset-5 {\n    margin-left: 41.66667%; }\n  .col-sm-offset-6 {\n    margin-left: 50%; }\n  .col-sm-offset-7 {\n    margin-left: 58.33333%; }\n  .col-sm-offset-8 {\n    margin-left: 66.66667%; }\n  .col-sm-offset-9 {\n    margin-left: 75%; }\n  .col-sm-offset-10 {\n    margin-left: 83.33333%; }\n  .col-sm-offset-11 {\n    margin-left: 91.66667%; }\n  .col-sm-offset-12 {\n    margin-left: 100%; } }\n\n@media (min-width: 992px) {\n  .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {\n    float: left; }\n  .col-md-1 {\n    width: 8.33333%; }\n  .col-md-2 {\n    width: 16.66667%; }\n  .col-md-3 {\n    width: 25%; }\n  .col-md-4 {\n    width: 33.33333%; }\n  .col-md-5 {\n    width: 41.66667%; }\n  .col-md-6 {\n    width: 50%; }\n  .col-md-7 {\n    width: 58.33333%; }\n  .col-md-8 {\n    width: 66.66667%; }\n  .col-md-9 {\n    width: 75%; }\n  .col-md-10 {\n    width: 83.33333%; }\n  .col-md-11 {\n    width: 91.66667%; }\n  .col-md-12 {\n    width: 100%; }\n  .col-md-pull-0 {\n    right: auto; }\n  .col-md-pull-1 {\n    right: 8.33333%; }\n  .col-md-pull-2 {\n    right: 16.66667%; }\n  .col-md-pull-3 {\n    right: 25%; }\n  .col-md-pull-4 {\n    right: 33.33333%; }\n  .col-md-pull-5 {\n    right: 41.66667%; }\n  .col-md-pull-6 {\n    right: 50%; }\n  .col-md-pull-7 {\n    right: 58.33333%; }\n  .col-md-pull-8 {\n    right: 66.66667%; }\n  .col-md-pull-9 {\n    right: 75%; }\n  .col-md-pull-10 {\n    right: 83.33333%; }\n  .col-md-pull-11 {\n    right: 91.66667%; }\n  .col-md-pull-12 {\n    right: 100%; }\n  .col-md-push-0 {\n    left: auto; }\n  .col-md-push-1 {\n    left: 8.33333%; }\n  .col-md-push-2 {\n    left: 16.66667%; }\n  .col-md-push-3 {\n    left: 25%; }\n  .col-md-push-4 {\n    left: 33.33333%; }\n  .col-md-push-5 {\n    left: 41.66667%; }\n  .col-md-push-6 {\n    left: 50%; }\n  .col-md-push-7 {\n    left: 58.33333%; }\n  .col-md-push-8 {\n    left: 66.66667%; }\n  .col-md-push-9 {\n    left: 75%; }\n  .col-md-push-10 {\n    left: 83.33333%; }\n  .col-md-push-11 {\n    left: 91.66667%; }\n  .col-md-push-12 {\n    left: 100%; }\n  .col-md-offset-0 {\n    margin-left: 0%; }\n  .col-md-offset-1 {\n    margin-left: 8.33333%; }\n  .col-md-offset-2 {\n    margin-left: 16.66667%; }\n  .col-md-offset-3 {\n    margin-left: 25%; }\n  .col-md-offset-4 {\n    margin-left: 33.33333%; }\n  .col-md-offset-5 {\n    margin-left: 41.66667%; }\n  .col-md-offset-6 {\n    margin-left: 50%; }\n  .col-md-offset-7 {\n    margin-left: 58.33333%; }\n  .col-md-offset-8 {\n    margin-left: 66.66667%; }\n  .col-md-offset-9 {\n    margin-left: 75%; }\n  .col-md-offset-10 {\n    margin-left: 83.33333%; }\n  .col-md-offset-11 {\n    margin-left: 91.66667%; }\n  .col-md-offset-12 {\n    margin-left: 100%; } }\n\n@media (min-width: 1200px) {\n  .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12 {\n    float: left; }\n  .col-lg-1 {\n    width: 8.33333%; }\n  .col-lg-2 {\n    width: 16.66667%; }\n  .col-lg-3 {\n    width: 25%; }\n  .col-lg-4 {\n    width: 33.33333%; }\n  .col-lg-5 {\n    width: 41.66667%; }\n  .col-lg-6 {\n    width: 50%; }\n  .col-lg-7 {\n    width: 58.33333%; }\n  .col-lg-8 {\n    width: 66.66667%; }\n  .col-lg-9 {\n    width: 75%; }\n  .col-lg-10 {\n    width: 83.33333%; }\n  .col-lg-11 {\n    width: 91.66667%; }\n  .col-lg-12 {\n    width: 100%; }\n  .col-lg-pull-0 {\n    right: auto; }\n  .col-lg-pull-1 {\n    right: 8.33333%; }\n  .col-lg-pull-2 {\n    right: 16.66667%; }\n  .col-lg-pull-3 {\n    right: 25%; }\n  .col-lg-pull-4 {\n    right: 33.33333%; }\n  .col-lg-pull-5 {\n    right: 41.66667%; }\n  .col-lg-pull-6 {\n    right: 50%; }\n  .col-lg-pull-7 {\n    right: 58.33333%; }\n  .col-lg-pull-8 {\n    right: 66.66667%; }\n  .col-lg-pull-9 {\n    right: 75%; }\n  .col-lg-pull-10 {\n    right: 83.33333%; }\n  .col-lg-pull-11 {\n    right: 91.66667%; }\n  .col-lg-pull-12 {\n    right: 100%; }\n  .col-lg-push-0 {\n    left: auto; }\n  .col-lg-push-1 {\n    left: 8.33333%; }\n  .col-lg-push-2 {\n    left: 16.66667%; }\n  .col-lg-push-3 {\n    left: 25%; }\n  .col-lg-push-4 {\n    left: 33.33333%; }\n  .col-lg-push-5 {\n    left: 41.66667%; }\n  .col-lg-push-6 {\n    left: 50%; }\n  .col-lg-push-7 {\n    left: 58.33333%; }\n  .col-lg-push-8 {\n    left: 66.66667%; }\n  .col-lg-push-9 {\n    left: 75%; }\n  .col-lg-push-10 {\n    left: 83.33333%; }\n  .col-lg-push-11 {\n    left: 91.66667%; }\n  .col-lg-push-12 {\n    left: 100%; }\n  .col-lg-offset-0 {\n    margin-left: 0%; }\n  .col-lg-offset-1 {\n    margin-left: 8.33333%; }\n  .col-lg-offset-2 {\n    margin-left: 16.66667%; }\n  .col-lg-offset-3 {\n    margin-left: 25%; }\n  .col-lg-offset-4 {\n    margin-left: 33.33333%; }\n  .col-lg-offset-5 {\n    margin-left: 41.66667%; }\n  .col-lg-offset-6 {\n    margin-left: 50%; }\n  .col-lg-offset-7 {\n    margin-left: 58.33333%; }\n  .col-lg-offset-8 {\n    margin-left: 66.66667%; }\n  .col-lg-offset-9 {\n    margin-left: 75%; }\n  .col-lg-offset-10 {\n    margin-left: 83.33333%; }\n  .col-lg-offset-11 {\n    margin-left: 91.66667%; }\n  .col-lg-offset-12 {\n    margin-left: 100%; } }\n\ntable {\n  background-color: transparent; }\n\ncaption {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  color: #777777;\n  text-align: left; }\n\nth {\n  text-align: left; }\n\n.table {\n  width: 100%;\n  max-width: 100%;\n  margin-bottom: 20px; }\n  .table > thead > tr > th,\n  .table > thead > tr > td,\n  .table > tbody > tr > th,\n  .table > tbody > tr > td,\n  .table > tfoot > tr > th,\n  .table > tfoot > tr > td {\n    padding: 8px;\n    line-height: 1.42857;\n    vertical-align: top;\n    border-top: 1px solid #ddd; }\n  .table > thead > tr > th {\n    vertical-align: bottom;\n    border-bottom: 2px solid #ddd; }\n  .table > caption + thead > tr:first-child > th,\n  .table > caption + thead > tr:first-child > td,\n  .table > colgroup + thead > tr:first-child > th,\n  .table > colgroup + thead > tr:first-child > td,\n  .table > thead:first-child > tr:first-child > th,\n  .table > thead:first-child > tr:first-child > td {\n    border-top: 0; }\n  .table > tbody + tbody {\n    border-top: 2px solid #ddd; }\n  .table .table {\n    background-color: #fff; }\n\n.table-condensed > thead > tr > th,\n.table-condensed > thead > tr > td,\n.table-condensed > tbody > tr > th,\n.table-condensed > tbody > tr > td,\n.table-condensed > tfoot > tr > th,\n.table-condensed > tfoot > tr > td {\n  padding: 5px; }\n\n.table-bordered {\n  border: 1px solid #ddd; }\n  .table-bordered > thead > tr > th,\n  .table-bordered > thead > tr > td,\n  .table-bordered > tbody > tr > th,\n  .table-bordered > tbody > tr > td,\n  .table-bordered > tfoot > tr > th,\n  .table-bordered > tfoot > tr > td {\n    border: 1px solid #ddd; }\n  .table-bordered > thead > tr > th,\n  .table-bordered > thead > tr > td {\n    border-bottom-width: 2px; }\n\n.table-striped > tbody > tr:nth-of-type(odd) {\n  background-color: #f9f9f9; }\n\n.table-hover > tbody > tr:hover {\n  background-color: #f5f5f5; }\n\ntable col[class*=\"col-\"] {\n  position: static;\n  float: none;\n  display: table-column; }\n\ntable td[class*=\"col-\"],\ntable th[class*=\"col-\"] {\n  position: static;\n  float: none;\n  display: table-cell; }\n\n.table > thead > tr > td.active,\n.table > thead > tr > th.active,\n.table > thead > tr.active > td,\n.table > thead > tr.active > th,\n.table > tbody > tr > td.active,\n.table > tbody > tr > th.active,\n.table > tbody > tr.active > td,\n.table > tbody > tr.active > th,\n.table > tfoot > tr > td.active,\n.table > tfoot > tr > th.active,\n.table > tfoot > tr.active > td,\n.table > tfoot > tr.active > th {\n  background-color: #f5f5f5; }\n\n.table-hover > tbody > tr > td.active:hover,\n.table-hover > tbody > tr > th.active:hover,\n.table-hover > tbody > tr.active:hover > td,\n.table-hover > tbody > tr:hover > .active,\n.table-hover > tbody > tr.active:hover > th {\n  background-color: #e8e8e8; }\n\n.table > thead > tr > td.success,\n.table > thead > tr > th.success,\n.table > thead > tr.success > td,\n.table > thead > tr.success > th,\n.table > tbody > tr > td.success,\n.table > tbody > tr > th.success,\n.table > tbody > tr.success > td,\n.table > tbody > tr.success > th,\n.table > tfoot > tr > td.success,\n.table > tfoot > tr > th.success,\n.table > tfoot > tr.success > td,\n.table > tfoot > tr.success > th {\n  background-color: #dff0d8; }\n\n.table-hover > tbody > tr > td.success:hover,\n.table-hover > tbody > tr > th.success:hover,\n.table-hover > tbody > tr.success:hover > td,\n.table-hover > tbody > tr:hover > .success,\n.table-hover > tbody > tr.success:hover > th {\n  background-color: #d0e9c6; }\n\n.table > thead > tr > td.info,\n.table > thead > tr > th.info,\n.table > thead > tr.info > td,\n.table > thead > tr.info > th,\n.table > tbody > tr > td.info,\n.table > tbody > tr > th.info,\n.table > tbody > tr.info > td,\n.table > tbody > tr.info > th,\n.table > tfoot > tr > td.info,\n.table > tfoot > tr > th.info,\n.table > tfoot > tr.info > td,\n.table > tfoot > tr.info > th {\n  background-color: #d9edf7; }\n\n.table-hover > tbody > tr > td.info:hover,\n.table-hover > tbody > tr > th.info:hover,\n.table-hover > tbody > tr.info:hover > td,\n.table-hover > tbody > tr:hover > .info,\n.table-hover > tbody > tr.info:hover > th {\n  background-color: #c4e3f3; }\n\n.table > thead > tr > td.warning,\n.table > thead > tr > th.warning,\n.table > thead > tr.warning > td,\n.table > thead > tr.warning > th,\n.table > tbody > tr > td.warning,\n.table > tbody > tr > th.warning,\n.table > tbody > tr.warning > td,\n.table > tbody > tr.warning > th,\n.table > tfoot > tr > td.warning,\n.table > tfoot > tr > th.warning,\n.table > tfoot > tr.warning > td,\n.table > tfoot > tr.warning > th {\n  background-color: #fcf8e3; }\n\n.table-hover > tbody > tr > td.warning:hover,\n.table-hover > tbody > tr > th.warning:hover,\n.table-hover > tbody > tr.warning:hover > td,\n.table-hover > tbody > tr:hover > .warning,\n.table-hover > tbody > tr.warning:hover > th {\n  background-color: #faf2cc; }\n\n.table > thead > tr > td.danger,\n.table > thead > tr > th.danger,\n.table > thead > tr.danger > td,\n.table > thead > tr.danger > th,\n.table > tbody > tr > td.danger,\n.table > tbody > tr > th.danger,\n.table > tbody > tr.danger > td,\n.table > tbody > tr.danger > th,\n.table > tfoot > tr > td.danger,\n.table > tfoot > tr > th.danger,\n.table > tfoot > tr.danger > td,\n.table > tfoot > tr.danger > th {\n  background-color: #f2dede; }\n\n.table-hover > tbody > tr > td.danger:hover,\n.table-hover > tbody > tr > th.danger:hover,\n.table-hover > tbody > tr.danger:hover > td,\n.table-hover > tbody > tr:hover > .danger,\n.table-hover > tbody > tr.danger:hover > th {\n  background-color: #ebcccc; }\n\n.table-responsive {\n  overflow-x: auto;\n  min-height: 0.01%; }\n  @media screen and (max-width: 767px) {\n    .table-responsive {\n      width: 100%;\n      margin-bottom: 15px;\n      overflow-y: hidden;\n      -ms-overflow-style: -ms-autohiding-scrollbar;\n      border: 1px solid #ddd; }\n      .table-responsive > .table {\n        margin-bottom: 0; }\n        .table-responsive > .table > thead > tr > th,\n        .table-responsive > .table > thead > tr > td,\n        .table-responsive > .table > tbody > tr > th,\n        .table-responsive > .table > tbody > tr > td,\n        .table-responsive > .table > tfoot > tr > th,\n        .table-responsive > .table > tfoot > tr > td {\n          white-space: nowrap; }\n      .table-responsive > .table-bordered {\n        border: 0; }\n        .table-responsive > .table-bordered > thead > tr > th:first-child,\n        .table-responsive > .table-bordered > thead > tr > td:first-child,\n        .table-responsive > .table-bordered > tbody > tr > th:first-child,\n        .table-responsive > .table-bordered > tbody > tr > td:first-child,\n        .table-responsive > .table-bordered > tfoot > tr > th:first-child,\n        .table-responsive > .table-bordered > tfoot > tr > td:first-child {\n          border-left: 0; }\n        .table-responsive > .table-bordered > thead > tr > th:last-child,\n        .table-responsive > .table-bordered > thead > tr > td:last-child,\n        .table-responsive > .table-bordered > tbody > tr > th:last-child,\n        .table-responsive > .table-bordered > tbody > tr > td:last-child,\n        .table-responsive > .table-bordered > tfoot > tr > th:last-child,\n        .table-responsive > .table-bordered > tfoot > tr > td:last-child {\n          border-right: 0; }\n        .table-responsive > .table-bordered > tbody > tr:last-child > th,\n        .table-responsive > .table-bordered > tbody > tr:last-child > td,\n        .table-responsive > .table-bordered > tfoot > tr:last-child > th,\n        .table-responsive > .table-bordered > tfoot > tr:last-child > td {\n          border-bottom: 0; } }\n\nfieldset {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  min-width: 0; }\n\nlegend {\n  display: block;\n  width: 100%;\n  padding: 0;\n  margin-bottom: 20px;\n  font-size: 21px;\n  line-height: inherit;\n  color: #333333;\n  border: 0;\n  border-bottom: 1px solid #e5e5e5; }\n\nlabel {\n  display: inline-block;\n  max-width: 100%;\n  margin-bottom: 5px;\n  font-weight: bold; }\n\ninput[type=\"search\"] {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box; }\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin: 4px 0 0;\n  margin-top: 1px \\9;\n  line-height: normal; }\n\ninput[type=\"file\"] {\n  display: block; }\n\ninput[type=\"range\"] {\n  display: block;\n  width: 100%; }\n\nselect[multiple],\nselect[size] {\n  height: auto; }\n\ninput[type=\"file\"]:focus,\ninput[type=\"radio\"]:focus,\ninput[type=\"checkbox\"]:focus {\n  outline: 5px auto -webkit-focus-ring-color;\n  outline-offset: -2px; }\n\noutput {\n  display: block;\n  padding-top: 7px;\n  font-size: 14px;\n  line-height: 1.42857;\n  color: #555555; }\n\n.form-control {\n  display: block;\n  width: 100%;\n  height: 34px;\n  padding: 6px 12px;\n  font-size: 14px;\n  line-height: 1.42857;\n  color: #555555;\n  background-color: #fff;\n  background-image: none;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\n  -o-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\n  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s; }\n  .form-control:focus {\n    border-color: #66afe9;\n    outline: 0;\n    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6); }\n  .form-control::-moz-placeholder {\n    color: #999;\n    opacity: 1; }\n  .form-control:-ms-input-placeholder {\n    color: #999; }\n  .form-control::-webkit-input-placeholder {\n    color: #999; }\n  .form-control::-ms-expand {\n    border: 0;\n    background-color: transparent; }\n  .form-control[disabled], .form-control[readonly],\n  fieldset[disabled] .form-control {\n    background-color: #eeeeee;\n    opacity: 1; }\n  .form-control[disabled],\n  fieldset[disabled] .form-control {\n    cursor: not-allowed; }\n\ntextarea.form-control {\n  height: auto; }\n\ninput[type=\"search\"] {\n  -webkit-appearance: none; }\n\n@media screen and (-webkit-min-device-pixel-ratio: 0) {\n  input[type=\"date\"].form-control,\n  input[type=\"time\"].form-control,\n  input[type=\"datetime-local\"].form-control,\n  input[type=\"month\"].form-control {\n    line-height: 34px; }\n  input[type=\"date\"].input-sm, .input-group-sm > input[type=\"date\"].form-control,\n  .input-group-sm > input[type=\"date\"].input-group-addon,\n  .input-group-sm > .input-group-btn > input[type=\"date\"].btn,\n  .input-group-sm input[type=\"date\"],\n  input[type=\"time\"].input-sm,\n  .input-group-sm > input[type=\"time\"].form-control,\n  .input-group-sm > input[type=\"time\"].input-group-addon,\n  .input-group-sm > .input-group-btn > input[type=\"time\"].btn,\n  .input-group-sm\n  input[type=\"time\"],\n  input[type=\"datetime-local\"].input-sm,\n  .input-group-sm > input[type=\"datetime-local\"].form-control,\n  .input-group-sm > input[type=\"datetime-local\"].input-group-addon,\n  .input-group-sm > .input-group-btn > input[type=\"datetime-local\"].btn,\n  .input-group-sm\n  input[type=\"datetime-local\"],\n  input[type=\"month\"].input-sm,\n  .input-group-sm > input[type=\"month\"].form-control,\n  .input-group-sm > input[type=\"month\"].input-group-addon,\n  .input-group-sm > .input-group-btn > input[type=\"month\"].btn,\n  .input-group-sm\n  input[type=\"month\"] {\n    line-height: 30px; }\n  input[type=\"date\"].input-lg, .input-group-lg > input[type=\"date\"].form-control,\n  .input-group-lg > input[type=\"date\"].input-group-addon,\n  .input-group-lg > .input-group-btn > input[type=\"date\"].btn,\n  .input-group-lg input[type=\"date\"],\n  input[type=\"time\"].input-lg,\n  .input-group-lg > input[type=\"time\"].form-control,\n  .input-group-lg > input[type=\"time\"].input-group-addon,\n  .input-group-lg > .input-group-btn > input[type=\"time\"].btn,\n  .input-group-lg\n  input[type=\"time\"],\n  input[type=\"datetime-local\"].input-lg,\n  .input-group-lg > input[type=\"datetime-local\"].form-control,\n  .input-group-lg > input[type=\"datetime-local\"].input-group-addon,\n  .input-group-lg > .input-group-btn > input[type=\"datetime-local\"].btn,\n  .input-group-lg\n  input[type=\"datetime-local\"],\n  input[type=\"month\"].input-lg,\n  .input-group-lg > input[type=\"month\"].form-control,\n  .input-group-lg > input[type=\"month\"].input-group-addon,\n  .input-group-lg > .input-group-btn > input[type=\"month\"].btn,\n  .input-group-lg\n  input[type=\"month\"] {\n    line-height: 46px; } }\n\n.form-group {\n  margin-bottom: 15px; }\n\n.radio,\n.checkbox {\n  position: relative;\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px; }\n  .radio label,\n  .checkbox label {\n    min-height: 20px;\n    padding-left: 20px;\n    margin-bottom: 0;\n    font-weight: normal;\n    cursor: pointer; }\n\n.radio input[type=\"radio\"],\n.radio-inline input[type=\"radio\"],\n.checkbox input[type=\"checkbox\"],\n.checkbox-inline input[type=\"checkbox\"] {\n  position: absolute;\n  margin-left: -20px;\n  margin-top: 4px \\9; }\n\n.radio + .radio,\n.checkbox + .checkbox {\n  margin-top: -5px; }\n\n.radio-inline,\n.checkbox-inline {\n  position: relative;\n  display: inline-block;\n  padding-left: 20px;\n  margin-bottom: 0;\n  vertical-align: middle;\n  font-weight: normal;\n  cursor: pointer; }\n\n.radio-inline + .radio-inline,\n.checkbox-inline + .checkbox-inline {\n  margin-top: 0;\n  margin-left: 10px; }\n\ninput[type=\"radio\"][disabled], input[type=\"radio\"].disabled,\nfieldset[disabled] input[type=\"radio\"],\ninput[type=\"checkbox\"][disabled],\ninput[type=\"checkbox\"].disabled,\nfieldset[disabled]\ninput[type=\"checkbox\"] {\n  cursor: not-allowed; }\n\n.radio-inline.disabled,\nfieldset[disabled] .radio-inline,\n.checkbox-inline.disabled,\nfieldset[disabled]\n.checkbox-inline {\n  cursor: not-allowed; }\n\n.radio.disabled label,\nfieldset[disabled] .radio label,\n.checkbox.disabled label,\nfieldset[disabled]\n.checkbox label {\n  cursor: not-allowed; }\n\n.form-control-static {\n  padding-top: 7px;\n  padding-bottom: 7px;\n  margin-bottom: 0;\n  min-height: 34px; }\n  .form-control-static.input-lg, .input-group-lg > .form-control-static.form-control,\n  .input-group-lg > .form-control-static.input-group-addon,\n  .input-group-lg > .input-group-btn > .form-control-static.btn, .form-control-static.input-sm, .input-group-sm > .form-control-static.form-control,\n  .input-group-sm > .form-control-static.input-group-addon,\n  .input-group-sm > .input-group-btn > .form-control-static.btn {\n    padding-left: 0;\n    padding-right: 0; }\n\n.input-sm, .input-group-sm > .form-control,\n.input-group-sm > .input-group-addon,\n.input-group-sm > .input-group-btn > .btn {\n  height: 30px;\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px; }\n\nselect.input-sm, .input-group-sm > select.form-control,\n.input-group-sm > select.input-group-addon,\n.input-group-sm > .input-group-btn > select.btn {\n  height: 30px;\n  line-height: 30px; }\n\ntextarea.input-sm, .input-group-sm > textarea.form-control,\n.input-group-sm > textarea.input-group-addon,\n.input-group-sm > .input-group-btn > textarea.btn,\nselect[multiple].input-sm,\n.input-group-sm > select[multiple].form-control,\n.input-group-sm > select[multiple].input-group-addon,\n.input-group-sm > .input-group-btn > select[multiple].btn {\n  height: auto; }\n\n.form-group-sm .form-control {\n  height: 30px;\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px; }\n\n.form-group-sm select.form-control {\n  height: 30px;\n  line-height: 30px; }\n\n.form-group-sm textarea.form-control,\n.form-group-sm select[multiple].form-control {\n  height: auto; }\n\n.form-group-sm .form-control-static {\n  height: 30px;\n  min-height: 32px;\n  padding: 6px 10px;\n  font-size: 12px;\n  line-height: 1.5; }\n\n.input-lg, .input-group-lg > .form-control,\n.input-group-lg > .input-group-addon,\n.input-group-lg > .input-group-btn > .btn {\n  height: 46px;\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.33333;\n  border-radius: 6px; }\n\nselect.input-lg, .input-group-lg > select.form-control,\n.input-group-lg > select.input-group-addon,\n.input-group-lg > .input-group-btn > select.btn {\n  height: 46px;\n  line-height: 46px; }\n\ntextarea.input-lg, .input-group-lg > textarea.form-control,\n.input-group-lg > textarea.input-group-addon,\n.input-group-lg > .input-group-btn > textarea.btn,\nselect[multiple].input-lg,\n.input-group-lg > select[multiple].form-control,\n.input-group-lg > select[multiple].input-group-addon,\n.input-group-lg > .input-group-btn > select[multiple].btn {\n  height: auto; }\n\n.form-group-lg .form-control {\n  height: 46px;\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.33333;\n  border-radius: 6px; }\n\n.form-group-lg select.form-control {\n  height: 46px;\n  line-height: 46px; }\n\n.form-group-lg textarea.form-control,\n.form-group-lg select[multiple].form-control {\n  height: auto; }\n\n.form-group-lg .form-control-static {\n  height: 46px;\n  min-height: 38px;\n  padding: 11px 16px;\n  font-size: 18px;\n  line-height: 1.33333; }\n\n.has-feedback {\n  position: relative; }\n  .has-feedback .form-control {\n    padding-right: 42.5px; }\n\n.form-control-feedback {\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 2;\n  display: block;\n  width: 34px;\n  height: 34px;\n  line-height: 34px;\n  text-align: center;\n  pointer-events: none; }\n\n.input-lg + .form-control-feedback, .input-group-lg > .form-control + .form-control-feedback,\n.input-group-lg > .input-group-addon + .form-control-feedback,\n.input-group-lg > .input-group-btn > .btn + .form-control-feedback,\n.input-group-lg + .form-control-feedback,\n.form-group-lg .form-control + .form-control-feedback {\n  width: 46px;\n  height: 46px;\n  line-height: 46px; }\n\n.input-sm + .form-control-feedback, .input-group-sm > .form-control + .form-control-feedback,\n.input-group-sm > .input-group-addon + .form-control-feedback,\n.input-group-sm > .input-group-btn > .btn + .form-control-feedback,\n.input-group-sm + .form-control-feedback,\n.form-group-sm .form-control + .form-control-feedback {\n  width: 30px;\n  height: 30px;\n  line-height: 30px; }\n\n.has-success .help-block,\n.has-success .control-label,\n.has-success .radio,\n.has-success .checkbox,\n.has-success .radio-inline,\n.has-success .checkbox-inline,\n.has-success.radio label,\n.has-success.checkbox label,\n.has-success.radio-inline label,\n.has-success.checkbox-inline label {\n  color: #3c763d; }\n\n.has-success .form-control {\n  border-color: #3c763d;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); }\n  .has-success .form-control:focus {\n    border-color: #2b542c;\n    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #67b168;\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #67b168; }\n\n.has-success .input-group-addon {\n  color: #3c763d;\n  border-color: #3c763d;\n  background-color: #dff0d8; }\n\n.has-success .form-control-feedback {\n  color: #3c763d; }\n\n.has-warning .help-block,\n.has-warning .control-label,\n.has-warning .radio,\n.has-warning .checkbox,\n.has-warning .radio-inline,\n.has-warning .checkbox-inline,\n.has-warning.radio label,\n.has-warning.checkbox label,\n.has-warning.radio-inline label,\n.has-warning.checkbox-inline label {\n  color: #8a6d3b; }\n\n.has-warning .form-control {\n  border-color: #8a6d3b;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); }\n  .has-warning .form-control:focus {\n    border-color: #66512c;\n    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #c0a16b;\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #c0a16b; }\n\n.has-warning .input-group-addon {\n  color: #8a6d3b;\n  border-color: #8a6d3b;\n  background-color: #fcf8e3; }\n\n.has-warning .form-control-feedback {\n  color: #8a6d3b; }\n\n.has-error .help-block,\n.has-error .control-label,\n.has-error .radio,\n.has-error .checkbox,\n.has-error .radio-inline,\n.has-error .checkbox-inline,\n.has-error.radio label,\n.has-error.checkbox label,\n.has-error.radio-inline label,\n.has-error.checkbox-inline label {\n  color: #a94442; }\n\n.has-error .form-control {\n  border-color: #a94442;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075); }\n  .has-error .form-control:focus {\n    border-color: #843534;\n    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483;\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483; }\n\n.has-error .input-group-addon {\n  color: #a94442;\n  border-color: #a94442;\n  background-color: #f2dede; }\n\n.has-error .form-control-feedback {\n  color: #a94442; }\n\n.has-feedback label ~ .form-control-feedback {\n  top: 25px; }\n\n.has-feedback label.sr-only ~ .form-control-feedback {\n  top: 0; }\n\n.help-block {\n  display: block;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  color: #737373; }\n\n@media (min-width: 768px) {\n  .form-inline .form-group {\n    display: inline-block;\n    margin-bottom: 0;\n    vertical-align: middle; }\n  .form-inline .form-control {\n    display: inline-block;\n    width: auto;\n    vertical-align: middle; }\n  .form-inline .form-control-static {\n    display: inline-block; }\n  .form-inline .input-group {\n    display: inline-table;\n    vertical-align: middle; }\n    .form-inline .input-group .input-group-addon,\n    .form-inline .input-group .input-group-btn,\n    .form-inline .input-group .form-control {\n      width: auto; }\n  .form-inline .input-group > .form-control {\n    width: 100%; }\n  .form-inline .control-label {\n    margin-bottom: 0;\n    vertical-align: middle; }\n  .form-inline .radio,\n  .form-inline .checkbox {\n    display: inline-block;\n    margin-top: 0;\n    margin-bottom: 0;\n    vertical-align: middle; }\n    .form-inline .radio label,\n    .form-inline .checkbox label {\n      padding-left: 0; }\n  .form-inline .radio input[type=\"radio\"],\n  .form-inline .checkbox input[type=\"checkbox\"] {\n    position: relative;\n    margin-left: 0; }\n  .form-inline .has-feedback .form-control-feedback {\n    top: 0; } }\n\n.form-horizontal .radio,\n.form-horizontal .checkbox,\n.form-horizontal .radio-inline,\n.form-horizontal .checkbox-inline {\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: 7px; }\n\n.form-horizontal .radio,\n.form-horizontal .checkbox {\n  min-height: 27px; }\n\n.form-horizontal .form-group {\n  margin-left: -15px;\n  margin-right: -15px; }\n  .form-horizontal .form-group:before, .form-horizontal .form-group:after {\n    content: \" \";\n    display: table; }\n  .form-horizontal .form-group:after {\n    clear: both; }\n\n@media (min-width: 768px) {\n  .form-horizontal .control-label {\n    text-align: right;\n    margin-bottom: 0;\n    padding-top: 7px; } }\n\n.form-horizontal .has-feedback .form-control-feedback {\n  right: 15px; }\n\n@media (min-width: 768px) {\n  .form-horizontal .form-group-lg .control-label {\n    padding-top: 11px;\n    font-size: 18px; } }\n\n@media (min-width: 768px) {\n  .form-horizontal .form-group-sm .control-label {\n    padding-top: 6px;\n    font-size: 12px; } }\n\n.btn {\n  display: inline-block;\n  margin-bottom: 0;\n  font-weight: normal;\n  text-align: center;\n  vertical-align: middle;\n  touch-action: manipulation;\n  cursor: pointer;\n  background-image: none;\n  border: 1px solid transparent;\n  white-space: nowrap;\n  padding: 6px 12px;\n  font-size: 14px;\n  line-height: 1.42857;\n  border-radius: 4px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n  .btn:focus, .btn.focus, .btn:active:focus, .btn:active.focus, .btn.active:focus, .btn.active.focus {\n    outline: 5px auto -webkit-focus-ring-color;\n    outline-offset: -2px; }\n  .btn:hover, .btn:focus, .btn.focus {\n    color: #333;\n    text-decoration: none; }\n  .btn:active, .btn.active {\n    outline: 0;\n    background-image: none;\n    -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n    box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125); }\n  .btn.disabled, .btn[disabled],\n  fieldset[disabled] .btn {\n    cursor: not-allowed;\n    opacity: 0.65;\n    filter: alpha(opacity=65);\n    -webkit-box-shadow: none;\n    box-shadow: none; }\n\na.btn.disabled,\nfieldset[disabled] a.btn {\n  pointer-events: none; }\n\n.btn-default {\n  color: #333;\n  background-color: #fff;\n  border-color: #ccc; }\n  .btn-default:focus, .btn-default.focus {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #8c8c8c; }\n  .btn-default:hover {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #adadad; }\n  .btn-default:active, .btn-default.active,\n  .open > .btn-default.dropdown-toggle {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #adadad; }\n    .btn-default:active:hover, .btn-default:active:focus, .btn-default:active.focus, .btn-default.active:hover, .btn-default.active:focus, .btn-default.active.focus,\n    .open > .btn-default.dropdown-toggle:hover,\n    .open > .btn-default.dropdown-toggle:focus,\n    .open > .btn-default.dropdown-toggle.focus {\n      color: #333;\n      background-color: #d4d4d4;\n      border-color: #8c8c8c; }\n  .btn-default:active, .btn-default.active,\n  .open > .btn-default.dropdown-toggle {\n    background-image: none; }\n  .btn-default.disabled:hover, .btn-default.disabled:focus, .btn-default.disabled.focus, .btn-default[disabled]:hover, .btn-default[disabled]:focus, .btn-default[disabled].focus,\n  fieldset[disabled] .btn-default:hover,\n  fieldset[disabled] .btn-default:focus,\n  fieldset[disabled] .btn-default.focus {\n    background-color: #fff;\n    border-color: #ccc; }\n  .btn-default .badge {\n    color: #fff;\n    background-color: #333; }\n\n.btn-primary {\n  color: #fff;\n  background-color: #337ab7;\n  border-color: #2e6da4; }\n  .btn-primary:focus, .btn-primary.focus {\n    color: #fff;\n    background-color: #286090;\n    border-color: #122b40; }\n  .btn-primary:hover {\n    color: #fff;\n    background-color: #286090;\n    border-color: #204d74; }\n  .btn-primary:active, .btn-primary.active,\n  .open > .btn-primary.dropdown-toggle {\n    color: #fff;\n    background-color: #286090;\n    border-color: #204d74; }\n    .btn-primary:active:hover, .btn-primary:active:focus, .btn-primary:active.focus, .btn-primary.active:hover, .btn-primary.active:focus, .btn-primary.active.focus,\n    .open > .btn-primary.dropdown-toggle:hover,\n    .open > .btn-primary.dropdown-toggle:focus,\n    .open > .btn-primary.dropdown-toggle.focus {\n      color: #fff;\n      background-color: #204d74;\n      border-color: #122b40; }\n  .btn-primary:active, .btn-primary.active,\n  .open > .btn-primary.dropdown-toggle {\n    background-image: none; }\n  .btn-primary.disabled:hover, .btn-primary.disabled:focus, .btn-primary.disabled.focus, .btn-primary[disabled]:hover, .btn-primary[disabled]:focus, .btn-primary[disabled].focus,\n  fieldset[disabled] .btn-primary:hover,\n  fieldset[disabled] .btn-primary:focus,\n  fieldset[disabled] .btn-primary.focus {\n    background-color: #337ab7;\n    border-color: #2e6da4; }\n  .btn-primary .badge {\n    color: #337ab7;\n    background-color: #fff; }\n\n.btn-success {\n  color: #fff;\n  background-color: #5cb85c;\n  border-color: #4cae4c; }\n  .btn-success:focus, .btn-success.focus {\n    color: #fff;\n    background-color: #449d44;\n    border-color: #255625; }\n  .btn-success:hover {\n    color: #fff;\n    background-color: #449d44;\n    border-color: #398439; }\n  .btn-success:active, .btn-success.active,\n  .open > .btn-success.dropdown-toggle {\n    color: #fff;\n    background-color: #449d44;\n    border-color: #398439; }\n    .btn-success:active:hover, .btn-success:active:focus, .btn-success:active.focus, .btn-success.active:hover, .btn-success.active:focus, .btn-success.active.focus,\n    .open > .btn-success.dropdown-toggle:hover,\n    .open > .btn-success.dropdown-toggle:focus,\n    .open > .btn-success.dropdown-toggle.focus {\n      color: #fff;\n      background-color: #398439;\n      border-color: #255625; }\n  .btn-success:active, .btn-success.active,\n  .open > .btn-success.dropdown-toggle {\n    background-image: none; }\n  .btn-success.disabled:hover, .btn-success.disabled:focus, .btn-success.disabled.focus, .btn-success[disabled]:hover, .btn-success[disabled]:focus, .btn-success[disabled].focus,\n  fieldset[disabled] .btn-success:hover,\n  fieldset[disabled] .btn-success:focus,\n  fieldset[disabled] .btn-success.focus {\n    background-color: #5cb85c;\n    border-color: #4cae4c; }\n  .btn-success .badge {\n    color: #5cb85c;\n    background-color: #fff; }\n\n.btn-info {\n  color: #fff;\n  background-color: #5bc0de;\n  border-color: #46b8da; }\n  .btn-info:focus, .btn-info.focus {\n    color: #fff;\n    background-color: #31b0d5;\n    border-color: #1b6d85; }\n  .btn-info:hover {\n    color: #fff;\n    background-color: #31b0d5;\n    border-color: #269abc; }\n  .btn-info:active, .btn-info.active,\n  .open > .btn-info.dropdown-toggle {\n    color: #fff;\n    background-color: #31b0d5;\n    border-color: #269abc; }\n    .btn-info:active:hover, .btn-info:active:focus, .btn-info:active.focus, .btn-info.active:hover, .btn-info.active:focus, .btn-info.active.focus,\n    .open > .btn-info.dropdown-toggle:hover,\n    .open > .btn-info.dropdown-toggle:focus,\n    .open > .btn-info.dropdown-toggle.focus {\n      color: #fff;\n      background-color: #269abc;\n      border-color: #1b6d85; }\n  .btn-info:active, .btn-info.active,\n  .open > .btn-info.dropdown-toggle {\n    background-image: none; }\n  .btn-info.disabled:hover, .btn-info.disabled:focus, .btn-info.disabled.focus, .btn-info[disabled]:hover, .btn-info[disabled]:focus, .btn-info[disabled].focus,\n  fieldset[disabled] .btn-info:hover,\n  fieldset[disabled] .btn-info:focus,\n  fieldset[disabled] .btn-info.focus {\n    background-color: #5bc0de;\n    border-color: #46b8da; }\n  .btn-info .badge {\n    color: #5bc0de;\n    background-color: #fff; }\n\n.btn-warning {\n  color: #fff;\n  background-color: #f0ad4e;\n  border-color: #eea236; }\n  .btn-warning:focus, .btn-warning.focus {\n    color: #fff;\n    background-color: #ec971f;\n    border-color: #985f0d; }\n  .btn-warning:hover {\n    color: #fff;\n    background-color: #ec971f;\n    border-color: #d58512; }\n  .btn-warning:active, .btn-warning.active,\n  .open > .btn-warning.dropdown-toggle {\n    color: #fff;\n    background-color: #ec971f;\n    border-color: #d58512; }\n    .btn-warning:active:hover, .btn-warning:active:focus, .btn-warning:active.focus, .btn-warning.active:hover, .btn-warning.active:focus, .btn-warning.active.focus,\n    .open > .btn-warning.dropdown-toggle:hover,\n    .open > .btn-warning.dropdown-toggle:focus,\n    .open > .btn-warning.dropdown-toggle.focus {\n      color: #fff;\n      background-color: #d58512;\n      border-color: #985f0d; }\n  .btn-warning:active, .btn-warning.active,\n  .open > .btn-warning.dropdown-toggle {\n    background-image: none; }\n  .btn-warning.disabled:hover, .btn-warning.disabled:focus, .btn-warning.disabled.focus, .btn-warning[disabled]:hover, .btn-warning[disabled]:focus, .btn-warning[disabled].focus,\n  fieldset[disabled] .btn-warning:hover,\n  fieldset[disabled] .btn-warning:focus,\n  fieldset[disabled] .btn-warning.focus {\n    background-color: #f0ad4e;\n    border-color: #eea236; }\n  .btn-warning .badge {\n    color: #f0ad4e;\n    background-color: #fff; }\n\n.btn-danger {\n  color: #fff;\n  background-color: #d9534f;\n  border-color: #d43f3a; }\n  .btn-danger:focus, .btn-danger.focus {\n    color: #fff;\n    background-color: #c9302c;\n    border-color: #761c19; }\n  .btn-danger:hover {\n    color: #fff;\n    background-color: #c9302c;\n    border-color: #ac2925; }\n  .btn-danger:active, .btn-danger.active,\n  .open > .btn-danger.dropdown-toggle {\n    color: #fff;\n    background-color: #c9302c;\n    border-color: #ac2925; }\n    .btn-danger:active:hover, .btn-danger:active:focus, .btn-danger:active.focus, .btn-danger.active:hover, .btn-danger.active:focus, .btn-danger.active.focus,\n    .open > .btn-danger.dropdown-toggle:hover,\n    .open > .btn-danger.dropdown-toggle:focus,\n    .open > .btn-danger.dropdown-toggle.focus {\n      color: #fff;\n      background-color: #ac2925;\n      border-color: #761c19; }\n  .btn-danger:active, .btn-danger.active,\n  .open > .btn-danger.dropdown-toggle {\n    background-image: none; }\n  .btn-danger.disabled:hover, .btn-danger.disabled:focus, .btn-danger.disabled.focus, .btn-danger[disabled]:hover, .btn-danger[disabled]:focus, .btn-danger[disabled].focus,\n  fieldset[disabled] .btn-danger:hover,\n  fieldset[disabled] .btn-danger:focus,\n  fieldset[disabled] .btn-danger.focus {\n    background-color: #d9534f;\n    border-color: #d43f3a; }\n  .btn-danger .badge {\n    color: #d9534f;\n    background-color: #fff; }\n\n.btn-link {\n  color: #337ab7;\n  font-weight: normal;\n  border-radius: 0; }\n  .btn-link, .btn-link:active, .btn-link.active, .btn-link[disabled],\n  fieldset[disabled] .btn-link {\n    background-color: transparent;\n    -webkit-box-shadow: none;\n    box-shadow: none; }\n  .btn-link, .btn-link:hover, .btn-link:focus, .btn-link:active {\n    border-color: transparent; }\n  .btn-link:hover, .btn-link:focus {\n    color: #23527c;\n    text-decoration: underline;\n    background-color: transparent; }\n  .btn-link[disabled]:hover, .btn-link[disabled]:focus,\n  fieldset[disabled] .btn-link:hover,\n  fieldset[disabled] .btn-link:focus {\n    color: #777777;\n    text-decoration: none; }\n\n.btn-lg, .btn-group-lg > .btn {\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.33333;\n  border-radius: 6px; }\n\n.btn-sm, .btn-group-sm > .btn {\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px; }\n\n.btn-xs, .btn-group-xs > .btn {\n  padding: 1px 5px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px; }\n\n.btn-block {\n  display: block;\n  width: 100%; }\n\n.btn-block + .btn-block {\n  margin-top: 5px; }\n\ninput[type=\"submit\"].btn-block,\ninput[type=\"reset\"].btn-block,\ninput[type=\"button\"].btn-block {\n  width: 100%; }\n\n.fade {\n  opacity: 0;\n  -webkit-transition: opacity 0.15s linear;\n  -o-transition: opacity 0.15s linear;\n  transition: opacity 0.15s linear; }\n  .fade.in {\n    opacity: 1; }\n\n.collapse {\n  display: none; }\n  .collapse.in {\n    display: block; }\n\ntr.collapse.in {\n  display: table-row; }\n\ntbody.collapse.in {\n  display: table-row-group; }\n\n.collapsing {\n  position: relative;\n  height: 0;\n  overflow: hidden;\n  -webkit-transition-property: height, visibility;\n  transition-property: height, visibility;\n  -webkit-transition-duration: 0.35s;\n  transition-duration: 0.35s;\n  -webkit-transition-timing-function: ease;\n  transition-timing-function: ease; }\n\n.caret {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  margin-left: 2px;\n  vertical-align: middle;\n  border-top: 4px dashed;\n  border-top: 4px solid \\9;\n  border-right: 4px solid transparent;\n  border-left: 4px solid transparent; }\n\n.dropup,\n.dropdown {\n  position: relative; }\n\n.dropdown-toggle:focus {\n  outline: 0; }\n\n.dropdown-menu {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  z-index: 1000;\n  display: none;\n  float: left;\n  min-width: 160px;\n  padding: 5px 0;\n  margin: 2px 0 0;\n  list-style: none;\n  font-size: 14px;\n  text-align: left;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\n  background-clip: padding-box; }\n  .dropdown-menu.pull-right {\n    right: 0;\n    left: auto; }\n  .dropdown-menu .divider {\n    height: 1px;\n    margin: 9px 0;\n    overflow: hidden;\n    background-color: #e5e5e5; }\n  .dropdown-menu > li > a {\n    display: block;\n    padding: 3px 20px;\n    clear: both;\n    font-weight: normal;\n    line-height: 1.42857;\n    color: #333333;\n    white-space: nowrap; }\n\n.dropdown-menu > li > a:hover, .dropdown-menu > li > a:focus {\n  text-decoration: none;\n  color: #262626;\n  background-color: #f5f5f5; }\n\n.dropdown-menu > .active > a, .dropdown-menu > .active > a:hover, .dropdown-menu > .active > a:focus {\n  color: #fff;\n  text-decoration: none;\n  outline: 0;\n  background-color: #337ab7; }\n\n.dropdown-menu > .disabled > a, .dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus {\n  color: #777777; }\n\n.dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus {\n  text-decoration: none;\n  background-color: transparent;\n  background-image: none;\n  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);\n  cursor: not-allowed; }\n\n.open > .dropdown-menu {\n  display: block; }\n\n.open > a {\n  outline: 0; }\n\n.dropdown-menu-right {\n  left: auto;\n  right: 0; }\n\n.dropdown-menu-left {\n  left: 0;\n  right: auto; }\n\n.dropdown-header {\n  display: block;\n  padding: 3px 20px;\n  font-size: 12px;\n  line-height: 1.42857;\n  color: #777777;\n  white-space: nowrap; }\n\n.dropdown-backdrop {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  z-index: 990; }\n\n.pull-right > .dropdown-menu {\n  right: 0;\n  left: auto; }\n\n.dropup .caret,\n.navbar-fixed-bottom .dropdown .caret {\n  border-top: 0;\n  border-bottom: 4px dashed;\n  border-bottom: 4px solid \\9;\n  content: \"\"; }\n\n.dropup .dropdown-menu,\n.navbar-fixed-bottom .dropdown .dropdown-menu {\n  top: auto;\n  bottom: 100%;\n  margin-bottom: 2px; }\n\n@media (min-width: 768px) {\n  .navbar-right .dropdown-menu {\n    right: 0;\n    left: auto; }\n  .navbar-right .dropdown-menu-left {\n    left: 0;\n    right: auto; } }\n\n.btn-group,\n.btn-group-vertical {\n  position: relative;\n  display: inline-block;\n  vertical-align: middle; }\n  .btn-group > .btn,\n  .btn-group-vertical > .btn {\n    position: relative;\n    float: left; }\n    .btn-group > .btn:hover, .btn-group > .btn:focus, .btn-group > .btn:active, .btn-group > .btn.active,\n    .btn-group-vertical > .btn:hover,\n    .btn-group-vertical > .btn:focus,\n    .btn-group-vertical > .btn:active,\n    .btn-group-vertical > .btn.active {\n      z-index: 2; }\n\n.btn-group .btn + .btn,\n.btn-group .btn + .btn-group,\n.btn-group .btn-group + .btn,\n.btn-group .btn-group + .btn-group {\n  margin-left: -1px; }\n\n.btn-toolbar {\n  margin-left: -5px; }\n  .btn-toolbar:before, .btn-toolbar:after {\n    content: \" \";\n    display: table; }\n  .btn-toolbar:after {\n    clear: both; }\n  .btn-toolbar .btn,\n  .btn-toolbar .btn-group,\n  .btn-toolbar .input-group {\n    float: left; }\n  .btn-toolbar > .btn,\n  .btn-toolbar > .btn-group,\n  .btn-toolbar > .input-group {\n    margin-left: 5px; }\n\n.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) {\n  border-radius: 0; }\n\n.btn-group > .btn:first-child {\n  margin-left: 0; }\n  .btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) {\n    border-bottom-right-radius: 0;\n    border-top-right-radius: 0; }\n\n.btn-group > .btn:last-child:not(:first-child),\n.btn-group > .dropdown-toggle:not(:first-child) {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0; }\n\n.btn-group > .btn-group {\n  float: left; }\n\n.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn {\n  border-radius: 0; }\n\n.btn-group > .btn-group:first-child:not(:last-child) > .btn:last-child,\n.btn-group > .btn-group:first-child:not(:last-child) > .dropdown-toggle {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0; }\n\n.btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0; }\n\n.btn-group .dropdown-toggle:active,\n.btn-group.open .dropdown-toggle {\n  outline: 0; }\n\n.btn-group > .btn + .dropdown-toggle {\n  padding-left: 8px;\n  padding-right: 8px; }\n\n.btn-group > .btn-lg + .dropdown-toggle, .btn-group-lg.btn-group > .btn + .dropdown-toggle {\n  padding-left: 12px;\n  padding-right: 12px; }\n\n.btn-group.open .dropdown-toggle {\n  -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125); }\n  .btn-group.open .dropdown-toggle.btn-link {\n    -webkit-box-shadow: none;\n    box-shadow: none; }\n\n.btn .caret {\n  margin-left: 0; }\n\n.btn-lg .caret, .btn-group-lg > .btn .caret {\n  border-width: 5px 5px 0;\n  border-bottom-width: 0; }\n\n.dropup .btn-lg .caret, .dropup .btn-group-lg > .btn .caret {\n  border-width: 0 5px 5px; }\n\n.btn-group-vertical > .btn,\n.btn-group-vertical > .btn-group,\n.btn-group-vertical > .btn-group > .btn {\n  display: block;\n  float: none;\n  width: 100%;\n  max-width: 100%; }\n\n.btn-group-vertical > .btn-group:before, .btn-group-vertical > .btn-group:after {\n  content: \" \";\n  display: table; }\n\n.btn-group-vertical > .btn-group:after {\n  clear: both; }\n\n.btn-group-vertical > .btn-group > .btn {\n  float: none; }\n\n.btn-group-vertical > .btn + .btn,\n.btn-group-vertical > .btn + .btn-group,\n.btn-group-vertical > .btn-group + .btn,\n.btn-group-vertical > .btn-group + .btn-group {\n  margin-top: -1px;\n  margin-left: 0; }\n\n.btn-group-vertical > .btn:not(:first-child):not(:last-child) {\n  border-radius: 0; }\n\n.btn-group-vertical > .btn:first-child:not(:last-child) {\n  border-top-right-radius: 4px;\n  border-top-left-radius: 4px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0; }\n\n.btn-group-vertical > .btn:last-child:not(:first-child) {\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n  border-bottom-right-radius: 4px;\n  border-bottom-left-radius: 4px; }\n\n.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn {\n  border-radius: 0; }\n\n.btn-group-vertical > .btn-group:first-child:not(:last-child) > .btn:last-child,\n.btn-group-vertical > .btn-group:first-child:not(:last-child) > .dropdown-toggle {\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0; }\n\n.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-child {\n  border-top-right-radius: 0;\n  border-top-left-radius: 0; }\n\n.btn-group-justified {\n  display: table;\n  width: 100%;\n  table-layout: fixed;\n  border-collapse: separate; }\n  .btn-group-justified > .btn,\n  .btn-group-justified > .btn-group {\n    float: none;\n    display: table-cell;\n    width: 1%; }\n  .btn-group-justified > .btn-group .btn {\n    width: 100%; }\n  .btn-group-justified > .btn-group .dropdown-menu {\n    left: auto; }\n\n[data-toggle=\"buttons\"] > .btn input[type=\"radio\"],\n[data-toggle=\"buttons\"] > .btn input[type=\"checkbox\"],\n[data-toggle=\"buttons\"] > .btn-group > .btn input[type=\"radio\"],\n[data-toggle=\"buttons\"] > .btn-group > .btn input[type=\"checkbox\"] {\n  position: absolute;\n  clip: rect(0, 0, 0, 0);\n  pointer-events: none; }\n\n.input-group {\n  position: relative;\n  display: table;\n  border-collapse: separate; }\n  .input-group[class*=\"col-\"] {\n    float: none;\n    padding-left: 0;\n    padding-right: 0; }\n  .input-group .form-control {\n    position: relative;\n    z-index: 2;\n    float: left;\n    width: 100%;\n    margin-bottom: 0; }\n    .input-group .form-control:focus {\n      z-index: 3; }\n\n.input-group-addon,\n.input-group-btn,\n.input-group .form-control {\n  display: table-cell; }\n  .input-group-addon:not(:first-child):not(:last-child),\n  .input-group-btn:not(:first-child):not(:last-child),\n  .input-group .form-control:not(:first-child):not(:last-child) {\n    border-radius: 0; }\n\n.input-group-addon,\n.input-group-btn {\n  width: 1%;\n  white-space: nowrap;\n  vertical-align: middle; }\n\n.input-group-addon {\n  padding: 6px 12px;\n  font-size: 14px;\n  font-weight: normal;\n  line-height: 1;\n  color: #555555;\n  text-align: center;\n  background-color: #eeeeee;\n  border: 1px solid #ccc;\n  border-radius: 4px; }\n  .input-group-addon.input-sm,\n  .input-group-sm > .input-group-addon,\n  .input-group-sm > .input-group-btn > .input-group-addon.btn {\n    padding: 5px 10px;\n    font-size: 12px;\n    border-radius: 3px; }\n  .input-group-addon.input-lg,\n  .input-group-lg > .input-group-addon,\n  .input-group-lg > .input-group-btn > .input-group-addon.btn {\n    padding: 10px 16px;\n    font-size: 18px;\n    border-radius: 6px; }\n  .input-group-addon input[type=\"radio\"],\n  .input-group-addon input[type=\"checkbox\"] {\n    margin-top: 0; }\n\n.input-group .form-control:first-child,\n.input-group-addon:first-child,\n.input-group-btn:first-child > .btn,\n.input-group-btn:first-child > .btn-group > .btn,\n.input-group-btn:first-child > .dropdown-toggle,\n.input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle),\n.input-group-btn:last-child > .btn-group:not(:last-child) > .btn {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0; }\n\n.input-group-addon:first-child {\n  border-right: 0; }\n\n.input-group .form-control:last-child,\n.input-group-addon:last-child,\n.input-group-btn:last-child > .btn,\n.input-group-btn:last-child > .btn-group > .btn,\n.input-group-btn:last-child > .dropdown-toggle,\n.input-group-btn:first-child > .btn:not(:first-child),\n.input-group-btn:first-child > .btn-group:not(:first-child) > .btn {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0; }\n\n.input-group-addon:last-child {\n  border-left: 0; }\n\n.input-group-btn {\n  position: relative;\n  font-size: 0;\n  white-space: nowrap; }\n  .input-group-btn > .btn {\n    position: relative; }\n    .input-group-btn > .btn + .btn {\n      margin-left: -1px; }\n    .input-group-btn > .btn:hover, .input-group-btn > .btn:focus, .input-group-btn > .btn:active {\n      z-index: 2; }\n  .input-group-btn:first-child > .btn,\n  .input-group-btn:first-child > .btn-group {\n    margin-right: -1px; }\n  .input-group-btn:last-child > .btn,\n  .input-group-btn:last-child > .btn-group {\n    z-index: 2;\n    margin-left: -1px; }\n\n.nav {\n  margin-bottom: 0;\n  padding-left: 0;\n  list-style: none; }\n  .nav:before, .nav:after {\n    content: \" \";\n    display: table; }\n  .nav:after {\n    clear: both; }\n  .nav > li {\n    position: relative;\n    display: block; }\n    .nav > li > a {\n      position: relative;\n      display: block;\n      padding: 10px 15px; }\n      .nav > li > a:hover, .nav > li > a:focus {\n        text-decoration: none;\n        background-color: #eeeeee; }\n    .nav > li.disabled > a {\n      color: #777777; }\n      .nav > li.disabled > a:hover, .nav > li.disabled > a:focus {\n        color: #777777;\n        text-decoration: none;\n        background-color: transparent;\n        cursor: not-allowed; }\n  .nav .open > a, .nav .open > a:hover, .nav .open > a:focus {\n    background-color: #eeeeee;\n    border-color: #337ab7; }\n  .nav .nav-divider {\n    height: 1px;\n    margin: 9px 0;\n    overflow: hidden;\n    background-color: #e5e5e5; }\n  .nav > li > a > img {\n    max-width: none; }\n\n.nav-tabs {\n  border-bottom: 1px solid #ddd; }\n  .nav-tabs > li {\n    float: left;\n    margin-bottom: -1px; }\n    .nav-tabs > li > a {\n      margin-right: 2px;\n      line-height: 1.42857;\n      border: 1px solid transparent;\n      border-radius: 4px 4px 0 0; }\n      .nav-tabs > li > a:hover {\n        border-color: #eeeeee #eeeeee #ddd; }\n    .nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.active > a:focus {\n      color: #555555;\n      background-color: #fff;\n      border: 1px solid #ddd;\n      border-bottom-color: transparent;\n      cursor: default; }\n\n.nav-pills > li {\n  float: left; }\n  .nav-pills > li > a {\n    border-radius: 4px; }\n  .nav-pills > li + li {\n    margin-left: 2px; }\n  .nav-pills > li.active > a, .nav-pills > li.active > a:hover, .nav-pills > li.active > a:focus {\n    color: #fff;\n    background-color: #337ab7; }\n\n.nav-stacked > li {\n  float: none; }\n  .nav-stacked > li + li {\n    margin-top: 2px;\n    margin-left: 0; }\n\n.nav-justified, .nav-tabs.nav-justified {\n  width: 100%; }\n  .nav-justified > li, .nav-tabs.nav-justified > li {\n    float: none; }\n    .nav-justified > li > a, .nav-tabs.nav-justified > li > a {\n      text-align: center;\n      margin-bottom: 5px; }\n  .nav-justified > .dropdown .dropdown-menu {\n    top: auto;\n    left: auto; }\n  @media (min-width: 768px) {\n    .nav-justified > li, .nav-tabs.nav-justified > li {\n      display: table-cell;\n      width: 1%; }\n      .nav-justified > li > a, .nav-tabs.nav-justified > li > a {\n        margin-bottom: 0; } }\n\n.nav-tabs-justified, .nav-tabs.nav-justified {\n  border-bottom: 0; }\n  .nav-tabs-justified > li > a, .nav-tabs.nav-justified > li > a {\n    margin-right: 0;\n    border-radius: 4px; }\n  .nav-tabs-justified > .active > a, .nav-tabs.nav-justified > .active > a,\n  .nav-tabs-justified > .active > a:hover, .nav-tabs.nav-justified > .active > a:hover,\n  .nav-tabs-justified > .active > a:focus, .nav-tabs.nav-justified > .active > a:focus {\n    border: 1px solid #ddd; }\n  @media (min-width: 768px) {\n    .nav-tabs-justified > li > a, .nav-tabs.nav-justified > li > a {\n      border-bottom: 1px solid #ddd;\n      border-radius: 4px 4px 0 0; }\n    .nav-tabs-justified > .active > a, .nav-tabs.nav-justified > .active > a,\n    .nav-tabs-justified > .active > a:hover, .nav-tabs.nav-justified > .active > a:hover,\n    .nav-tabs-justified > .active > a:focus, .nav-tabs.nav-justified > .active > a:focus {\n      border-bottom-color: #fff; } }\n\n.tab-content > .tab-pane {\n  display: none; }\n\n.tab-content > .active {\n  display: block; }\n\n.nav-tabs .dropdown-menu {\n  margin-top: -1px;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0; }\n\n.navbar {\n  position: relative;\n  min-height: 50px;\n  margin-bottom: 20px;\n  border: 1px solid transparent; }\n  .navbar:before, .navbar:after {\n    content: \" \";\n    display: table; }\n  .navbar:after {\n    clear: both; }\n  @media (min-width: 768px) {\n    .navbar {\n      border-radius: 4px; } }\n\n.navbar-header:before, .navbar-header:after {\n  content: \" \";\n  display: table; }\n\n.navbar-header:after {\n  clear: both; }\n\n@media (min-width: 768px) {\n  .navbar-header {\n    float: left; } }\n\n.navbar-collapse {\n  overflow-x: visible;\n  padding-right: 15px;\n  padding-left: 15px;\n  border-top: 1px solid transparent;\n  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  -webkit-overflow-scrolling: touch; }\n  .navbar-collapse:before, .navbar-collapse:after {\n    content: \" \";\n    display: table; }\n  .navbar-collapse:after {\n    clear: both; }\n  .navbar-collapse.in {\n    overflow-y: auto; }\n  @media (min-width: 768px) {\n    .navbar-collapse {\n      width: auto;\n      border-top: 0;\n      box-shadow: none; }\n      .navbar-collapse.collapse {\n        display: block !important;\n        height: auto !important;\n        padding-bottom: 0;\n        overflow: visible !important; }\n      .navbar-collapse.in {\n        overflow-y: visible; }\n      .navbar-fixed-top .navbar-collapse,\n      .navbar-static-top .navbar-collapse,\n      .navbar-fixed-bottom .navbar-collapse {\n        padding-left: 0;\n        padding-right: 0; } }\n\n.navbar-fixed-top .navbar-collapse,\n.navbar-fixed-bottom .navbar-collapse {\n  max-height: 340px; }\n  @media (max-device-width: 480px) and (orientation: landscape) {\n    .navbar-fixed-top .navbar-collapse,\n    .navbar-fixed-bottom .navbar-collapse {\n      max-height: 200px; } }\n\n.container > .navbar-header,\n.container > .navbar-collapse,\n.container-fluid > .navbar-header,\n.container-fluid > .navbar-collapse {\n  margin-right: -15px;\n  margin-left: -15px; }\n  @media (min-width: 768px) {\n    .container > .navbar-header,\n    .container > .navbar-collapse,\n    .container-fluid > .navbar-header,\n    .container-fluid > .navbar-collapse {\n      margin-right: 0;\n      margin-left: 0; } }\n\n.navbar-static-top {\n  z-index: 1000;\n  border-width: 0 0 1px; }\n  @media (min-width: 768px) {\n    .navbar-static-top {\n      border-radius: 0; } }\n\n.navbar-fixed-top,\n.navbar-fixed-bottom {\n  position: fixed;\n  right: 0;\n  left: 0;\n  z-index: 1030; }\n  @media (min-width: 768px) {\n    .navbar-fixed-top,\n    .navbar-fixed-bottom {\n      border-radius: 0; } }\n\n.navbar-fixed-top {\n  top: 0;\n  border-width: 0 0 1px; }\n\n.navbar-fixed-bottom {\n  bottom: 0;\n  margin-bottom: 0;\n  border-width: 1px 0 0; }\n\n.navbar-brand {\n  float: left;\n  padding: 15px 15px;\n  font-size: 18px;\n  line-height: 20px;\n  height: 50px; }\n  .navbar-brand:hover, .navbar-brand:focus {\n    text-decoration: none; }\n  .navbar-brand > img {\n    display: block; }\n  @media (min-width: 768px) {\n    .navbar > .container .navbar-brand,\n    .navbar > .container-fluid .navbar-brand {\n      margin-left: -15px; } }\n\n.navbar-toggle {\n  position: relative;\n  float: right;\n  margin-right: 15px;\n  padding: 9px 10px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  background-color: transparent;\n  background-image: none;\n  border: 1px solid transparent;\n  border-radius: 4px; }\n  .navbar-toggle:focus {\n    outline: 0; }\n  .navbar-toggle .icon-bar {\n    display: block;\n    width: 22px;\n    height: 2px;\n    border-radius: 1px; }\n  .navbar-toggle .icon-bar + .icon-bar {\n    margin-top: 4px; }\n  @media (min-width: 768px) {\n    .navbar-toggle {\n      display: none; } }\n\n.navbar-nav {\n  margin: 7.5px -15px; }\n  .navbar-nav > li > a {\n    padding-top: 10px;\n    padding-bottom: 10px;\n    line-height: 20px; }\n  @media (max-width: 767px) {\n    .navbar-nav .open .dropdown-menu {\n      position: static;\n      float: none;\n      width: auto;\n      margin-top: 0;\n      background-color: transparent;\n      border: 0;\n      box-shadow: none; }\n      .navbar-nav .open .dropdown-menu > li > a,\n      .navbar-nav .open .dropdown-menu .dropdown-header {\n        padding: 5px 15px 5px 25px; }\n      .navbar-nav .open .dropdown-menu > li > a {\n        line-height: 20px; }\n        .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-nav .open .dropdown-menu > li > a:focus {\n          background-image: none; } }\n  @media (min-width: 768px) {\n    .navbar-nav {\n      float: left;\n      margin: 0; }\n      .navbar-nav > li {\n        float: left; }\n        .navbar-nav > li > a {\n          padding-top: 15px;\n          padding-bottom: 15px; } }\n\n.navbar-form {\n  margin-left: -15px;\n  margin-right: -15px;\n  padding: 10px 15px;\n  border-top: 1px solid transparent;\n  border-bottom: 1px solid transparent;\n  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 0 rgba(255, 255, 255, 0.1);\n  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 0 rgba(255, 255, 255, 0.1);\n  margin-top: 8px;\n  margin-bottom: 8px; }\n  @media (min-width: 768px) {\n    .navbar-form .form-group {\n      display: inline-block;\n      margin-bottom: 0;\n      vertical-align: middle; }\n    .navbar-form .form-control {\n      display: inline-block;\n      width: auto;\n      vertical-align: middle; }\n    .navbar-form .form-control-static {\n      display: inline-block; }\n    .navbar-form .input-group {\n      display: inline-table;\n      vertical-align: middle; }\n      .navbar-form .input-group .input-group-addon,\n      .navbar-form .input-group .input-group-btn,\n      .navbar-form .input-group .form-control {\n        width: auto; }\n    .navbar-form .input-group > .form-control {\n      width: 100%; }\n    .navbar-form .control-label {\n      margin-bottom: 0;\n      vertical-align: middle; }\n    .navbar-form .radio,\n    .navbar-form .checkbox {\n      display: inline-block;\n      margin-top: 0;\n      margin-bottom: 0;\n      vertical-align: middle; }\n      .navbar-form .radio label,\n      .navbar-form .checkbox label {\n        padding-left: 0; }\n    .navbar-form .radio input[type=\"radio\"],\n    .navbar-form .checkbox input[type=\"checkbox\"] {\n      position: relative;\n      margin-left: 0; }\n    .navbar-form .has-feedback .form-control-feedback {\n      top: 0; } }\n  @media (max-width: 767px) {\n    .navbar-form .form-group {\n      margin-bottom: 5px; }\n      .navbar-form .form-group:last-child {\n        margin-bottom: 0; } }\n  @media (min-width: 768px) {\n    .navbar-form {\n      width: auto;\n      border: 0;\n      margin-left: 0;\n      margin-right: 0;\n      padding-top: 0;\n      padding-bottom: 0;\n      -webkit-box-shadow: none;\n      box-shadow: none; } }\n\n.navbar-nav > li > .dropdown-menu {\n  margin-top: 0;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0; }\n\n.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu {\n  margin-bottom: 0;\n  border-top-right-radius: 4px;\n  border-top-left-radius: 4px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0; }\n\n.navbar-btn {\n  margin-top: 8px;\n  margin-bottom: 8px; }\n  .navbar-btn.btn-sm, .btn-group-sm > .navbar-btn.btn {\n    margin-top: 10px;\n    margin-bottom: 10px; }\n  .navbar-btn.btn-xs, .btn-group-xs > .navbar-btn.btn {\n    margin-top: 14px;\n    margin-bottom: 14px; }\n\n.navbar-text {\n  margin-top: 15px;\n  margin-bottom: 15px; }\n  @media (min-width: 768px) {\n    .navbar-text {\n      float: left;\n      margin-left: 15px;\n      margin-right: 15px; } }\n\n@media (min-width: 768px) {\n  .navbar-left {\n    float: left !important; }\n  .navbar-right {\n    float: right !important;\n    margin-right: -15px; }\n    .navbar-right ~ .navbar-right {\n      margin-right: 0; } }\n\n.navbar-default {\n  background-color: #f8f8f8;\n  border-color: #e7e7e7; }\n  .navbar-default .navbar-brand {\n    color: #777; }\n    .navbar-default .navbar-brand:hover, .navbar-default .navbar-brand:focus {\n      color: #5e5e5e;\n      background-color: transparent; }\n  .navbar-default .navbar-text {\n    color: #777; }\n  .navbar-default .navbar-nav > li > a {\n    color: #777; }\n    .navbar-default .navbar-nav > li > a:hover, .navbar-default .navbar-nav > li > a:focus {\n      color: #333;\n      background-color: transparent; }\n  .navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .active > a:hover, .navbar-default .navbar-nav > .active > a:focus {\n    color: #555;\n    background-color: #e7e7e7; }\n  .navbar-default .navbar-nav > .disabled > a, .navbar-default .navbar-nav > .disabled > a:hover, .navbar-default .navbar-nav > .disabled > a:focus {\n    color: #ccc;\n    background-color: transparent; }\n  .navbar-default .navbar-toggle {\n    border-color: #ddd; }\n    .navbar-default .navbar-toggle:hover, .navbar-default .navbar-toggle:focus {\n      background-color: #ddd; }\n    .navbar-default .navbar-toggle .icon-bar {\n      background-color: #888; }\n  .navbar-default .navbar-collapse,\n  .navbar-default .navbar-form {\n    border-color: #e7e7e7; }\n  .navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .open > a:hover, .navbar-default .navbar-nav > .open > a:focus {\n    background-color: #e7e7e7;\n    color: #555; }\n  @media (max-width: 767px) {\n    .navbar-default .navbar-nav .open .dropdown-menu > li > a {\n      color: #777; }\n      .navbar-default .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > li > a:focus {\n        color: #333;\n        background-color: transparent; }\n    .navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-default .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > .active > a:focus {\n      color: #555;\n      background-color: #e7e7e7; }\n    .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a, .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a:focus {\n      color: #ccc;\n      background-color: transparent; } }\n  .navbar-default .navbar-link {\n    color: #777; }\n    .navbar-default .navbar-link:hover {\n      color: #333; }\n  .navbar-default .btn-link {\n    color: #777; }\n    .navbar-default .btn-link:hover, .navbar-default .btn-link:focus {\n      color: #333; }\n    .navbar-default .btn-link[disabled]:hover, .navbar-default .btn-link[disabled]:focus,\n    fieldset[disabled] .navbar-default .btn-link:hover,\n    fieldset[disabled] .navbar-default .btn-link:focus {\n      color: #ccc; }\n\n.navbar-inverse {\n  background-color: #222;\n  border-color: #090909; }\n  .navbar-inverse .navbar-brand {\n    color: #9d9d9d; }\n    .navbar-inverse .navbar-brand:hover, .navbar-inverse .navbar-brand:focus {\n      color: #fff;\n      background-color: transparent; }\n  .navbar-inverse .navbar-text {\n    color: #9d9d9d; }\n  .navbar-inverse .navbar-nav > li > a {\n    color: #9d9d9d; }\n    .navbar-inverse .navbar-nav > li > a:hover, .navbar-inverse .navbar-nav > li > a:focus {\n      color: #fff;\n      background-color: transparent; }\n  .navbar-inverse .navbar-nav > .active > a, .navbar-inverse .navbar-nav > .active > a:hover, .navbar-inverse .navbar-nav > .active > a:focus {\n    color: #fff;\n    background-color: #090909; }\n  .navbar-inverse .navbar-nav > .disabled > a, .navbar-inverse .navbar-nav > .disabled > a:hover, .navbar-inverse .navbar-nav > .disabled > a:focus {\n    color: #444;\n    background-color: transparent; }\n  .navbar-inverse .navbar-toggle {\n    border-color: #333; }\n    .navbar-inverse .navbar-toggle:hover, .navbar-inverse .navbar-toggle:focus {\n      background-color: #333; }\n    .navbar-inverse .navbar-toggle .icon-bar {\n      background-color: #fff; }\n  .navbar-inverse .navbar-collapse,\n  .navbar-inverse .navbar-form {\n    border-color: #101010; }\n  .navbar-inverse .navbar-nav > .open > a, .navbar-inverse .navbar-nav > .open > a:hover, .navbar-inverse .navbar-nav > .open > a:focus {\n    background-color: #090909;\n    color: #fff; }\n  @media (max-width: 767px) {\n    .navbar-inverse .navbar-nav .open .dropdown-menu > .dropdown-header {\n      border-color: #090909; }\n    .navbar-inverse .navbar-nav .open .dropdown-menu .divider {\n      background-color: #090909; }\n    .navbar-inverse .navbar-nav .open .dropdown-menu > li > a {\n      color: #9d9d9d; }\n      .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:focus {\n        color: #fff;\n        background-color: transparent; }\n    .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a, .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a:focus {\n      color: #fff;\n      background-color: #090909; }\n    .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a, .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a:focus {\n      color: #444;\n      background-color: transparent; } }\n  .navbar-inverse .navbar-link {\n    color: #9d9d9d; }\n    .navbar-inverse .navbar-link:hover {\n      color: #fff; }\n  .navbar-inverse .btn-link {\n    color: #9d9d9d; }\n    .navbar-inverse .btn-link:hover, .navbar-inverse .btn-link:focus {\n      color: #fff; }\n    .navbar-inverse .btn-link[disabled]:hover, .navbar-inverse .btn-link[disabled]:focus,\n    fieldset[disabled] .navbar-inverse .btn-link:hover,\n    fieldset[disabled] .navbar-inverse .btn-link:focus {\n      color: #444; }\n\n.breadcrumb {\n  padding: 8px 15px;\n  margin-bottom: 20px;\n  list-style: none;\n  background-color: #f5f5f5;\n  border-radius: 4px; }\n  .breadcrumb > li {\n    display: inline-block; }\n    .breadcrumb > li + li:before {\n      content: \"/\\A0\";\n      padding: 0 5px;\n      color: #ccc; }\n  .breadcrumb > .active {\n    color: #777777; }\n\n.pagination {\n  display: inline-block;\n  padding-left: 0;\n  margin: 20px 0;\n  border-radius: 4px; }\n  .pagination > li {\n    display: inline; }\n    .pagination > li > a,\n    .pagination > li > span {\n      position: relative;\n      float: left;\n      padding: 6px 12px;\n      line-height: 1.42857;\n      text-decoration: none;\n      color: #337ab7;\n      background-color: #fff;\n      border: 1px solid #ddd;\n      margin-left: -1px; }\n    .pagination > li:first-child > a,\n    .pagination > li:first-child > span {\n      margin-left: 0;\n      border-bottom-left-radius: 4px;\n      border-top-left-radius: 4px; }\n    .pagination > li:last-child > a,\n    .pagination > li:last-child > span {\n      border-bottom-right-radius: 4px;\n      border-top-right-radius: 4px; }\n  .pagination > li > a:hover, .pagination > li > a:focus,\n  .pagination > li > span:hover,\n  .pagination > li > span:focus {\n    z-index: 2;\n    color: #23527c;\n    background-color: #eeeeee;\n    border-color: #ddd; }\n  .pagination > .active > a, .pagination > .active > a:hover, .pagination > .active > a:focus,\n  .pagination > .active > span,\n  .pagination > .active > span:hover,\n  .pagination > .active > span:focus {\n    z-index: 3;\n    color: #fff;\n    background-color: #337ab7;\n    border-color: #337ab7;\n    cursor: default; }\n  .pagination > .disabled > span,\n  .pagination > .disabled > span:hover,\n  .pagination > .disabled > span:focus,\n  .pagination > .disabled > a,\n  .pagination > .disabled > a:hover,\n  .pagination > .disabled > a:focus {\n    color: #777777;\n    background-color: #fff;\n    border-color: #ddd;\n    cursor: not-allowed; }\n\n.pagination-lg > li > a,\n.pagination-lg > li > span {\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.33333; }\n\n.pagination-lg > li:first-child > a,\n.pagination-lg > li:first-child > span {\n  border-bottom-left-radius: 6px;\n  border-top-left-radius: 6px; }\n\n.pagination-lg > li:last-child > a,\n.pagination-lg > li:last-child > span {\n  border-bottom-right-radius: 6px;\n  border-top-right-radius: 6px; }\n\n.pagination-sm > li > a,\n.pagination-sm > li > span {\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5; }\n\n.pagination-sm > li:first-child > a,\n.pagination-sm > li:first-child > span {\n  border-bottom-left-radius: 3px;\n  border-top-left-radius: 3px; }\n\n.pagination-sm > li:last-child > a,\n.pagination-sm > li:last-child > span {\n  border-bottom-right-radius: 3px;\n  border-top-right-radius: 3px; }\n\n.pager {\n  padding-left: 0;\n  margin: 20px 0;\n  list-style: none;\n  text-align: center; }\n  .pager:before, .pager:after {\n    content: \" \";\n    display: table; }\n  .pager:after {\n    clear: both; }\n  .pager li {\n    display: inline; }\n    .pager li > a,\n    .pager li > span {\n      display: inline-block;\n      padding: 5px 14px;\n      background-color: #fff;\n      border: 1px solid #ddd;\n      border-radius: 15px; }\n    .pager li > a:hover,\n    .pager li > a:focus {\n      text-decoration: none;\n      background-color: #eeeeee; }\n  .pager .next > a,\n  .pager .next > span {\n    float: right; }\n  .pager .previous > a,\n  .pager .previous > span {\n    float: left; }\n  .pager .disabled > a,\n  .pager .disabled > a:hover,\n  .pager .disabled > a:focus,\n  .pager .disabled > span {\n    color: #777777;\n    background-color: #fff;\n    cursor: not-allowed; }\n\n.label {\n  display: inline;\n  padding: .2em .6em .3em;\n  font-size: 75%;\n  font-weight: bold;\n  line-height: 1;\n  color: #fff;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: baseline;\n  border-radius: .25em; }\n  .label:empty {\n    display: none; }\n  .btn .label {\n    position: relative;\n    top: -1px; }\n\na.label:hover, a.label:focus {\n  color: #fff;\n  text-decoration: none;\n  cursor: pointer; }\n\n.label-default {\n  background-color: #777777; }\n  .label-default[href]:hover, .label-default[href]:focus {\n    background-color: #5e5e5e; }\n\n.label-primary {\n  background-color: #337ab7; }\n  .label-primary[href]:hover, .label-primary[href]:focus {\n    background-color: #286090; }\n\n.label-success {\n  background-color: #5cb85c; }\n  .label-success[href]:hover, .label-success[href]:focus {\n    background-color: #449d44; }\n\n.label-info {\n  background-color: #5bc0de; }\n  .label-info[href]:hover, .label-info[href]:focus {\n    background-color: #31b0d5; }\n\n.label-warning {\n  background-color: #f0ad4e; }\n  .label-warning[href]:hover, .label-warning[href]:focus {\n    background-color: #ec971f; }\n\n.label-danger {\n  background-color: #d9534f; }\n  .label-danger[href]:hover, .label-danger[href]:focus {\n    background-color: #c9302c; }\n\n.badge {\n  display: inline-block;\n  min-width: 10px;\n  padding: 3px 7px;\n  font-size: 12px;\n  font-weight: bold;\n  color: #fff;\n  line-height: 1;\n  vertical-align: middle;\n  white-space: nowrap;\n  text-align: center;\n  background-color: #777777;\n  border-radius: 10px; }\n  .badge:empty {\n    display: none; }\n  .btn .badge {\n    position: relative;\n    top: -1px; }\n  .btn-xs .badge, .btn-group-xs > .btn .badge,\n  .btn-group-xs > .btn .badge {\n    top: 0;\n    padding: 1px 5px; }\n  .list-group-item.active > .badge,\n  .nav-pills > .active > a > .badge {\n    color: #337ab7;\n    background-color: #fff; }\n  .list-group-item > .badge {\n    float: right; }\n  .list-group-item > .badge + .badge {\n    margin-right: 5px; }\n  .nav-pills > li > a > .badge {\n    margin-left: 3px; }\n\na.badge:hover, a.badge:focus {\n  color: #fff;\n  text-decoration: none;\n  cursor: pointer; }\n\n.jumbotron {\n  padding-top: 30px;\n  padding-bottom: 30px;\n  margin-bottom: 30px;\n  color: inherit;\n  background-color: #eeeeee; }\n  .jumbotron h1,\n  .jumbotron .h1 {\n    color: inherit; }\n  .jumbotron p {\n    margin-bottom: 15px;\n    font-size: 21px;\n    font-weight: 200; }\n  .jumbotron > hr {\n    border-top-color: #d5d5d5; }\n  .container .jumbotron,\n  .container-fluid .jumbotron {\n    border-radius: 6px;\n    padding-left: 15px;\n    padding-right: 15px; }\n  .jumbotron .container {\n    max-width: 100%; }\n  @media screen and (min-width: 768px) {\n    .jumbotron {\n      padding-top: 48px;\n      padding-bottom: 48px; }\n      .container .jumbotron,\n      .container-fluid .jumbotron {\n        padding-left: 60px;\n        padding-right: 60px; }\n      .jumbotron h1,\n      .jumbotron .h1 {\n        font-size: 63px; } }\n\n.thumbnail {\n  display: block;\n  padding: 4px;\n  margin-bottom: 20px;\n  line-height: 1.42857;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  -webkit-transition: border 0.2s ease-in-out;\n  -o-transition: border 0.2s ease-in-out;\n  transition: border 0.2s ease-in-out; }\n  .thumbnail > img,\n  .thumbnail a > img {\n    display: block;\n    max-width: 100%;\n    height: auto;\n    margin-left: auto;\n    margin-right: auto; }\n  .thumbnail .caption {\n    padding: 9px;\n    color: #333333; }\n\na.thumbnail:hover,\na.thumbnail:focus,\na.thumbnail.active {\n  border-color: #337ab7; }\n\n.alert {\n  padding: 15px;\n  margin-bottom: 20px;\n  border: 1px solid transparent;\n  border-radius: 4px; }\n  .alert h4 {\n    margin-top: 0;\n    color: inherit; }\n  .alert .alert-link {\n    font-weight: bold; }\n  .alert > p,\n  .alert > ul {\n    margin-bottom: 0; }\n  .alert > p + p {\n    margin-top: 5px; }\n\n.alert-dismissable,\n.alert-dismissible {\n  padding-right: 35px; }\n  .alert-dismissable .close,\n  .alert-dismissible .close {\n    position: relative;\n    top: -2px;\n    right: -21px;\n    color: inherit; }\n\n.alert-success {\n  background-color: #dff0d8;\n  border-color: #d6e9c6;\n  color: #3c763d; }\n  .alert-success hr {\n    border-top-color: #c9e2b3; }\n  .alert-success .alert-link {\n    color: #2b542c; }\n\n.alert-info {\n  background-color: #d9edf7;\n  border-color: #bce8f1;\n  color: #31708f; }\n  .alert-info hr {\n    border-top-color: #a6e1ec; }\n  .alert-info .alert-link {\n    color: #245269; }\n\n.alert-warning {\n  background-color: #fcf8e3;\n  border-color: #faebcc;\n  color: #8a6d3b; }\n  .alert-warning hr {\n    border-top-color: #f7e1b5; }\n  .alert-warning .alert-link {\n    color: #66512c; }\n\n.alert-danger {\n  background-color: #f2dede;\n  border-color: #ebccd1;\n  color: #a94442; }\n  .alert-danger hr {\n    border-top-color: #e4b9c0; }\n  .alert-danger .alert-link {\n    color: #843534; }\n\n@-webkit-keyframes progress-bar-stripes {\n  from {\n    background-position: 40px 0; }\n  to {\n    background-position: 0 0; } }\n\n@keyframes progress-bar-stripes {\n  from {\n    background-position: 40px 0; }\n  to {\n    background-position: 0 0; } }\n\n.progress {\n  overflow: hidden;\n  height: 20px;\n  margin-bottom: 20px;\n  background-color: #f5f5f5;\n  border-radius: 4px;\n  -webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);\n  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1); }\n\n.progress-bar {\n  float: left;\n  width: 0%;\n  height: 100%;\n  font-size: 12px;\n  line-height: 20px;\n  color: #fff;\n  text-align: center;\n  background-color: #337ab7;\n  -webkit-box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);\n  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);\n  -webkit-transition: width 0.6s ease;\n  -o-transition: width 0.6s ease;\n  transition: width 0.6s ease; }\n\n.progress-striped .progress-bar,\n.progress-bar-striped {\n  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-size: 40px 40px; }\n\n.progress.active .progress-bar,\n.progress-bar.active {\n  -webkit-animation: progress-bar-stripes 2s linear infinite;\n  -o-animation: progress-bar-stripes 2s linear infinite;\n  animation: progress-bar-stripes 2s linear infinite; }\n\n.progress-bar-success {\n  background-color: #5cb85c; }\n  .progress-striped .progress-bar-success {\n    background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); }\n\n.progress-bar-info {\n  background-color: #5bc0de; }\n  .progress-striped .progress-bar-info {\n    background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); }\n\n.progress-bar-warning {\n  background-color: #f0ad4e; }\n  .progress-striped .progress-bar-warning {\n    background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); }\n\n.progress-bar-danger {\n  background-color: #d9534f; }\n  .progress-striped .progress-bar-danger {\n    background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); }\n\n.media {\n  margin-top: 15px; }\n  .media:first-child {\n    margin-top: 0; }\n\n.media,\n.media-body {\n  zoom: 1;\n  overflow: hidden; }\n\n.media-body {\n  width: 10000px; }\n\n.media-object {\n  display: block; }\n  .media-object.img-thumbnail {\n    max-width: none; }\n\n.media-right,\n.media > .pull-right {\n  padding-left: 10px; }\n\n.media-left,\n.media > .pull-left {\n  padding-right: 10px; }\n\n.media-left,\n.media-right,\n.media-body {\n  display: table-cell;\n  vertical-align: top; }\n\n.media-middle {\n  vertical-align: middle; }\n\n.media-bottom {\n  vertical-align: bottom; }\n\n.media-heading {\n  margin-top: 0;\n  margin-bottom: 5px; }\n\n.media-list {\n  padding-left: 0;\n  list-style: none; }\n\n.list-group {\n  margin-bottom: 20px;\n  padding-left: 0; }\n\n.list-group-item {\n  position: relative;\n  display: block;\n  padding: 10px 15px;\n  margin-bottom: -1px;\n  background-color: #fff;\n  border: 1px solid #ddd; }\n  .list-group-item:first-child {\n    border-top-right-radius: 4px;\n    border-top-left-radius: 4px; }\n  .list-group-item:last-child {\n    margin-bottom: 0;\n    border-bottom-right-radius: 4px;\n    border-bottom-left-radius: 4px; }\n\na.list-group-item,\nbutton.list-group-item {\n  color: #555; }\n  a.list-group-item .list-group-item-heading,\n  button.list-group-item .list-group-item-heading {\n    color: #333; }\n  a.list-group-item:hover, a.list-group-item:focus,\n  button.list-group-item:hover,\n  button.list-group-item:focus {\n    text-decoration: none;\n    color: #555;\n    background-color: #f5f5f5; }\n\nbutton.list-group-item {\n  width: 100%;\n  text-align: left; }\n\n.list-group-item.disabled, .list-group-item.disabled:hover, .list-group-item.disabled:focus {\n  background-color: #eeeeee;\n  color: #777777;\n  cursor: not-allowed; }\n  .list-group-item.disabled .list-group-item-heading, .list-group-item.disabled:hover .list-group-item-heading, .list-group-item.disabled:focus .list-group-item-heading {\n    color: inherit; }\n  .list-group-item.disabled .list-group-item-text, .list-group-item.disabled:hover .list-group-item-text, .list-group-item.disabled:focus .list-group-item-text {\n    color: #777777; }\n\n.list-group-item.active, .list-group-item.active:hover, .list-group-item.active:focus {\n  z-index: 2;\n  color: #fff;\n  background-color: #337ab7;\n  border-color: #337ab7; }\n  .list-group-item.active .list-group-item-heading,\n  .list-group-item.active .list-group-item-heading > small,\n  .list-group-item.active .list-group-item-heading > .small, .list-group-item.active:hover .list-group-item-heading,\n  .list-group-item.active:hover .list-group-item-heading > small,\n  .list-group-item.active:hover .list-group-item-heading > .small, .list-group-item.active:focus .list-group-item-heading,\n  .list-group-item.active:focus .list-group-item-heading > small,\n  .list-group-item.active:focus .list-group-item-heading > .small {\n    color: inherit; }\n  .list-group-item.active .list-group-item-text, .list-group-item.active:hover .list-group-item-text, .list-group-item.active:focus .list-group-item-text {\n    color: #c7ddef; }\n\n.list-group-item-success {\n  color: #3c763d;\n  background-color: #dff0d8; }\n\na.list-group-item-success,\nbutton.list-group-item-success {\n  color: #3c763d; }\n  a.list-group-item-success .list-group-item-heading,\n  button.list-group-item-success .list-group-item-heading {\n    color: inherit; }\n  a.list-group-item-success:hover, a.list-group-item-success:focus,\n  button.list-group-item-success:hover,\n  button.list-group-item-success:focus {\n    color: #3c763d;\n    background-color: #d0e9c6; }\n  a.list-group-item-success.active, a.list-group-item-success.active:hover, a.list-group-item-success.active:focus,\n  button.list-group-item-success.active,\n  button.list-group-item-success.active:hover,\n  button.list-group-item-success.active:focus {\n    color: #fff;\n    background-color: #3c763d;\n    border-color: #3c763d; }\n\n.list-group-item-info {\n  color: #31708f;\n  background-color: #d9edf7; }\n\na.list-group-item-info,\nbutton.list-group-item-info {\n  color: #31708f; }\n  a.list-group-item-info .list-group-item-heading,\n  button.list-group-item-info .list-group-item-heading {\n    color: inherit; }\n  a.list-group-item-info:hover, a.list-group-item-info:focus,\n  button.list-group-item-info:hover,\n  button.list-group-item-info:focus {\n    color: #31708f;\n    background-color: #c4e3f3; }\n  a.list-group-item-info.active, a.list-group-item-info.active:hover, a.list-group-item-info.active:focus,\n  button.list-group-item-info.active,\n  button.list-group-item-info.active:hover,\n  button.list-group-item-info.active:focus {\n    color: #fff;\n    background-color: #31708f;\n    border-color: #31708f; }\n\n.list-group-item-warning {\n  color: #8a6d3b;\n  background-color: #fcf8e3; }\n\na.list-group-item-warning,\nbutton.list-group-item-warning {\n  color: #8a6d3b; }\n  a.list-group-item-warning .list-group-item-heading,\n  button.list-group-item-warning .list-group-item-heading {\n    color: inherit; }\n  a.list-group-item-warning:hover, a.list-group-item-warning:focus,\n  button.list-group-item-warning:hover,\n  button.list-group-item-warning:focus {\n    color: #8a6d3b;\n    background-color: #faf2cc; }\n  a.list-group-item-warning.active, a.list-group-item-warning.active:hover, a.list-group-item-warning.active:focus,\n  button.list-group-item-warning.active,\n  button.list-group-item-warning.active:hover,\n  button.list-group-item-warning.active:focus {\n    color: #fff;\n    background-color: #8a6d3b;\n    border-color: #8a6d3b; }\n\n.list-group-item-danger {\n  color: #a94442;\n  background-color: #f2dede; }\n\na.list-group-item-danger,\nbutton.list-group-item-danger {\n  color: #a94442; }\n  a.list-group-item-danger .list-group-item-heading,\n  button.list-group-item-danger .list-group-item-heading {\n    color: inherit; }\n  a.list-group-item-danger:hover, a.list-group-item-danger:focus,\n  button.list-group-item-danger:hover,\n  button.list-group-item-danger:focus {\n    color: #a94442;\n    background-color: #ebcccc; }\n  a.list-group-item-danger.active, a.list-group-item-danger.active:hover, a.list-group-item-danger.active:focus,\n  button.list-group-item-danger.active,\n  button.list-group-item-danger.active:hover,\n  button.list-group-item-danger.active:focus {\n    color: #fff;\n    background-color: #a94442;\n    border-color: #a94442; }\n\n.list-group-item-heading {\n  margin-top: 0;\n  margin-bottom: 5px; }\n\n.list-group-item-text {\n  margin-bottom: 0;\n  line-height: 1.3; }\n\n.panel {\n  margin-bottom: 20px;\n  background-color: #fff;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05); }\n\n.panel-body {\n  padding: 15px; }\n  .panel-body:before, .panel-body:after {\n    content: \" \";\n    display: table; }\n  .panel-body:after {\n    clear: both; }\n\n.panel-heading {\n  padding: 10px 15px;\n  border-bottom: 1px solid transparent;\n  border-top-right-radius: 3px;\n  border-top-left-radius: 3px; }\n  .panel-heading > .dropdown .dropdown-toggle {\n    color: inherit; }\n\n.panel-title {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 16px;\n  color: inherit; }\n  .panel-title > a,\n  .panel-title > small,\n  .panel-title > .small,\n  .panel-title > small > a,\n  .panel-title > .small > a {\n    color: inherit; }\n\n.panel-footer {\n  padding: 10px 15px;\n  background-color: #f5f5f5;\n  border-top: 1px solid #ddd;\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 3px; }\n\n.panel > .list-group,\n.panel > .panel-collapse > .list-group {\n  margin-bottom: 0; }\n  .panel > .list-group .list-group-item,\n  .panel > .panel-collapse > .list-group .list-group-item {\n    border-width: 1px 0;\n    border-radius: 0; }\n  .panel > .list-group:first-child .list-group-item:first-child,\n  .panel > .panel-collapse > .list-group:first-child .list-group-item:first-child {\n    border-top: 0;\n    border-top-right-radius: 3px;\n    border-top-left-radius: 3px; }\n  .panel > .list-group:last-child .list-group-item:last-child,\n  .panel > .panel-collapse > .list-group:last-child .list-group-item:last-child {\n    border-bottom: 0;\n    border-bottom-right-radius: 3px;\n    border-bottom-left-radius: 3px; }\n\n.panel > .panel-heading + .panel-collapse > .list-group .list-group-item:first-child {\n  border-top-right-radius: 0;\n  border-top-left-radius: 0; }\n\n.panel-heading + .list-group .list-group-item:first-child {\n  border-top-width: 0; }\n\n.list-group + .panel-footer {\n  border-top-width: 0; }\n\n.panel > .table,\n.panel > .table-responsive > .table,\n.panel > .panel-collapse > .table {\n  margin-bottom: 0; }\n  .panel > .table caption,\n  .panel > .table-responsive > .table caption,\n  .panel > .panel-collapse > .table caption {\n    padding-left: 15px;\n    padding-right: 15px; }\n\n.panel > .table:first-child,\n.panel > .table-responsive:first-child > .table:first-child {\n  border-top-right-radius: 3px;\n  border-top-left-radius: 3px; }\n  .panel > .table:first-child > thead:first-child > tr:first-child,\n  .panel > .table:first-child > tbody:first-child > tr:first-child,\n  .panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child,\n  .panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child {\n    border-top-left-radius: 3px;\n    border-top-right-radius: 3px; }\n    .panel > .table:first-child > thead:first-child > tr:first-child td:first-child,\n    .panel > .table:first-child > thead:first-child > tr:first-child th:first-child,\n    .panel > .table:first-child > tbody:first-child > tr:first-child td:first-child,\n    .panel > .table:first-child > tbody:first-child > tr:first-child th:first-child,\n    .panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child td:first-child,\n    .panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child th:first-child,\n    .panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child td:first-child,\n    .panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child th:first-child {\n      border-top-left-radius: 3px; }\n    .panel > .table:first-child > thead:first-child > tr:first-child td:last-child,\n    .panel > .table:first-child > thead:first-child > tr:first-child th:last-child,\n    .panel > .table:first-child > tbody:first-child > tr:first-child td:last-child,\n    .panel > .table:first-child > tbody:first-child > tr:first-child th:last-child,\n    .panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child td:last-child,\n    .panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child th:last-child,\n    .panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child td:last-child,\n    .panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child th:last-child {\n      border-top-right-radius: 3px; }\n\n.panel > .table:last-child,\n.panel > .table-responsive:last-child > .table:last-child {\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 3px; }\n  .panel > .table:last-child > tbody:last-child > tr:last-child,\n  .panel > .table:last-child > tfoot:last-child > tr:last-child,\n  .panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child,\n  .panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child {\n    border-bottom-left-radius: 3px;\n    border-bottom-right-radius: 3px; }\n    .panel > .table:last-child > tbody:last-child > tr:last-child td:first-child,\n    .panel > .table:last-child > tbody:last-child > tr:last-child th:first-child,\n    .panel > .table:last-child > tfoot:last-child > tr:last-child td:first-child,\n    .panel > .table:last-child > tfoot:last-child > tr:last-child th:first-child,\n    .panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child td:first-child,\n    .panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child th:first-child,\n    .panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child td:first-child,\n    .panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child th:first-child {\n      border-bottom-left-radius: 3px; }\n    .panel > .table:last-child > tbody:last-child > tr:last-child td:last-child,\n    .panel > .table:last-child > tbody:last-child > tr:last-child th:last-child,\n    .panel > .table:last-child > tfoot:last-child > tr:last-child td:last-child,\n    .panel > .table:last-child > tfoot:last-child > tr:last-child th:last-child,\n    .panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child td:last-child,\n    .panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child th:last-child,\n    .panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child td:last-child,\n    .panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child th:last-child {\n      border-bottom-right-radius: 3px; }\n\n.panel > .panel-body + .table,\n.panel > .panel-body + .table-responsive,\n.panel > .table + .panel-body,\n.panel > .table-responsive + .panel-body {\n  border-top: 1px solid #ddd; }\n\n.panel > .table > tbody:first-child > tr:first-child th,\n.panel > .table > tbody:first-child > tr:first-child td {\n  border-top: 0; }\n\n.panel > .table-bordered,\n.panel > .table-responsive > .table-bordered {\n  border: 0; }\n  .panel > .table-bordered > thead > tr > th:first-child,\n  .panel > .table-bordered > thead > tr > td:first-child,\n  .panel > .table-bordered > tbody > tr > th:first-child,\n  .panel > .table-bordered > tbody > tr > td:first-child,\n  .panel > .table-bordered > tfoot > tr > th:first-child,\n  .panel > .table-bordered > tfoot > tr > td:first-child,\n  .panel > .table-responsive > .table-bordered > thead > tr > th:first-child,\n  .panel > .table-responsive > .table-bordered > thead > tr > td:first-child,\n  .panel > .table-responsive > .table-bordered > tbody > tr > th:first-child,\n  .panel > .table-responsive > .table-bordered > tbody > tr > td:first-child,\n  .panel > .table-responsive > .table-bordered > tfoot > tr > th:first-child,\n  .panel > .table-responsive > .table-bordered > tfoot > tr > td:first-child {\n    border-left: 0; }\n  .panel > .table-bordered > thead > tr > th:last-child,\n  .panel > .table-bordered > thead > tr > td:last-child,\n  .panel > .table-bordered > tbody > tr > th:last-child,\n  .panel > .table-bordered > tbody > tr > td:last-child,\n  .panel > .table-bordered > tfoot > tr > th:last-child,\n  .panel > .table-bordered > tfoot > tr > td:last-child,\n  .panel > .table-responsive > .table-bordered > thead > tr > th:last-child,\n  .panel > .table-responsive > .table-bordered > thead > tr > td:last-child,\n  .panel > .table-responsive > .table-bordered > tbody > tr > th:last-child,\n  .panel > .table-responsive > .table-bordered > tbody > tr > td:last-child,\n  .panel > .table-responsive > .table-bordered > tfoot > tr > th:last-child,\n  .panel > .table-responsive > .table-bordered > tfoot > tr > td:last-child {\n    border-right: 0; }\n  .panel > .table-bordered > thead > tr:first-child > td,\n  .panel > .table-bordered > thead > tr:first-child > th,\n  .panel > .table-bordered > tbody > tr:first-child > td,\n  .panel > .table-bordered > tbody > tr:first-child > th,\n  .panel > .table-responsive > .table-bordered > thead > tr:first-child > td,\n  .panel > .table-responsive > .table-bordered > thead > tr:first-child > th,\n  .panel > .table-responsive > .table-bordered > tbody > tr:first-child > td,\n  .panel > .table-responsive > .table-bordered > tbody > tr:first-child > th {\n    border-bottom: 0; }\n  .panel > .table-bordered > tbody > tr:last-child > td,\n  .panel > .table-bordered > tbody > tr:last-child > th,\n  .panel > .table-bordered > tfoot > tr:last-child > td,\n  .panel > .table-bordered > tfoot > tr:last-child > th,\n  .panel > .table-responsive > .table-bordered > tbody > tr:last-child > td,\n  .panel > .table-responsive > .table-bordered > tbody > tr:last-child > th,\n  .panel > .table-responsive > .table-bordered > tfoot > tr:last-child > td,\n  .panel > .table-responsive > .table-bordered > tfoot > tr:last-child > th {\n    border-bottom: 0; }\n\n.panel > .table-responsive {\n  border: 0;\n  margin-bottom: 0; }\n\n.panel-group {\n  margin-bottom: 20px; }\n  .panel-group .panel {\n    margin-bottom: 0;\n    border-radius: 4px; }\n    .panel-group .panel + .panel {\n      margin-top: 5px; }\n  .panel-group .panel-heading {\n    border-bottom: 0; }\n    .panel-group .panel-heading + .panel-collapse > .panel-body,\n    .panel-group .panel-heading + .panel-collapse > .list-group {\n      border-top: 1px solid #ddd; }\n  .panel-group .panel-footer {\n    border-top: 0; }\n    .panel-group .panel-footer + .panel-collapse .panel-body {\n      border-bottom: 1px solid #ddd; }\n\n.panel-default {\n  border-color: #ddd; }\n  .panel-default > .panel-heading {\n    color: #333333;\n    background-color: #f5f5f5;\n    border-color: #ddd; }\n    .panel-default > .panel-heading + .panel-collapse > .panel-body {\n      border-top-color: #ddd; }\n    .panel-default > .panel-heading .badge {\n      color: #f5f5f5;\n      background-color: #333333; }\n  .panel-default > .panel-footer + .panel-collapse > .panel-body {\n    border-bottom-color: #ddd; }\n\n.panel-primary {\n  border-color: #337ab7; }\n  .panel-primary > .panel-heading {\n    color: #fff;\n    background-color: #337ab7;\n    border-color: #337ab7; }\n    .panel-primary > .panel-heading + .panel-collapse > .panel-body {\n      border-top-color: #337ab7; }\n    .panel-primary > .panel-heading .badge {\n      color: #337ab7;\n      background-color: #fff; }\n  .panel-primary > .panel-footer + .panel-collapse > .panel-body {\n    border-bottom-color: #337ab7; }\n\n.panel-success {\n  border-color: #d6e9c6; }\n  .panel-success > .panel-heading {\n    color: #3c763d;\n    background-color: #dff0d8;\n    border-color: #d6e9c6; }\n    .panel-success > .panel-heading + .panel-collapse > .panel-body {\n      border-top-color: #d6e9c6; }\n    .panel-success > .panel-heading .badge {\n      color: #dff0d8;\n      background-color: #3c763d; }\n  .panel-success > .panel-footer + .panel-collapse > .panel-body {\n    border-bottom-color: #d6e9c6; }\n\n.panel-info {\n  border-color: #bce8f1; }\n  .panel-info > .panel-heading {\n    color: #31708f;\n    background-color: #d9edf7;\n    border-color: #bce8f1; }\n    .panel-info > .panel-heading + .panel-collapse > .panel-body {\n      border-top-color: #bce8f1; }\n    .panel-info > .panel-heading .badge {\n      color: #d9edf7;\n      background-color: #31708f; }\n  .panel-info > .panel-footer + .panel-collapse > .panel-body {\n    border-bottom-color: #bce8f1; }\n\n.panel-warning {\n  border-color: #faebcc; }\n  .panel-warning > .panel-heading {\n    color: #8a6d3b;\n    background-color: #fcf8e3;\n    border-color: #faebcc; }\n    .panel-warning > .panel-heading + .panel-collapse > .panel-body {\n      border-top-color: #faebcc; }\n    .panel-warning > .panel-heading .badge {\n      color: #fcf8e3;\n      background-color: #8a6d3b; }\n  .panel-warning > .panel-footer + .panel-collapse > .panel-body {\n    border-bottom-color: #faebcc; }\n\n.panel-danger {\n  border-color: #ebccd1; }\n  .panel-danger > .panel-heading {\n    color: #a94442;\n    background-color: #f2dede;\n    border-color: #ebccd1; }\n    .panel-danger > .panel-heading + .panel-collapse > .panel-body {\n      border-top-color: #ebccd1; }\n    .panel-danger > .panel-heading .badge {\n      color: #f2dede;\n      background-color: #a94442; }\n  .panel-danger > .panel-footer + .panel-collapse > .panel-body {\n    border-bottom-color: #ebccd1; }\n\n.embed-responsive {\n  position: relative;\n  display: block;\n  height: 0;\n  padding: 0;\n  overflow: hidden; }\n  .embed-responsive .embed-responsive-item,\n  .embed-responsive iframe,\n  .embed-responsive embed,\n  .embed-responsive object,\n  .embed-responsive video {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    height: 100%;\n    width: 100%;\n    border: 0; }\n\n.embed-responsive-16by9 {\n  padding-bottom: 56.25%; }\n\n.embed-responsive-4by3 {\n  padding-bottom: 75%; }\n\n.well {\n  min-height: 20px;\n  padding: 19px;\n  margin-bottom: 20px;\n  background-color: #f5f5f5;\n  border: 1px solid #e3e3e3;\n  border-radius: 4px;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05); }\n  .well blockquote {\n    border-color: #ddd;\n    border-color: rgba(0, 0, 0, 0.15); }\n\n.well-lg {\n  padding: 24px;\n  border-radius: 6px; }\n\n.well-sm {\n  padding: 9px;\n  border-radius: 3px; }\n\n.close {\n  float: right;\n  font-size: 21px;\n  font-weight: bold;\n  line-height: 1;\n  color: #000;\n  text-shadow: 0 1px 0 #fff;\n  opacity: 0.2;\n  filter: alpha(opacity=20); }\n  .close:hover, .close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n    opacity: 0.5;\n    filter: alpha(opacity=50); }\n\nbutton.close {\n  padding: 0;\n  cursor: pointer;\n  background: transparent;\n  border: 0;\n  -webkit-appearance: none; }\n\n.modal-open {\n  overflow: hidden; }\n\n.modal {\n  display: none;\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1050;\n  -webkit-overflow-scrolling: touch;\n  outline: 0; }\n  .modal.fade .modal-dialog {\n    -webkit-transform: translate(0, -25%);\n    -ms-transform: translate(0, -25%);\n    -o-transform: translate(0, -25%);\n    transform: translate(0, -25%);\n    -webkit-transition: -webkit-transform 0.3s ease-out;\n    -moz-transition: -moz-transform 0.3s ease-out;\n    -o-transition: -o-transform 0.3s ease-out;\n    transition: transform 0.3s ease-out; }\n  .modal.in .modal-dialog {\n    -webkit-transform: translate(0, 0);\n    -ms-transform: translate(0, 0);\n    -o-transform: translate(0, 0);\n    transform: translate(0, 0); }\n\n.modal-open .modal {\n  overflow-x: hidden;\n  overflow-y: auto; }\n\n.modal-dialog {\n  position: relative;\n  width: auto;\n  margin: 10px; }\n\n.modal-content {\n  position: relative;\n  background-color: #fff;\n  border: 1px solid #999;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 6px;\n  -webkit-box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);\n  box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);\n  background-clip: padding-box;\n  outline: 0; }\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1040;\n  background-color: #000; }\n  .modal-backdrop.fade {\n    opacity: 0;\n    filter: alpha(opacity=0); }\n  .modal-backdrop.in {\n    opacity: 0.5;\n    filter: alpha(opacity=50); }\n\n.modal-header {\n  padding: 15px;\n  border-bottom: 1px solid #e5e5e5; }\n  .modal-header:before, .modal-header:after {\n    content: \" \";\n    display: table; }\n  .modal-header:after {\n    clear: both; }\n\n.modal-header .close {\n  margin-top: -2px; }\n\n.modal-title {\n  margin: 0;\n  line-height: 1.42857; }\n\n.modal-body {\n  position: relative;\n  padding: 15px; }\n\n.modal-footer {\n  padding: 15px;\n  text-align: right;\n  border-top: 1px solid #e5e5e5; }\n  .modal-footer:before, .modal-footer:after {\n    content: \" \";\n    display: table; }\n  .modal-footer:after {\n    clear: both; }\n  .modal-footer .btn + .btn {\n    margin-left: 5px;\n    margin-bottom: 0; }\n  .modal-footer .btn-group .btn + .btn {\n    margin-left: -1px; }\n  .modal-footer .btn-block + .btn-block {\n    margin-left: 0; }\n\n.modal-scrollbar-measure {\n  position: absolute;\n  top: -9999px;\n  width: 50px;\n  height: 50px;\n  overflow: scroll; }\n\n@media (min-width: 768px) {\n  .modal-dialog {\n    width: 600px;\n    margin: 30px auto; }\n  .modal-content {\n    -webkit-box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5); }\n  .modal-sm {\n    width: 300px; } }\n\n@media (min-width: 992px) {\n  .modal-lg {\n    width: 900px; } }\n\n.tooltip {\n  position: absolute;\n  z-index: 1070;\n  display: block;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-style: normal;\n  font-weight: normal;\n  letter-spacing: normal;\n  line-break: auto;\n  line-height: 1.42857;\n  text-align: left;\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  white-space: normal;\n  word-break: normal;\n  word-spacing: normal;\n  word-wrap: normal;\n  font-size: 12px;\n  opacity: 0;\n  filter: alpha(opacity=0); }\n  .tooltip.in {\n    opacity: 0.9;\n    filter: alpha(opacity=90); }\n  .tooltip.top {\n    margin-top: -3px;\n    padding: 5px 0; }\n  .tooltip.right {\n    margin-left: 3px;\n    padding: 0 5px; }\n  .tooltip.bottom {\n    margin-top: 3px;\n    padding: 5px 0; }\n  .tooltip.left {\n    margin-left: -3px;\n    padding: 0 5px; }\n\n.tooltip-inner {\n  max-width: 200px;\n  padding: 3px 8px;\n  color: #fff;\n  text-align: center;\n  background-color: #000;\n  border-radius: 4px; }\n\n.tooltip-arrow {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-color: transparent;\n  border-style: solid; }\n\n.tooltip.top .tooltip-arrow {\n  bottom: 0;\n  left: 50%;\n  margin-left: -5px;\n  border-width: 5px 5px 0;\n  border-top-color: #000; }\n\n.tooltip.top-left .tooltip-arrow {\n  bottom: 0;\n  right: 5px;\n  margin-bottom: -5px;\n  border-width: 5px 5px 0;\n  border-top-color: #000; }\n\n.tooltip.top-right .tooltip-arrow {\n  bottom: 0;\n  left: 5px;\n  margin-bottom: -5px;\n  border-width: 5px 5px 0;\n  border-top-color: #000; }\n\n.tooltip.right .tooltip-arrow {\n  top: 50%;\n  left: 0;\n  margin-top: -5px;\n  border-width: 5px 5px 5px 0;\n  border-right-color: #000; }\n\n.tooltip.left .tooltip-arrow {\n  top: 50%;\n  right: 0;\n  margin-top: -5px;\n  border-width: 5px 0 5px 5px;\n  border-left-color: #000; }\n\n.tooltip.bottom .tooltip-arrow {\n  top: 0;\n  left: 50%;\n  margin-left: -5px;\n  border-width: 0 5px 5px;\n  border-bottom-color: #000; }\n\n.tooltip.bottom-left .tooltip-arrow {\n  top: 0;\n  right: 5px;\n  margin-top: -5px;\n  border-width: 0 5px 5px;\n  border-bottom-color: #000; }\n\n.tooltip.bottom-right .tooltip-arrow {\n  top: 0;\n  left: 5px;\n  margin-top: -5px;\n  border-width: 0 5px 5px;\n  border-bottom-color: #000; }\n\n.popover {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1060;\n  display: none;\n  max-width: 276px;\n  padding: 1px;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-style: normal;\n  font-weight: normal;\n  letter-spacing: normal;\n  line-break: auto;\n  line-height: 1.42857;\n  text-align: left;\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  white-space: normal;\n  word-break: normal;\n  word-spacing: normal;\n  word-wrap: normal;\n  font-size: 14px;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #ccc;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 6px;\n  -webkit-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2); }\n  .popover.top {\n    margin-top: -10px; }\n  .popover.right {\n    margin-left: 10px; }\n  .popover.bottom {\n    margin-top: 10px; }\n  .popover.left {\n    margin-left: -10px; }\n\n.popover-title {\n  margin: 0;\n  padding: 8px 14px;\n  font-size: 14px;\n  background-color: #f7f7f7;\n  border-bottom: 1px solid #ebebeb;\n  border-radius: 5px 5px 0 0; }\n\n.popover-content {\n  padding: 9px 14px; }\n\n.popover > .arrow, .popover > .arrow:after {\n  position: absolute;\n  display: block;\n  width: 0;\n  height: 0;\n  border-color: transparent;\n  border-style: solid; }\n\n.popover > .arrow {\n  border-width: 11px; }\n\n.popover > .arrow:after {\n  border-width: 10px;\n  content: \"\"; }\n\n.popover.top > .arrow {\n  left: 50%;\n  margin-left: -11px;\n  border-bottom-width: 0;\n  border-top-color: #999999;\n  border-top-color: rgba(0, 0, 0, 0.25);\n  bottom: -11px; }\n  .popover.top > .arrow:after {\n    content: \" \";\n    bottom: 1px;\n    margin-left: -10px;\n    border-bottom-width: 0;\n    border-top-color: #fff; }\n\n.popover.right > .arrow {\n  top: 50%;\n  left: -11px;\n  margin-top: -11px;\n  border-left-width: 0;\n  border-right-color: #999999;\n  border-right-color: rgba(0, 0, 0, 0.25); }\n  .popover.right > .arrow:after {\n    content: \" \";\n    left: 1px;\n    bottom: -10px;\n    border-left-width: 0;\n    border-right-color: #fff; }\n\n.popover.bottom > .arrow {\n  left: 50%;\n  margin-left: -11px;\n  border-top-width: 0;\n  border-bottom-color: #999999;\n  border-bottom-color: rgba(0, 0, 0, 0.25);\n  top: -11px; }\n  .popover.bottom > .arrow:after {\n    content: \" \";\n    top: 1px;\n    margin-left: -10px;\n    border-top-width: 0;\n    border-bottom-color: #fff; }\n\n.popover.left > .arrow {\n  top: 50%;\n  right: -11px;\n  margin-top: -11px;\n  border-right-width: 0;\n  border-left-color: #999999;\n  border-left-color: rgba(0, 0, 0, 0.25); }\n  .popover.left > .arrow:after {\n    content: \" \";\n    right: 1px;\n    border-right-width: 0;\n    border-left-color: #fff;\n    bottom: -10px; }\n\n.carousel {\n  position: relative; }\n\n.carousel-inner {\n  position: relative;\n  overflow: hidden;\n  width: 100%; }\n  .carousel-inner > .item {\n    display: none;\n    position: relative;\n    -webkit-transition: 0.6s ease-in-out left;\n    -o-transition: 0.6s ease-in-out left;\n    transition: 0.6s ease-in-out left; }\n    .carousel-inner > .item > img,\n    .carousel-inner > .item > a > img {\n      display: block;\n      max-width: 100%;\n      height: auto;\n      line-height: 1; }\n    @media all and (transform-3d), (-webkit-transform-3d) {\n      .carousel-inner > .item {\n        -webkit-transition: -webkit-transform 0.6s ease-in-out;\n        -moz-transition: -moz-transform 0.6s ease-in-out;\n        -o-transition: -o-transform 0.6s ease-in-out;\n        transition: transform 0.6s ease-in-out;\n        -webkit-backface-visibility: hidden;\n        -moz-backface-visibility: hidden;\n        backface-visibility: hidden;\n        -webkit-perspective: 1000px;\n        -moz-perspective: 1000px;\n        perspective: 1000px; }\n        .carousel-inner > .item.next, .carousel-inner > .item.active.right {\n          -webkit-transform: translate3d(100%, 0, 0);\n          transform: translate3d(100%, 0, 0);\n          left: 0; }\n        .carousel-inner > .item.prev, .carousel-inner > .item.active.left {\n          -webkit-transform: translate3d(-100%, 0, 0);\n          transform: translate3d(-100%, 0, 0);\n          left: 0; }\n        .carousel-inner > .item.next.left, .carousel-inner > .item.prev.right, .carousel-inner > .item.active {\n          -webkit-transform: translate3d(0, 0, 0);\n          transform: translate3d(0, 0, 0);\n          left: 0; } }\n  .carousel-inner > .active,\n  .carousel-inner > .next,\n  .carousel-inner > .prev {\n    display: block; }\n  .carousel-inner > .active {\n    left: 0; }\n  .carousel-inner > .next,\n  .carousel-inner > .prev {\n    position: absolute;\n    top: 0;\n    width: 100%; }\n  .carousel-inner > .next {\n    left: 100%; }\n  .carousel-inner > .prev {\n    left: -100%; }\n  .carousel-inner > .next.left,\n  .carousel-inner > .prev.right {\n    left: 0; }\n  .carousel-inner > .active.left {\n    left: -100%; }\n  .carousel-inner > .active.right {\n    left: 100%; }\n\n.carousel-control {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: 15%;\n  opacity: 0.5;\n  filter: alpha(opacity=50);\n  font-size: 20px;\n  color: #fff;\n  text-align: center;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6);\n  background-color: transparent; }\n  .carousel-control.left {\n    background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);\n    background-image: -o-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);\n    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);\n    background-repeat: repeat-x;\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#80000000', endColorstr='#00000000', GradientType=1); }\n  .carousel-control.right {\n    left: auto;\n    right: 0;\n    background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);\n    background-image: -o-linear-gradient(left, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);\n    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);\n    background-repeat: repeat-x;\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#80000000', GradientType=1); }\n  .carousel-control:hover, .carousel-control:focus {\n    outline: 0;\n    color: #fff;\n    text-decoration: none;\n    opacity: 0.9;\n    filter: alpha(opacity=90); }\n  .carousel-control .icon-prev,\n  .carousel-control .icon-next,\n  .carousel-control .glyphicon-chevron-left,\n  .carousel-control .glyphicon-chevron-right {\n    position: absolute;\n    top: 50%;\n    margin-top: -10px;\n    z-index: 5;\n    display: inline-block; }\n  .carousel-control .icon-prev,\n  .carousel-control .glyphicon-chevron-left {\n    left: 50%;\n    margin-left: -10px; }\n  .carousel-control .icon-next,\n  .carousel-control .glyphicon-chevron-right {\n    right: 50%;\n    margin-right: -10px; }\n  .carousel-control .icon-prev,\n  .carousel-control .icon-next {\n    width: 20px;\n    height: 20px;\n    line-height: 1;\n    font-family: serif; }\n  .carousel-control .icon-prev:before {\n    content: '\\2039'; }\n  .carousel-control .icon-next:before {\n    content: '\\203A'; }\n\n.carousel-indicators {\n  position: absolute;\n  bottom: 10px;\n  left: 50%;\n  z-index: 15;\n  width: 60%;\n  margin-left: -30%;\n  padding-left: 0;\n  list-style: none;\n  text-align: center; }\n  .carousel-indicators li {\n    display: inline-block;\n    width: 10px;\n    height: 10px;\n    margin: 1px;\n    text-indent: -999px;\n    border: 1px solid #fff;\n    border-radius: 10px;\n    cursor: pointer;\n    background-color: #000 \\9;\n    background-color: transparent; }\n  .carousel-indicators .active {\n    margin: 0;\n    width: 12px;\n    height: 12px;\n    background-color: #fff; }\n\n.carousel-caption {\n  position: absolute;\n  left: 15%;\n  right: 15%;\n  bottom: 20px;\n  z-index: 10;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  color: #fff;\n  text-align: center;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6); }\n  .carousel-caption .btn {\n    text-shadow: none; }\n\n@media screen and (min-width: 768px) {\n  .carousel-control .glyphicon-chevron-left,\n  .carousel-control .glyphicon-chevron-right,\n  .carousel-control .icon-prev,\n  .carousel-control .icon-next {\n    width: 30px;\n    height: 30px;\n    margin-top: -10px;\n    font-size: 30px; }\n  .carousel-control .glyphicon-chevron-left,\n  .carousel-control .icon-prev {\n    margin-left: -10px; }\n  .carousel-control .glyphicon-chevron-right,\n  .carousel-control .icon-next {\n    margin-right: -10px; }\n  .carousel-caption {\n    left: 20%;\n    right: 20%;\n    padding-bottom: 30px; }\n  .carousel-indicators {\n    bottom: 20px; } }\n\n.clearfix:before, .clearfix:after {\n  content: \" \";\n  display: table; }\n\n.clearfix:after {\n  clear: both; }\n\n.center-block {\n  display: block;\n  margin-left: auto;\n  margin-right: auto; }\n\n.pull-right {\n  float: right !important; }\n\n.pull-left {\n  float: left !important; }\n\n.hide {\n  display: none !important; }\n\n.show {\n  display: block !important; }\n\n.invisible {\n  visibility: hidden; }\n\n.text-hide {\n  font: 0/0 a;\n  color: transparent;\n  text-shadow: none;\n  background-color: transparent;\n  border: 0; }\n\n.hidden {\n  display: none !important; }\n\n.affix {\n  position: fixed; }\n\n@-ms-viewport {\n  width: device-width; }\n\n.visible-xs {\n  display: none !important; }\n\n.visible-sm {\n  display: none !important; }\n\n.visible-md {\n  display: none !important; }\n\n.visible-lg {\n  display: none !important; }\n\n.visible-xs-block,\n.visible-xs-inline,\n.visible-xs-inline-block,\n.visible-sm-block,\n.visible-sm-inline,\n.visible-sm-inline-block,\n.visible-md-block,\n.visible-md-inline,\n.visible-md-inline-block,\n.visible-lg-block,\n.visible-lg-inline,\n.visible-lg-inline-block {\n  display: none !important; }\n\n@media (max-width: 767px) {\n  .visible-xs {\n    display: block !important; }\n  table.visible-xs {\n    display: table !important; }\n  tr.visible-xs {\n    display: table-row !important; }\n  th.visible-xs,\n  td.visible-xs {\n    display: table-cell !important; } }\n\n@media (max-width: 767px) {\n  .visible-xs-block {\n    display: block !important; } }\n\n@media (max-width: 767px) {\n  .visible-xs-inline {\n    display: inline !important; } }\n\n@media (max-width: 767px) {\n  .visible-xs-inline-block {\n    display: inline-block !important; } }\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm {\n    display: block !important; }\n  table.visible-sm {\n    display: table !important; }\n  tr.visible-sm {\n    display: table-row !important; }\n  th.visible-sm,\n  td.visible-sm {\n    display: table-cell !important; } }\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm-block {\n    display: block !important; } }\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm-inline {\n    display: inline !important; } }\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm-inline-block {\n    display: inline-block !important; } }\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md {\n    display: block !important; }\n  table.visible-md {\n    display: table !important; }\n  tr.visible-md {\n    display: table-row !important; }\n  th.visible-md,\n  td.visible-md {\n    display: table-cell !important; } }\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md-block {\n    display: block !important; } }\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md-inline {\n    display: inline !important; } }\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md-inline-block {\n    display: inline-block !important; } }\n\n@media (min-width: 1200px) {\n  .visible-lg {\n    display: block !important; }\n  table.visible-lg {\n    display: table !important; }\n  tr.visible-lg {\n    display: table-row !important; }\n  th.visible-lg,\n  td.visible-lg {\n    display: table-cell !important; } }\n\n@media (min-width: 1200px) {\n  .visible-lg-block {\n    display: block !important; } }\n\n@media (min-width: 1200px) {\n  .visible-lg-inline {\n    display: inline !important; } }\n\n@media (min-width: 1200px) {\n  .visible-lg-inline-block {\n    display: inline-block !important; } }\n\n@media (max-width: 767px) {\n  .hidden-xs {\n    display: none !important; } }\n\n@media (min-width: 768px) and (max-width: 991px) {\n  .hidden-sm {\n    display: none !important; } }\n\n@media (min-width: 992px) and (max-width: 1199px) {\n  .hidden-md {\n    display: none !important; } }\n\n@media (min-width: 1200px) {\n  .hidden-lg {\n    display: none !important; } }\n\n.visible-print {\n  display: none !important; }\n\n@media print {\n  .visible-print {\n    display: block !important; }\n  table.visible-print {\n    display: table !important; }\n  tr.visible-print {\n    display: table-row !important; }\n  th.visible-print,\n  td.visible-print {\n    display: table-cell !important; } }\n\n.visible-print-block {\n  display: none !important; }\n  @media print {\n    .visible-print-block {\n      display: block !important; } }\n\n.visible-print-inline {\n  display: none !important; }\n  @media print {\n    .visible-print-inline {\n      display: inline !important; } }\n\n.visible-print-inline-block {\n  display: none !important; }\n  @media print {\n    .visible-print-inline-block {\n      display: inline-block !important; } }\n\n@media print {\n  .hidden-print {\n    display: none !important; } }\n\n.overlay-parent {\n  position: relative;\n  display: block;\n  overflow: hidden; }\n  .overlay-parent .overlay {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    height: 100%;\n    width: 100%; }\n\n.height-100, html, body, .unglish, .unglish .unglish-graph > * {\n  height: 100% !important; }\n\n.unglish .unglish-quill {\n  height: 66.6%; }\n\n.unglish .unglish-graph {\n  height: 33.3%; }\n\n::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 7px;\n  height: 7px; }\n\n::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, 0.5); }\n", ""]);

	// exports


/***/ }
/******/ ]);